{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-carder-db/index.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","service/use-ocg-font.ts","service/use-preset-manager.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/preset-option/index.tsx","component/card-layout-preview.tsx","component/preset-manager/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-preset-panel.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","className","alt","src","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","AUTO_FONT","getDefaultNameStyle","font","fillStyle","headTextFillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","lineColor","lineWidth","lineOffsetY","lineOffsetX","hasOutline","gradientAngle","gradientColor","hasGradient","embossPitch","embossYaw","embossThickness","hasEmboss","preset","pattern","createPresetNameStyle","presetValue","PresetNameStyleMap","commonB","image","commonW","skillDefault","skillArial","rare","secretGradient","secret","platinum2","ultra","ultra2","animeRed","animeSilver","animeGold","promo","embossGold","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","letterOffsetMap","baseline","yRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","edge","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","region","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","justifyRatio","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","getSlindingTypeList","language","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","resolveNameStyle","_ref6","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","isSpeedSkill","contextualFont","lightHeader","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRgba","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","componentToHex","c","toString","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader0","_reader1","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader$split$filter","_reader16","_reader17","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_emptyCard$isLink","_filter","_reader45","_reader47","_reader48","_reader49","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","effectJustifyRatio","pendulumEffectJustifyRatio","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader46","baseFlag","Number","baseDyeList","String","getDefaultDyeList","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref0","_ref1","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","slidingType","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useCarderDb","db","setDb","dbReady","setDbReady","openDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","setupYgoCarderDb","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","layoutPresetList","nameStylePresetList","content","updateGlobalMemory","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","nextRatio","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","_letterOffsetMap$curr","_letterOffsetMap$frag","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","_letterOffsetMap$frag2","_letterOffsetMap$frag3","fontSizeRatio","offsetBaseline","offsetEdge","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","baseJustifyRatio","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","wholeLineRegex","effectText","potentialFlavorConditionText","exec","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","precalculatedLine","_fullLineListOption$s","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","usePresetManager","setVisible","newStatus","StyledBatchConverterModal","Modal","BatchConverter","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","CopiableOverlayStyle","StyledMono","Copiable","CheckOutlined","container","Container","showFlashOverlay","setFlashOverlay","copyingContent","copy","CopiableCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","CombinedSliderContainer","PopoverButton","$active","$softMode","ResolutionLabelContainer","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","DropZone","$visible","ManagerDrawer","Drawer","SingleSliderContainer","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","a","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","StyledPatternOption","OPTION_WIDTH","PresetOptionContainer","PresetOption","frameInfo","presetContent","onOverwrite","onActive","onDelete","canvasRef","backgroundImage","Popconfirm","onConfirm","SaveOutlined","CardLayoutContainer","$width","$height","$hoverable","$layoutHoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","onLayoutSelect","vertical","_FrameInfoMap$frame","backgroundColor","boxShadow","LayoutPresetOptionContainer","LayoutPresetOption","PresetImportReviewModalContainer","PresetImportReviewModal","importData","setNameStylePresetList","setLayoutPresetList","layoutPresetMap","nameStylePresetMap","nextLayoutPresetList","nextNameStylePresetList","decisionMap","setDecisionMap","verdict","maskClosable","layoutVerdictList","nameStyleVerdictList","layoutReplaceMap","layoutFullList","layoutNewList","layoutPresetTx","transaction","put","done","nameStyleReplaceMap","nameStyleFullList","nameStyleNewList","nameStylePresetTx","_nameStylePresetMap$k","commonProps","currentContent","Button","_layoutPresetMap$key","_currentContent$effec","_currentContent$pendu","_content$effectStyle","_content$pendulumStyl","PresetManagerContainer","PresetManager","setImportData","inputKey","setInputKey","presetImportDirectInputRef","directUploadId","_presetImportDirectIn","getFileAndImport","tx","layoutState","currentKey","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","setPresetManagerVisible","presetManagerVisible","Radio","Group","onMouseOut","DatabaseFilled","AuditOutlined","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","nextColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPresetContainer","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","list","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","navigator","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FramePresetPanelContainer","FramePresetPanel","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","AdvancedParagraphButton","AdvancedParagraphPanel","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","setEffectJustifyRatio","setPendulumEffectJustifyRatio","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","_frameTrainRef$curren","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_FramePositionMap$key","_FramePositionMap$key2","_ref25","_ref26","chanceToRemindBackup","seedIncrement","internalChance","check","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","isMobile","isMobileDevice","userAgent","vendor","opera","substr","windowSlidable","maxTouchPoints","setInitializing","managerVisible","setManagerVisible","slidingWindowRef","containerWindowRef","moveableRef","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","cursor","store","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onScroll","currentScrollY","scrollTop","clientWidth","viewportHeight","getBoundingClientRect","slidingWindowHeight","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","Moveable","draggable","throttleDrag","edgeDraggable","startDragRotate","throttleDragRotate","throttleScale","snappable","pinchable","snapContainer","bounds","bottom","onDrag","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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CXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,S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CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFzN,KAAK,OAEL0N,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAEviB,KAAM,IAAKzD,MAAO,MAC9BimB,EAAG,CAAExiB,KAAM,IAAKzD,MAAO,EAAM,MAEjC6lB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFxN,KAAK,MACPyN,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFzN,KAAK,OAEL6N,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEniB,KAAM,KAAMzD,MAAO,GAC7B,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,GAAM,CAAEyD,KAAM,KAAMzD,MAAO,GAC3B,WAAc,CAAEyD,KAAM,KAAMzD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyD,KAAM,IAAKzD,MAAO,OAEtC6lB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFxN,KAAK,MACPyN,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kD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CACAqoB,cAAc,KAGtBjB,eACAW,oBAIKW,GAAcA,IACN1C,GAAQ9e,IAAA,IAAC,SAAE3J,GAAU2J,EAAA,OAAK3J,IAIlCorB,GAAcA,IAAM3C,GAAQ4C,WAAWrrB,S,cCvIpD,MAAMsrB,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,+BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,mCACA,wCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,YACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAcnV,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGoV,GAAc,IAAIC,IAAIL,GAAanyB,IAAIoyB,KAEvCK,GAAsBP,GAAqB58B,OAAO,CAACC,EAAK88B,EAAO9+B,KACjE,MAAMm/B,EAAuBN,GAAm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","file":"static/js/main.054ae961.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 56,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type10: {\n        value: 'type10',\n        label: '10',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type11: {\n        value: 'type11',\n        label: '11',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type12: {\n        value: 'type12',\n        label: '12',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type13: {\n        value: 'type13',\n        label: '13',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            art: [\n                { blendMode: 'darken', opacity: 1 },\n                { blendMode: 'multiply', opacity: 1 },\n                { blendMode: 'overlay', opacity: 1 },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    background: {\n        key: 'background' as const,\n        labelKey: 'input.background.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilMap = {\n    normal: {\n        name: 'normal' as const,\n        color: '#747b95',\n        isOption: false,\n    },\n    gold: {\n        name: 'gold' as const,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    platinum: {\n        name: 'platinum' as const,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        label: dictionary?.normal,\n        ...FoilMap.normal,\n    },\n    {\n        label: dictionary?.gold,\n        ...FoilMap.gold,\n    },\n    {\n        label: dictionary?.platinum,\n        ...FoilMap.platinum,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\n\nexport type FrameDyeList = [\n    topLeft: string,\n    topRight: string,\n    bottomLeft: string,\n    bottomRight: string,\n    effect: string,\n    pendulumEffect: string,\n    foil: string,\n];\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\n\nexport const DyeIndexMap = {\n    topLeftFrame: 0,\n    topRightFrame: 1,\n    bottomLeftFrame: 2,\n    bottomRightFrame: 3,\n    effectBackground: 4,\n    pendulumEffectBackground: 5,\n    foil: 6,\n};","import { CloseCircleOutlined } from '@ant-design/icons';\nimport { WithLanguage } from 'src/service';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n];\nexport const ExtraAttributeList = [\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-1',\n        nameKey: 'input.attribute.boss-1',\n        label: 'Boss 1',\n        color: '#9b325d',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-2',\n        nameKey: 'input.attribute.boss-2',\n        label: 'Boss 2',\n        color: '#942a56',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-3',\n        nameKey: 'input.attribute.boss-3',\n        label: 'Boss 3',\n        color: '#86214b',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-START',\n        nameKey: 'input.attribute.boss-start',\n        label: 'Boss Start',\n        color: '#a13864',\n        isCreative: true,\n        isOption: true,\n    },\n];\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\n};\nexport const DefaultFormatAttribute: Record<string, string> = {\n    tcg: RegionMap.en.key,\n    ocg: RegionMap.jp.key,\n};\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n    {\n        label: 'Normal',\n        value: 'NORMAL',\n        nameKey: 'input.icon.normal',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport type IconTypeInfo = {\n    value: string,\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n    isMixable: boolean,\n    showIcon: boolean,\n}\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'custom': {\n        value: 'custom',\n        labelKey: 'input.icon-type.custom.label',\n        fullLabelKey: 'input.icon-type.custom.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\n        />,\n        isOption: true,\n        isMixable: false,\n        showIcon: false,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'level-rank': {\n        value: 'level-rank',\n        labelKey: 'input.icon-type.level-rank.label',\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);\n\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\n    'dark': {\n        value: 'dark',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.dark',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"dark-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'earth': {\n        value: 'earth',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.earth',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"earth-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'fire': {\n        value: 'fire',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.fire',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"fire-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'light': {\n        value: 'light',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.light',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"light-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'water': {\n        value: 'water',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.water',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"water-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'wind': {\n        value: 'wind',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.wind',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"wind-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'divine': {\n        value: 'divine',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.divine',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"divine-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'spell': {\n        value: 'spell',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.spell',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"spell-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'trap': {\n        value: 'trap',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.trap',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"trap-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\n\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\n    'continuous-l': {\n        value: 'continuous-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.continuous',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"continuous-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'counter-l': {\n        value: 'counter-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.counter',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"counter-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'equip-l': {\n        value: 'equip-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.equip',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"equip-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'field-l': {\n        value: 'field-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.field',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"field-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'quick-play-l': {\n        value: 'quick-play-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.quick-play',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"quick-play-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'ritual-l': {\n        value: 'ritual-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.ritual',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"ritual-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'normal-l': {\n        value: 'normal-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.normal',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"normal-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeStList = Object.values(IconTypeStMap);\n\nexport const TotalIconTypeMap = {\n    ...IconTypeMap,\n    ...IconTypeAttributeMap,\n    ...IconTypeStMap,\n};\nexport const MAX_STAR_LENGTH = 13;\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const AUTO_FONT = 'Auto';\nexport const getDefaultNameStyle = () => ({\n    font: AUTO_FONT,\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nexport const createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 792,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 808,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\n    ShowDefAndLink: number,\n    LinkRating: number,\n];\n/**\n * Remember, 0 is ALWAYS the default state.\n */\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\n\nexport const LINK_RATING_ALWAYS_AUTO = 0;\nexport const LINK_RATING_ALWAYS_SHOW = 1;\nexport const LINK_RATING_ALWAYS_HIDE = 2;\n\nexport const FlagInfoList = [\n    {\n        index: 0,\n        labelKey: 'input.flag.mix-def-link',\n        type: 'checkbox' as const,\n    },\n    {\n        index: 1,\n        labelKey: 'input.flag.link-rating-behavior',\n        type: 'link-rating-behavior' as const,\n    },\n];\nexport const FlagIndexMap = {\n    showDefAndLink: 0,\n    linkRating: 1,\n};\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    letterOffsetMap?: Record<string, { ratio: number, baseline: number, edge?: number, yRatio?: number }>,\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    vietnameseFont: string,\n    vietnameseFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextGapRatio: 0,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    vietnameseFont: 'Times New Roman',\n    vietnameseFontRatio: 1.1,\n    letterOffsetMap: {\n        '★': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\n        '☆': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\n        '¡': { ratio: 1.2, baseline: -0.0, yRatio: 1.05 },\n    },\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook, Times New Roman',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    vietnameseFontRatio: 1.08,\n    fontList: [],\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\n            font: 'MatrixRegularSmallCaps, Times New Roman',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.55,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix, Times New Roman',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'MatrixRegularSmallCaps',\n            vietnameseFontRatio: 1,\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterOffsetMap: {\n                '★': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\n                '☆': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\n                '¡': { ratio: 1, baseline: -0.098, edge: 0.02, yRatio: 0.58 },\n            },\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.825,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'Arial',\n            vietnameseFontRatio: 1,\n            weight: 'bold',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            fontStyle: 'ocg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextBold: true,\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            vietnameseFontRatio: 1,\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    'Ø': '∅',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    '∅': 'Ø',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 49%',\n            'rgba(239,239,239,1) 51%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\n\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\n    foil: { labelKey: 'input.foil.label' },\n};","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\n/** \n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\n * * Latin Extended-A\n * * Latin Extended-B\n * * Latin Extended Additional\n * \n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\n */\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\n/** Additional symbol including\n * * Greek Extended \n * * Greek and Coptic\n */\nexport const TCG_SYMBOL_JOINLIST = '¡Ø#★☆@∞Ͱ-Ͽἀ-῾';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\nimport { getDefaultCardFlag } from './flag';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    region: 'en',\n    frame: 'fusion',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    starList: [] as string[],\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    linkRating: '',\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    dyeList: getDefaultDyeList(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 3,\n    format: 'tcg',\n    region: 'en',\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\n    frame: 'effect',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starList: [] as string[],\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    linkRating: '',\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    dyeList: getDefaultDyeList(),\n    flag: getDefaultCardFlag(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport type SlindingType = ReturnType<typeof getSlindingTypeList>[0]['value'];\nexport const getSlindingTypeList = (language: LanguageDataDictionary) => [\n    {\n        value: 'auto' as const,\n        label: language['setting.option.sliding-type.auto.label'],\n    },\n    {\n        value: 'manual' as const,\n        label: language['setting.option.sliding-type.manual.label'],\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './flag';\nexport * from './foil-finish-dye';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './pendulum';\nexport * from './regex';","import { CanvasConst } from 'src/model';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\n\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    return {\n        canvas,\n        ctx,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import { CanvasConst } from 'src/model';\nimport { createCanvas } from './create';\nimport { HexColorRegex } from '..';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\n    if (!HexColorRegex.test(color)) return {\n        canvas: baseCanvas,\n        ctx: baseCanvas.getContext('2d'),\n    };\n\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\n\n    /** Draw the target image with grayscale */\n    overlayContext.filter = 'grayscale(1)';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.filter = 'none';\n\n    /** Overlay the color lens on top the grayscale layer to dye it */\n    overlayContext.fillStyle = color;\n    overlayContext.globalCompositeOperation = 'overlay';\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\n\n    /** Draw the target image again but with destination-in mode to remove excess area */\n    overlayContext.globalCompositeOperation = 'destination-in';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.globalCompositeOperation = 'source-over';\n\n    return {\n        canvas: overlayCanvas,\n        ctx: overlayCanvas.getContext('2d'),\n    };\n};","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import {\n    AUTO_FONT,\n    Card,\n    Foil,\n    frameList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n    NameStyle,\n    NameStyleType,\n    PresetNameStyleMap,\n} from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFooter = (frame: string) => {\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link'].includes(frame) || checkLightFooter(frame);\n};\n\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\n    let showLinkRating = false;\n    switch (displayMode) {\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\n    }\n\n    return showLinkRating;\n};\n\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\n    const {\n        frame,\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    } = frameData;\n    const resolvedFrame = frame ?? 'effect';\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\n        : bottomLeftFrame) ?? resolvedFrame;\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\n        ? resolvedBottomLeft\n        : bottomRightFrame) ?? resolvedFrame;\n    const resolvedEffectBackground = (effectBackground === 'auto'\n        ? resolvedBottomLeft\n        : effectBackground) ?? resolvedFrame;\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\n        ? resolvedBottomLeft\n        : pendulumEffectBackground) ?? resolvedFrame;\n\n    return {\n        topLeftFrame: resolvedTopLeft,\n        topRightFrame: resolvedTopRight,\n        bottomLeftFrame: resolvedBottomLeft,\n        bottomRightFrame: resolvedBottomRight,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    };\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    let contextualFont = nameStyle.font;\n    if (contextualFont === AUTO_FONT && format === 'ocg') contextualFont = 'OCG';\n    if (contextualFont === AUTO_FONT && format === 'tcg') contextualFont = 'Default';\n    if (contextualFont === AUTO_FONT && isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return {\n            ...nameStyle,\n            font: contextualFont,\n        };\n    }\n\n    const lightHeader = checkLightHeader(frame);\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    region: 'rg',\n    frame: 'fr',\n    rightFrame: 'rf',\n    leftFrame: 'lf',\n    pendulumRightFrame: 'rpf',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n        background: 'ebg',\n        minLine: 'eml',\n        justifyRatio: 'ejr',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n        background: 'pbg',\n        minLine: 'pml',\n        justifyRatio: 'pjr',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    starList: 'stl',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    linkRating: 'lr',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    dyeList: 'dl',\n    flag: 'fl',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detect the actual version from incoming cards. */\n    delete (baseCard as Record<string, unknown>).version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (card.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n            ];\n        }\n    }\n    if (Array.isArray(migratedCard.otherFinish)\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\n    ) {\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    const defaultFlagList = getDefaultCardFlag();\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\n    else if (migratedCard.flag.length < defaultFlagList.length) {\n        const currentFlagList = [...migratedCard.flag];\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\n            return entry;\n        }) as CardFlag;\n    }\n\n    const defaultDyeList = getDefaultDyeList();\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\n        const currentDyeList = [...migratedCard.dyeList];\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\n            return entry;\n        }) as FrameDyeList;\n    }\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n    if (migratedCard.version === 2) {\n        migratedCard.version = 3;\n        const font = migratedCard.nameStyle.font;\n        /**\n         * For older cards, we dynamically switch font every time user switch the format, which lead to ambiguous situation where user want to keep the font for whatever reason. From ver 3 onward we introduce \"Auto\" font for the switch behavior, and keep the current font otherwise.\n         */\n        if (font === 'Default' || font === 'OCG') migratedCard.nameStyle.font = 'Auto';\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n    const href = window.URL.createObjectURL(blob);\n\n    link.download = name;\n    link.href = href;\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n    window.URL.revokeObjectURL(href);\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const setCharAt = (str: string, index: number, chr: string) => {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n};\n\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\n    const nextList = [...list];\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\n        if (nextList[cnt] == null || nextList[cnt] === '') {\n            nextList.pop();\n        } else {\n            break;\n        }\n    }\n\n    return nextList;\n};\n\nexport const padRight = (list: (string | undefined | null)[], limit: number, padUnit = '') => {\n    const nextList = [...list];\n    for (let cnt = list.length; cnt < limit; cnt++) {\n        nextList.push(padUnit);\n    }\n\n    return nextList;\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRgba = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\nfunction componentToHex(c?: number) {\n    if (typeof c !== 'number') return '00';\n    const hex = Math.max(0, Math.min(c, 255)).toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\nexport const rgbToHex = (rgb: number[]) => {\n  return '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n};\n\n/** Contrast formula from google \\ :v / */\nexport const getContrastColor = (rgbColor: number[]) => {\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\n        ? '#000000'\n        : '#FFFFFF';\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};\n\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport const isTouchDevice = () => {\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './color';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        region,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const targetRegion = RegionMap[region].category === targetFormat\n        ? region\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        region: targetRegion,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import { create } from 'zustand';\n\nexport type BatchDownloadStore = {\n    batchName: string,\n    batchQueue: string[],\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\n    isBatchDownloading: boolean,\n    isReady: boolean,\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\n    stopBatchDownload: () => void,\n    clearQueue: () => void,\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\n};\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\n    return {\n        batchName: '',\n        batch: undefined,\n        batchQueue: [],\n        batchDataMap: {},\n        isBatchDownloading: false,\n        isReady: false,\n        startBatchDownload: (batchName, batchQueue) => {\n            set({\n                batchName,\n                batchQueue,\n                isBatchDownloading: true,\n            });\n        },\n        stopBatchDownload: () => {\n            set({\n                batchName: '',\n                batchQueue: [],\n                batchDataMap: {},\n                isBatchDownloading: false,\n                isReady: false,\n            });\n        },\n        clearQueue: () => {\n            set({\n                batchQueue: [],\n            });\n        },\n        addToBatch: (cardId, cardName, cardBlob) => {\n            set(({ batchQueue, batchDataMap }) => {\n                const nextQueue = batchQueue.filter(id => id !== cardId);\n                const nextBatchDataMap = { ...batchDataMap };\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\n\n                return {\n                    batchQueue: nextQueue,\n                    batchDataMap: nextBatchDataMap,\n                    isReady: nextQueue.length === 0 ? true : false,\n                };\n            });\n        },\n    };\n});","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\nexport type WithLanguage = {\n    language: LanguageDataDictionary\n};\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardFlag,\n    CardOpacity,\n    CondenseType,\n    DYE_LIST_LENGTH,\n    FLAG_LENGTH,\n    Foil,\n    FoilMap,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    getDefaultCardFlag,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultDyeList,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    MAX_STAR_LENGTH,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    'Region',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Link Rating',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Effect Style - Background',\n    'Effect Style - Min Line',\n    'Effect Style - Justify Ratio',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Pendulum Effect Style - Background',\n    'Pendulum Effect Style - Min Line',\n    'Pendulum Effect Style - Justify Ratio',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Background',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'Left Frame',\n    'Right Frame',\n    'Bottom Right Frame',\n    'Dye List',\n    'Star List',\n    'Flag',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            flag,\n            foil,\n            format,\n            region,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            leftFrame,\n            linkMap,\n            linkRating,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherFinish,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            pendulumStyle,\n            pendulumTextStyle,\n            rightFrame,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            starList,\n            typeAbility,\n            typeTextStyle,\n            dyeList,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n        const stringifedFlag = flag.join('|');\n        const stringifedDyeList = dyeList.join('|');\n        const stringifedSubFamilyList = starList.join('|');\n\n        write('Format', format);\n        write('Region', region);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Link Rating', linkRating);\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Effect Style - Background', effectStyle.background);\n        write('Effect Style - Min Line', effectStyle.minLine);\n        write('Effect Style - Justify Ratio', effectStyle.justifyRatio);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\n        write('Pendulum Effect Style - Justify Ratio', pendulumStyle.justifyRatio);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('Other Finish - Background', otherFinish[3]);\n        write('Left Frame', leftFrame);\n        write('Right Frame', rightFrame);\n        write('Bottom Right Frame', pendulumRightFrame);\n        write('Dye List', stringifedDyeList);\n        write('Star List', stringifedSubFamilyList);\n        write('Flag', stringifedFlag);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const finishBackground = reader('Other Finish - Background') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '')\n                        .map(entry => typeof entry === 'string' ? entry : '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\n                const effectJustifyRatio = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.justifyRatio);\n                const pendulumEffectJustifyRatio = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.justifyRatio);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n                const linkRating = reader('Link Rating') ?? '';\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\n                const flag = getDefaultCardFlag().map((entry, index) => {\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\n                    return entry;\n                }) as CardFlag;\n\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\n                const dyeList = getDefaultDyeList().map((entry, index) => {\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\n                    return entry;\n                }) as FrameDyeList;\n\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    dyeList,\n                    effect,\n                    effectStyle: {\n                        condenseTolerant,\n                        upSize: effectUpSize,\n                        fontStyle: effectFontStyle,\n                        background: effectBackground,\n                        minLine: effectMinLine,\n                        justifyRatio: effectJustifyRatio,\n                    },\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    flag,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    leftFrame,\n                    linkMap,\n                    linkRating,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumSize,\n                    pendulumStyle: {\n                        upSize: pendulumEffectUpSize,\n                        fontStyle: pendulumEffectFontStyle, \n                        background: pendulumEffectBackground,\n                        minLine: pendulumEffectMinLine,\n                        justifyRatio: pendulumEffectJustifyRatio,\n                    },\n                    pendulumTextStyle,\n                    region,\n                    rightFrame,\n                    setId,\n                    star,\n                    starList,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    try {\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n        if (frameResult !== 0) return frameResult;\n\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n        return bottomFrameResult;\n    } catch (e) {\n        return 0;\n    }\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    selectedMap: Record<string, string>,\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    selectCard: (id: string, type: 'add' | 'remove') => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        selectedMap: {},\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        selectCard: (id, type) => {\n            set(({ selectedMap }) => {\n                const nextMap = { ...selectedMap };\n                if (type === 'add') nextMap[id] = id;\n                else delete nextMap[id];\n\n                return { selectedMap: nextMap };\n            });\n        },\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\n            selectedMap: cardList.reduce((prev, curr) => {\n                prev[curr.id] = curr.id;\n                return prev;\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\n        })),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat, SlindingType } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    allowHotkey: boolean,\n    exportFormat: ExportFormat,\n    exportScheme: string,\n    globalScale: number,\n    mirrorPendulumScale: boolean,\n    reduceMotionColor: boolean,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraAttribute: boolean,\n    showExtraDecorativeOption: boolean,\n    slidingType: SlindingType,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        exportScheme,\n        globalScale,\n        mirrorPendulumScale,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraAttribute,\n        showExtraDecorativeOption,\n        slidingType,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            slidingType: typeof slidingType === 'string' ? slidingType as SlindingType : 'auto',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\nimport { useBatchDownload } from './use-batch-download';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const {\n        addToBatch,\n        batchDataMap,\n        isBatchDownloading,\n    } = useBatchDownload();\n    const resolution = useSetting(state => state.setting.resolution);\n    const exportScheme = useSetting(state => state.setting.exportScheme);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const normalizedName = normalizeCardName(name);\n    const pendingSave = useRef(false);\n\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            if (size) {\n                clonedCanvas.width = size[0];\n                clonedCanvas.height = size[1];\n            }\n            /** Resize here */\n            clonedCanvasContext.drawImage(\n                drawCanvas,\n                0, 0, drawCanvas.width, drawCanvas.height,\n                0, 0, clonedCanvas.width, clonedCanvas.height,\n            );\n\n            return clonedCanvas.toDataURL('image/png');\n        }\n    }, [exportCanvasRef, isTainted, resolution]);\n    const addToCurrentBatch = useCallback(async (\n        cardName: string,\n        cardId: string,\n        size: [number, number] = resolution,\n    ) => {\n        try {\n            const fetchedDataUrl = await fetch(getCardDataUrl(size));\n            const blob = await fetchedDataUrl.blob();\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\n    const download = useCallback((size: [number, number] = resolution) => {\n        try {\n            const normalizedName = normalizeCardName(name);\n            var link = document.createElement('a');\n            link.download = normalizedName\n                ? `${normalizedName}.png`\n                : 'card.png';\n            link.href = getCardDataUrl(size);\n            link.click();\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [normalizedName]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\n                                setTimeout(() => {\n                                    addToCurrentBatch(\n                                        exportScheme === 'with-name'\n                                            ? `${normalizedName}.png`\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\n                                        normalizedCard.id,\n                                    );\n                                }, 200);\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { useEffect, useState } from 'react';\n\nexport interface YgoCarderDb extends DBSchema {\n    messageStore: {\n        key: string,\n        value: string,\n    },\n    presetLayoutStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n    presetNameStyleStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n};\n\nexport async function setupYgoCarderDb() {\n    try {\n        const db = await openDB<YgoCarderDb>(\n            'YgoCarderDb',\n            3,\n            {\n                upgrade(db) {\n                    if (!db.objectStoreNames.contains('messageStore')) {\n                        db.createObjectStore('messageStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetLayoutStore')) {\n                        db.createObjectStore('presetLayoutStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetNameStyleStore')) {\n                        db.createObjectStore('presetNameStyleStore', { keyPath: 'key' });\n                    }\n                    console.info('YgoCarderDb ready');\n                },\n            }\n        );\n\n        return db;\n    } catch (e) {\n        console.error('setupYgoCarderDb', e);\n        return null;\n    }\n};\n\nexport const useCarderDb = () => {\n    const [db, setDb] = useState<IDBPDatabase<YgoCarderDb> | null>(null);\n    const [dbReady, setDbReady] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            const db = await setupYgoCarderDb();\n            setDb(db);\n            setDbReady(true);\n        })();\n\n        setTimeout(() => {\n            /** Ensure non-blocking */\n            setDbReady(true);\n        }, 5000);\n    }, []);\n\n    return {\n        db,\n        dbReady,\n    };\n};","import { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRgba } from 'src/util';\n\nexport type UseColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n};\nexport const useColorPicker = ({\n    value = '',\n    onChange,\n}: UseColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRgba(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRgba(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRgba(value, false),\n        });\n    }, [value]);\n\n    return {\n        inputText: currentText,\n        color: internalValue,\n        setColor: setCurrentText,\n    };\n};","import { useCallback } from 'react';\nimport { createPresetNameStyle, Foil, FrameDyeList, NameStyle } from 'src/model';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type FramePreset = {\n    foil: Foil,\n    frame: string,\n    pendulumFrame: string,\n    leftFrame: string,\n    rightFrame: string,\n    pendulumRightFrame: string,\n    effectStyle: {\n        background: string,\n    },\n    pendulumStyle: {\n        background: string,\n    },\n    dyeList: FrameDyeList,\n};\nexport type GlobalMemory = {\n    activeDropzone: number,\n    layoutPresetList: {\n        key: string,\n        content: FramePreset,\n    }[],\n    nameStylePresetList: {\n        key: string,\n        content: Partial<NameStyle>,\n    }[],\n};\nexport type GlobalStore = {\n    memory: GlobalMemory,\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\n        | ((currentMemory: GlobalMemory) => GlobalMemory)) => void,\n};\nexport const useGlobalMemory = create<GlobalStore>((set) => {\n    return {\n        memory: {\n            activeDropzone: 0,\n            layoutPresetList: [],\n            nameStylePresetList: [\n                {\n                    key: 'abc',\n                    content: createPresetNameStyle({\n                        preset: 'animeGold',\n                        shadowColor: '#f8f8f8',\n                        shadowOffsetY: 3,\n                        shadowOffsetX: 2,\n                        shadowBlur: 2,\n                        hasShadow: true,\n                        lineColor: '#664444',\n                        lineWidth: 3,\n                        lineOffsetX: 1,\n                        lineOffsetY: 0,\n                        hasOutline: true,\n                        gradientAngle: 180,\n                        gradientColor: '0.000|#4ee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\n                        hasGradient: true,\n                    })\n                },\n                {\n                    key: 'cde',\n                    content: createPresetNameStyle({\n                        preset: 'promo',\n                        fillStyle: '#c7080b',\n                        shadowColor: '#333333',\n                        shadowOffsetY: 0,\n                        shadowOffsetX: 0,\n                        shadowBlur: 1,\n                        hasShadow: true,\n                        lineColor: '#8a1801',\n                        lineWidth: 3,\n                        lineOffsetX: 0,\n                        hasOutline: true,\n                        lineOffsetY: 0,\n                        font: 'OCG',\n                    })\n                },\n                {\n                    key: 'efg',\n                    content: createPresetNameStyle({\n                        preset: 'promo',\n                        fillStyle: '#080bc7',\n                        shadowColor: '#333333',\n                        shadowOffsetY: 0,\n                        shadowOffsetX: 0,\n                        shadowBlur: 1,\n                        hasShadow: true,\n                        lineColor: '#18018a',\n                        lineWidth: 3,\n                        lineOffsetX: 0,\n                        hasOutline: true,\n                        lineOffsetY: 0,\n                        font: 'OCG',\n                    })\n                },\n                {\n                    key: 'ghi',\n                    content: createPresetNameStyle({\n                        preset: 'animeGold',\n                        shadowColor: '#f8f8f8',\n                        shadowOffsetY: 3,\n                        shadowOffsetX: 2,\n                        shadowBlur: 2,\n                        hasShadow: true,\n                        lineColor: '#664444',\n                        lineWidth: 3,\n                        lineOffsetX: 1,\n                        lineOffsetY: 0,\n                        hasOutline: true,\n                        gradientAngle: 180,\n                        gradientColor: '0.000|#4e17e3,0.220|#db15be,0.270|#20cd09,0.330|#b57f0b,0.380|#d0920c,0.450|#f6bfff,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\n                        hasGradient: true,\n                    })\n                },\n            ],\n        },\n        updateGlobalMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                return {\n                    memory: newGlobalMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateGlobalMemory,\n    } = useGlobalMemory(useShallow(({\n        memory,\n        updateGlobalMemory,\n    }) => ({\n        targetMemory: memory[key],\n        updateGlobalMemory,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\n            updateGlobalMemory(cur => {\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\n            });\n        },\n        [key, updateGlobalMemory],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n        vietnameseFont,\n        vietnameseFontRatio = 1,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let vietnameseFontMemory = fontController.getFontInfo();\n    const applyVietnameseFont = () => {\n        vietnameseFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\n    };\n    const stopApplyVietnameseFont = () => {\n        ctx.font = fontController\n            .setFamily(vietnameseFontMemory.family)\n            .setSize(vietnameseFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = (ratio = symbolFontRatio) => {\n        symbolFontMemory = fontController.getFontInfo();\n        const nextRatio = fontSize * ratio;\n        ctx.font = fontController.setFamily(symbolFont).setSize(nextRatio).getFont();\n        return {\n            fontSize: nextRatio,\n        };\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyLargerText, stopApplyLargerText,\n        applyNumberFont, stopApplyNumberFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FontData,\n    FragmentSplitRegex,\n    GAP_PER_WIDTH_RATIO,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n        letterOffsetMap = {},\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applyVietnameseFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyVietnameseFont();\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont(letterOffsetMap[fragment]?.ratio);\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n    justifyRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n    justifyRatio: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n        letterOffsetMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n        bulletWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applyVietnameseFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyVietnameseFont();\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        const { fontSize } = applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            baseline: drawLetterofWordParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\n                        });\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const {\n                    yRatio = 1,\n                    ratio: fontSizeRatio,\n                    baseline: offsetBaseline = 0,\n                    edge: offsetEdge = 0,\n                } = letterOffsetMap[fragment] ?? {};\n\n                const letter = fragment;\n                const { fontSize } = applySymbolFont(fontSizeRatio);\n                ctx.scale(1, yRatio);\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    baseline: (drawLetterParameter.baseline + fontSize * offsetBaseline) / yRatio,\n                    letter,\n                    edge: fragmentEdge + fontSize * offsetEdge,\n                });\n                fragmentEdge += letterWidth;\n\n                ctx.scale(1, 1 / yRatio);\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    FLAVOR_CONDITION_SOURCE,\n    FLAVOR_LINE_PLACEHOLDER,\n    FULL_LINE_PLACEHOLDER,\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    OCG_BULLET_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    OCG_RUBY_SOURCE,\n    UNCOMPRESSED_SOURCE,\n    WHOLE_WORD_SOURCE,\n    contextualDoubleQuoteRegex,\n    ocgKeywordDataMap,\n    ocgNumberCircleMap,\n    ocgToTCGLetterMap,\n    tcgToOCGLetterMap,\n} from 'src/model';\n\nexport type LineOption = {\n    line: string,\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const fullLineListOption: LineOption[] = [];\n    const lineList: string[] = [];\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let effectText = effect;\n    let effectFlavorCondition = '';\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n     * \n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n     * \n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n     * */\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\n    let tryCnt = 0;\n    while (effectText.length > 0 && tryCnt <= 100) {\n        const result = wholeLineRegex.exec(effectText);\n        const lineReplacement = result?.[1];\n        const lineContent = result?.[2];\n        const fullLineReplacement = result?.[3];\n        const fullLineContent = result?.[4];\n\n        if (lineContent && lineReplacement) {\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else if (fullLineContent && fullLineReplacement) {\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else {\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\n            const lineReplacement = paragraphResult?.[0];\n            const lineContent = paragraphResult?.[1];\n            if (lineReplacement && lineContent) {\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\n                lineList.push(...lineContent\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\n                    .split('\\n')\n                );\n                effectText = effectText.replace(lineReplacement, '');\n            }\n        }\n        tryCnt++;\n    }\n    if (effectFlavorCondition) {\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\n    }\n\n    return {\n        lineList,\n        fullLineListOption: [...fullLineListOption],\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord: string[] = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n    FULL_LINE_PLACEHOLDER,\n    FLAVOR_LINE_PLACEHOLDER,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n        minLine?: number,\n        justifyRatio?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n        minLine: baseMinLine,\n        justifyRatio: baseJustifyRatio,\n    } = option ?? {};\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\n    const justifyRatio = typeof baseJustifyRatio === 'number' ? baseJustifyRatio : 1;\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        lineList,\n        fullLineListOption,\n        effectFlavorCondition,\n    } = splitEffect(normalizedContent, isNormal);\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 1000,\n                '2': 1000,\n                '3': 1000,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList: lineList,\n                        additionalLineCount: 0,\n                        format, textData,\n                        width,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = Math.max(minLine, lineListWithRatio.length);\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\n            || minLine > lineCount\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            lineListWithRatio\n                .forEach(({\n                    line: precalculatedLine,\n                    effectiveMedian,\n                    isLast,\n                }) => {\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\n                        const { line = '', alignment } = fullLineListOption.shift() ?? {};\n                        const isLast = alignment === 'justify' ? false : true;\n                        const xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [line],\n                                    format, textData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const { tokenList, spaceWidth } = analyzeLine({\n                            ctx,\n                            line,\n                            xRatio,\n                            format,\n                            isLast,\n                            textData,\n                            width,\n                            globalScale,\n                            justifyRatio: 100,\n                        });\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                        const dynamicFlavorFontData = useDynamicSize\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\n                            : flavorFontData;\n                        const { fontSize } = useDynamicSize\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                            : flavorFontData.fontList[appliedSizeLevel];\n                        const flavorTextCurrentFont = createFontGetter();\n                        ctx.font = flavorTextCurrentFont\n                            .setSize(fontSize)\n                            .setFamily(flavorFontData.font)\n                            .getFont();\n                        const flavorTextData = {\n                            fontData: dynamicFlavorFontData,\n                            fontLevel: dynamicSizeLevel,\n                            currentFont: flavorTextCurrentFont,\n                        };\n                        const xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [effectFlavorCondition],\n                                    format, textData: flavorTextData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const tokenList = tokenizeText(effectFlavorCondition);\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            textData: flavorTextData,\n                            format,\n                            globalScale,\n                        });\n                    } else {\n                        /** Normal line: Draw with the calculated median */\n                        const xRatio = effectiveMedian / 1000;\n                        const line = precalculatedLine;\n                        const { tokenList, spaceWidth } = analyzeLine({\n                            ctx,\n                            line,\n                            xRatio,\n                            format,\n                            isLast,\n                            textData,\n                            width,\n                            globalScale,\n                            justifyRatio,\n                        });\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    }\n\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                    trueBaseline += lineHeight;\n                });\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starList,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starList: string[],\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    /** We filter out all undefined star only at the trail of the star list */\n    const normalizedStarList = Array.isArray(starList)\n        ? starList\n        : [];\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = cardIcon === 'custom'\n        ? normalizedStarList.length\n        : typeof star === 'string'\n            ? star === '' ? 0 : 1\n            : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        ctx: starCtx,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async (_, index) => {\n            offset += (starWidth + startSpacing);\n            /** We must factor alignment here, because presentation does not factor alignment */\n            const cardIconIndex = normalizedStarCount - 1 - index;\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            ctx: starFinishCtx,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishCtx.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishCtx,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishCtx,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        starCtx.globalCompositeOperation = 'source-in';\n        starCtx.drawImage(starFinishCanvas, 0, 0);\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    rating: string,\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || typeof rating !== 'string') return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const baseline = isNaN(Number(rating))\n        ? 1106\n        : 1105;\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import { CanvasConst } from 'src/model';\nimport { drawAsset } from '../image';\nimport { createCanvas } from 'src/util';\n\nconst {\n    width,\n    height,\n    topToPendulumStructure,\n} = CanvasConst;\nexport const getMaskPromise = () => {\n    const topRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-top-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const bottomRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    /**\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\n     * \n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\n    const rightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const nameMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = topToPendulumStructure;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-name.png');\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\n        }\n        return null;\n    })();\n\n    return {\n        topRight: topRightMask,\n        bottomRight: bottomRightMask,\n        right: rightMask,\n        name: nameMask,\n    };\n};\nexport const MaskPromise = getMaskPromise();\n\n/**\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\n * \n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\n * */\nexport const applyAlphaMask = async (\n    urlOrCanvas: string | CanvasImageSource,\n    maskData: Uint8ClampedArray<ArrayBufferLike> | null,\n    width: number,\n    height: number,\n) => {\n    const { ctx, canvas } = createCanvas(width, height);\n    if (!ctx) return canvas;\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\n    if (!maskData) return canvas;\n    const layerData = ctx.getImageData(0, 0, width, height).data;\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\n        layerData[cnt + 3] = maskData[cnt + 3];\n    }\n\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\n\n    return canvas;\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    RegionMap,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\nimport { applyAlphaMask, MaskPromise } from './mask';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n    dyeColor: string,\n) => {\n    if (!ctx) return;\n    const willDyed = HexColorRegex.test(dyeColor);\n    if (foil === 'normal' && !willDyed) return;\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n    const usedFoil = willDyed ? 'platinum' : foil;\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\n        if (withBorder) {\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\n        } else {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\n                })\n            );\n        }\n    };\n\n    ctx.scale(globalScale, globalScale);\n    if (willDyed) {\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\n        if (linkMapFoilCtx) await drawFunction(linkMapFoilCtx);\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\n    } else {\n        await drawFunction(ctx);\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    region,\n    hasBackground,\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n    dyeList,\n    effectBackground, pendulumEffectBackground,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    starList,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    region: string,\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\n    dyeList: FrameDyeList,\n    effectBackground: string, pendulumEffectBackground: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    starList: string[],\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFrameX,\n        artFrameY,\n        artFrameHeight,\n        artFrameWidth,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resolvedLayoutStyle = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    } = resolvedLayoutStyle;\n\n    const resultAPI = {\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\n\n            /** Combine layer frame here */\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\n            /** No need to dye if background is gonna replace the frame */\n            if (\n                !willReplaceFrame\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\n                && dyedTopFrameCtx\n            ) {\n                const topRightCanvas = await applyAlphaMask(\n                    `frame/frame-${topRightFrame}.png`,\n                    await MaskPromise.topRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\n            }\n\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\n            if (\n                !willReplaceFrame\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\n                && dyedBottomFrameCtx\n            ) {\n                /** What is this?\n                 * \n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\n                 */\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\n                const bottomRightCanvas = await applyAlphaMask(\n                    `frame/frame-${bottomRightFrame}.png`,\n                    await MaskPromise.bottomRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\n            }\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            /** Leave empty space for card art */\n            if (isPendulum) {\n                dyedTopFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n                dyedBottomFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n            }\n            /** Background replace frame */\n            if (willReplaceFrame && dyedTopFrameCtx && dyedBottomFrameCtx) {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedTopFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedBottomFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n            }\n            /** Start assembling the canvas */\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\n            ctx.resetTransform();\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: (\n            externalCtx = ctx,\n        ) => {\n            if (!artworkCanvas || !externalCtx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            externalCtx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: async (\n            externalCtx = ctx,\n            hasArtBorder = false,\n        ) => {\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n                artFrameX,\n                artFrameY,\n                ratio,\n                artRatio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                opacity,\n                backgroundType,\n                pendulumSize,\n            );\n            if (backgroundType !== 'frame') {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n            } else {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    0, 0,\n                    globalScale * cardWidth, globalScale * cardHeight,\n                );\n            }\n            const backgroundFinish = otherFinish[3] ?? 'normal';\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\n                await loopBackgroundFinish(\n                    externalCtx,\n                    'art',\n                    async type => drawAssetWithSize(\n                        externalCtx,\n                        `finish/art-finish-${type}.png`,\n                        globalScale * artFrameX, globalScale * artFrameY,\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\n                    ),\n                );\n            }\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                ctx: attributeCtx,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeCtx,\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    ctx: attributeFinishCtx,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishCtx?.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishCtx,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishCtx,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                if (attributeCtx) {\n                    attributeCtx.globalCompositeOperation = 'source-in';\n                    attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\n                }\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starList,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            const {\n                canvas: pendulumIconCanvas,\n                ctx: pendulumIconCtx,\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\n            if (!ctx || !pendulumIconCtx) return;\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\n            const {\n                canvas: dyedLeftNameCanvas,\n                ctx: dyedLeftNameCtx\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\n                const nameRightCanvas = await applyAlphaMask(\n                    `background/background-name-${topRightFrame}.png`,\n                    await MaskPromise.name,\n                    cardWidth,\n                    topToPendulumStructure,\n                );\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\n                dyedLeftNameCtx?.drawImage(dyedRightNameCanvas, 0, 0);\n            }\n            ctx.globalAlpha = opacityName / 100;\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\n            ctx.globalAlpha = opacityText / 100;\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\n\n            if (withPendulum) {\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\n                await drawAssetWithSize(\n                    pendulumEffectBackgroundCtx,\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\n                ctx.globalAlpha = opacityPendulum / 100;\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\n            if (!ctx) return;\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\n            /** We create a new canvas for easier manipulation. */\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (willDye && validDyeColor) {\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\n                pendulumBorderCtx?.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            }\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderCtx?.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                if (validDyeColor) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\n                    await drawAsset(\n                        pendulumBorderFoilCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${usedFoil}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\n                    pendulumBorderCtx?.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(\n                        pendulumBorderCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                }\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) {\n                if (HexColorRegex.test(dyeList[6])) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n                }\n            }\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!applyArtFinish || !artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopArtFinish(\n                artCtx,\n                'art',\n                async (finishType, pendulumSuffix) => {\n                    return await drawAssetWithSize(\n                        artCtx,\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                        artFinishX, artFinishY,\n                        artFrameWidth, artFrameWidth / artRatio,\n                    );\n                },\n                pendulumSize,\n            );\n            artCtx.resetTransform();\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopFinish(\n                artCtx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        artCtx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            artCtx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n\n    if (!(ctx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => { };\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        if (patternContext) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            patternContext.scale(globalScale, globalScale);\n            await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n            patternContext.globalCompositeOperation = patternBlendMode;\n            patternContext.resetTransform();\n            await drawAssetWithSize(\n                patternContext, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(patternCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            ctx.scale(xRatio, yRatio);\n        }\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        if (embossedImageData) ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        if (shadowContext) {\n            const resetShadow = setTextStyle({\n                ctx: shadowContext,\n                x: shadowOffsetX,\n                y: shadowOffsetY,\n                shadowColor: shadowColor,\n                blur: shadowBlur,\n                globalScale,\n                useDefault: false,\n            });\n            ctx.scale(1 / xRatio, 1 / yRatio);\n            shadowContext.drawImage(canvas, 0, 0);\n            ctx.globalCompositeOperation = 'destination-over';\n            ctx.drawImage(shadowCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            resetShadow();\n        }\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => { },\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            ctx: iconCtx,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconCtx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => iconWidth * globalScale,\n            () => iconHeight * globalScale,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                ctx: iconFinishCtx,\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\n            await loopIconFinish(\n                iconFinishCtx,\n                'art',\n                async (finishType) => {\n                    return await drawAsset(\n                        iconFinishCtx,\n                        `finish/finish-typeart-${finishType}.png`,\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                    );\n                },\n            );\n            iconCtx.globalCompositeOperation = 'source-in';\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\n            ctx.drawImage(iconCanvas, 0, 0);\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitList = `${value}`.split('');\n\n        if (digitList.length === 1) {\n            const digit = digitList[0];\n            const digitWidth = ctx.measureText(digit).width;\n            const accLeft = edge - digitWidth / 2;\n\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n        } else if (digitList.length === 2) {\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\n            const firstDigit = digitList[0];\n            const secondDigit = digitList[1];\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\n                ? 0\n                : firstDigitWidth * 0.1\n            );\n\n            ctx.fillText(\n                firstDigit,\n                accLeft,\n                baseline + fontSize,\n            );\n            ctx.fillText(\n                secondDigit,\n                accLeft + firstDigitWidth - (firstDigit === '1'\n                    ? (secondDigit === '1'\n                        ? ctx.measureText('1').width * 0.1\n                        : secondDigitWidth * 0.1)\n                    : secondDigitWidth * -0.1),\n                baseline + fontSize,\n            );\n        } else {\n            let totalWidth = 0;\n\n            digitList.forEach(digit => {\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n            let accLeft = edge - totalWidth / 2;\n\n            digitList.forEach(digit => {\n                ctx.fillText(\n                    digit,\n                    accLeft,\n                    baseline + fontSize,\n                );\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n        }\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const {\n        stroke = false,\n        textStyle,\n        globalScale,\n    } = option ?? {};\n    const actualEdge = edge * globalScale;\n    const actualBaseline = baseline * globalScale;\n    const actualBaselineOffset = baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = actualEdge;\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const numberOffset = -1;\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.scale(1, 1.29);\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${36.18 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.scale(1, 1.29);\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkDiplayLinkRating,\n    checkLightFooter,\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveFrameStyle,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n    stickerSize,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format, region,\n        hasBackground, backgroundType,\n        frame,\n        foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        leftFrame, rightFrame,\n        dyeList,\n        atk, def, linkMap, linkRating,\n        attribute,\n        cardIcon, subFamily, star, starAlignment, starList,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n        flag,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const effectBackground = effectStyle.background;\n    const pendulumEffectBackground = pendulumStyle.background;\n    const effectMinLine = effectStyle.minLine;\n    const pendulumEffectMinLine = pendulumStyle.minLine;\n    const effectJustifyRatio = effectStyle.justifyRatio;\n    const pendulumEffectJustifyRatio = pendulumStyle.justifyRatio;\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = checkLightFooter(bottomFrame);\n    const {\n        bottomRightFrame,\n    } = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n    const foilDyeColor = dyeList[6];\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const [\n        showDefAndLinkFlag,\n        linkRatingDisplayMode,\n    ] = flag;\n\n    /** One special case where we do not show link rating */\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\n    const statInEffect = !!(atk || def)\n        || showLinkRating\n        || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (\n                ctx: CanvasRenderingContext2D,\n                x: number, y: number,\n                w: number, h: number,\n                customFill?: string,\n            ) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                region,\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n                dyeList,\n                effectBackground, pendulumEffectBackground,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star, starList,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Fill color background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\n            const {\n                canvas: artOnCardCanvas,\n                ctx: artOnCardCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\n            await drawArtFinish(artOnCardCtx);\n            await drawArtOverlayFinish(artOnCardCtx);\n\n            /** Combine background and artwork together, overlay for background is applied here */\n            const {\n                canvas: combinedArtCanvas,\n                ctx: combinedArtCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (combinedArtCtx) await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\n            if (!boundless && combinedArtCtx) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\n\n            /** @summary Draw the overall layout */\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            ctx.drawImage(combinedArtCanvas, 0, 0);\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                ctx.drawImage(\n                    combinedArtCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n                \n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil, true);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (isLink && !isPendulum) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil, true);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\n                ctx.drawImage(\n                    artOnCardCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil, true);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            \n            if (showLinkRating && statInEffect) {\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\n                    ? linkRating\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\n                await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        attribute,\n        backgroundCanvasRef,\n        backgroundType,\n        cardIcon,\n        dyeList,\n        effectBackground,\n        finish,\n        foil,\n        format,\n        region,\n        frame,\n        frameCanvasRef,\n        hasBackground,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        leftFrame,\n        levelStyle,\n        lightFooter,\n        linkMap,\n        linkRating,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        otherFinish,\n        pendulumEffectBackground,\n        pendulumFrame,\n        pendulumRightFrame,\n        pendulumSize,\n        resolvedOtherEffectTextStyle,\n        resolvedStatTextStyle,\n        rightFrame,\n        showLinkRating,\n        star,\n        starList,\n        starAlignment,\n        statInEffect,\n        withBlueScale,\n        withRedScale,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n\n            if (!clearCanvas(ctx) || !nameCanvasRef.current) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        // const hasAtk = !!atk;\n        const hasDef = showLinkRating\n            ? !!def && showDefAndLink\n            : !!def;\n        const hasLink = showLinkRating;\n        if (atk) {\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\n            drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\n        }\n        if (def && (!showLinkRating || showDefAndLink)) {\n            const offset = hasLink ? 168.75 : 0;\n            drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, showLinkRating, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightRightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const isNumberPassword = /^[0-9]*$/.test(password);\n        const mayOffset = isNumberPassword && isPendulum && isLink;\n        const willOffset = mayOffset;\n        const { rightEdge } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n            fontLevel: !isNumberPassword ? 1 : 0\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 162.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    stroke: false,\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        lightRightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                ctx: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    ctx: stickerFinishContext,\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n                if (stickerFinishContext && stickerContext) {\n                    stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                    stickerFinishContext.scale(globalScale, globalScale);\n                    await loopStickerFinish(\n                        stickerFinishContext,\n                        'art',\n                        async (finishType) => {\n                            return await drawAsset(\n                                stickerFinishContext,\n                                `finish/finish-typeart-${finishType}.png`,\n                                stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\n                            );\n                        },\n                    );\n                    stickerContext.globalCompositeOperation = 'source-in';\n                    stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                    ctx.drawImage(stickerCanvas, 0, 0);\n                }\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: effectMinLine,\n                    justifyRatio: effectJustifyRatio,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        effectMinLine,\n        effectJustifyRatio,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            const fontDataKey = `${format}-${pendulumSize}`;\n            const coordinateList = PendulumEffectCoordinateMap\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                [pendulumSize];\n            /** Account for half scaleless frame */\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\n                ? coordinateList\n                : coordinateList.map(({\n                    trueEdge, trueWidth, ...rest\n                }) => ({\n                    ...rest,\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    trueWidth: trueWidth\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                }));\n\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[fontDataKey],\n                fontDataKey,\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: modifiedCoordinateList,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: pendulumEffectMinLine,\n                    justifyRatio: pendulumEffectJustifyRatio,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        pendulumEffectMinLine,\n        pendulumEffectJustifyRatio,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink) {\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n                const {\n                    artBorder: keepArtBorder,\n                    body: opacityBody,\n                    boundless,\n                } = normalizedOpacity;\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        foilDyeColor,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        opacity,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (_exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        // const {\n        //     isRelevant,\n        //     pendulumSize,\n        //     isPendulum = false,\n        //     opacity,\n        // } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: string,\n    feedbackReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n        feedbackReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","import { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nexport type PresetManagerStore = {\n    visible: boolean,\n    setVisible: (status?: boolean) => void,\n};\nexport const usePresetManager = create<\n    PresetManagerStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        visible: false,\n        setVisible: newStatus => {\n            set(({ visible }) => {\n                return { visible: newStatus == null ? !visible : newStatus };\n            });\n        }\n    };\n}));","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    ${({ $freeSize, $size }) => $freeSize\n        ? 'padding: 0 var(--spacing-xxs);'\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\n    };\n    ${({ $size }) => $size === 'sm'\n        ? `\n            height: 18px;\n            font-size: var(--fs-sm);\n        `\n        : `\n            height: 24px;\n            font-size: var(--fs);\n        `}\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    size?: 'sm' | 'md',\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    size = 'md',\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            $size={size}\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n            $freeSize={!Icon}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    align-items: center;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\n\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\n    height: 17px;\n    width: 17px;\n    cursor: pointer;\n    position: relative;\n    outline: none;\n    box-shadow: 0 0 1px 1px var(--main-level-3);\n    border-radius: var(--br);\n    ${({ $static }) => $static\n        ? `\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        `\n        : ''}\n    ${({ $empty }) => $empty\n        ? `\n            background-color: var(--sub-level-4);\n            background-image: var(--gradient-diagonal-stripe);\n        `\n        : ''}\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n`;","import copy from 'copy-to-clipboard';\nimport { CheckOutlined } from '@ant-design/icons';\nimport styled, { css } from 'styled-components';\nimport React, { useState } from 'react';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const CopiableOverlayStyle = css`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nexport const StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    ${CopiableOverlayStyle}\n`;\n\nexport type Copiable = {\n    data: string | number,\n    children?: React.ReactNode,\n    disabled?: boolean,\n    overlay?: React.ReactNode,\n    container: React.ComponentType<{\n        children?: React.ReactNode,\n        disabled?: boolean,\n        onClick?: (e: { stopPropagation: () => void }) => void,\n    }>,\n}\nexport const Copiable = ({\n    data,\n    children,\n    disabled,\n    overlay = <CheckOutlined />,\n    container: Container,\n}: Copiable) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string | number) => {\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <Container\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\">{overlay}</div> : null}\n        {children}\n    </Container>;\n};\n\nexport type CopiableCode = {\n    data: string | number,\n    children?: React.ReactNode,\n}\nexport const CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    return <Copiable data={data} container={StyledMono}>{children}</Copiable>;\n};","import { Drawer, Popover } from 'antd';\nimport styled, { css, keyframes } from 'styled-components';\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const SolidLabel = styled.div`\n    display: inline-flex;\n    column-gap: var(--spacing-xs);\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    border-radius: var(--br);\n    box-shadow: var(--bs-input);\n    .ant-checkbox-wrapper {\n        transform: translateY(-1px); // Alignment\n    }\n`;\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 57px 39px 6px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        border-right: none;\n        border-radius: var(--br) 0 0 var(--br);\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\n    display: grid;\n    grid-template-columns: 3em max-content 3em;\n    gap: var(--spacing-xs);\n    .left-part {\n        text-align: right;\n    }\n    .right-part {\n        text-align: left;\n    }\n    ${({ $warning }) => $warning\n        ? `\n            color: var(--main-warning);\n        `\n        : ''}\n`;\nexport type ResolutionLabel = {\n    warning?: boolean,\n    width: number,\n    height: number,\n}\nexport const ResolutionLabel = ({ width, height, warning = false }: ResolutionLabel) => {\n    return <ResolutionLabelContainer $warning={warning}>\n        <span className=\"left-part\">{width}</span>\n        <span>×</span>\n        <span className=\"right-part\">{height}</span>\n    </ResolutionLabelContainer>;\n};\n\nconst backgroundMarch = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\nexport const DropZone = styled.div<{ $visible: boolean }>`\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #8888cc44;\n\tz-index: 1;\n\tfont-size: var(--fs-3xl);\n\talign-items: center;\n    justify-content: center;\n\ttext-shadow: 0 0 3px #222;\n    border: 5px dashed #cccccc;\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\n\tbackground-size: 400% 400%;\n    padding: 5px;\n    label {\n        color: var(--color-heavy);\n        line-height: 1.25;\n    }\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\n`;\n\n\nexport const ManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: var(--spacing);\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n`;\n\nexport const SingleSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: var(--spacing-sm);\n    align-items: center;\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    .ant-input-number {\n        width: 55px;\n    }\n    .ant-slider {\n        margin: var(--spacing-xxs);\n    }\n`;\n\nexport * from './color';\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, getSlindingTypeList, ResolutionList, ResolutionMap } from 'src/model';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    min-width: 15rem;\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraDecorativeOption,\n        slidingType,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    <ResolutionLabel width={width} height={height} warning={true} />\n                                </Popover>\n                                : <ResolutionLabel width={width} height={height} />,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.sliding-type.label']}</div>\n                    <RadioTrain\n                        value={slidingType}\n                        optionList={getSlindingTypeList(language)}\n                        onChange={value => {\n                            updateSetting({ slidingType: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    white-space: pre-line;\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n        margin-bottom: var(--spacing-lg);\n    }\n    .image {\n        max-width: 100%;\n        padding: 0 var(--spacing) var(--spacing-lg) var(--spacing);\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    text-align: center;\n    .content {\n        text-align: left;\n    }\n    a {\n        display: inline-block;\n    }\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 300px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            <div className=\"content\">\n                                {content}\n                            </div>\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\n                                <img src={image} alt={`version-${version}-illust`} />\n                            </a>}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, notification, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\n\nexport const FAD_BUTTON_ID = 'faq-button';\n\ntype Feedback = {\n    author?: string,\n    question: string,\n    answer?: string,\n    image?: string,\n};\n\ntype Quote = {\n    image?: string,\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    image,\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <QuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n        {image && <img className=\"image\" src={image} alt=\"answer\" />}\n    </QuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\n\n    useEffect(() => {\n        const currentReminder = '14/08/2025';\n        if (faqReminder !== currentReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    useEffect(() => {\n        if (feedbackReminder !== true) {\n            setFeedbackReminder(true);\n            setAnimating(true);\n            notification.info({\n                message: 'Feedback Reminder',\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\n                duration: 10,\n                onClose: () => {\n                    setAnimating(false);;\n                }\n            });\n        }\n    }, [feedbackReminder, setFeedbackReminder]);\n\n    const feedbackList: Feedback[] = [\n        {\n            author: '& symbol at Aug 14, 2025',\n            question: 'This symbole & isnt correct on display.\\nSee photo Magie & Piège',\n            answer: 'Hi there, I have checked the letter on a real card and do not see any significant error, do you have any image for how the letter should be displayed?',\n            image: 'https://i.imgur.com/xZ9Pp9X.png'\n        },\n        {\n            author: 'Die Frauen at Aug 9, 2025',\n            question: 'As for a suggestion related to the pevious query, this may be a bit too crazy, but since it\\'s lodged together with the advanced/custom layout feature, do you think perhaps the foil could be split into 5 pieces the same as it? (all 4 corners and the text frame). If it may take too much effort or is not feasible I\\'ll understand that.',\n            answer: 'I don\\'t think this would be possible, as card foils are divided into multiple pieces for different places, so I couldn\\'t split them the same way as card frames at all.',\n        },\n        {\n            author: 'Die Frauen at Aug 9, 2025',\n            question: 'For convenience\\'s sake, I think it\\'d be a bit more useful if the foil dye set also had a hue slider, or a toggle for the RGB values like the one in the name coloring tabs... for the less inclined to memorize the Hex values.',\n            answer: 'I have added rgb inputs for dye color picker.'\n        },\n        {\n            author: 'Anonymous User at Aug 8, 2025',\n            question: 'There should be an effect text formatting option to justify text while making it respect the rest of the text\\'s compression ratio, like actual cards do.',\n            answer: 'I cannot support a new syntax right now, but if your use-case is just wanting the last line of effect / pendulum effect to be justfiy-aligned, you can use the newly implemented Justify Ratio in Paragraph Style button.',\n        },\n        {\n            author: 'the ¡ symbol is to long (for spanish card names) at Aug 5, 2025',\n            question: 'hi, i was trying to create a card using the ¡ symbol in the name, but its too long, not like the ! in the screenshot. for exaple: if u try to write the name \\'Caza del Cielo Movilizar - ¡Atacar!\\' you can see the symbol ¡ is too long compared to the pics of the same card in spanish. i hope you can fix that and ty for the web:3',\n            answer: 'I have updated the ratio, hopefully it looks better now.',\n        },\n        {\n            author: 'Re: ★ at Jul 30, 2025',\n            question: 'I am not sure your latest fix for ★, and ☆ was correct: As far as I can tell, the size of the characters is too small.\\nAccording to official cards, they should be as tall as a capital letter.\\nMy source of comparison was the \"Evil★Twin\" Archetype.',\n            answer: 'This should be fixed by now.',\n        },\n        {\n            author: 'TitanKyojin at Jul 30, 2025',\n            question: 'I seem to be having the same problem as others. All of the buttons associated with exporting, importing and saving don\\'t seem to be working.',\n            answer: 'I have issued another fix, you can check again now.',\n        },\n        {\n            author: 'Anonymous User at Jul 30, 2025',\n            question: 'Thanks again for the manual drag option! It actually helped me notice something that might help with diagnosing the auto-scroll issue if you decide to return to it. After manually dragging the card preview lower and then switching to auto-scroll, the preview instantly moved back to the top of the page and stayed there - that\\'s its idea of \"auto-scroll.\" No need to rush to fix this, though; just wanted to share my findings and hopefully a useful note, and the manual drag is a great workaround anyway!',\n            answer: 'Yeah, thanks to your screenshot I think the problem here is because the window is too short; it cannot fit the entire card within so no matter how much it try to align, a part of it will be hidden from the viewport, which lead to confusing behavior. In this case manual drag would be the better option regardless.'\n        },\n        {\n            author: '★ at Jul 29, 2025',\n            question: 'The ★ doesn\\'t get displayed correctly',\n            answer: 'It should be fixed by now.'\n        },\n        {\n            author: 'Ivan/Liger at Jul 29, 2025',\n            question: 'Hello, sorry to bother you. I\\'m not sure if your site is under maintenance, but I\\'ve noticed some major issues recently. It all started when I could no longer save images — nothing in the top bar seems to work anymore. I tried switching my browser to “Desktop mode” to see if it would help, but that made things even worse. The default zoom setting at 100% doesn\\'t display properly, so I had to set it to 50% just to see the full layout. Unfortunately, I still can\\'t do anything at the moment. I hope this helps. I haven’t noticed any other issues for now.\\n\\nBest regards,\\nIvan / Liger'\n        },\n        {\n            author: 'Ebrahim at Jul 29, 2025',\n            question: 'I\\'m trying to download the card from the website to my phone but the download button isn\\'t working can you please fix it.',\n            answer: 'Both issues seem to have the same cause, it should be fixed by now.',\n        },\n        {\n            author: 'Anonymous User at Jul 29, 2025',\n            question: 'The manual scroll option works perfectly! Thank you so much for the update and for staying in touch!',\n            answer: 'Thanks, happy that the work around worked because honestly I\\'m out of ideas otherwise.',\n        },\n        {\n            author: 'Anonymous User at Jul 28, 2025',\n            question: 'Happy to help! I tried to screenshot the auto-scroll issue via the app before, but the UI doesn\\'t let me scroll down and screenshot at the same time, so I won\\'t be able to show you clearly. (I\\'d use my own screenshots, but I can\\'t paste or upload them, either.) What I can tell you is that the card preview scrolls up along with the rest of the page, so it never moves below the \"Finish: Art\" section. If there\\'s another way I can show you the issue to help you solve this, please let me know!',\n            answer: 'Don\\'t worry, even if you could not capture the exact behavior, it still provide information about your layout and screensize which could be useful for debugging.\\n\\nOn the other hand, I have added the manual option that allow you to grab the preview and slide it at will. You can change the behavior in Setting => \"Preview sliding\"',\n        },\n        {\n            author: 'Anonymous User at Jul 28, 2025',\n            question: 'Thank you for responding so quickly! I don\\'t see the auto-scroll effect happening for the card preview, though. I reset my browser just in case, but that didn\\'t seem to work. (Maybe I just need to wait a bit for the update to kick in or if there\\'s some new hidden option to toggle it?) In any case, I hope it works eventually because this card maker is awesome!',\n            answer: 'That\\'s pretty weird indeed. The feature should apply automatically without any additional action. Anyway, in the Report dialog there should be a \"Take screenshot\" button, if possible please submit the app\\'s screenshot so I can try to diagnose the problem. Thanks for your help.',\n        },\n        {\n            author: 'Anonymous User at Jul 24, 2025',\n            question: 'Is it possible to make it so that users can scroll through the customization options while the card preview always stays in place onscreen? (Or alternatively, is it possible to give the card preview its own separate scroll bar?)',\n            answer: 'I have added some auto scroll behavior to keep the card in view, hopefully it looks better now.',\n        },\n        {\n            author: 'Blake at Jul 23, 2025',\n            question: 'Are you able to make custom attributes and upload them on here?',\n            answer: 'No I can\\'t unfortunately, as best I can provide you a way to use your own custom attribute.',\n        },\n        {\n            author: 'Anonymous User at Jul 18, 2025',\n            question: 'The drag and drop feature is pretty nice... Is there a way for it not to take precedence over the drag and drop in the text box? It kinda makes it fizzle.',\n            answer: 'This should be fixed by now.',\n        },\n        {\n            author: 'Blake at Jul 19, 2025',\n            question: 'On rushify, can you make rush rare of the cards look like the real ones?',\n        },\n        {\n            author: 'Blake at Jul 14, 2025',\n            question: 'Isn’t there any other person that’s able to create a website like this one but only rush duel?',\n        },\n        {\n            author: 'Blake at Jul 13, 2025',\n            question: 'On GitHub Rushify, can you add the other card types?',\n            answer: 'I am not the author of Rushify, so I afraid I can\\'t help much.',\n        },\n        {\n            author: 'Anonymous User at Jul 14, 2025',\n            question: 'The outline when placed at 0/0 is not evenly positioned',\n            answer: 'The image you provided is the app working properly, this is kind of a technical limitation on my side and I can\\'t do much about it.'\n        },\n        {\n            author: 'Being able to save some Customs Presets at Jul 12, 2025',\n            question: 'The ability to save 2-3 Customs Presets',\n            answer: 'Let\\'s see if I can come up with something.'\n        },\n        {\n            author: 'New Feature Suggestion at Jul 12, 2025',\n            question: 'For the card art, maybe you could make a drag and drop feature to it?',\n            answer: 'I have added the feature, you may try it now.'\n        },\n        {\n            author: 'TheTonyB at Jul 10, 2025',\n            question: 'Can you add support for greek letters in TCG format? Currently, the only ones that work fine are α, β, Ω, and I think μ too. In OCG format they all work perfectly. I included a screeenshot of me trying to use the greek letter Ν. Goated card maker by the way.',\n        },\n        {\n            author: 'TheTonyB at Jul 10, 2025',\n            question: 'Can you improve compatibility with greek letters in TCG format? The only ones that work fine are α, β and Ω. In OCG format they all work perfectly.',\n            answer: 'I have updated font, hopefully it looks better now.'\n        },\n        {\n            author: 'San_San at Jul 10, 2025',\n            question: 'Al escribir en español las vocales con tilde sobresalen ligeramente del resto de letras',\n            answer: 'Can you provide an example image? As far as I check words like \"número\" or \"además\" looks normal to me.'\n        },\n        {\n            author: 'Anonymous User at Jun 30, 2025',\n            question: 'Having a format similar for cards similar to Master Duel cards.',\n            answer: 'I have no plan to support format like Master Duel right now.'\n        },\n        {\n            author: 'Blake Jun at 27, 2025',\n            question: 'Can you make a website with rush duel. card templates just like this one? Not only effect and fusion, but all card types.',\n        },\n        {\n            author: 'Blake Jun at 27, 2025',\n            question: 'Can you also put in the link in the description?',\n            answer: 'At the moment, no. You may check the FAQ for more detail.'\n        },\n        {\n            author: 'Rush Duel at Jun 22, 2025',\n            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\n            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n        },\n        {\n            author: 'Maya at May 23, 2025',\n            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\n            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\n        },\n    ];\n\n    return <>\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved or stale (4 weeks of inactive) feedbacks are removed.</i></div>\n                    <br />\n                    {feedbackList.map(({ author, question, answer, image }, index) => {\n                        return <Quote key={index} author={author} question={question} image={image}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                        {\n                            question: 'Will you make another version for Rush Duel cards?',\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n                        }\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { useEffect, useRef } from 'react';\nimport { drawName } from 'src/draw';\nimport { FrameInfo, NameStyle } from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport { mergeClass, resolveNameStyle } from 'src/util';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\nimport { Popconfirm } from 'antd';\n\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        cursor: pointer;\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nconst OPTION_WIDTH = 140;\nconst OPTION_HEIGHT = 30;\nconst PresetOptionContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    gap: var(--spacing-xs);\n    align-items: center;\n    .canvas-container {\n        width: ${OPTION_WIDTH}px;\n        height: ${OPTION_HEIGHT}px;\n        box-shadow: var(--bs-1);\n    }\n    .preset-option-action {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-xxs);\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n        }\n    }\n`;\nexport type PresetOption = React.PropsWithChildren<{\n    frameInfo?: FrameInfo,\n    presetContent: Partial<NameStyle>,\n    active?: boolean,\n    onOverwrite?: () => void,\n    onActive?: () => void,\n    onDelete?: () => void,\n} & WithLanguage>;\nexport const PresetOption = ({\n    frameInfo,\n    presetContent,\n    active = false,\n    language,\n    onOverwrite,\n    onActive,\n    onDelete,\n}: PresetOption) => {\n    const {\n        format, foil,\n    } = useCard(useShallow(({\n        card: { format, foil },\n    }) => ({\n        format, foil,\n    })));\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const {\n        name,\n        labelBackgroundColor,\n        labelBackgroundImage,\n    } = frameInfo ?? {};\n    const normalizedFrame = name ?? 'effect';\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas?.getContext('2d');\n        if (canvas && ctx) {\n            ctx.clearRect(0, 0, OPTION_WIDTH, OPTION_HEIGHT);\n            const { font } = presetContent;\n            const value = font === 'OCG' ? '{カード名|かーどめい}' : 'Card Name';\n            const top = font === 'OCG' ? 65 : 60;\n            const left = font === 'OCG' ? 65 : 12;\n            drawName(\n                canvas,\n                ctx,\n                value,\n                left,\n                top,\n                OPTION_WIDTH / 0.4,\n                resolveNameStyle({\n                    foil,\n                    format,\n                    frame: normalizedFrame,\n                    nameStyle: presetContent,\n                    nameStyleType: 'custom',\n                }),\n                {\n                    frame: normalizedFrame,\n                    format,\n                    furiganaHelper: false,\n                    globalScale: 0.4,\n                    isSpeedSkill: true,\n                }\n            );\n        }\n    }, [foil, format, normalizedFrame, presetContent]);\n\n    return <PresetOptionContainer\n        className={mergeClass('preset-option', active ? 'menu-active' : '')}\n    >\n        <StyledPatternOption\n            className={mergeClass('canvas-container', !!onActive ? '' : 'menu-off')}\n            onClick={onActive}\n            style={{\n                background: labelBackgroundColor,\n                backgroundImage: labelBackgroundImage,\n            }}\n        >\n            <canvas ref={canvasRef} width={OPTION_WIDTH} height={OPTION_HEIGHT} />\n        </StyledPatternOption>\n        <div className=\"preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onDelete()}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </PresetOptionContainer>;\n};","import { Popconfirm } from 'antd';\nimport { DyeIndexMap, Foil, FoilMap, FrameInfoMap } from 'src/model';\nimport { WithLanguage } from 'src/service';\nimport { HexColorRegex, mergeClass } from 'src/util';\nimport styled from 'styled-components';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\n\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $layoutHoverable: boolean, $hoverable: boolean }>`\n    /** Ensure even width */\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\n    --layout-height: ${props => props.$height}px;\n    display: inline-block;\n    width: var(--layout-width);\n    height: var(--layout-height);\n    box-shadow: 0 0 2px 0 #202020;\n    position: relative;\n    background: var(--main-level-2);\n    ${props => props.$hoverable ? 'cursor: pointer;' : ''}\n    &.is-vertical {\n        margin-bottom: var(--spacing-3xl);\n        .float-layout.foil {\n            width: 100%;\n            left: 0;\n            bottom: -22.5%;\n            font-size: var(--fs-sm);\n            background-color: var(--main-level-1);\n        }\n    }\n    &.is-horizontal {\n        margin-right: var(--spacing-lg);\n        .float-layout.foil {\n            width: 50%;\n            height: 80%;\n            top: 10%;\n            right: -60%;\n            font-size: 0;\n            background-color: var(--main-level-1);\n        }\n    }\n    button {\n        border: none;\n    }\n    .overlay-patch {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .dye-patch {\n        position: absolute;\n        z-index: 1;\n        top: 10%;\n        left: 50%;\n        min-width: 6px;\n        min-height: 6px;\n        width: ${props => props.$width / 6}px;\n        height: ${props => props.$width / 6}px;\n        border-radius: var(--br-lg);\n        transform: translateX(-50%);\n    }\n    .card-layout {\n        position: absolute;\n        ${props => props.$layoutHoverable ? 'cursor: pointer;' : ''}\n        padding: 0;\n        &.unmodified .overlay-patch {\n            background: var(--gradient-diagonal-stripe);\n        }\n    }\n    .partial-layout {\n        background-clip: padding-box;\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) dashed var(--main-level-2);\n                }\n            `\n        : ''}\n    }\n    .float-layout {\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) solid var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n            `\n        : ''}\n    }\n    /** For Zarc's gradient */\n    .partial-layout {\n        background-size: 200%;\n    }\n    .top-left {\n        width: 50%; height: 50%;\n        top: 0; left: 0;\n    }\n    .top-right {\n        width: 50%; height: 50%;\n        top: 0; left: 50%;\n        background-position-x: 100%;\n    }\n    .bottom-left {\n        width: 50%; height: 50%;\n        top: 50%; left: 0;\n    }\n    .bottom-right {\n        width: 50%; height: 50%;\n        top: 50%; left: 50%;\n        background-position-x: 100%;\n    }\n    /** Background width is slightly reduced to help active bottom frames easier */\n    .effect-background {\n        width: 80%;\n        height: 20%;\n        bottom: 5%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    .pendulum-effect-background {\n        width: 80%;\n        height: 13%;\n        bottom: 28%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n`;\nexport type CardLayoutPreview = {\n    tabIndex?: number,\n    width: number,\n    height: number,\n    baseLayoutState?: Record<string, string | undefined>,\n    resolvedLayoutState: Record<string, string | undefined>,\n    isPendulum: boolean,\n    activeLayout?: string,\n    dyeList: string[],\n    foil: Foil,\n    onClick?: () => void,\n    onLayoutSelect?: (key: string) => void,\n    vertical?: boolean,\n} & WithLanguage;\nexport const CardLayoutPreview = ({\n    tabIndex = 0,\n    width,\n    height,\n    baseLayoutState,\n    resolvedLayoutState,\n    isPendulum,\n    activeLayout,\n    dyeList,\n    foil,\n    onClick,\n    onLayoutSelect,\n    language,\n    vertical = false,\n}: CardLayoutPreview) => {\n    return <CardLayoutContainer\n        $width={width}\n        $height={height}\n        $layoutHoverable={!!onLayoutSelect}\n        $hoverable={!!onClick}\n        onClick={onClick}\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\n    >\n        {[\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\n        ].map(({ className, key }) => {\n            const frame = resolvedLayoutState[key];\n            const dyeIndex = DyeIndexMap[key];\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\n\n            if (!frame) return null;\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\n            const {\n                labelBackgroundColor,\n                labelBackgroundImage,\n            } = FrameInfoMap[frame] ?? {};\n            return <button key={key}\n                {...tabIndex < 0 ? {} : { tabIndex }}\n                className={mergeClass(\n                    className,\n                    key === activeLayout ? 'active' : '',\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\n                )}\n                onClick={() => onLayoutSelect?.(key)}\n                style={labelBackgroundImage\n                    ? { backgroundImage: labelBackgroundImage }\n                    : { backgroundColor: labelBackgroundColor }\n                }\n            >\n                <div\n                    className=\"overlay-patch\"\n                    style={dyeColor\n                        ? {\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\n                        }\n                        : {}}\n                />\n            </button>;\n        })}\n        <button\n            {...tabIndex < 0 ? {} : { tabIndex }}\n            className={mergeClass(\n                'card-layout float-layout foil',\n                'foil' === activeLayout ? 'active' : '',\n            )}\n            onClick={() => onLayoutSelect?.('foil')}\n            style={{\n                boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\n                    ? dyeList[DyeIndexMap.foil]\n                    : FoilMap[foil].color} inset`\n            }}\n        >\n            {language['input.foil.label']}\n        </button>\n    </CardLayoutContainer>;\n};\n\nconst LayoutPresetOptionContainer = styled.div`\n    text-align: center;\n    .layout-preset-option-action {\n        line-height: 1.25;\n        text-align: center;\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n            + .anticon {\n                margin-left: var(--spacing-xs);\n            }\n        }\n    }\n`;\nexport type LayoutPresetOption = {\n    onActive?: () => void,\n    onOverwrite?: () => Promise<void>,\n    onDelete?: () => Promise<void>,\n} & CardLayoutPreview;\nexport const LayoutPresetOption = ({\n    onActive,\n    onDelete,\n    onOverwrite,\n    language,\n    ...rest\n}: LayoutPresetOption) => {\n    return <LayoutPresetOptionContainer className=\"frame-preset-option\">\n        <div className=\"preview-container\" onClick={onActive}>\n            <CardLayoutPreview {...rest} language={language} />\n        </div>\n        <div className=\"layout-preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={onDelete}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </LayoutPresetOptionContainer>;\n};","import { GlobalMemory, useCard, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ManagerDrawer } from '../atom';\nimport { PresetOption } from '../preset-option';\nimport { CanvasConst, FrameInfo, FrameInfoMap } from 'src/model';\nimport styled from 'styled-components';\nimport { LayoutPresetOption } from '../card-layout-preview';\nimport { downloadBlob, mergeClass, resolveFrameStyle } from 'src/util';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Button, Modal, notification } from 'antd';\nimport { useMemo, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst PresetImportReviewModalContainer = styled(Modal)`\n    .import-review-title {\n        margin-bottom: var(--spacing-xs);\n    }\n    .import-action-table {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs);\n            &:nth-child(1) {\n                width: 150px;\n            }\n            &:nth-child(2) {\n                width: 150px;\n            }\n        }\n        .action-panel {\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            gap: var(--spacing-xs);\n        }\n        .import-action-row {\n            &.keep-old {\n                td:nth-child(1) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-new {\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-both {\n                td:nth-child(1),\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n        }\n    }\n`;\ntype MergeEntry<Value> = Value & { verdict: 'keep-old' | 'keep-new' | 'keep-both' };\ntype NameStylePreset = GlobalMemory['nameStylePresetList'][0];\ntype LayoutPreset = GlobalMemory['layoutPresetList'][0];\ntype PresetImportReviewModal = {\n    frameInfo: FrameInfo,\n    isPendulum: boolean,\n    importData: Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>,\n    onCancel: () => void,\n} & WithLanguage;\nconst PresetImportReviewModal = ({\n    language,\n    isPendulum,\n    frameInfo,\n    importData,\n    onCancel,\n}: PresetImportReviewModal) => {\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const {\n        layoutPresetMap,\n        nameStylePresetMap,\n    } = useMemo(() => {\n        const nameStylePresetMap = nameStylePresetList.reduce<Record<string, NameStylePreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n        const layoutPresetMap = layoutPresetList.reduce<Record<string, LayoutPreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n\n        return {\n            nameStylePresetMap,\n            layoutPresetMap,\n        };\n    }, [layoutPresetList, nameStylePresetList]);\n    const {\n        layoutPresetList: nextLayoutPresetList = [],\n        nameStylePresetList: nextNameStylePresetList = [],\n    } = importData;\n    const [decisionMap, setDecisionMap] = useState(() => {\n        const layoutPresetMap = nextLayoutPresetList.reduce<Record<string, MergeEntry<LayoutPreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n        const nameStylePresetMap = nextNameStylePresetList.reduce<Record<string, MergeEntry<NameStylePreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n\n        return { layoutPresetMap, nameStylePresetMap };\n    });\n\n    return <PresetImportReviewModalContainer\n        visible={true}\n        width={700}\n        maskClosable={false}\n        okText={language['preset.button.import.label']}\n        cancelText={language['preset.button.discard.label']}\n        onCancel={onCancel}\n        onOk={async () => {\n            const layoutVerdictList = Object.values(decisionMap.layoutPresetMap);\n            const nameStyleVerdictList = Object.values(decisionMap.nameStylePresetMap);\n\n            const layoutReplaceMap: Record<string, LayoutPreset> = {};\n            const layoutFullList: LayoutPreset[] = [];\n            const layoutNewList: LayoutPreset[] = [];\n            layoutVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    layoutFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (layoutPresetMap[key] == null && verdict === 'keep-new') {\n                        layoutNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        layoutNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        layoutReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const layoutPresetTx = db.transaction('presetLayoutStore', 'readwrite');\n                for (const { key, content } of layoutFullList) {\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(content) });\n                }\n                await layoutPresetTx.done;\n            }\n            setLayoutPresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (layoutReplaceMap[entry.key]) return layoutReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...layoutNewList,\n                ];\n\n                return newList;\n            });\n\n            const nameStyleReplaceMap: Record<string, NameStylePreset> = {};\n            const nameStyleFullList: NameStylePreset[] = [];\n            const nameStyleNewList: NameStylePreset[] = [];\n            nameStyleVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    nameStyleFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (nameStylePresetMap[key] == null && verdict === 'keep-new') {\n                        nameStyleNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        nameStyleNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        nameStyleReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readwrite');\n                for (const { key, content } of nameStyleFullList) {\n                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(content) });\n                }\n                await nameStylePresetTx.done;\n            }\n            setNameStylePresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (nameStyleReplaceMap[entry.key]) return nameStyleReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...nameStyleNewList,\n                ];\n\n                return newList;\n            });\n            onCancel();\n        }}\n    >\n        <div className=\"import-review-title\">\n            <h2>{language['preset.review-title.label']}</h2>\n            {language['preset.review-description']}\n        </div>\n        <table className=\"import-action-table\">\n            <tbody>\n                <tr className=\"import-action-row import-header-row\">\n                    <th className=\"header-row\">{language['preset.review-table.current.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.new.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.action.label']}</th>\n                </tr>\n                {nextNameStylePresetList.map(({ key, content }) => {\n                    const commonProps = { language, frameInfo };\n                    const currentContent = nameStylePresetMap[key]?.content;\n                    const verdict = decisionMap.nameStylePresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <PresetOption {...commonProps} presetContent={currentContent}>\n                                {currentContent.preset}\n                            </PresetOption>}\n                        </td>\n                        <td className=\"new-version\">\n                            <PresetOption {...commonProps} presetContent={content}>\n                                {content.preset}\n                            </PresetOption>\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n                {nextLayoutPresetList.map(({ key, content }) => {\n                    const commonProps = {\n                        width: Math.round(40 * width / height),\n                        height: 40,\n                        isPendulum,\n                        tabIndex: -1,\n                        language: language,\n                    };\n                    const currentContent = layoutPresetMap[key]?.content;\n                    const verdict = decisionMap.layoutPresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: currentContent.frame,\n                                    topLeftFrame: currentContent.leftFrame,\n                                    topRightFrame: currentContent.rightFrame,\n                                    bottomLeftFrame: currentContent.pendulumFrame,\n                                    bottomRightFrame: currentContent.pendulumRightFrame,\n                                    effectBackground: currentContent.effectStyle?.background,\n                                    pendulumEffectBackground: currentContent.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={currentContent.dyeList}\n                                foil={currentContent.foil}\n                                {...commonProps}\n                            />}\n                        </td>\n                        <td className=\"new-version\">\n                            <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: content.frame,\n                                    topLeftFrame: content.leftFrame,\n                                    topRightFrame: content.rightFrame,\n                                    bottomLeftFrame: content.pendulumFrame,\n                                    bottomRightFrame: content.pendulumRightFrame,\n                                    effectBackground: content.effectStyle?.background,\n                                    pendulumEffectBackground: content.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={content.dyeList}\n                                foil={content.foil}\n                                {...commonProps}\n                            />\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n            </tbody>\n        </table>\n    </PresetImportReviewModalContainer>;\n};\n\nconst PresetManagerContainer = styled(ManagerDrawer)`\n    .ant-drawer-body {\n        padding: var(--spacing);\n    }\n    .overlay-title {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        line-height: 1;\n    }\n    .name-style-preset-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: max-content max-content;\n        gap: var(--spacing-sm);\n    }\n    .layout-preset-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n        gap: var(--spacing-sm);\n    }\n    .action-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        column-gap: var(--spacing-sm);\n        .import-upload-input {\n            display: none;\n        }\n    }\n`;\n\nexport type PresetManager = {} & WithLanguage;\nexport const PresetManager = ({\n    language,\n}: PresetManager) => {\n    const {\n        setVisible,\n        visible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n    const {\n        frame,\n        isPendulum,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            isPendulum,\n        },\n    }) => ({\n        frame,\n        isPendulum,\n    })));\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const [importData, setImportData] = useState<{ visible: boolean } & Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>>({\n        visible: false,\n        layoutPresetList: [],\n        nameStylePresetList: [],\n    });\n    const frameInfo = FrameInfoMap[frame as keyof typeof FrameInfoMap];\n    const [inputKey, setInputKey] = useState(0);\n    const presetImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const directUploadId = 'preset-import-direct-upload';\n\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    try {\n                        const {\n                            layoutPresetList,\n                            nameStylePresetList,\n                        } = JSON.parse(result) as Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>;\n\n                        setImportData({\n                            visible: true,\n                            layoutPresetList,\n                            nameStylePresetList,\n                        });\n                    } catch (e) {\n                        console.error(e);\n                        notification.error({\n                            description: language['error.preset-import.description'],\n                            message: language['error.preset-import.message'],\n                        });\n                    }\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n        setInputKey(cur => cur + 1);\n    };\n\n    return <PresetManagerContainer\n        footer={null}\n        width={343}\n        visible={visible}\n        title={<div className=\"overlay-title\">\n            <span>{language['preset.manager.label']}</span>\n            <CloseOutlined\n                onClick={() => {\n                    setVisible(false);\n                }}\n            />\n        </div>}\n        onClose={() => {\n            setVisible(false);\n        }}\n    >\n        <div>\n            {language['preset.warning.label']}\n        </div>\n        <div className=\"action-list\">\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const data = JSON.stringify({\n                        layoutPresetList: layoutPresetList,\n                        nameStylePresetList: nameStylePresetList,\n                    });\n                    const blob = new Blob([data], { type: 'application/json' });\n                    downloadBlob(\n                        'preset.json',\n                        blob,\n                        'application/json',\n                    );\n                }}\n            >\n                {language['generic.export.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                {language['generic.import.label']}\n                <input key={`direct-file-input-${inputKey}`} ref={presetImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = presetImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                    }}\n                />\n            </Button>\n        </div>\n        <div className=\"name-style-preset-list\">\n            {nameStylePresetList.map(({ key, content }) => {\n                return <PresetOption key={key}\n                    language={language}\n                    frameInfo={frameInfo}\n                    presetContent={content}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                            await db.delete('presetNameStyleStore', key);\n                            await tx.done;\n                        }\n                        setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                    }}\n                >\n                    {content.preset}\n                </PresetOption>;\n            })}\n        </div>\n        <div className=\"layout-preset-list\">\n            {layoutPresetList.map(({ content, key }) => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                const layoutState = {\n                    frame,\n                    topLeftFrame: leftFrame,\n                    topRightFrame: rightFrame,\n                    bottomLeftFrame: pendulumFrame,\n                    bottomRightFrame: pendulumRightFrame,\n                    effectBackground: effectStyle?.background,\n                    pendulumEffectBackground: pendulumStyle?.background,\n                };\n\n                return <LayoutPresetOption key={key}\n                    width={Math.round(40 * width / height)}\n                    height={40}\n                    isPendulum={isPendulum}\n                    resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                    tabIndex={-1}\n                    dyeList={dyeList}\n                    foil={foil}\n                    language={language}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.delete('presetLayoutStore', key);\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                    }}\n                />;\n            })}\n        </div>\n        {importData.visible && <PresetImportReviewModal\n            onCancel={() => setImportData(cur => ({ ...cur, visible: false }))}\n            importData={importData}\n            frameInfo={frameInfo}\n            isPendulum={isPendulum}\n            language={language}\n        />}\n    </PresetManagerContainer>;\n};","import { GithubFilled, DatabaseFilled, AuditOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage, usePresetManager } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\nimport { PresetManager } from '../preset-manager';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n    const {\n        setVisible: setPresetManagerVisible,\n        visible: presetManagerVisible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"preset-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('preset-manager-button-label', presetManagerVisible ? 'preset-manager-active' : '')}\n                onClick={() => setPresetManagerVisible()}\n            >\n                <div className=\"button-label\">\n                    <AuditOutlined />\n                    <label>{language['preset.manager.label']}</label>\n                </div>\n            </StyledHeaderButtonContainer>\n            <PresetManager language={language} />\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']}&nbsp;&nbsp;<Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['generic.close.label']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import React from 'react';\nimport { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n    &:focus {\n        background-color: var(--main-level-3);\n    }\n    &:focus-visible {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    id,\n    tabIndex,\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n    onClick,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\n    id?: string,\n    tabIndex?: number,\n    className?: string,\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        id={id}\n        tabIndex={tabIndex}\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n        onClick={onClick}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useGlobal, useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport { DropZone } from '../atom';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nexport const CROPPER_WIDTH = 375;\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\n    if (typeof widthL === 'number' && typeof widthR === 'number' && Math.abs(widthL - widthR) > 0.01) return false;\n    if (typeof heightL === 'number' && typeof heightR === 'number' && Math.abs(heightL - heightR) > 0.01) return false;\n    if (typeof xL === 'number' && typeof xR === 'number' && Math.abs(xL - xR) > 0.01) return false;\n    if (typeof yL === 'number' && typeof yR === 'number' && Math.abs(yL - yR) > 0.01) return false;\n    if (typeof aspectL === 'number' && typeof aspectR === 'number' && Math.abs(aspectL - aspectR) > 0.01) return false;\n    if (unitL !== unitR) return false;\n    return true;\n};\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (fileList: FileList) => {\n        const targetFile = fileList[0];\n        if (!targetFile) return;\n        const maxFileSize = 4;\n\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\n            setLoading(true);\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                if (typeof reader.result === 'string') {\n                    setCrossOrigin('anonymous');\n                    setInternalSource(reader.result);\n                    setSourceType('offline');\n                    setInputMode('offline');\n                    onSourceChange('offline', reader.result);\n                    setLoading(false);\n                }\n            });\n            reader.readAsDataURL(targetFile);\n        } else {\n            onMaxSizeExceeded(maxFileSize);\n        }\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={mergeClass('card-image-cropper', className)}>\n            <div className=\"card-image-source-input\">\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    // setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Tooltip\n                                title={<div className=\"image-info\">\n                                    {language['image-cropper.online-tip']}\n                                </div>}\n                            >\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                    {language['image-cropper.source.online.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={e => {\n                                if (e.target.files && e.target.files.length > 0) {\n                                    applyOfflineSource(e.target.files);\n                                } else alert(language['image-cropper.not-found-warning']);\n                            }}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                    </div>\n                </div>\n                {children}\n            </div>\n            {beforeCropper}\n            <div\n                className={mergeClass('card-cropper')}\n                onKeyDown={() => {\n                    /** Nudge selection also count as user interaction */\n                    setInteracted(true);\n                }}\n            >\n                <DropZone\n                    $visible={activeDropzone > 0}\n                    className=\"drop-zone\"\n                    onDragOver={e => e.preventDefault()}\n                    onDrop={e => {\n                        e.preventDefault();\n                        setActiveDropzone(0);\n                        if (e.currentTarget.classList.contains('drop-zone')) {\n                            // const itemList = e.dataTransfer.items;\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\n                            // }\n                            const fileList = e.dataTransfer.files;\n                            applyOfflineSource(fileList);\n                        }\n                    }}\n                >\n                    <label>{language['image-cropper.drop.tooltip']}</label>\n                </DropZone>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        if (!receivingCanvas) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop || isLoading) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});","\nimport { Input } from 'antd';\nimport { useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        gap: 3px; // Alignment\n        padding-left: 3px; // Alignment\n        input {\n            width: 58px; // Alignment\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\n\nexport type InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nexport const InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};","import { Input } from 'antd';\nimport { CustomPicker, InjectedColorProps } from 'react-color';\nimport { Saturation } from 'react-color/lib/components/common';\nimport { UseColorPicker, useColorPicker } from 'src/service';\nimport { getContrastColor, rgbToHex } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { IconButton } from '../icon-button';\n\nconst SaturationBoardContainer = styled.div`\n    position: relative;\n    border-radius: var(--br);\n    > div,\n    .saturation-white,\n    .saturation-black {\n        border-radius: var(--br);\n    }\n`;\n\ntype UnlinkedSaturationBoard = InjectedColorProps;\nconst UnlinkedSaturationBoard = ({\n    onChange,\n    ...props\n}: UnlinkedSaturationBoard) => {\n    return <SaturationBoardContainer>\n        <Saturation\n            {...props}\n            onChange={color => {\n                onChange?.(color);\n            }}\n        />\n    </SaturationBoardContainer>;\n};\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\n\nconst HorizontalSketchColorList = [\n    { hex: '#B80000', rgb: [184, 0, 0] },\n    { hex: '#EB9694', rgb: [235, 150, 148] },\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\n    { hex: '#008B02', rgb: [0, 139, 2] },\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\n    { hex: '#006B76', rgb: [0, 107, 118] },\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\n    { hex: '#1273DE', rgb: [18, 115, 222] },\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\n    { hex: '#004DCF', rgb: [0, 77, 207] },\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\n    { hex: '#5300EB', rgb: [83, 0, 235] },\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\n];\n\nconst HorizontalSketchPickerContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 3.5rem 5rem 4rem max-content 1fr;\n    gap: var(--spacing-sm);\n    .color-input {\n        .color-state {\n            display: flex;\n            margin-bottom: var(--spacing-xs);\n        }\n        ${ColorBlock} {\n            display: inline-block;\n            flex: 1;\n            border: var(--bw) solid var(--sub-level-2);\n            height: 18px;\n        }\n    }\n    .color-list {\n        display: grid;\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\n        border-radius: var(--br);\n        overflow: hidden;\n        ${ColorBlock} {\n            height: 16px;\n            width: 16px;\n            box-shadow: none;\n            border-radius: 0;\n        }\n    }\n    .rgb-input {\n        display: grid;\n        grid-template-columns: 1rem 1fr;\n        column-gap: var(--spacing-xs);\n        font-size: var(--fs-sm);\n        input {\n            line-height: 1;\n            font-size: var(--fs-sm);\n        }\n        + .rgb-input {\n            margin-top: var(--spacing-xxs);\n        }\n    }\n`;\nexport type HorizontalSketchPicker = {\n    children?: React.ReactNode,\n} & UseColorPicker;\nexport const HorizontalSketchPicker = ({\n    children,\n    onChange,\n    value,\n}: HorizontalSketchPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n    const noColor = inputText === '';\n\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\n        <div className=\"input-label\">\n            {children}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-state\">\n                <ColorBlock\n                    $empty={noColor}\n                    style={noColor ? {} : { backgroundColor: color.hex }}\n                />\n                <IconButton\n                    size=\"sm\"\n                    Icon={CloseOutlined}\n                    onClick={() => {\n                        onChange?.('');\n                    }}\n                />\n            </div>\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n        <div className=\"rgb-input-list\">\n            {['R', 'G', 'B'].map((entry, index) => {\n                return <div key={entry} className=\"rgb-input\">\n                    <span>{entry}</span>\n                    <Input size=\"small\" value={noColor ? '' : color.rgb[index]} onChange={e => {\n                        const nextColor = [...color.rgb];\n                        nextColor[index] = parseInt(e.target.value);\n\n                        setColor(rgbToHex(nextColor));\n                    }} />\n                </div>;\n            })}\n        </div>\n        <div className=\"color-list\">\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\n    </HorizontalSketchPickerContainer>;\n};","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst LINK_MARKER_HALF_SIZE = 13;\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 1;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkerPicker = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkerPicker = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkerPicker) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        <ResolutionLabel width={width} height={height} warning={true} />\n                    </Popover>\n                    : <ResolutionLabel width={width} height={height} />}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './card-layout-preview';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './image-cropper';\nexport * from './inline-color-picker';\nexport * from './inline-sketch-picker';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './link-marker';\nexport * from './loading';\nexport * from './preset-manager';\nexport * from './preset-option';\nexport * from './setting';\nexport * from './setting-panel';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { Copiable, CopiableOverlayStyle, InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    ${CopiableOverlayStyle}\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    return <Copiable\n        disabled={disabled}\n        data={data}\n        container={StyledCardDataCopyButton}\n        overlay={withText\n            ? <>Copied&nbsp;<CheckOutlined /></>\n            : <CheckOutlined />}\n    >{children}</Copiable>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay export-modal\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={false}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['image-cropper.offline-warning']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={window.location.href}\n                                withText\n                            >\n                                <div className=\"icon\"><LinkOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.share-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['generic.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['generic.import.label']}\n            className=\"global-overlay import-modal\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['generic.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n    ExtraAttributeList,\n    RegionMap,\n    AUTO_FONT,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => [\n    { label: dictionary['input.name-style.type.auto.label'], value: AUTO_FONT },\n    ...Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n        label: dictionary[labelKey],\n        value,\n    })),\n];\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\n                />\n            </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                'Ø',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import styled from 'styled-components';\nimport { StyledDropdown } from 'src/component';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPresetContainer = styled(StyledDropdown.Container)`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm);\n    max-width: 507px; // Alignment\n    .preset-warning {\n        flex: 0 0 100%;\n        font-size: var(--fs-sm);\n    }\n    .panel-action {\n        flex: 0 0 100%;\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider, SingleSliderContainer } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <SingleSliderContainer className=\"single-slider\">\n                <span>{language['input.name-style.slider.x-offset.label']}:</span>\n                <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n                <span>{language['input.name-style.slider.y-offset.label']}:</span>\n                <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </SingleSliderContainer>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    width: 245px; // Exact same width with text color picker, for alignment\n    color: var(--color);\n    .emboss-control-title {\n        font-size: var(--fs-sm);\n        text-align: left;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate?: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span\n                key=\"color-navigate\"\n                className={!!onColorTabNavigate ? 'navigate-button' : ''}\n                onClick={onColorTabNavigate}\n            >\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color?: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Button, Checkbox, Empty, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton, StyledPatternOption, PresetOption } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPresetContainer,\n} from './style-picker.styled';\nimport { useCarderDb, useGlobal, useLanguage, usePresetManager, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport { v4 as uuid } from 'uuid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const { db } = useCarderDb();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const setVisible = usePresetManager(state => state.setVisible);\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && font !== 'Auto'}\n                            className=\"picker-dropdown font-picker-dropdown\"\n                        >\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <div className=\"save-preset-button-group\">\n                        <Button\n                            size=\"small\"\n                            className=\"picker-dropdown preset-picker-dropdown\"\n                            type=\"primary\"\n                            onClick={async () => {\n                                const key = uuid();\n                                if (db) {\n                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                    await tx.done;\n                                }\n                                setNameStylePresetList(cur => {\n                                    return [\n                                        ...cur,\n                                        {\n                                            key,\n                                            content: { ...value },\n                                        }\n                                    ];\n                                });\n                            }}\n                        >\n                            {language['input.name-style.preset.label']}\n                        </Button>\n                        <Popover key=\"preset-picker\"\n                            trigger={['click']}\n                            overlayClassName=\"global-input-overlay global-style-picker-overlay low-index\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <StyledPresetContainer onClick={e => e.stopPropagation()}>\n                                    {nameStylePresetList.length > 0 && <div className=\"preset-warning\">\n                                        {language['preset.warning.label']}\n                                        &nbsp;\n                                        <span className=\"open-preset-manager\"\n                                            onClick={() => setVisible(true)}\n                                        >{language['preset.manager.check.label']}</span>\n                                    </div>}\n                                    {nameStylePresetList.length === 0 && <Empty\n                                        description={language['generic.empty.label']}\n                                    />}\n                                    {nameStylePresetList.map(({ key, content }) => {\n                                        return <PresetOption key={key}\n                                            language={language}\n                                            frameInfo={frameInfo}\n                                            presetContent={content}\n                                            onActive={() => {\n                                                setValue({ ...content });\n                                                requestUpdateCustomStyle();\n                                            }}\n                                            onOverwrite={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => {\n                                                    return cur.map(entry => {\n                                                        if (entry.key === key) return {\n                                                            key,\n                                                            content: { ...value },\n                                                        };\n                                                        return entry;\n                                                    });\n                                                });\n                                            }}\n                                            onDelete={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.delete('presetNameStyleStore', key);\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                                            }}\n                                        >\n                                            {content.preset}\n                                        </PresetOption>;\n                                    })}\n                                </StyledPresetContainer>\n                            </div>}\n                            placement=\"bottomRight\"\n                        >\n                            <div className=\"custom-preset-button\">\n                                <CaretDownOutlined />\n                            </div>\n                        </Popover>\n                    </div>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrainRef = {\n    changeFrame: (frameValue: number | string) => void,\n};\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\n};\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}, ref) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n                linkRating,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            onStatChange(nextAtk, nextDef, nextLinkRating);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n                linkRating: nextLinkRating,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    useImperativeHandle(ref, () => ({\n        changeFrame,\n    }));\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n});","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: var(--cropper-width);\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .art-frame {\n        span {\n            padding: 0;\n        }\n    }\n    div.ant-slider {\n        .ant-slider-handle {\n            height: 19px;\n            top: 8px;\n            border-radius: 0;\n            width: 10px;\n        }\n        .ant-slider-step,\n        .ant-slider-track,\n        .ant-slider-rail {\n            height: 10px;\n        }\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        .ant-slider {\n            padding-top: 8px;\n        }\n    }\n    .background-label {\n        cursor: pointer;\n        &:hover {\n            .background-preview {\n                box-shadow: 0 0 2px 0 #2a2a2a;\n            }\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        text-align: center;\n        user-select: none;\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .layout-picker-panel {\n            margin-top: var(--spacing);\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <SolidLabel className=\"background-label\">\n                <Checkbox\n                    className=\"art-frame\"\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                    checked={opacity.boundless}\n                >\n                    &nbsp;{language['input.opacity.boundless.label']}\n                </Checkbox>\n            </SolidLabel>\n        </Tooltip>\n        <Popover\n            visible={backgroundInputVisible}\n            destroyTooltipOnHide={false}\n            trigger={['click']}\n            onVisibleChange={setBackgroundInputVisible}\n            overlayClassName={[\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                backgroundInputVisible ? 'picker-visible' : '',\n                backgroundInputHidden ? 'picker-hidden' : '',\n            ].join(' ')}\n            content={<div className=\"overlay-event-absorber\">\n                <StyledBaseFillPickerContainer\n                    className={[\n                        'custom-style-picker',\n                        noBackground ? 'overlay-no-background-image' : ''\n                    ].join(' ')}\n                >\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                        <Checkbox\n                            checked={hasBackground}\n                            onChange={e => {\n                                changeHasBackground(e);\n                            }}\n                        >{language['input.background.toggle-label']}</Checkbox>\n                        <br />\n                        <i>{language['input.background.description']}</i>\n                    </h3>\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                        <BackgroundInputGroup\n                            ref={backgroundInputRef}\n                            receivingCanvas={receivingCanvas}\n                            onSourceLoaded={onSourceLoaded}\n                            onTainted={onTainted}\n                            onCropChange={onCropChange}\n                            backgroundColor={opacity.baseFill}\n                        >\n                            <div className=\"layout-picker-panel\">\n                                <div className=\"layout-picker-subpanel color-section\">\n                                    <h2>{language['input.background-color.label']}</h2>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={opacity.baseFill}\n                                        onChangeComplete={color => {\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                        }}\n                                    />\n                                </div>\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                    <h2>{language['input.background-type.label']}</h2>\n                                    <RadioTrain\n                                        className=\"background-type-picker\"\n                                        onChange={changeBackgroundType}\n                                        optionList={getBackgroundTypeList({\n                                            fit: language['input.background-type.fit.label'],\n                                            full: language['input.background-type.full.label'],\n                                            frame: language['input.background-type.frame.label'],\n                                        })}\n                                        value={backgroundType}\n                                    />\n                                </div>}\n                            </div>\n                        </BackgroundInputGroup>\n                    </div>\n                </StyledBaseFillPickerContainer>\n            </div>}\n            placement=\"bottom\"\n        >\n            <SolidLabel className=\"background-label\">\n                <div\n                    className=\"background-preview\"\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                >\n                    {hasBackground\n                        ? background || backgroundData\n                            ? <img\n                                className=\"background-image-preview\"\n                                src={backgroundSource === 'online'\n                                    ? background\n                                    : backgroundData}\n                                alt=\"Background\"\n                            />\n                            : null\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                </div>\n                {language['input.background.label']}\n            </SolidLabel>\n        </Popover>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <SolidLabel className=\"slider-label\">\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </SolidLabel>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { IconButton, RadioTrain } from 'src/component';\nimport { useCard, useSetting, WithLanguage } from 'src/service';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { useMemo } from 'react';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getAttributeList, getExtraAttributeList } from '../const';\nimport { RegionMap } from 'src/model';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\n\nconst AttributeRegionTrain = styled.div`\n    align-self: flex-end;\n    position: relative;\n    min-height: 6px; // Alignment\n    .attribute-region-picker {\n        position: absolute;\n        right: 0;\n        top: calc(var(--spacing-xxs) * -1);\n        z-index: 1;\n    }\n    &.container-block .attribute-region-picker {\n        position: relative;\n        right: 0;\n        top: 0;\n    }\n    .ant-radio-button-wrapper {\n        font-size: var(--fs-sm);\n        height: unset;\n        line-height: 1.25;\n    }\n`;\n\nexport type AttributeInputGroup = {\n} & WithLanguage;\nexport const AttributeInputGroup = ({\n    language,\n}: AttributeInputGroup) => {\n    const {\n        format,\n        region,\n        attribute,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            region,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n    }) => ({\n        format,\n        region,\n        isLink,\n        attribute,\n        getUpdater,\n    })));\n    const { setting, updateSetting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\n\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\n\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    return <>\n        <RadioTrain\n            className=\"fill-input-train span-input-train attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={attributeList}\n            suffix={!showExtraAttribute && showExtraDecorativeOption\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\n                    Icon={DoubleRightOutlined}\n                    tooltipProps={{ overlay: language['button.more.label'] }}\n                />\n                : null}\n        >\n            <span>{language['input.attribute.label']}</span>\n        </RadioTrain>\n        {showExtraDecorativeOption && <AttributeRegionTrain\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\n        >\n            <RadioTrain\n                className=\"attribute-region-picker\"\n                optionList={Object\n                    .values(RegionMap)\n                    .map(({ key }) => ({\n                        value: key,\n                        label: key.toUpperCase(),\n                    }))\n                }\n                value={region}\n                onChange={changeRegion}\n            />\n        </AttributeRegionTrain>}\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\n            className=\"fill-input-train extra-attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={extraAttributeList}\n            suffix={showExtraDecorativeOption && showExtraAttribute\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\n                    Icon={DoubleLeftOutlined}\n                    tooltipProps={{ overlay: language['button.less.label'] }}\n                />\n                : null}\n        >\n            &nbsp;\n        </RadioTrain>}\n    </>;\n};","import { Button, Checkbox, Modal } from 'antd';\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\nimport {\n    IconTypeAttributeList,\n    IconTypeInfo,\n    IconTypeList,\n    IconTypeStList,\n    MAX_STAR_LENGTH,\n    NORMAL_STAR_LENGTH,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { StyledDropdown } from 'src/component';\nimport { mergeClass, padRight } from 'src/util';\n\nconst IconDropdownOverlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--br-lg);\n    cursor: not-allowed;\n`;\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\n    .anticon-close-circle {\n        font-size: var(--fs-lg);\n    }\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nexport const IconDropdownContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: var(--spacing-px);\n    background-color: var(--sub-level-1);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    overflow: hidden;\n    position: relative;\n    .container-group {\n        box-shadow: none;\n        border: none;\n        border-radius: 0;\n    }\n    &.selector-disabled {\n        filter: opacity(0.65) grayscale(0.85);\n    }\n`;\nexport type StarTypeSelector = {\n    disabled?: boolean,\n    className?: string,\n    activeCardIcon: string,\n    onChange: (value: string) => void,\n    onRemove?: () => void,\n    showMixableOnly?: boolean,\n    showRemove?: boolean,\n} & WithLanguage;\nexport const StarTypeSelector = ({\n    disabled = false,\n    className,\n    language,\n    activeCardIcon,\n    showMixableOnly = false,\n    showRemove = false,\n    onChange,\n    onRemove,\n}: StarTypeSelector) => {\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\n\n    return <IconDropdownContainer\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\n    >\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\n        <StyledIconDropdown className=\"container-group container-star\">\n            {showRemove && <StyledDropdown.Option\n                onClick={() => onRemove?.()}\n            >\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\n            </StyledDropdown.Option>}\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-attribute\">\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-icon\">\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n    </IconDropdownContainer>;\n};\n\nconst StarListSelectPanel = styled.div`\n    margin-bottom: var(--spacing);\n`;\nconst StarListControlPanel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: var(--spacing);\n`;\nconst StarListContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(13, 2rem);\n    gap: var(--spacing-xs);\n    align-items: center;\n    text-align: center;\n    margin-bottom: var(--spacing-sm);\n    line-height: 0;\n    .star-value {\n        display: inline-flex;\n        height: 2rem;\n        width: 2rem;;\n        align-items: center;\n        justify-content: center;\n        background-color: var(--main-level-1);\n        border-radius: var(--br-lg);\n        margin-top: var(--spacing-xs);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .anticon-close-circle {\n            font-size: var(--fs-lg)\n        }\n    }\n    .icon-image {\n        max-width: 1.5rem; // Alignment\n        max-height: 1.5rem;; // Alignment\n    }\n    .entry-active {\n        .star-value {\n            border-color: var(--main-active);\n        }\n    }\n    .entry-disable {\n        filter: opacity(0.65) grayscale(0.85);\n        * {\n            cursor: not-allowed;\n        }\n    }\n    :not(.entry-disable) .star-value:hover {\n        border-color: var(--sub-active);\n    }\n`;\n\nexport type StarPickerRef = {\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\n};\nexport type StarPicker = {\n\n} & WithLanguage;\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\n    language,\n}, ref) => {\n    const {\n        starList,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            starList,\n        },\n        setCard,\n    }) => ({\n        starList,\n        setCard,\n    })));\n    const [visible, setVisible] = useState(false);\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\n        setCard(card => {\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\n\n            return {\n                ...card,\n                starList: nextStarList,\n            };\n        });\n    }, [setCard]);\n    const [{\n        slotList,\n        use12,\n    }, setSlot] = useState(() => {\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\n        }\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\n\n        return {\n            slotList,\n            use12,\n        };\n    });\n    const [activeInformation, setActiveInformation] = useState({\n        activeList: [] as number[],\n    });\n\n    useImperativeHandle(ref, () => ({\n        changeStatus: status => {\n            if (status === 'open') {\n                setVisible(true);\n            } else if (status === 'close') {\n                setVisible(false);\n            } else if (status === 'toggle') {\n                setVisible(cur => !cur);\n            }\n            setActiveInformation({ activeList: [] });\n        }\n    }));\n\n    const {\n        activeList\n    } = activeInformation;\n    return <Modal\n        className=\"global-overlay global-no-close\"\n        visible={visible}\n        width={506}\n        onCancel={() => setVisible(false)}\n        cancelText={language['manager.template.button.cancel.label']}\n        okButtonProps={{\n            style: { display: 'none' },\n        }}\n    >\n        <StarListSelectPanel className=\"star-list-control-panel\">\n            <Checkbox\n                checked={use12}\n                onChange={e => {\n                    if (e.target.checked) {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: true };\n                        });\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\n                    } else {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: false };\n                        });\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\n                    }\n                }}\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation(cur => {\n                    const nextActiveList = slotList\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\n                        .map(entry => entry.index);\n\n                    return { activeList: nextActiveList };\n                });\n            }}>\n                {language['input.icon-type.slot.revert.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\n            }}>\n                {language['input.icon-type.slot.select-all.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: [] });\n            }}>\n                {language['input.icon-type.slot.deselect-all.label']}\n            </Button>\n        </StarListSelectPanel>\n        <StarListContainer className=\"star-list-container\">\n            {slotList.map(({ slot, index, disabled }) => {\n                const slotValue = starList[index];\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\n                const active = activeList.includes(index);\n\n                return <div key={slot}\n                    className={mergeClass(\n                        'star-list-entry',\n                        active ? 'entry-active' : '',\n                        disabled ? 'entry-disable' : '',\n                    )}\n                >\n                    <div className=\"checkbox-container\">\n                        <Checkbox\n                            disabled={disabled}\n                            checked={active}\n                            onChange={e => {\n                                if (disabled) return;\n                                const willChecked = e.target.checked;\n                                if (willChecked) {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = [...cur.activeList, index];\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                } else {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                }\n                            }}\n                        />\n                    </div>\n                    <div\n                        className=\"star-value\"\n                        onClick={() => {\n                            if (disabled) return;\n                            setActiveInformation({ activeList: [index] });\n                        }}\n                    >\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\n                    </div>\n                </div>;\n            })}\n        </StarListContainer>\n        <StarListControlPanel>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\n            </Button>\n        </StarListControlPanel>\n        <StarTypeSelector\n            disabled={activeList.length === 0}\n            language={language}\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\n            showMixableOnly={true}\n            showRemove={true}\n            onRemove={() => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return '';\n                        return currentStarList[index];\n                    });\n                });\n            }}\n            onChange={value => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return value;\n                        return currentStarList[index];\n                    });\n                });\n            }}\n        />\n    </Modal>;\n});","import { Button, Input, Popover } from 'antd';\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\n\nconst TypeWithIconContainer = styled.div`\n    .icon-image {\n        width: 26px;\n        height: 26px;\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\n    margin-left: var(--spacing-sm);\n`;\nconst CustomStarContainer = styled.div`\n    display: flex;\n    align-items: center;\n    .custom-star-preview {\n        display: inline-flex;\n        line-height: 0;\n        align-items: center;\n        background-color: var(--main-level-1);\n        padding: var(--spacing-xs);\n        border-radius: var(--br);\n        .star-preview-entry {\n            margin-right: var(--spacing-xs);\n            .icon-image {\n                max-width: 22px; // Alignment\n                max-height: 22px; // Alignment\n            }\n            .anticon-close-circle {\n                font-size: var(--fs-xl);\n            }\n            &:last-child {\n                margin-right: 0;\n            }\n        }\n    }\n    .custom-star-content {\n        display: inline-flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: var(--spacing-sm);\n        margin-right: var(--spacing-sm);\n    }\n`;\n\ntype CardIconAlignmentPicker = {\n    value: string,\n    onChange: (value: string) => void,\n} & WithLanguage;\nconst CardIconAlignmentPicker = ({\n    language,\n    value,\n    onChange,\n}: CardIconAlignmentPicker) => {\n    return <RadioTrain\n        value={value}\n        onChange={onChange}\n        optionList={[\n            {\n                value: 'auto',\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                label: <CloseCircleOutlined />,\n            },\n            {\n                value: 'left',\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                label: <AlignLeftOutlined />,\n            },\n            {\n                value: 'center',\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                label: <AlignCenterOutlined />,\n            },\n            {\n                value: 'right',\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                label: <AlignRightOutlined />,\n            },\n        ]}\n    />;\n};\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starList,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    })));\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n    const starPickerRef = useRef<StarPickerRef>(null);\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : TotalIconTypeMap[cardIcon];\n    const {\n        labelKey,\n        icon,\n        showIcon,\n        value: iconType,\n    } = iconTypeData ?? TotalIconTypeMap['level'];\n    const iconDropdownText = typeof labelKey === 'string'\n        ? language[labelKey]\n        : labelKey({ language });\n    const IconDropdownLabel = showCreativeOption\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay\"\n        content={<StarTypeSelector\n            language={language}\n            activeCardIcon={cardIcon}\n            onChange={value => {\n                changeCardIcon(value);\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\n            }}\n        />}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return <>\n        <StarPicker ref={starPickerRef} language={language} />\n        {cardIcon === 'auto' && autoIconType === 'none'\n            ? showCreativeOption\n                ? <>\n                    <RadioTrain\n                        className=\"fill-input-train\"\n                        value={cardIcon}\n                        onChange={changeCardIcon}\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                            return {\n                                label: icon ?? <CloseCircleOutlined />,\n                                value,\n                                tooltipProps: {\n                                    title: language[fullLabelKey],\n                                },\n                            };\n                        })}\n                    >\n                        {DropdownChildren}\n                    </RadioTrain>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-attribute\">\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.label']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-icon\">\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <PopoverButtonInCardIconInput\n                        $softMode={reduceColorMotion}\n                        className={showCreativeOption ? '' : 'disabled'}\n                        onClick={() => {\n                            changeCardIcon('custom');\n                            starPickerRef.current?.changeStatus('open');\n                        }}\n                    >\n                        {language['input.icon-type.custom.label']}\n                    </PopoverButtonInCardIconInput>\n                </>\n                : null\n            : iconType === 'st'\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                    {DropdownChildren}\n                </RadioTrain>\n                : iconType === 'custom'\n                    ? <CustomStarContainer className=\"custom-star-picker\">\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\n                        <div className=\"custom-star-content\">\n                            {starList.length > 0\n                                ? <div className=\"custom-star-preview\">\n                                    {starList.map((entry, index) => {\n                                        const iconEntry = TotalIconTypeMap[entry];\n\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\n                                        </span>;\n                                    })}\n                                </div>\n                                : null}\n                            <Button\n                                size=\"small\" \n                                onClick={() => {\n                                    changeCardIcon('custom');\n                                    starPickerRef.current?.changeStatus('open');\n                                }}\n                            >{language['generic.edit.label']}</Button>\n                        </div>\n                    </CustomStarContainer>\n                    : <StyledCheckboxStarTrain\n                        className=\"checkbox-star-train\"\n                        value={star}\n                        onChange={changeStar}\n                        optionList={StarButtonList}\n                        strict={true}\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                            <Input\n                                className=\"custom-star-input\"\n                                value={typeof star === 'number' ? '' : star}\n                                allowClear\n                                onChange={changeStar}\n                                placeholder={language['input.icon-type.custom.placeholder']}\n                            />\n                            <CardIconAlignmentPicker\n                                language={language}\n                                value={starAlignment}\n                                onChange={changeStarAlignment}\n                            />\n                        </div>}\n                    >\n                        {DropdownChildren}\n                    </StyledCheckboxStarTrain>}\n    </>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    position: relative;\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 480px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .radio-train.foil-radio {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-px); // Alignment\n        .ant-radio-button-wrapper {\n            font-size: var(--fs);\n        }\n        .standalone-addon {\n            border: none;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .radio-train-input-group {\n            gap: 0;\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .inline-input {\n        margin-bottom: var(--spacing-xs);\n    }\n    .checkbox-disabled {\n        .ant-checkbox {\n            display: none;\n        }\n        visibility: hidden; // Avoid collapsing\n    }\n    .frame-part-name {\n        position: absolute;\n        padding: 0 var(--spacing);\n        top: calc(-1 * var(--spacing-sm));\n        right: calc(-1 * var(--spacing-sm));\n        border-radius: 0 0 0 var(--br-lg);\n        background-color: var(--main-level-4);\n        border-left: var(--bw) solid var(--sub-level-4);\n        border-bottom: var(--bw) solid var(--sub-level-4);\n        &:empty {\n            display: none;\n        }\n    }\n    .horizontal-sketch-picker {\n        margin-top: var(--spacing);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\nimport { copyrightMap, FlagIndexMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\n    .auto-link-rating-input {\n        margin-left: var(--spacing-sm);\n    }\n    .auto-link-rating {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        line-height: 1;\n        text-align: center;\n        padding: var(--spacing-xs);\n        background: var(--main-level-4);\n        border-radius: var(--br-lg);\n        font-family: 'RoGSanSrfStd-Bd';\n        box-shadow: var(--bs-button);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isLink,\n        linkRating,\n        autoLinkRating,\n        showDefAndLink,\n        linkRatingDisplayMode,\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\n        getUpdater,\n    }) => ({\n        linkRating,\n        autoLinkRating: linkMap.length,\n        isLink,\n        sticker,\n        format,\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\n\n    const showAtkInput = true;\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\n    const showDefInput = showLinkInput\n        ? showDefAndLink\n        : true;\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def, linkRating }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            {showAtkInput && <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />}\n            {showDefInput && <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />}\n            {showPadding && <div />}\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\n                id=\"link\"\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\n                    <div className=\"input-label\">{language['input.link.label']}</div>\n                    <Tooltip title={language['input.link.auto.tooltip']}>\n                        <div className=\"auto-link-rating-input\">\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\n                                ? <Checkbox\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            changeLinkRating('');\n                                            linkRatingInputRef.current.setValue('');\n                                        }\n                                    }}\n                                />\n                                : <div className=\"auto-link-rating\">\n                                    {isLink ? autoLinkRating : '-'}\n                                </div>}\n                        </div>\n                    </Tooltip>\n                </StyledLinkRatingInputContainer>}\n                defaultValue={`${useCard.getState().card.linkRating}`}\n                onChange={changeLinkRating}\n                onTakePicker={onTakePicker}\n                placeholder={language['input.link.custom.placeholder']}\n            />}\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                        <IconButton\n                            onClick={() => {}}\n                            Icon={UnorderedListOutlined}\n                        />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport {\n    ImageCropper,\n    ImageCropperRef,\n    LINK_MARKER_PICKER_WIDTH,\n    LinkMarkerPicker,\n    RadioTrain,\n    StyledDropdown,\n    StyledDropdownLabel,\n} from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\n    position: relative;\n    ${({ $hover }) => $hover\n        ? `\n            .link-marker-picker {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n        `\n        : ''}\n`;\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    text-align: left;\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group {\n        flex: 1;\n    }\n    .ant-radio-button-wrapper {\n        padding: 0 var(--spacing-xs);\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [art: string, ...OtherFinish],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    /** Be careful, we use added order here, so latest finish target is highest index. */\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\n        </>\n        : <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\n        </>;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[artFinish, ...otherFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                        finishMap[OtherFinishTypeMap['background'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <LinkPickerContainer\n            className=\"link-picker-container\"\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\n            $hover={showExtraDecorativeOption}\n        >\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </LinkPickerContainer>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { GlobalMemory, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { CanvasConst } from 'src/model';\nimport { resolveFrameStyle } from 'src/util';\nimport { LayoutPresetOption } from 'src/component';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst FramePresetPanelContainer = styled.div`\n    margin-top: var(--spacing-sm);\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n    row-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    color: var(--color);\n    .preset-panel-top {\n        grid-column: -1 / 1;\n    }\n    .preset-warning {\n        font-size: var(--fs-sm);\n    }\n    .preview-container {\n        line-height: 0;\n        padding: var(--spacing-xxs) 0;\n        border-radius: var(--br);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .card-layout-container {\n            pointer-events: none;\n        }\n        &:hover {\n            border-color: var(--main-active);\n        }\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport type FramePresetPanel = WithLanguage & {\n    isPendulum: boolean,\n    onOverwrite?: (key: string) => Promise<void>,\n    onActive: (content: GlobalMemory['layoutPresetList'][0]['content']) => void,\n};\nexport const FramePresetPanel = ({\n    isPendulum,\n    onOverwrite,\n    onActive,\n    language,\n}: FramePresetPanel) => {\n    const { db } = useCarderDb();\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const setVisible = usePresetManager(state => state.setVisible);\n\n    if (layoutPresetList.length === 0) return <></>;\n    return <FramePresetPanelContainer className=\"frame-preset-panel\">\n        {layoutPresetList.length > 0 && <div className=\"preset-panel-top\">\n            <div className=\"preset-warning\">\n                {language['preset.warning.label']}\n                &nbsp;\n                <span className=\"open-preset-manager\" onClick={() => setVisible(true)}>{language['preset.manager.check.label']}</span>\n            </div>\n        </div>}\n        {layoutPresetList.map(({ content, key }) => {\n            const {\n                dyeList,\n                foil,\n                frame,\n                pendulumFrame,\n                leftFrame,\n                pendulumRightFrame,\n                rightFrame,\n                effectStyle,\n                pendulumStyle,\n            } = content;\n            const layoutState = {\n                frame,\n                topLeftFrame: leftFrame,\n                topRightFrame: rightFrame,\n                bottomLeftFrame: pendulumFrame,\n                bottomRightFrame: pendulumRightFrame,\n                effectBackground: effectStyle?.background,\n                pendulumEffectBackground: pendulumStyle?.background,\n            };\n\n            return <LayoutPresetOption\n                width={Math.round(40 * width / height)}\n                height={40}\n                isPendulum={isPendulum}\n                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                tabIndex={-1}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                onActive={() => onActive(content)}\n                onDelete={async () => {\n                    if (db) {\n                        const tx = db.transaction('presetLayoutStore', 'readwrite');\n                        await db.delete('presetLayoutStore', key);\n                        await tx.done;\n                    }\n                    setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                }}\n                onOverwrite={onOverwrite ? (() => onOverwrite?.(key)) : undefined}\n            />;\n        })}\n    </FramePresetPanelContainer>;\n};","import { Checkbox } from 'antd';\nimport { RadioTrain } from 'src/component';\nimport {\n    CardFlag,\n    FlagInfoList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n} from 'src/model';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst FrameBehaviorSettingPanelContainer = styled.div`\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border-top: var(--bw) solid var(--sub-level-3);\n    > * + * {\n        margin-top: var(--spacing-sm);\n    }\n    .link-rating-behavior-panel {\n        .radio-train-input-group {\n            flex: 0 0 auto;\n            margin-right: var(--spacing-sm);\n        }\n        label {\n            flex: 1 1 auto;\n            text-align: left;\n            font-size: var(--fs);\n            color: var(--color);\n        }\n    }\n`;\n\nexport type FrameBehaviorSettingPanel = {};\nexport const FrameBehaviorSettingPanel = () => {\n    const language = useLanguage();\n    const {\n        flag,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        flag,\n        setCard,\n        getUpdater,\n    })));\n\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\n        const nextFlagList: CardFlag = [...currentCard.flag];\n        nextFlagList[index] = value;\n\n        return {\n            ...currentCard,\n            flag: nextFlagList,\n        };\n    });\n\n    return <FrameBehaviorSettingPanelContainer>\n        {flag.map((entry, index) => {\n            const { labelKey, type } = FlagInfoList[index] ?? {};\n\n            if (type === 'checkbox') {\n                return <div key={labelKey}>\n                    <Checkbox\n                        checked={entry !== 0}\n                        onChange={e => {\n                            const value = e.target.checked ? 1 : 0;\n\n                            updateFlag(value, index);\n                        }}\n                    >{language[labelKey]}</Checkbox>\n                </div>;\n            }\n            if (type === 'link-rating-behavior') {\n                return <RadioTrain key={labelKey}\n                    className=\"link-rating-behavior-panel\"\n                    onChange={(value) => updateFlag(Number(value), index)}\n                    optionList={[\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\n                    ]}\n                    value={entry}\n                    suffix={<label>\n                        {language[labelKey]}\n                    </label>}\n                />;\n            }\n            return null;\n        })}\n    </FrameBehaviorSettingPanelContainer>;\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FramePreset, useCard, useCarderDb, useGlobal, useLanguage } from 'src/service';\nimport { getFoilButtonList, getFrameButtonList } from '../const';\nimport { Button, Checkbox } from 'antd';\nimport { CardLayoutPreview, FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\nimport styled from 'styled-components';\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\nimport { FramePresetPanel } from './frame-preset-panel';\nimport { v4 as uuid } from 'uuid';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\nconst FrameLayoutContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    column-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    ${StyledPendulumFrameContainer} {\n        border: none;\n        box-shadow: none;\n        padding: 0;\n    }\n    .visual-preview-container {\n        color: var(--color-heavy);\n        width: 110px; // Alignment\n        text-align: center;\n        label {\n            display: block;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .frame-info-block {\n\t\t\theight: 30px; // Alignment\n\t\t\tline-height: 28px; // Alignment with border 1px\n            border: var(--bw) solid var(--sub-level-1);\n            background-color: var(--main-level-1);\n            margin-bottom: var(--spacing-xs);\n            cursor: pointer;\n            .frame-info-block-label {\n                padding: 0 var(--spacing-xs);\n            }\n            &.active {\n                border: var(--bw) dashed var(--main-level-2);\n            }\n            &:hover {\n                border: var(--bw) solid var(--main-level-2);\n            }\n        }\n    }\n    .frame-action {\n        .ant-btn {\n            width: 100%;\n            & + .ant-btn {\n                margin-top: var(--spacing-xs);\n            }\n        }\n    }\n    .frame-preset-panel {\n        grid-column: -1 / 1;\n        padding-top: var(--spacing-sm);\n        border-top: var(--bw) solid var(--sub-level-3);\n    }\n`;\n\ntype FramelayoutSettingPanelRef = {\n    focus: () => void,\n};\nexport type FramelayoutSettingPanel = {\n    isPendulum: boolean,\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onFrameChange: (frame: string) => void,\n    onCancel: () => void,\n};\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\n    frameList,\n    onFrameChange,\n    onCancel,\n}, ref) => {\n    const { db } = useCarderDb();\n    const language = useLanguage();\n    const {\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        dyeList,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            foil,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            dyeList,\n            effectStyle,\n            pendulumStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        setCard,\n        getUpdater,\n    })));\n    const [, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const recentCustomPendulumFrame = useRef({\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n    });\n    const [focus, setFocus] = useState(0);\n    const [activeLayout, setActiveLayout] = useState('frame');\n    const frameLayoutMainId = 'frame-layout-main';\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    useEffect(() => {\n        /** Avoid confusion */\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\n    }, [activeLayout, isPendulum]);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\n    }));\n\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\n        const nextEffectStyle = { ...currentCard.effectStyle };\n        nextEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            effectStyle: nextEffectStyle,\n        };\n    });\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\n        nextPendulumEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            pendulumStyle: nextPendulumEffectStyle,\n        };\n    });\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\n        const position = DyeIndexMap[name];\n\n        if (typeof position !== 'number') return currentCard;\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\n        nextDyeList[position] = color;\n\n        return {\n            ...currentCard,\n            dyeList: nextDyeList,\n        };\n    });\n    const changeLayout = (layoutValue: string) => {\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\n    };\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const activeFrame = layoutState[activeLayout];\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\n    const dyeColor = DyeIndexMap[activeLayout];\n    return <FrameLayoutContainer>\n        <div className=\"visual-preview-container\">\n            <label>{language['input.advanced-frame.main.label']}</label>\n            <FrameInfoBlock\n                id={frameLayoutMainId}\n                tabIndex={0}\n                className={activeLayout === 'frame' ? 'active' : ''}\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\n                onClick={() => setActiveLayout('frame')}\n            />\n            <label>{language['input.advanced-frame.detailed.label']}</label>\n            <CardLayoutPreview\n                width={Math.round(width / 20) * 2}\n                height={Math.round(height / 20) * 2}\n                isPendulum={isPendulum}\n                baseLayoutState={layoutState}\n                resolvedLayoutState={resolvedLayoutStyle}\n                activeLayout={activeLayout}\n                onLayoutSelect={key => setActiveLayout(key)}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                vertical={true}\n            />\n            <div className=\"frame-action\">\n                <Button\n                    size=\"small\"\n                    onClick={() => {\n                        changeBottomLeftFrame('auto');\n                        changeBottomRightFrame('auto');\n                        changeTopLeftFrame('auto');\n                        changeTopRightFrame('auto');\n                        changeEffectBackground('auto');\n                        changePendulumEffectBackground('auto');\n                        changeFoil('normal');\n                        changeDyeList(getDefaultDyeList());\n                    }}\n                >\n                    {language['generic.reset.label']}\n                </Button>\n                <Button\n                    size=\"small\"\n                    type=\"primary\"\n                    onClick={async () => {\n                        const key = uuid();\n                        const value: FramePreset = {\n                            foil,\n                            frame,\n                            leftFrame,\n                            pendulumFrame,\n                            pendulumRightFrame,\n                            rightFrame,\n                            effectStyle: { background: effectBackground },\n                            pendulumStyle: { background: pendulumEffectBackground },\n                            dyeList: [...dyeList],\n                        };\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => [\n                            ...cur,\n                            {\n                                key,\n                                content: value,\n                            },\n                        ]);\n                    }}\n                >\n                    {language['input.advanced-frame.save.label']}\n                </Button>\n            </div>\n        </div>\n        <div>\n            <StyledPendulumFrameContainer\n                className=\"pendulum-frame-picker\"\n                {...getNavigationProps({\n                    stopPropagation: true,\n                    optionLength: frameList.length,\n                    setFocus,\n                    onTrigger: () => {\n                        if (focus >= 0) changeLayout(frameList[focus].value);\n                    },\n                    onCancel,\n                })}\n            >\n                <div className=\"frame-part-name\">\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\n                </div>\n                {/** Avoid collapsing in case of frame */}\n                {activeLayout !== 'foil' && <Checkbox\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\n                    checked={activeFrame === 'auto'}\n                    disabled={activeLayout === 'frame'}\n                    onChange={e => {\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\n                    }}\n                >{language['input.frame.auto']}</Checkbox>}\n                {activeLayout === 'foil'\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                        <span>{language['input.foil.label']}</span>\n                    </RadioTrain>\n                    : <RadioTrain\n                        className=\"frame-radio\"\n                        value={activeFrame}\n                        onChange={value => {\n                            if (activeLayout === 'frame') onFrameChange(value);\n                            else changeLayout(value);\n                        }}\n                        optionList={frameList}\n                    />}\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\n                    value={dyeList[dyeColor]}\n                    onChange={color => {\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\n                    }}\n                >\n                    {language['input.advanced-frame.dye']}\n                </HorizontalSketchPicker>}\n            </StyledPendulumFrameContainer>\n        </div>\n        <FramePresetPanel\n            language={language}\n            isPendulum={isPendulum}\n            onOverwrite={async key => {\n                const value: FramePreset = {\n                    foil,\n                    frame,\n                    leftFrame,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle: { background: effectBackground },\n                    pendulumStyle: { background: pendulumEffectBackground },\n                    dyeList: [...dyeList],\n                };\n                if (db) {\n                    const tx = db.transaction('presetLayoutStore', 'readwrite');\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                    await tx.done;\n                }\n                setLayoutPresetList(cur => cur.map(entry => {\n                    if (entry.key === key) {\n                        return {\n                            key,\n                            content: value,\n                        };\n                    } else {\n                        return entry;\n                    }\n                }));\n            }}\n            onActive={content => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                onFrameChange(frame);\n                changeBottomLeftFrame(pendulumFrame);\n                changeBottomRightFrame(pendulumRightFrame);\n                changeTopLeftFrame(leftFrame);\n                changeTopRightFrame(rightFrame);\n                changeEffectBackground(effectStyle.background);\n                changePendulumEffectBackground(pendulumStyle.background);\n                changeFoil(foil);\n                changeDyeList(dyeList);\n            }}\n        />\n    </FrameLayoutContainer>;\n});\n\nexport * from './frame-behavior-setting-panel';\nexport * from '../../../component/card-layout-preview';","import { CopiableCode } from 'src/component';\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const FlagPresentationList = [\n    {\n        ...FlagInfoList[0],\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.mix-def-link']}:\n            <ul>\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\n            </ul>\n        </>,\n    },\n    {\n        ...FlagInfoList[1],\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\n                ? 'input.flag.link-rating-behavior.show'\n                : 'input.flag.link-rating-behavior.hide']}\n        </>,\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.link-rating-behavior']}:\n            <ul>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\n                        {LINK_RATING_ALWAYS_AUTO}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\n                        {LINK_RATING_ALWAYS_SHOW}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\n                        {LINK_RATING_ALWAYS_HIDE}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\n                </li>\n            </ul>\n        </>,\n    },\n];","import { Checkbox, Input, Popover } from 'antd';\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { resolveFrameStyle } from 'src/util';\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\nimport { FlagPresentationList } from '../../common';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n    .card-layout-preview-container {\n        line-height: 0;\n        border: var(--bw) solid var(--sub-level-1);\n        overflow: hidden;\n    }\n    .anticon {\n        align-content: center;\n        padding: 0 var(--spacing-xs);\n        border: var(--bw) solid var(--sub-level-1);\n        border-left: none;\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n}\n    & Pick<CardTextInput, 'onTakePicker'>\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n    onFrameChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            foil,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            effectStyle,\n            pendulumStyle,\n            dyeList,\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\n    const flagList = flag\n        .map((entry, index) => {\n            const target = FlagPresentationList[index];\n\n            if (entry !== 0 && target) return <li key={target.labelKey}>\n                {target.valueDisplay(language, entry)}\n            </li>;\n            return null;\n        })\n        .filter(entry => entry != null);\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\n                            isPendulum={isPendulum}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onFrameChange={onFrameChange}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                        />\n                        <FrameBehaviorSettingPanel />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">\n                            {language['input.advanced-frame.label']}\n                        </span>\n                        <div className=\"card-layout-preview-container\">\n                            <CardLayoutPreview\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\n                                height={advanceLayoutPreviewHeight}\n                                isPendulum={isPendulum}\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                                tabIndex={-1}\n                                dyeList={dyeList}\n                                foil={foil}\n                                language={language}\n                            />\n                        </div>\n                        {flagList.length > 0\n                            ? <InternalPopover\n                                content={<StyledPopMarkdown>\n                                    {language['input.flag.effective.label']}\n                                    <ul>{flagList}</ul>\n                                </StyledPopMarkdown>}\n                            >\n                                <ApartmentOutlined />\n                            </InternalPopover>\n                            : null}\n                        <CaretDownOutlined />\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\" className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, SingleSliderContainer, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst PostPendulumFirstLineContainer = styled.div`\n    &.first-line,\n    &.second-line {\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spacing-sm);\n        align-items: center;\n        justify-content: right;\n    }\n    .type-ability-input {\n        flex: 1 1 auto;\n        width: unset;\n        max-width: 40rem;\n    }\n    .condense-input {\n        flex: 1 1 auto;\n    }\n    .formatting-help-button,\n    .input-kanji-helper {\n        flex: 0 0 auto;\n    }\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .condense-input {\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n`;\nconst AdvancedParagraphButton = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    .button-label {\n        line-height: 2;\n        padding: var(--spacing-px) var(--spacing-xs);\n    }\n`;\nconst AdvancedParagraphPanel = styled.div`\n    .line-input,\n    .justify-ratio-input {\n        padding: var(--spacing-xs);\n    }\n    .single-slider {\n        .ant-input-number {\n            width: 75px;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: {\n        typeAbility?: string[],\n        effectMinLine?: number,\n        pendulumEffectMinLine?: number,\n        effectJustifyRatio?: number,\n        pendulumEffectJustifyRatio?: number,\n    }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\n    const [effectJustifyRatio, setEffectJustifyRatio] = useState(() => {\n        return useCard.getState().card.effectStyle.justifyRatio;\n    });\n    const [pendulumEffectJustifyRatio, setPendulumEffectJustifyRatio] = useState(() => {\n        return useCard.getState().card.pendulumStyle.justifyRatio;\n    });\n\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useEffect(() => {\n        /** Changing min line / justify ratio force render effect, so we should do so sparingly */\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) setCard(currentCard => {\n                const newEffectStyle = {\n                    ...currentCard.effectStyle,\n                    minLine: effectMinLine,\n                    justifyRatio: effectJustifyRatio,\n                };\n                const newPendulumEffectStyle = {\n                    ...currentCard.pendulumStyle,\n                    minLine: pendulumEffectMinLine,\n                    justifyRatio: pendulumEffectJustifyRatio,\n                };\n\n                return {\n                    ...currentCard,\n                    effectStyle: newEffectStyle,\n                    pendulumStyle: newPendulumEffectStyle,\n                };\n            });\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [effectJustifyRatio, effectMinLine, pendulumEffectJustifyRatio, pendulumEffectMinLine, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({\n            typeAbility,\n            effectMinLine, pendulumEffectMinLine,\n            effectJustifyRatio, pendulumEffectJustifyRatio,\n        }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\n            if (typeof effectJustifyRatio === 'number') setEffectJustifyRatio(effectJustifyRatio);\n            if (typeof pendulumEffectJustifyRatio === 'number') setPendulumEffectJustifyRatio(pendulumEffectJustifyRatio);\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon]?.value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\n            <CardTextInput ref={typeAbilityInputRef}\n                addonBefore={language[typeLabel]}\n                id=\"type-ability\"\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n                onChange={changeTypeAbility}\n                onTakePicker={onTakePicker}\n            />\n            {isOCG && <Tooltip\n                overlay={language['input.furigana-helper.tooltip']}\n                overlayClassName=\"long-tooltip-overlay\"\n            >\n                <Checkbox\n                    className=\"input-kanji-helper\"\n                    onChange={toggleFuriganaHelper}\n                    checked={furiganaHelper}\n                >\n                    {language['input.furigana-helper.label']}\n                </Checkbox>\n            </Tooltip>}\n            <FormattingHelpDrawer />\n        </PostPendulumFirstLineContainer>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\n                optionList={CondenseThresholdButtonList}\n            >\n                <span>\n                    {language['input.condense.label']} <Explanation\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                    />\n                </span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <Popover\n                overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <AdvancedParagraphPanel className=\"custom-style-picker\">\n                        <h2>\n                            {language['input.text-style.min-line.label']}\n                        </h2>\n                        <div className=\"line-input\">\n                            <SingleSliderContainer className=\"single-slider\">\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"effect-line\"\n                                    size=\"small\"\n                                    value={effectMinLine}\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={50}\n                                />\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"pendulum-effect-line\"\n                                    size=\"small\"\n                                    value={pendulumEffectMinLine}\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={50}\n                                />\n                            </SingleSliderContainer>\n                        </div>\n                        <h2>\n                            {language['input.text-style.justify-ratio.label']}\n                        </h2>\n                        <div className=\"justify-ratio-input\">\n                            <SingleSliderContainer className=\"single-slider\">\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"effect-justify-ratio\"\n                                    size=\"small\"\n                                    value={effectJustifyRatio}\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                                    onChange={value => setEffectJustifyRatio(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={5000}\n                                    step={100}\n                                />\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"pendulum-effect-justify-ratio\"\n                                    size=\"small\"\n                                    value={pendulumEffectJustifyRatio}\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                                    onChange={value => setPendulumEffectJustifyRatio(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={5000}\n                                    step={100}\n                                />\n                            </SingleSliderContainer>\n                        </div>\n                    </AdvancedParagraphPanel>\n                </div>}\n            >\n                <AdvancedParagraphButton>\n                    <div className=\"button-label\">\n                        {language['input.text-style.paragraph-style.label']}\n                    </div>\n                </AdvancedParagraphButton>\n            </Popover>}\n        </PostPendulumFirstLineContainer>\n    </>;\n});","import { Checkbox, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { InlineColorPicker, RadioTrain } from 'src/component';\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    IconButton,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getFinishList,\n    FormatButtonList,\n} from './const';\nimport { ClearOutlined } from '@ant-design/icons';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    AttributeInputGroup,\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledInputLabelWithButton,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isLink,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isLink,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const frameTrainRef = useRef<FrameTrainRef>(null);\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n                effectStyle, pendulumStyle,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({\n                typeAbility,\n                effectMinLine: effectStyle.minLine,\n                pendulumEffectMinLine: pendulumStyle.minLine,\n                effectJustifyRatio: effectStyle.justifyRatio,\n                pendulumEffectJustifyRatio: pendulumStyle.justifyRatio,\n            });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\n                    <IconButton\n                        onClick={() => onFinishChange([])}\n                        Icon={ClearOutlined}\n                        tooltipProps={{\n                            title: language['input.other-finish.reset.tooltip'],\n                        }}\n                    />\n                </StyledInputLabelWithButton>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain ref={frameTrainRef}\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <AttributeInputGroup language={language} />\n\n                <PendulumInputGroup ref={pendulumInputGroupRef}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    softMode={reduceMotionColor}\n                    onTakePicker={setPickerTarget}\n                    onFrameChange={frame => frameTrainRef.current?.changeFrame(frame)}\n                />\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport copy from 'copy-to-clipboard';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .select-box {\n            display: inline-block;\n            margin-right: var(--spacing-xs);\n        }\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 50%;\n            height: 50%;\n            position: absolute;\n            background-size: 200% 200%;\n            &.top-left-frame {\n                top: 0;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.top-right-frame {\n                top: 0;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n            &.bottom-left-frame {\n                top: 50%;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.bottom-right-frame {\n                top: 50%;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #2a2a2a;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    selected,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    selected,\n    language,\n    onDuplicate,\n    onActive,\n    onDelete,\n    onSelect,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        leftFrame, rightFrame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n        effectStyle,\n        pendulumStyle,\n    } = card;\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n    } = resolveFrameStyle({\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n    }, isPendulum);\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onActive(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame top-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\n                    <Checkbox\n                        checked={selected}\n                        onChange={e => {\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\n                        }}\n                    />\n                </div>\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\n                        ? 'icon-list'\n                        : normalizedCardIcon).toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(normalizedCardIcon !== NO_ICON\n                    && normalizedCardIconType !== 'st'\n                    && normalizedCardIconType !== 'none'\n                    && normalizedCardIconType !== 'custom'\n                ) && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined\n                        className=\"action-button action-download\"\n                        onClick={() => {\n                            const { id, ...exportableCard } = card;\n                            copy(JSON.stringify(compressCardData(exportableCard)));\n                        }}\n                    />\n                </Tooltip>\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\n            }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { Button, Modal } from 'antd';\nimport JSZip from 'jszip';\nimport { useEffect, useRef } from 'react';\nimport { InternalCard } from 'src/model';\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\nimport { downloadBlob } from 'src/util';\nimport styled from 'styled-components';\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst ExportingListContainer = styled.div`\n    .exporting-item {\n        display: grid;\n        grid-template-columns: 1.5rem 1fr;\n    }\n    .anticon-hourglass {\n        color: var(--main-info);\n    }\n    .anticon-loading {\n        color: var(--main-active);\n    }\n    .anticon-check-circle {\n        color: var(--main-online);\n    }\n`;\n\nexport type BatchDownloadButton = {\n    onActive: (card: InternalCard) => void,\n} & WithLanguage;\nexport const BatchDownloadButton = ({\n    language,\n    onActive,\n}: BatchDownloadButton) => {\n    const {\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    } = useCardList(useShallow(({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    }) => ({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    })));\n    const {\n        batchQueue,\n        batchDataMap,\n        isBatchDownloading,\n        isReady,\n        clearQueue,\n        stopBatchDownload,\n        startBatchDownload,\n    } = useBatchDownload();\n    /**\n     * The batch download process is as follow:\n     * * Start the process, block the screen with a popup and mark the process as started.\n     * * During the process, the top card of the exporting list is picked, and force select.\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\n     * * Clean up and end the process.\n     */\n    const nextSelectedId = batchQueue[0];\n    const lastSelectedId = useRef('');\n    useEffect(() => {\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\n            lastSelectedId.current = nextSelectedId;\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\n\n            if (targetCard) {\n                onActive(targetCard);\n            }\n        }\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\n\n    useEffect(() => {\n        let relevant = true;\n        if (isReady) {\n            (async () => {\n                const { batchName, batchDataMap } = useBatchDownload.getState();\n                const zipObject = new JSZip();\n                const batchDataList = Object.values(batchDataMap);\n\n                if (batchDataList.length > 0) {\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    if (relevant) {\n                        downloadBlob(\n                            `${batchName}.zip`,\n                            zipBlob,\n                            'application/zip',\n                        );\n                        stopBatchDownload();\n                    }\n                }\n            })();\n        }\n        return () => {\n            relevant = false;\n        };\n    }, [isReady, stopBatchDownload]);\n\n    const exportAllCard = Object.keys(selectedMap).length === 0;\n    return <>\n        <Modal\n            visible={isBatchDownloading}\n            onCancel={() => stopBatchDownload()}\n            onOk={() => clearQueue()}\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\n            okText={language['manager.batch.batch-download.premature-stop.label']}\n            okButtonProps={{\n                type: 'default',\n            }}\n        >\n            <ExportingListContainer className=\"exporting-list\">\n                {Object\n                    .values(cardDisplayList)\n                    .map(({ id, name }) => {\n                        if (!exportAllCard && !selectedMap[id]) return null;\n                        return <div key={id} className=\"exporting-item\">\n                            <div className=\"export-status\">\n                                {activeId === id\n                                    ? <LoadingOutlined />\n                                    : batchDataMap[id]\n                                        ? <CheckCircleOutlined />\n                                        : <HourglassOutlined />}\n                            </div>\n                            <div className=\"export-name\">{name}</div>\n                        </div>;\n                    })}\n            </ExportingListContainer>\n        </Modal>\n        <Button\n            className=\"batch-download-button\"\n            onClick={() => startBatchDownload(\n                listName,\n                exportAllCard\n                    ? cardDisplayList.map(card => card.id)\n                    : Object.keys(selectedMap),\n            )}\n        >\n            {exportAllCard\n                ? language['manager.batch.batch-download.label']\n                : language['manager.batch.batch-download.partial-download.label']}\n        </Button>\n    </>;\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useCallback, useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button, Dropdown, Menu } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\nimport { BatchDownloadButton } from './batch-download-button';\nimport { CaretDownFilled } from '@ant-design/icons';\n\nconst StyledMenuItem = styled(Menu.Item)`\n    &.menu-active {\n        background-color: var(--main-active);\n    }\n`;\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .batch-download-button {\n        margin-bottom: var(--spacing-xs);\n    }\n    .select-panel {\n        display: grid;\n        grid-template-columns: max-content max-content 1fr;\n        padding: var(--spacing-xs);\n        gap: var(--spacing-xs);\n        text-align: right;\n        .ant-checkbox-wrapper span {\n            padding-right: 0;\n        }\n        .scheme-button {\n            display: inline-block;\n        }\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    selectedMap: Record<string, string>,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n} & Pick<CardThumb, 'onSelect'>;\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        selectedMap,\n        language,\n        list,\n        onDelete,\n        onDuplicate,\n        onActive,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        selected={!!selectedMap[list[index].id]}\n        language={language}\n        onDuplicate={onDuplicate}\n        onActive={onActive}\n        onDelete={onDelete}\n        onSelect={onSelect}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onActive: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onActive,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    })));\n    const {\n        exportScheme,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { exportScheme },\n        updateSetting,\n    }) => ({\n        exportScheme,\n        updateSetting,\n    })));\n\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\n        selectCard(card.id, type);\n    }, [selectCard]);\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onActive(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onActive, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap([], 'replace')}\n            >\n                {language['manager.batch.batch-download.clear.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\n            >\n                {language['manager.batch.batch-download.all.label']}\n            </Button>\n            <div>\n                <Dropdown\n                    overlay={<Menu>\n                        {[\n                            {\n                                value: 'with-name',\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\n                            },\n                            {\n                                value: 'with-id',\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\n                            },\n                        ].map(({ value, label }) => {\n                            return <StyledMenuItem\n                                key={value}\n                                onClick={() => updateSetting({ exportScheme: value })}\n                                className={value === exportScheme ? 'menu-active' : ''}\n                            >\n                                {label}\n                            </StyledMenuItem>;\n                        })}\n                    </Menu>}\n                >\n                    <div\n                        className=\"scheme-button\"\n                    >\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\n                    </div>\n                </Dropdown>\n            </div>\n        </div>}\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            selectedMap,\n                            onDuplicate: duplicateCard,\n                            onActive,\n                            onDelete: deleteAndReselect,\n                            onSelect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\n            language={language}\n            onActive={onActive}\n        />}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    RegionMap,\n    CondenseTolerantMap,\n    DyeIndexMap,\n    ExtraAttributeList,\n    FinishMap,\n    frameList,\n    FramePositionMap,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { CopiableCode, StyledMono } from 'src/component';\nimport { FlagPresentationList } from '../common';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\n\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tbody>\n                                <tr>\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\n                                </tr>\n                                {[\n                                    {\n                                        field: 'Format',\n                                        value: <div>\n                                            {[\n                                                'tcg',\n                                                'ocg',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Frame',\n                                        altField: 'Bottom Frame',\n                                        value: <div>\n                                            {frameList\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Attribute',\n                                        value: <div>\n                                            {[...AttributeList, ...ExtraAttributeList]\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Spell/Trap Icon',\n                                        value: <div>\n                                            {IconList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Sticker',\n                                        value: <div>\n                                            {StickerList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Foil',\n                                        value: <div>\n                                            {getFoilList()\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Finish',\n                                        value: <div>\n                                            {Object.values(FinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                            <div>{language['manager.template.description.joinable']}</div>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Art Finish',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Type',\n                                        value: <div>\n                                            {[\n                                                'number',\n                                                'text',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Alignment',\n                                        value: <div>\n                                            {[\n                                                'left',\n                                                'center',\n                                                'right',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Icon Type',\n                                        value: <div>\n                                            {IconTypeList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Background Type',\n                                        value: <div>\n                                            {getBackgroundTypeList()\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Condense Rate',\n                                        value: <div>\n                                            {Object.keys(CondenseTolerantMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style Type',\n                                        value: <div>\n                                            {[\n                                                'predefined',\n                                                'custom',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Font',\n                                        value: <div>\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                        </div>,\n                                    },\n                                    {\n                                        field: 'Name Style - Preset',\n                                        value: <div>\n                                            {Object.keys(PresetNameStyleMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Pattern',\n                                        value: <div>\n                                            {PatternList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Pendulum Size',\n                                        value: <div>\n                                            {PendulumSizeList\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Attribute',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Background',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Icon',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Sticker',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Region',\n                                        value: <div>\n                                            {Object.values(RegionMap)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.star-list']}</div>\n                                            {Object\n                                                .values(TotalIconTypeMap)\n                                                .filter(({ isMixable }) => isMixable)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Dye List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.dye-list']}</div>\n                                            <ul>\n                                                {Object\n                                                    .entries(DyeIndexMap)\n                                                    .sort((l, r) => l[1] - r[1])\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\n                                            </ul>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Flag',\n                                        value: <div>\n                                            <div>{language['manager.template.description.flag']}</div>\n                                            {FlagPresentationList\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\n                                        </div>\n                                    },\n                                ].map(({\n                                    field,\n                                    altField,\n                                    value,\n                                }) => {\n                                    return <tr key={field}>\n                                        <td>\n                                            <StyledMono>{field}</StyledMono>\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                        </td>\n                                        <td>{value}</td>\n                                    </tr>;\n                                })}\n                            </tbody>\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\nimport { ManagerDrawer } from 'src/component';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(ManagerDrawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            className=\"card-manager-panel\"\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onActive={activeCard}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: 0 var(--spacing);\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    CanvasConst,\n    Card,\n    getDefaultCard,\n    NameStyle,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n    isTouchDevice,\n    mergeClass,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    FramePreset,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCarderDb,\n    useCardList,\n    useGlobal,\n    useGlobalMemory,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\nimport Moveable from 'react-moveable';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n        slidingType,\n    } = useSetting(useShallow(({ setting: {\n        allowHotkey,\n        reduceMotionColor,\n        globalScale,\n        resolution,\n        slidingType,\n    } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n        slidingType,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const isMobile = isMobileDevice();\n    const windowSlidable = !isMobile && !isTouchDevice();\n    const [isInitializing, setInitializing] = useState(true);\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const { db, dbReady } = useCarderDb();\n    const [managerVisible, setManagerVisible] = useState(false);\n    const slidingWindowRef = useRef<HTMLDivElement>(null);\n    const containerWindowRef = useRef<HTMLDivElement>(null);\n    const moveableRef = useRef<Moveable>(null);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\n        const stopDrag = () => {\n            setActiveDropzone(0);\n        };\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\n        const checkDragHeartbeat: Document['ondragover'] = () => {\n            setActiveDropzone(1);\n            window.clearTimeout(timeoutHandle);\n            timeoutHandle = window.setTimeout(stopDrag, 200);\n        };\n\n        document.addEventListener('dragover', checkDragHeartbeat);\n\n        return () => {\n            document.removeEventListener('dragover', checkDragHeartbeat);\n        };\n    }, [setActiveDropzone]);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n    /** Fix weird issue when frame layer does not render correctly when manager's visibility is changed. Happens on Opera GX */\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n    }, [managerVisible]);\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        if (slidingType === 'auto' && slidingWindowRef.current) {\n            slidingWindowRef.current.style.transform = '';\n        }\n    }, [slidingType]);\n    useEffect(() => {\n        (async () => {\n            try {\n                if (db && isLanguageLoading === false && language) {\n                    const layoutPresetTx = db.transaction('presetLayoutStore', 'readonly');\n                    const layoutPresetList: {\n                        key: string,\n                        content: FramePreset,\n                    }[] = [];\n\n                    for await (const cursor of layoutPresetTx.store) {\n                        const { content, key } = cursor.value;\n                        layoutPresetList.push({\n                            key,\n                            content: JSON.parse(content) as FramePreset,\n                        });\n                    }\n                    await layoutPresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ layoutPresetList });\n\n                    const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readonly');\n                    const nameStylePresetList: {\n                        key: string,\n                        content: Partial<NameStyle>,\n                    }[] = [];\n\n                    for await (const cursor of nameStylePresetTx.store) {\n                        const { content, key } = cursor.value;\n                        nameStylePresetList.push({\n                            key,\n                            content: JSON.parse(content) as Partial<NameStyle>,\n                        });\n                    }\n                    await nameStylePresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ nameStylePresetList });\n                }\n            } catch (e) {\n                console.error('Error reading database', e);\n                notification.error({\n                    message: language['error.database-initialize.message'],\n                    description: language['error.database-initialize.description'],\n                });\n            }\n        })();\n    }, [db, isLanguageLoading, language]);\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'SVN-Times New Roman Italic',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing || !dbReady;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                onScroll={e => {\n                    const currentScrollY = e.currentTarget.scrollTop;\n                    if (slidingWindowRef.current && containerWindowRef.current && slidingType === 'auto') {\n                        const viewportWidth = document.body.clientWidth;\n                        // const viewportHeight = window.innerHeight;\n                        const padding = viewportWidth < 1600 ? 0 : 10;\n                        const viewportHeight = e.currentTarget.getBoundingClientRect().height;\n                        const slidingWindowHeight = slidingWindowRef.current.getBoundingClientRect().height;\n                        /** If the sliding window fit entirely inside viewport, just keep their position updated */\n                        if (viewportHeight > slidingWindowHeight + padding) {\n                            const threshold = Math.max(\n                                0,\n                                containerWindowRef.current.getBoundingClientRect().height - slidingWindowHeight\n                            );\n                            slidingWindowRef.current.style.transform = `translateY(${Math.max(\n                                0,\n                                Math.min(threshold, currentScrollY) - padding,\n                            )}px)`;\n                        } else {\n                            /** It's not worth to deal with this case right now, as the UX here is very complex */\n                            slidingWindowRef.current.style.transform = '';\n                        }\n                    }\n                }}\n                className={`language-${languageInfo.codeName} manager_${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobile ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div ref={containerWindowRef} className={mergeClass(\n                        'card-preview-panel',\n                        isTainted ? 'export-tainted' : 'export-normal',\n                        `sliding-type_${slidingType}`,\n                    )}>\n                        <div ref={slidingWindowRef} className=\"preview-sliding-window\">\n                            <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                                <div className=\"imexport\">\n                                    <ExportPanel ref={exportPanelRef}\n                                        tainted={isTainted}\n                                        artworkCanvas={artworkCanvasRef.current}\n                                        onRequireExportData={exportData}\n                                        onRequireDownload={() => downloadButtonRef.current?.download()}\n                                        onClose={forceRefocus}\n                                    />\n                                    <div />\n                                    <ImportPanel ref={importPanelRef}\n                                        onImport={treatNewCard}\n                                        onClose={forceRefocus}\n                                        allowHotkey={allowHotkey}\n                                        language={language}\n                                    />\n                                </div>\n                                <BatchConverter language={language} />\n                                <DownloadButton ref={downloadButtonRef}\n                                    canvasMap={canvasMap}\n                                    imageChangeCount={imageChangeCount}\n                                    isTainted={isTainted}\n                                    isInitializing={isInitializing}\n                                    globalScale={globalScale}\n                                    onDownloadError={alertDownloadError}\n                                />\n                                {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                    <div className=\"alert-label\">\n                                        {language['alert.download.tainted-first-line']}<br />\n                                        {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                    </div>\n                                    <Dropdown\n                                        className=\"save-button-dropdown\"\n                                        placement=\"bottomRight\"\n                                        overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                    >\n                                        <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                            <GatewayOutlined className=\"resolution-icon\" />\n                                            <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                        </ResolutionButton>\n                                    </Dropdown>\n                                </div>}\n                            </StyledDataButtonPanelContainer>\n                            <CardPreviewContainer className=\"card-preview-container\">\n                                <Tooltip title={language['generic.reset.tooltip']}>\n                                    <ResetButton\n                                        className=\"reset-button\"\n                                        onClick={() => {\n                                            const consent = window.confirm(language['prompt.reset.message']);\n\n                                            if (consent) {\n                                                const { setCard, card } = useCard.getState();\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\n                                                const contextualDefaultCardData = card.format === 'tcg'\n                                                    ? defaultCard\n                                                    : changeCardFormat(defaultCard, 'ocg');\n\n                                                setCard(contextualDefaultCardData, true);\n                                                setImageChangeCount(cnt => cnt + 1);\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                            }\n                                        }}\n                                    >\n                                        <ClearOutlined />\n                                    </ResetButton>\n                                </Tooltip>\n                                <Tooltip title={<div className=\"center\">\n                                    {language['button.full-size.label']}\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                                </div>}>\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                        <ZoomInOutlined />\n                                    </LightboxButton>\n                                </Tooltip>\n                                {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                                 * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                                 */}\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                    id=\"preview-canvas\"\n                                    ref={previewCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                    <canvas\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                        id=\"export-canvas\"\n                                        ref={exportCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                    <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                        {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                    </div>\n                                    <canvas id=\"frameCanvas\"\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                        ref={frameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"nameCanvas\"\n                                        ref={nameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={148 * globalScale}\n                                    />\n                                    <canvas id=\"cardIconCanvas\"\n                                        ref={cardIconCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={222 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumScaleCanvas\"\n                                        ref={pendulumScaleCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumEffectCanvas\"\n                                        ref={pendulumEffectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"typeCanvas\"\n                                        ref={typeCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"effectCanvas\"\n                                        ref={effectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"statCanvas\"\n                                        ref={statCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"setIdCanvas\"\n                                        ref={setIdCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"passwordCanvas\"\n                                        ref={passwordCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"creatorCanvas\"\n                                        ref={creatorCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"stickerCanvas\"\n                                        ref={stickerCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"finishCanvas\"\n                                        ref={finishCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={artworkCanvasRef}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={backgroundCanvasRef}\n                                    />\n                                </CardCanvasGroupContainer>\n                            </CardPreviewContainer>\n                        </div>\n                        {windowSlidable && <Moveable\n                            ref={moveableRef}\n                            target={slidingWindowRef}\n                            className=\"sliding-movable-window\"\n                            draggable={true}\n                            throttleDrag={1}\n                            edgeDraggable={false}\n                            startDragRotate={0}\n                            throttleDragRotate={0}\n                            throttleScale={0}\n                            snappable={true}\n                            pinchable={true}\n                            snapContainer={'.card-preview-panel'}\n                            bounds={{\n                                left: 0,\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                position: 'css',\n                            }}\n                            onDrag={e => {\n                                if (slidingType === 'manual') e.target.style.transform = e.transform;\n                            }}\n                        />}\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}