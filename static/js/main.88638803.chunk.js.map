{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.ts","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/inline-color-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","distributionMode","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","supportFormat","ExtraAttributeList","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","PendulumSizeMap","small","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","medium","large","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","tcg","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","pendulumSubstituteMap","type10","type11","type12","type13","ArtFinishMap","art","OtherFinishTypeMap","background","attribute","sticker","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","FramePositionMap","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","topLeftFrame","topRightFrame","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","leftFrame","rightFrame","pendulumRightFrame","foil","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","createCanvas","canvas","document","createElement","context","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","filter","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader17","_reader$split$filter","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_reader45","_emptyCard$isLink","_filter","_reader46","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader47","Number","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_fullLineList$length","content","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","sizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","potentialFlavorConditionText","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","flavorFontData","dynamicFlavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","baseDrawLinkArrowMap","positionType","all","isActive","baseLink","activeLink","resetTransform","baseDrawLinkMapFoil","withBorder","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","topFrameContext","topFrameCanvas","topRightCanvas","bottomFrameContext","bottomFrameCanvas","bottomRightCanvas","backgroundWidth","backgroundHeight","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeContext","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishContext","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starContext","starFinishCanvas","starFinishContext","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconContext","drawLinkArrowMap","drawStatBorder","drawNameBackground","nameBackgroundContext","nameBackgroundCanvas","nameRightCanvas","drawEffectBackground","withPendulum","effectBoxX","_PendulumSizeMapExcep","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderContext","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","artContext","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","exceptionDigitWidthRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","showDefAndLink","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","leftOffset","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","iconCanvas","iconContext","iconFinishCanvas","iconFinishContext","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","CombinedSliderContainer","PopoverButton","$active","$softMode","ResolutionLabelContainer","$warning","ResolutionLabel","warning","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","Input","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","transform","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","_ref13","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","FrameLayoutContainer","CardLayoutContainer","$width","$height","$hoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeLayout","layoutValue","layoutState","activeFrame","_recentCustomPendulum","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_ref14","_pendulumEffectInputR","flagList","_bottomFrameOptionGri","ApartmentOutlined","willMirror","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","extraAttributeList","getExtraAttributeList","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","DoubleRightOutlined","DoubleLeftOutlined","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","FileTextOutlined","ghost","header","altField","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,CAACC,EAAKC,KAC7DD,EAAIC,EAAIP,WAAaO,EACdD,IACR,CAAC,GCpiCEE,EAA8C,CAAC,CAAEvE,UAAW,UAAW5E,QAAS,IAChFoJ,EAA8C,CAChD,CAAExE,UAAW,UAAW5E,QAAS,KACjC,CAAE4E,UAAW,WAAY5E,QAAS,MAczBqJ,EAA+C,CACxDxE,MAAO,CACHlJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAAC,EACrBC,sBAAuB,CAAC,GAE5BzE,MAAO,CACHnJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAAC,EACrBC,sBAAuB,CAAC,GAE5BxE,MAAO,CACHpJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChB,cAAeH,EACf,cAAeA,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,UAAaA,EACb,MAASA,GAEbI,sBAAuB,CAAC,GAE5BvE,MAAO,CACHrJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAAC,EACrBC,sBAAuB,CAAC,GAE5BtE,MAAO,CACHtJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAAC,EACrBC,sBAAuB,CAAC,GAE5BpE,MAAO,CACHxJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAAC,EACrBC,sBAAuB,CAAC,GAE5BnE,MAAO,CACHzJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChB,gBAAiB,CAAC,CAAE1E,UAAW,SAAU5E,QAAS,MAAS,CAAE4E,UAAW,cAAe5E,QAAS,QAEpGuJ,sBAAuB,CAAC,GAE5BlE,MAAO,CACH1J,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChB,cAAeF,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,MAASA,EACT,mBAAoBA,EACpB,KAAQA,EACR,KAAQA,GAEZG,sBAAuB,CAAC,GAE5BjE,MAAO,CACH3J,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChB,gBAAiB,CAAC,CAAE1E,UAAW,SAAU5E,QAAS,OAEtDuJ,sBAAuB,CAAC,GAE5BC,OAAQ,CACJ7N,MAAO,SACPC,MAAO,KACP0N,mBAAoB,CAChB,gBAAiB,IAErBC,sBAAuB,CAAC,GAE5BE,OAAQ,CACJ9N,MAAO,SACPC,MAAO,KACP0N,mBAAoB,CAChB,gBAAiB,IAErBC,sBAAuB,CAAC,GAE5BG,OAAQ,CACJ/N,MAAO,SACPC,MAAO,KACP0N,mBAAoB,CAChB,gBAAiB,CAAC,CAAE1E,UAAW,cAAe5E,QAAS,OAE3DuJ,sBAAuB,CAAC,GAE5BI,OAAQ,CACJhO,MAAO,SACPC,MAAO,KACP0N,mBAAoB,CAChB,gBAAiB,IAErBC,sBAAuB,CAAC,IAInBK,EAAkD,CAC3D/E,MAAO,CACHlJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CAAC,CAAC,IAEXN,sBAAuB,CACnB9D,MAAO,kBACPa,OAAQ,mBACRC,MAAO,qBAGfzB,MAAO,CACHnJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CACD,CAAE7J,QAAS,IAAM4E,UAAW,UAC5B,CAAE5E,QAAS,IAAM4E,UAAW,eAC5B,CAAE5E,QAAS,IAAM4E,UAAW,cAGpC2E,sBAAuB,CACnB9D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfxB,MAAO,CACHpJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CAAC,CAAE7J,QAAS,IAAM4E,UAAW,eAAiB,CAAE5E,QAAS,IAAM4E,UAAW,cAEnF2E,sBAAuB,CACnB9D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfvB,MAAO,CACHrJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CAAC,CAAE7J,QAAS,IAAM4E,UAAW,eAAiB,CAAE5E,QAAS,GAAK4E,UAAW,cAElF2E,sBAAuB,CACnB9D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGftB,MAAO,CACHtJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CAAC,CAAE7J,QAAS,IAAM4E,UAAW,eAAiB,CAAE5E,QAAS,GAAK4E,UAAW,cAElF2E,sBAAuB,CACnB9D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfpB,MAAO,CACHxJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CAAC,CAAE7J,QAAS,IAAM4E,UAAW,eAAiB,CAAE5E,QAAS,GAAK4E,UAAW,cAElF2E,sBAAuB,CACnB9D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfnB,MAAO,CACHzJ,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CAAC,CAAC,IAEXN,sBAAuB,CACnB9D,MAAO,kBACPa,OAAQ,mBACRC,MAAO,qBAGflB,MAAO,CACH1J,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CAAC,CAAE7J,QAAS,IAAM4E,UAAW,eAAiB,CAAE5E,QAAS,IAAM4E,UAAW,cAEnF2E,sBAAuB,CACnB9D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfjB,MAAO,CACH3J,MAAO,QACPC,MAAO,IACP0N,mBAAoB,CAChBO,IAAK,CACD,CAAEjF,UAAW,SAAU5E,QAAS,GAChC,CAAE4E,UAAW,WAAY5E,QAAS,GAClC,CAAE4E,UAAW,UAAW5E,QAAS,KAGzCuJ,sBAAuB,CACnB9D,MAAO,GACPa,OAAQ,mBACRC,MAAO,sBAKNuD,EAAqB,CAC9BD,IAAK,CACDvH,IAAK,MACLlB,SAAU,0BAEd2I,WAAY,CACRzH,IAAK,aACLlB,SAAU,0BAEd4I,UAAW,CACP1H,IAAK,YACLlB,SAAU,yBAEdE,KAAM,CACFgB,IAAK,OACLlB,SAAU,8BAEd6I,QAAS,CACL3H,IAAK,UACLlB,SAAU,wBAUL8I,EAAc,CACvB3L,OAAQ,SACRuF,KAAM,OACNL,SAAU,YAED0G,EAAezO,GAAgC,CACxD,CACIuC,KAAMiM,EAAoB,OAC1BtO,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY6C,OACnBiC,MAAO,UACPE,UAAU,GAEd,CACIzC,KAAMiM,EAAkB,KACxBtO,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYoI,KACnBtD,MAAO,UACPE,UAAU,GAEd,CACIzC,KAAMiM,EAAsB,SAC5BtO,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY+H,SACnBjD,MAAO,UACPE,UAAU,ICxQL0J,EAAsB,CAC/BC,qBAAsB,EACtBC,YAAa,GACbjE,SAAU,KACVkE,WAAY,KACZC,UAAW,EACXC,aAAc,EACdC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAqCXC,GAAkB,CAC3BC,oBAAqB,GACrBC,iBAAkB,SAClBC,cAAc,EACdC,iBAAkB,QAQhBC,GAAwB,CAC1BC,aAAc,0BACdC,aAAc,2BACdf,kBAAmB,GACnBS,oBAAqB,KACrBO,YAAa,sBACbC,WAAY,SACZC,gBAAiB,EACjBN,iBAAkB,GAETO,GAAqC,IAC3CN,GACHzI,KAAM,aACNqI,oBAAqB,IACrBW,UAAW,MACXC,SAAU,IAEDC,GAAqC,IAC3CT,GACHzI,KAAM,sBACNqI,oBAAqB,IACrBW,UAAW,MACXC,SAAU,IAEDE,GAAqC,IAC3CV,GACHzI,KAAM,0BACNgJ,UAAW,MACXI,aAAc,UACdH,SAAU,IAMDI,GAA2C,CACpD,IAAO,IACAH,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,GAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,KAG1F,WAAY,IACLwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GACnF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,KAG1F,gBAAiB,IACVwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,KAG3F,WAAY,IACLwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,KAG1F,oBAAqB,IACdwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,KAG1F,yBAA0B,IACnBwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,GAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,KAG1F,8BAA+B,IACxBwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,KAGzF,yBAA0B,IACnBwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAOjF4B,GAA2C,CACpD,IAAO,IACAP,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,GAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,KAG1F,WAAY,IACLqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GACnF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,KAG1F,gBAAiB,IACVqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,GAAMkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,KAG1F,WAAY,IACLqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,KAG1F,oBAAqB,IACdqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,KAG1F,yBAA0B,IACnBqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GACnF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,KAG1F,8BAA+B,IACxBqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,KAGzF,yBAA0B,IACnBqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,GAAMkE,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,GAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,GAAIC,aAAc,KAG1F,IAAO,IACAyB,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,GAAIkE,WAAY,GAAIC,UAAW,GAC5D,CAAEF,YAAa,GAAIjE,SAAU,GAAIkE,WAAY,GAAIC,UAAW,KAGpE,WAAY,IACL0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,KAGzE,gBAAiB,IACV0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,KAGzE,WAAY,IACL0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,KAGzE,oBAAqB,IACd0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,GAAIkE,WAAY,GAAIC,UAAW,GAC5D,CAAEF,YAAa,GAAIjE,SAAU,GAAIkE,WAAY,GAAIC,UAAW,KAGpE,yBAA0B,IACnB0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,KAGzE,8BAA+B,IACxB0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,KAGzE,yBAA0B,IACnB0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,MC3ZhE8B,GAAqE,CAC9EC,QAAS,CACL5Q,MAAO,UACPyF,SAAU,qCACVoL,SAAU,CACNf,aAAc,yBACd1I,KAAM,yBACN2I,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,IACrBY,SAAU,CAAC,CACP1B,YAAa,GACbjE,SAAU,KACVsE,kBAAmB,IACnBG,cAAe,KACfN,UAAW,EACXD,WAAY,KACZQ,QAAS,IAEb0B,mBAAoB,CAChB,EAAK,CACDC,UAAW,IACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,MAGhC,EAAK,CACDH,UAAW,EACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,SAM5CsD,MAAO,CACHxU,MAAO,QACPyF,SAAU,mCACVoL,SAAU,CACNf,aAAc,QACd1I,KAAM,QACN2I,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,KACrBgF,OAAQ,OACRpE,SAAU,CAAC,CACP1B,YAAa,MACbjE,SAAU,GACVsE,kBAAmB,IACnBG,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,MAIrBsF,IAAK,CACD1U,MAAO,MACPyF,SAAU,iCACVoL,SAAU,CACNf,aAAc,0BACd1I,KAAM,0BACN2I,aAAc,2BACdN,oBAAqB,KACrBC,iBAAkB,WAClBC,cAAc,EACda,aAAc,OACdmE,WAAY,oBACZC,gBAAiB,EACjB5E,YAAa,sBACbC,WAAY,SACZC,gBAAiB,KACjBE,UAAW,MACXC,SAAU,CAAC,CACP1B,YAAa,MACbjE,SAAU,GACVsE,kBAAmB,KACnBC,gBAAiB,EACjBE,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,OCvJZyF,GAA4C,CACrDtI,IAlDwC,CACxCnF,KAAM,sBACN0I,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIjB,SAAU,EACVT,YAAa,MACbjE,SAAU,KACVkE,WAAY,KACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIP,YAAa,MACbjE,SAAU,GACVkE,WAAY,GACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,QAyB1BtC,IArBwC,CACxCxF,KAAM,oBACN0I,aAAc,oBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdS,aAAc,UACdJ,UAAW,MACXC,SAAU,CAAC,CACP1B,YAAa,GACbjE,SAAU,GACVyE,cAAe,IACfP,WAAY,KACZC,UAAW,EACXG,kBAAmB,EACnB8F,kBAAmB,QAsEdC,GAA6C,CACtDxI,IA/DyC,CACzCnF,KAAM,sBACN0I,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI1B,YAAa,MACbjE,SAAU,OACVkE,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIP,YAAa,MACbjE,SAAU,OACVkE,WAAY,OACZC,UAAW,EACXM,cAAe,EACfH,kBAAmB,GACnBE,iBAAkB,KAClBE,QAAS,KAsCjBxC,IAlCyC,CACzCxF,KAAM,oBACN0I,aAAc,oBACd6E,WAAY,sBACZ1E,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXI,aAAc,WACdH,SAAU,CACN,CACI1B,YAAa,MACbjE,SAAU,OACVkE,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIP,YAAa,MACbjE,SAAU,GACVsE,kBAAmB,EACnBE,iBAAkB,KAClBL,UAAW,EACXD,WAAY,KACZS,mBAAoB,EACpBC,iBAAkB,SASjB0F,GAAmC,CAC5C5N,KAAM,yBACN0I,aAAc,yBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,yBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI1B,YAAa,MACbjE,SAAU,KACVkE,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GACjBlG,mBAAoB,IACpBI,cAAe,IACfH,kBAAmB,IAEvB,CACIL,YAAa,KACbjE,SAAU,MACVkE,WAAY,MACZC,UAAW,EACXoG,gBAAiB,GACjBlG,mBAAoB,IACpBI,eAAgB,IAChBH,kBAAmB,IAEvB,CACIL,YAAa,KACbjE,SAAU,KACVkE,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GAEjBlG,mBAAoB,OACpBQ,mBAAoB,OACpBJ,eAAgB,IAChBH,kBAAmB,MAIlBkG,GAAmC,CAC5C9N,KAAM,0BACN0I,aAAc,0BACdG,WAAY,SACZC,gBAAiB,GACjBT,oBAAqB,KACrBO,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI1B,YAAa,MACbjE,SAAU,KACVkE,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GACjBjG,kBAAmB,IAEvB,CACIL,YAAa,KACbjE,SAAU,KACVkE,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GACjBjG,kBAAmB,IAEvB,CACIL,YAAa,KACbjE,SAAU,GACVkE,WAAY,GACZC,UAAW,EACXoG,gBAAiB,GACjBjG,kBAAmB,IACnBC,gBAAiB,EACjBE,eAAgB,IAChBI,mBAAoB,WCjMnB4F,GAAmD,CAC5D,YAAa,IACN7E,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,KAG1F,aAAc,IACPwB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,GAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,KAGzE,YAAa,IACNyB,GACHD,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,OAIhEuG,GAAmD,CAC5D,YAAa,IACNjF,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,KAG1F,aAAc,IACPqB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIjE,SAAU,GAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,KAGzE,YAAa,IACNsB,GACHE,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,KAAMkE,WAAY,KAAOC,UAAW,EAAGC,aAAc,KAG1F,YAAa,IACNyB,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,EAAGC,aAAc,GAC1G,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,EAAGC,aAAc,GAC1G,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,EAAGC,aAAc,GAC1G,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,KAGjG,aAAc,IACP0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIG,aAAc,EAAGpE,SAAU,MAAOkE,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,GAC1G,CAAEF,YAAa,GAAIG,aAAc,EAAGpE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GAClF,CAAEF,YAAa,GAAIG,aAAc,EAAGpE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,GAClF,CAAEF,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,KAGzE,YAAa,IACN0B,GACHF,SAAU,CACN,CAAE1B,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMI,kBAAmB,IAAMH,UAAW,EAAGC,aAAc,GAC3G,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIjE,SAAU,MAAOkE,WAAY,KAAMC,UAAW,MC1GhEwG,GAA4C,CACrrtD,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,UAICC,GAAe,CACxB5I,IAAK,CACD,+HACA,wGACA,wDAEJL,IAAK,CACD,kDACA,4BACA,oCAIKkJ,GAA8C,CACvD7I,IAAK,mGACLL,IAAK,kCAIImJ,GAA0C,CAEnD,eAAM,OACN,eAAM,QACN,2BAAQ,gBACR,2BAAQ,cACR,uCAAU,UACV,qBAAO,WACP,2BAAQ,eACR,iCAAS,SACT,qBAAO,QACP,qBAAO,QACP,eAAM,OACN,6CAAW,SACX,2BAAQ,WACR,qBAAO,SACP,qBAAO,UACP,qBAAO,QACP,uCAAU,UACV,eAAM,OACN,2BAAQ,UACR,qBAAO,OACP,qBAAO,cACP,iCAAS,cACT,eAAM,UACN,qBAAO,UACP,qBAAO,eACP,qBAAO,OACP,uCAAU,SACV,uCAAU,SACV,iCAAS,oBACT,6CAAW,cACX,iCAAS,iBACT,yDAAa,gBAEb,iCAAS,UACT,iCAAS,aACT,2BAAQ,YACR,iCAAS,SAET,eAAM,SACN,eAAM,SACN,eAAM,SACN,uCAAU,SACV,eAAM,SACN,2BAAQ,UACR,iCAAS,MACT,uCAAU,WACV,qBAAO,OACP,iCAAS,UACT,2BAAQ,QACR,2BAAQ,iBACR,2EAAgB,eAEhB,iCAAS,QACT,2BAAQ,SACR,2BAAQ,OACR,2BAAQ,OACR,iCAAS,SACT,2BAAQ,QAER,CAACF,GAAa5I,IAAI,IAAK4I,GAAajJ,IAAI,GACxC,CAACiJ,GAAa5I,IAAI,IAAK4I,GAAajJ,IAAI,GACxC,CAACiJ,GAAa5I,IAAI,IAAK4I,GAAajJ,IAAI,GAExC,6CAAgB,QAChB,gmCACuK,oTAEvK,+GAAsB,sCAEtB,gQAA+C,+EAC/C,CAACkJ,GAAoB7I,KAAM6I,GAAoBlJ,KAEtCoJ,GAAkB3P,OAAO4P,QAAQF,IAAiBrI,QAAO,CAACC,EAAKC,KACxE,MAAOsI,EAASC,GAAWvI,EAG3B,OAFAD,EAAIwI,GAAWD,EAERvI,CAAG,GACX,CAEC,oFAAgF,kQC7UvEyI,GAA0C,CACnD,OAAU,CACNzT,KAAM,SACNsC,QAAS,qBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,KAEhB,OAAU,CACN7T,KAAM,SACNsC,QAAS,qBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN7T,KAAM,SACNsC,QAAS,qBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACP7T,KAAM,UACNsC,QAAS,sBACToR,WAAY,OACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,IAAO,CACH7T,KAAM,MACNsC,QAAS,kBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJ7T,KAAM,OACNsC,QAAS,mBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN7T,KAAM,SACNsC,QAAS,qBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACL7T,KAAM,QACNsC,QAAS,oBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJ7T,KAAM,OACNsC,QAAS,mBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACL7T,KAAM,QACNsC,QAAS,oBACToR,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,GAEhB,eAAgB,CACZ7T,KAAM,eACNsC,QAAS,2BACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACP7T,KAAM,UACNsC,QAAS,sBACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN7T,KAAM,SACNsC,QAAS,qBACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,GAAM,CACF7T,KAAM,KACNsC,QAAS,iBACToR,WAAY,OACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,OAAU,CACN7T,KAAM,SACNsC,QAAS,qBACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJ7T,KAAM,OACNsC,QAAS,mBACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,MAAS,CACL7T,KAAM,QACNsC,QAAS,oBACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,YAAa,CACT7T,KAAM,YACNsC,QAAS,wBACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,cAAe,CACX7T,KAAM,cACNsC,QAAS,0BACToR,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJ7T,KAAM,OACNsC,QAAS,mBACToR,WAAY,OACZC,QAAS,YACTG,yBAA0B,CACtB,qBACA,qBACA,sBACA,iBAEJC,qBAAsB,0BAA0B,CAC5C,yBACA,yBACA,yBACA,0BACA,0BACA,qBACFC,KAAK,SACPH,WAAY,IAGPI,GAAYvQ,OAAOC,OAAO8P,IAE1BS,GAAyD,CAClEC,gBAAiB,CAAEhR,SAAU,yCAC7BiR,iBAAkB,CAAEjR,SAAU,0CAC9BkR,iBAAkB,CAAElR,SAAU,+CAC9BmR,yBAA0B,CAAEnR,SAAU,wDACtCrF,MAAO,CAAEqF,SAAU,qCACnBoR,aAAc,CAAEpR,SAAU,sCAC1BqR,cAAe,CAAErR,SAAU,wCClMlBsR,GAAmB,CAC5BnU,OAAQ,CACJ,CAAEoU,IAAK,IAAKC,KAAM,GAAI3W,MAAO,IAAKC,OAAQ,KAC1C,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,IAC3C,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,KAC3C,CAAEyW,IAAK,IAAKC,KAAM,GAAI3W,MAAO,GAAIC,OAAQ,KACzC,CAAEyW,IAAK,EAAGC,KAAM,EAAG3W,MAAO,EAAGC,OAAQ,GACrC,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,GAAIC,OAAQ,KAC1C,CAAEyW,IAAK,IAAKC,KAAM,GAAI3W,MAAO,IAAKC,OAAQ,KAC1C,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,IAC3C,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,MAE/C6B,SAAU,CACN,CAAE4U,IAAK,IAAKC,KAAM,GAAI3W,MAAO,IAAKC,OAAQ,KAC1C,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,IAC3C,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,KAC3C,CAAEyW,IAAK,IAAKC,KAAM,EAAG3W,MAAO,GAAIC,OAAQ,KACxC,CAAEyW,IAAK,EAAGC,KAAM,EAAG3W,MAAO,EAAGC,OAAQ,GACrC,CAAEyW,IAAK,IAAKC,KAAM,IAAK3W,MAAO,GAAIC,OAAQ,KAC1C,CAAEyW,IAAK,KAAMC,KAAM,GAAI3W,MAAO,IAAKC,OAAQ,KAC3C,CAAEyW,IAAK,KAAMC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,IAC5C,CAAEyW,IAAK,KAAMC,KAAM,IAAK3W,MAAO,IAAKC,OAAQ,OAGvC2W,GAAiB,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KACrDC,GAAiB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IACzDC,GAAyB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IACjEC,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,GAAyB,EAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GCvBpDC,GAAqB,IAAIC,OADD,sBAIxBC,GAA2B,IAAID,OADP,wBAGxBE,GAAoB,8IACpBC,GAAiB,IAAIH,OAAOE,IAE5BE,GAAqB,IAAIJ,OAAO,cAAcE,SAK9CG,GAAe,SACfC,GAAgB,SAChBC,GAAe,SACfC,GAAgB,SAChBC,GAAoB,SACpBC,GAAqB,SACrBC,GAAwB,SACxBC,GAAsB,SAEtBC,GAAqB,IAAIb,OAAO,IAAI,CAC7CU,GACAD,GACAD,GACAD,GACAK,GACAD,GACAL,GACAD,IACFvB,KAAK,mBAAoB,KAGdgC,GAA6B,IAAId,OADA,yBAAyBK,KAAeE,KAAeE,KAAoBE,WACpC,KAExEI,GAA8B,GAAGV,MAAgBC,KACjDU,GAA0B,IAAIhB,OAAOe,IAGrCE,GAA0B,kGAAkGZ,wBAAkCC,YAK9JY,GAAuB,IAAIlB,OAAO,0BAGlCmB,GAAqB,IADI5L,EAAmB6L,KAAIC,IAAK,IAAAC,EAAA,OAAmB,QAAnBA,EAAID,EAAM3L,iBAAS,IAAA4L,IAAID,EAAM7L,SAAS,IAAEsJ,KAAK,kBAGlGyC,GAAwB,iRACxBC,GAAe,IAAIxB,OAAO,IAAIuB,OAG9BE,GAA2B,KAAKF,8LAMhCG,GAAuB,IAAI1B,OADD,yBAI1B2B,GAAmB,IAAI3B,OADD,gCAGtB4B,GAAiB,IAAI5B,OAAO,mBAC5B6B,GAAc,IAAI7B,OAAO,SAEzB8B,GAAgB,icAEhBC,GAAgB,ydAEhBC,GAAc,IAAIhC,OAAO,YACzBiC,GAAe,IAAIjC,OAAO,YAC1BkC,GAAe,IAAIlC,OAAO,YAG1BmC,GAA+B,IAAInC,OAAO,YAG1CoC,GAAyB,IAAIpC,OAAO,kBAGpCqC,GAAwB,IAAIrC,OAAO,YAEnCsC,GAAuC,CAChD,UAAM,GACN,UAAM,GACN,SAAK,EACL,SAAK,EACL,SAAK,EACL,IAAK,IACL,KAAM,KAEGC,GAAiD,CAC1D,UAAM,GACN,UAAM,KAEGC,GAAgD,CACzD,IAAK,KACL,IAAK,MAEIC,GAAuC,CAEhD,EAESC,GAAiD,CAC9D,EACaC,GAAgD,CAEzD,EAMSC,GAAoBC,GAA8B,QAAXA,EAAmB,EAAI,EAK9DC,GAAa,YAIbC,GAAmB,UAGnBC,IAAuB,KCzGvBC,GAAiBA,KAAA,CAC1BC,QAAS,EACTL,OAAQ,MACRja,MAAO,SACPua,UAAW,OACXC,WAAY,OACZC,mBAAoB,OACpBC,KAAM,SACNzW,QAASnC,IACT6Y,OAAQ,GACRC,YAAa,CAAC,SAAU,SAAU,SAAU,UAC5CC,UAAW,SACX3Y,KAAM,QACN4Y,cAAe,OACfC,UfxC+B,CAC/B/T,KAAM,UACNN,UAAW,UACXsU,kBAAmB,UACnBrT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ5B,WAAW,EACXY,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbhB,YAAY,EACZmB,cAAe,EACfC,cAAe,0CACfrB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACX0S,gBAAiB,EACjB9U,WAAW,EACXM,OAAQ,UACRL,QAAS,QemBT6H,UAAW,QACXiN,UAAWpW,EACXqW,SAAU,OACVC,KAAM,EACNC,cAAe,OACfvN,IAAK,kCACLwN,QAAS,GACTC,QAAQ,EACRC,UAAW,SACXC,QA3C0B,CAC1BC,EAAG,EACHC,EAAG,EACHzb,MAAO,IACPC,OAAQ,KACRyb,KAAM,IACNC,OAAQ,GAsCRC,eAAe,EACf9N,WAAY,GACZ+N,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB/X,eAAgB,MAChBgY,eAlD0B,CAC1BR,EAAG,EACHC,EAAG,EACHzb,MAAO,IACPC,OAAQ,KACRyb,KAAM,IACNC,OAAQ,GA6CRM,QAAS,CACL,IACA,IACA,IACA,KAEJC,WAAY,GACZC,QAAQ,EACRrY,YAAY,EACZsY,cAAe,OACfC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBtY,aAAc2G,EACd4R,YAAa,CACT,QACA,SACA,UAEJC,YAAa,CACTC,iBAAkB,SAClB5M,UAAW,OACX6M,OAAQ,EACR7O,WAAY,QAEhB8O,cAAe,CACX9M,UAAW,OACX6M,OAAQ,EACR7O,WAAY,QAEhB+O,OAAQ,oTAERC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVjP,QAAS,QACTkP,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EACdC,QAAS,kDACTC,gBAAgB,EAChBC,cftEgD,EAChD,EACA,WACA,EACA,WemEAC,cfvEgD,EAChD,EACA,WACA,EACA,WeoEAC,gBfxEgD,EAChD,EACA,WACA,EACA,WeqEAC,kBfzEgD,EAChD,EACA,WACA,EACA,WesEAC,ef1EgD,EAChD,EACA,WACA,EACA,WeuEAC,Kb1G8C,CAAC,Ga4G/CC,aAAc,CAAC,IAINC,GAAyBA,KAAA,CAClCC,GAAIC,iBACD/D,OAGMgE,GAAeA,KAAA,CACxB/D,QAAS,EACTL,OAAQ,MAERja,MAAO,SACPua,UAAW,OACXC,WAAY,OACZC,mBAAoB,OACpBC,KAAM,SACNzW,QAASnC,IACT6Y,OAAQ,GACRE,UAAW,SACXD,YAAa,CAAC,SAAU,SAAU,SAAU,UAC5C1Y,KAAM,GACN4Y,cAAe,OACfC,UfrI+B,CAC/B/T,KAAM,UACNN,UAAW,UACXsU,kBAAmB,UACnBrT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ5B,WAAW,EACXY,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbhB,YAAY,EACZmB,cAAe,EACfC,cAAe,0CACfrB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACX0S,gBAAiB,EACjB9U,WAAW,EACXM,OAAQ,UACRL,QAAS,QegHT6H,UAAW3J,EACX4W,UAAWpW,EACXqW,SAAU,OACVC,KAAM,EACNC,cAAe,OACfvN,IAAK,kCACLwN,QAAS,GACTE,UAAW,SACXD,QAAQ,EACRE,QAAS,CACLC,EAAG,EACHC,EAAG,EACHzb,MAAO,IACPC,OAAQ,KACRyb,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACf9N,WAAY,GACZ+N,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB/X,eAAgB,MAChBgY,eAAgB,CACZR,EAAG,EACHC,EAAG,EACHzb,MAAO,IACPC,OAAQ,KACRyb,KAAM,IACNC,OAAQ,GAEZM,QAAS,GACTC,WAAY,GACZC,OAAQ,KACRrY,YAAY,EACZsY,cAAe,OACfC,eAAgB,GAChBC,iBAAkB,IAClBC,kBAAmB,IACnBtY,aAAc2G,EACd4R,YAAa,GACbC,YAAa,CACTC,iBAAkB,SAClB5M,UAAW,OACX6M,OAAQ,EACR7O,WAAY,QAEhB8O,cAAe,CACX9M,UAAW,OACX6M,OAAQ,EACR7O,WAAY,QAEhB+O,OAAQ,GACRC,MAAO,GACPC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVjP,QAAShJ,EACTkY,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EAEdC,QAAS,GACTC,gBAAgB,EAChBC,cfxKgD,EAChD,EACA,WACA,EACA,WeqKAC,cfzKgD,EAChD,EACA,WACA,EACA,WesKAC,gBf1KgD,EAChD,EACA,WACA,EACA,WeuKAC,kBf3KgD,EAChD,EACA,WACA,EACA,WewKAC,ef5KgD,EAChD,EACA,WACA,EACA,WeyKAC,Kb5M8C,CAAC,Ga6M/CC,aAAc,CAAC,IAGNK,GAAc,CACvB,CACIjb,KAAM,OACNkb,QAAS,YACT1e,MAAO,OACPwF,SAAU,2BACVmZ,WAAY,oCAEhB,CACInb,KAAM,OACNkb,QAAS,aACT1e,MAAO,OACPwF,SAAU,2BACVmZ,WAAY,qCAEhB,CACInb,KAAM,WACNxD,MAAO,WACPwF,SAAU,+BACVmZ,WAAY,MAEhB,CACInb,KAAM,OACNxD,MAAO,SACPwF,SAAU,6BACVmZ,WAAY,OAIPC,GAAmB,CAC5B,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WAG9CC,GAAgB,CACzB,UAAW,CACP7e,MAAO,eACPK,MAAO,IACPC,OAAQ,IACRwe,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,UAAW,CACP/e,MAAO,eACPK,MAAO,IACPC,OAAQ,IACRwe,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,WAAY,CACR/e,MAAO,gBACPK,MAAO,IACPC,OAAQ,KACRwe,MAAO,EACPC,aAAc,CAAC,IAAK,OAExB,YAAa,CACT/e,MAAOmF,cAAA,OAAK6Z,MAAO,CAAEpa,MAAO,uBAAwBqa,SAAC,mBACrD5e,MAAO,KACPC,OAAQ,KACRwe,MAAO,EACPC,aAAc,CAAC,KAAM,OAEzB,YAAa,CACT/e,MAAOmF,cAAA,OAAK6Z,MAAO,CAAEpa,MAAO,uBAAwBqa,SAAC,mBACrD5e,MAAO,KACPC,OAAQ,KACRwe,MAAO,EACPC,aAAc,CAAC,KAAM,OAEzB,YAAa,CACT/e,MAAOmF,cAAA,OAAK6Z,MAAO,CAAEpa,MAAO,uBAAwBqa,SAAC,mBACrD5e,MAAO,KACPC,OAAQ,KACRwe,MAAO,EACPC,aAAc,CAAC,KAAM,QAGhBG,GAAiB,CAC1BL,GAAc,WACdA,GAAc,WACdA,GAAc,YACdA,GAAc,aACdA,GAAc,aACdA,GAAc,cAILM,GAAmB,CAC5B,CACIpf,MAAO,MACPC,MAAO,QAEX,CACID,MAAO,OACPC,MAAO,UCxTFof,GAAeA,CAAC/e,EAAeC,KACxC,MAAM+e,EAASC,SAASC,cAAc,UACtCF,EAAOhf,MAAQA,EACfgf,EAAO/e,OAASA,EAChB,MAAMkf,EAAUH,EAAOI,WAAW,MAElC,MAAO,CACHJ,SACAG,UACH,E,uJCeE,SAASE,GAAkBC,EAAgBC,GAC9C,IAMIzU,EACA0U,EACAC,EACAC,EACAC,EACAC,EAXAC,EAAiBP,EAAMQ,MAAM7U,OAC7B6U,EAAQR,EAAMQ,MAAMC,MAAM,GAC1BC,EAAS,IAAIC,MAAMJ,GACnBK,EAAO,EACPC,EAAY,EACZC,EAAiB,EAQrB,IADAb,EAAWA,GAAY,EAClBzU,EAAQ+U,EAAiB,EAAG/U,GAAS,IAAKA,EAC3CkV,EAAOlV,GAASoV,EAChBA,GAAQJ,EAAMhV,GACdsV,GAAkBN,EAAMhV,GACxBqV,EAAYE,KAAKC,IAAIH,EAAWL,EAAMhV,IAI1C,IAAIyV,EAAyBC,KAAKC,aAAaP,GAC3CQ,EAAoBC,KAAQJ,EAAwBT,EAAMC,MAAM,GAAIC,EAAOD,MAAM,GAAI,GACrFa,EAAMJ,KAAKK,aAAaV,GACxBW,EAAMN,KAAKK,aAAaV,GAMxBY,EAAyBP,KAAKC,aAAaP,GAC3Cc,EAAoBL,KAAQI,EAAwBjB,EAAMC,MAAM,GAAIC,EAAOD,MAAM,GAAI,GACzF,IAAK,IAAIkB,EAAW,EAAGA,EAAW3B,EAAMQ,MAAM,GAAImB,IAC9C,IAAK,IAAIC,EAAc,EAAGA,EAAc5B,EAAMQ,MAAM,GAAIoB,IACpDF,EAAkBG,IAAIF,EAAUC,EAAa5B,EAAM8B,IAAIH,EAAUC,GAAe,EAAId,GAO5F,IA1DJ,SAAgBd,EAAsC+B,EAAkBC,GACpE,IAAIzQ,EAAW2O,EAAoB+B,EAATC,EAAM,EAAsBC,EAAMpB,KAAKoB,IACjE,IAAK5Q,EAAI,EAAGA,EAAIwQ,IAAYxQ,EAAG,CAE3B,IADA0Q,EAAYjC,EAAMkC,KACbhC,EAAI,EAAGA,EAAI8B,IAAY9B,EACxB+B,EAAYE,EAAInC,EAAMkC,GAAMD,EAAY,GACxCjC,EAAMkC,KAASD,EAEnB,IAAK/B,EAAI,EAAGA,EAAI8B,IAAY9B,EACxB+B,EAAYE,EAAInC,IAAQkC,GAAMD,EAAY,GAC1CjC,EAAMkC,GAAOD,EAEjBC,GAAOF,CACX,CACJ,CAyCII,CAAOV,EAAkBW,KAAOzB,EAAOJ,EAAMD,EAAiB,GAAM,EAA+B,EAA5BC,EAAMD,EAAiB,IAGzF/U,EAAQ+U,EAAiB,EAAG/U,EAAQ,IAAKA,EAAO,CAGjD,IAFA4U,EAAagB,EAAkBV,OAC/BP,EAAI,EACCD,EAAI1U,EAAQ,EAAG0U,EAAIK,IAAkBL,EACtCE,EAAWF,GAAKC,EAChBA,GAAKK,EAAMN,GAEf,IAAKA,EAAI1U,EAAQ,EAAG0U,GAAK,IAAKA,EAC1BE,EAAWF,GAAKC,EAChBA,GAAKK,EAAMN,GAMf,GAJAoC,KAAIC,OAAOnB,EAAmBM,GAG9BpB,EAAuBE,EAAMhV,EAAQ,GAChCgX,SAASvC,GAEP,GAAiB,IAAbA,EACPwC,KAASrB,EAAkBiB,KAAOzB,EAAON,EAAwB,EAA0B,EAAvBA,EAA0BgB,EAAKE,QAChG,GAAiB,IAAbvB,EACPyC,KAAStB,EAAkBiB,KAAOzB,EAAON,EAAwB,EAA0B,EAAvBA,EAA0BgB,EAAKE,OAChG,IAAIvB,EAAW,EAClB,MAAM,IAAI0C,MAAM,4CAEhBC,KAASxB,EAAkBiB,KAAOzB,EAAON,EAAwB,EAA0B,EAAvBA,EAA0BgB,EAAKE,EAAKvB,EAC5G,MATI4C,KAAWzB,EAAkBiB,KAAOzB,EAAON,EAAwB,EAA0B,EAAvBA,EAA0BgB,EAAKE,GAYzGnB,EAAMqB,EACNA,EAAoBN,EACpBA,EAAoBf,CACxB,CASA,OANAiC,KAAIC,OAAOvC,EAAO0B,GAElBR,KAAK4B,WAAWrB,GAChBP,KAAK4B,WAAW7B,GAChBC,KAAK6B,WAAWzB,GAChBJ,KAAK6B,WAAWvB,GACTxB,CACX,C,2CCtGA,MAAMgD,GAAuB,CACzBC,SAAU,CACN,SAAY,CAAEpf,KAAM,IAAKzD,MAAO,MAChC,EAAK,CAAEyD,KAAM,IAAKzD,MAAO,EAAM,MAEnC8iB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFxM,KAAK,MACPyM,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFzM,KAAK,OAEL0M,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAExf,KAAM,IAAKzD,MAAO,MAC9BkjB,EAAG,CAAEzf,KAAM,IAAKzD,MAAO,EAAM,MAEjC8iB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFxM,KAAK,MACPyM,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFzM,KAAK,OAEL6M,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEpf,KAAM,KAAMzD,MAAO,GAC7B,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,GAAM,CAAEyD,KAAM,KAAMzD,MAAO,GAC3B,WAAc,CAAEyD,KAAM,KAAMzD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyD,KAAM,IAAKzD,MAAO,OAEtC8iB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFxM,KAAK,MACPyM,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACFzM,KAAK,OAGE8M,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACPlgB,KAAM2f,KAIH,MAAMQ,GAUTC,YAAYC,EAAiCC,GAAkC,KAT/EC,cAAQ,OACRC,oBAAc,OACdC,sBAAgB,OAChBC,cAAQ,OACRL,YAAM,OACNxE,YAAM,OACN8E,qBAAe,OACfC,qBAAe,EAGXC,KAAKhF,OAASyE,EACdO,KAAKR,OAAS,IAAKT,QAAwCS,GAC3DQ,KAAKC,MACT,CAEAC,MAAM5d,GAAiE,IAAvCkd,EAA+BW,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/D,MAAM,MAAEnkB,EAAK,OAAEC,GAAWqG,EACpB+d,EAAUL,KAAKM,WAAWhe,GAChC0d,KAAKJ,iBAAiBW,WAAW7kB,MAAQ2kB,EACzCL,KAAKJ,iBAAiBY,WAAW9kB,MAAQ,CAACM,EAAOC,EAAQ,GACzD+jB,KAAKN,SAASe,QAAQzkB,EAAOC,GAC7B+jB,KAAKL,eAAec,QAAQzkB,EAAOC,GACnC+jB,KAAKL,eAAee,MAAMV,KAAKW,gBAAgB3kB,EAAOC,IAEtD,MAAM,YAAE+iB,EAAW,cAAEC,EAAa,eAAEC,EAAc,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,EAAK,KAAElgB,GAAS,IAClF6gB,KAAKR,UACLA,GAGPQ,KAAKY,UAAU5B,GACfgB,KAAKa,YAAY5B,GACjBe,KAAKc,aAAa5B,GAClBc,KAAKe,aAAa5B,EAAWnjB,EAAOC,GACpC+jB,KAAKgB,oBAAoB5B,EAAUC,GACnCW,KAAKiB,QAAQ9hB,GAEb6gB,KAAKL,eAAeuB,OAAO,EAAI,GACnC,CAEAjB,OACI,MAAMkB,EAAS,IAAIC,MAAyB,GAAQ,GAAO,IAAO,GAAQ,EAAG,GACvEC,EAAQ,IAAID,KACZE,EAAoB,IAAIC,KAAWF,EAAOF,GAEhDnB,KAAKN,SAAW,IAAI0B,KAAoB,CAAEI,OAAO,EAAMC,WAAW,EAAMzG,OAAQgF,KAAKhF,SACrFgF,KAAKN,SAASgC,cAAc,EAAU,GAEtC1B,KAAKJ,iBAAmBwB,KAAoBO,MAAM9C,GAAgBN,UAElEyB,KAAKH,SAAW,IAAIuB,KAAqB,CACrC3C,eAAgBI,GAAgBJ,eAChCD,aAAcK,GAAgBL,aAC9BD,SAAUyB,KAAKJ,mBAEnBI,KAAKH,SAAS+B,aAAc,EAE5B,MAAMC,EAAe,IAAIT,KAAoB,EAAG,EAAG,EAAG,GAChDU,EAAa,IAAIV,KAAWS,EAAc7B,KAAKH,UACrDwB,EAAMU,IAAID,GAEV9B,KAAKD,gBAAkB,IAAIiC,KAAWtD,IACtCsB,KAAKF,gBAAkB,IAAIkC,KAAW1D,IACtC0B,KAAKF,gBAAgBmC,gBAAiB,EAEtCjC,KAAKL,eAAiB,IAAIuC,KAAelC,KAAKN,SAAUM,KAAKW,mBAC7DX,KAAKL,eAAewC,QAAQb,GAC5BtB,KAAKL,eAAewC,QAAQnC,KAAKD,iBACjCC,KAAKL,eAAewC,QAAQnC,KAAKF,gBACrC,CACAa,gBAAgB3kB,EAAgBC,GAC5B,OAAO,IAAImlB,KAAwBplB,EAAOC,EAAQ,CAC9CmmB,UAAWhB,KACXiB,UAAWjB,KACXrL,OAAQqL,KACRkB,eAAe,GAEvB,CACAhC,WAAWhe,GACP,MAAM+d,EAAU,IAAIe,KAAc9e,GAKlC,OAJA+d,EAAQkC,MAAQlC,EAAQmC,MAAQpB,KAChCf,EAAQ+B,UAAY/B,EAAQgC,UAAYjB,KACxCf,EAAQoC,WAAa,EACrBpC,EAAQqC,aAAc,EACfrC,CACX,CAEAO,UAAU+B,GAEF3C,KAAKJ,iBAAiBgD,QAAQlnB,MAD9BinB,GACuC,EAED,CAE9C,CAEA9B,YAAY8B,GAEJ3C,KAAKJ,iBAAiBiD,QAAQnnB,MAD9BinB,GACuC,EAED,CAE9C,CAEA7B,aAAa6B,GAEL3C,KAAKJ,iBAAiBkD,QAAQpnB,MAD9BinB,GACuC,EAED,CAE9C,CAEA5B,aAAarlB,EAAeM,EAAeC,GACvC+jB,KAAKD,gBAAgBxB,SAASK,EAAEljB,MAAQA,EAAQM,EAAQ,EACxDgkB,KAAKF,gBAAgBvB,SAASwE,EAAErnB,MAAQA,EAAQO,EAAS,CAC7D,CAEA+kB,oBAAoB5B,EAAkBC,GAClCW,KAAKJ,iBAAiBoD,GAAGtnB,MAAQ,EAAM0jB,GAAY,EAAM/C,KAAK4G,IAAI,EAAK5D,GAC3E,CAEA4B,QAAQ9hB,GACJ6gB,KAAKJ,iBAAiBzgB,KAAKzD,MAAiB,UAATyD,EAAmB,EAAI,CAC9D,ECtXG,MAAM+jB,GAAgBA,CAACC,EAAkBC,KAC5C,MAAMC,GAAeF,EAAW,IAAM9G,KAAKiH,GAAK,IAC1CC,GAAuBH,EAAa,IAAM/G,KAAKiH,GAAK,IACpD9L,EAAI6E,KAAKmH,IAAIH,GAAehH,KAAKmH,IAAID,GACrC9L,EAAI4E,KAAKoH,IAAIJ,GAAehH,KAAKmH,IAAID,GACrCG,EAAIrH,KAAKoH,IAAIF,GAEnB,MAAO,CAAClH,KAAKsH,MAAU,IAAJnM,GAAW,IAAK6E,KAAKsH,MAAU,IAAJlM,GAAW,IAAK4E,KAAKsH,MAAU,IAAJD,GAAW,IAAI,EAE/EE,GAAcC,IAuBpB,IAvBqB,YACxBC,EAAW,eACXC,EAAc,cACdC,EAAa,UACbC,EAAY,EAAC,cACbC,EAAgB,CAAC,IAAK,IAAK,KAAI,cAE/BC,EAAa,WACbf,EAAU,SACVD,EAAQ,aACRiB,GAAe,EAAE,aACjBC,EAAe,GAYlBR,EACG,MAAMS,EAAMR,EAAY1I,WAAW,MAEnC,IAAKkJ,EAAK,OAGV,MAAMroB,EAAuB,OAAd8nB,QAAc,IAAdA,IAAkBD,EAAY7nB,OACvCD,EAAqB,OAAbgoB,QAAa,IAAbA,IAAiBF,EAAY9nB,MAGrC2hB,EADY2G,EAAIC,aAAa,EAAG,EAAGvoB,EAAOC,EAAQ,CAAEuoB,oBAAoB,IACvD7G,KAEjB8G,EAAkDN,IAE3B,kBAAff,GAA+C,kBAAbD,EACtCD,GAAcE,EAAYD,GAC1B,CAAC,EAAG,EAAG,IACXuB,EAAoBrI,KAAKsI,KAAKF,EAAsB,IAAM,EAAIA,EAAsB,IAAM,EAAIA,EAAsB,IAAM,GAC1HG,EAA0B,CAC5BH,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,GAG/B,GAAK/G,EAEL,IAKI,MAAMkH,EAAiB,IAAIC,kBAAkB9oB,EAAQC,GACrD,IAAK,IAAI4Q,EAAI,EAAGA,EAAI8Q,EAAK1W,OAAQ4F,GAAK,EAC7B8Q,EAAK9Q,IAAM8Q,EAAK9Q,EAAI,IAAM8Q,EAAK9Q,EAAI,IAAM8Q,EAAK9Q,EAAI,GACnDgY,EAAehY,EAAI,GAAK,EAExBgY,EAAehY,EAAI,GAAK,EAGhC,MAAMkY,EAAc1J,GAAkBsB,KAAQkI,EAAgB,CAAC5oB,EAAQD,KACjEgpB,EAAMD,EAAYjJ,MAAM,GAAImJ,EAASF,EAAYjJ,MAAM,GACvDoJ,EAAe,IAAIJ,kBAAkB9oB,EAAQC,EAAS,GAGtDkpB,EAAuB9I,KAAK+I,MAAM,IAAMnB,GAC9C,IAAK,IAAIhH,EAAW,EAAGA,EAAW+H,EAAK/H,IACnC,IAAK,IAAIoI,EAAW,EAAGA,EAAWJ,EAAQI,IAAY,CAClD,MAAMC,EAA+C,GAA/BrI,EAAWjhB,EAAQqpB,GACnCE,EAAcR,EAAY3H,IAAIH,EAAUoI,GAE9CH,EAAaI,GAAgBC,EAAcJ,EAC3CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAqB,IAAhBC,EAAoB,EAAI,GAC7D,CAIJ,MAAMC,EAAkBvK,SAASC,cAAc,UAC/CsK,EAAgBxpB,MAAQA,EACxBwpB,EAAgBvpB,OAASA,EACzBupB,EAAgBpK,WAAW,MAAMqK,aAC7B,IAAIC,UAAUR,EAAclpB,EAAOC,GACnC,EACA,GAMJ,MAAM0pB,EAAkB1K,SAASC,cAAc,UAC/CyK,EAAgB3pB,MAAQA,EACxB2pB,EAAgB1pB,OAASA,EACU,IAAIqjB,GAAkBP,KAAqC4G,GACnEzF,MAAMsF,EAAiB,CAC9CrG,UAAW,EACXE,MAAO,EACPD,SAAU,IACVJ,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChB/f,KAAM2f,KAMV,MAAM8G,EAAwB3K,SAASC,cAAc,UACrD0K,EAAsB5pB,MAAQA,EAC9B4pB,EAAsB3pB,OAASA,EAE/B,MAAM4pB,EAAyBD,EAAsBxK,WAAW,MAChEyK,EAAuBC,UACnBH,EACA,EACA,EACA3pB,EACAC,GAEJ,MAAM8pB,ECzIiBC,EAC3BC,EACAjqB,EACAC,EACAiqB,EACAC,EACAC,KAEA,MAAMC,EAAS,IAAIvB,kBAAkB9oB,EAAQC,EAAS,GAChDqqB,EAAQjK,KAAK+I,MAAMc,EAAW,GAGpC,SAASK,EAAc/O,EAAWC,EAAW+O,EAAYC,GACrD,OAAOpK,KAAKqK,OAAOlP,EAAIgP,IAAO,GAAK/O,EAAIgP,IAAO,IAAM,EAAIL,GAAc,GAC1E,CAGA,SAASO,EAAYC,EAAYC,GAC7B,OAAOxK,KAAKqK,OAAOE,EAAKC,IAAO,IAAM,EAAIV,GAAc,GAC3D,CAGA,IAAK,IAAI1O,EAAI,EAAGA,EAAIxb,EAAQwb,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIxb,EAAOwb,IAAK,CAC5B,IAAIsP,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAGzC,IAAK,IAAIC,GAAMZ,EAAOY,GAAMZ,EAAOY,IAC/B,IAAK,IAAIC,GAAMb,EAAOa,GAAMb,EAAOa,IAAM,CACrC,MAAMC,EAAK5P,EAAI2P,EACTE,EAAK5P,EAAIyP,EAGf,GAAIE,GAAM,GAAKC,GAAM,GAAKD,EAAKprB,GAASqrB,EAAKprB,EAAQ,CACjD,MAAMqrB,EAAgC,GAAjB7P,EAAIzb,EAAQwb,GAC3B+P,EAAoC,GAAnBF,EAAKrrB,EAAQorB,GAG9BI,EAAUvB,EAAUqB,GACpBG,EAAUxB,EAAUqB,EAAc,GAClCI,EAAUzB,EAAUqB,EAAc,GAClCK,EAAY1B,EAAUsB,GACtBK,EAAY3B,EAAUsB,EAAgB,GACtCM,EAAY5B,EAAUsB,EAAgB,GAQtCpX,EALUoW,EAAca,EAAIC,EAAI7P,EAAGC,GAC1BkP,EAAYa,EAASG,GACrBhB,EAAYc,EAASG,GACrBjB,EAAYe,EAASG,GAKpCf,GAAQa,EAAYxX,EACpB4W,GAAQa,EAAYzX,EACpB6W,GAAQa,EAAY1X,EACpB8W,GAAQ9W,CACZ,CACJ,CAIJ,MAAM2X,EAAgC,GAAjBrQ,EAAIzb,EAAQwb,GACjC6O,EAAOyB,GAAehB,EAAOG,EAC7BZ,EAAOyB,EAAc,GAAKf,EAAOE,EACjCZ,EAAOyB,EAAc,GAAKd,EAAOC,EACjCZ,EAAOyB,EAAc,GAAK7B,EAAU6B,EAAc,EACtD,CAGJ,OAAOzB,CAAM,EDkEYL,CACjBH,EAAuBtB,aAAa,EAAG,EAAGvoB,EAAOC,GAAQ0hB,KACzD3hB,EACAC,EACA,EACA,GACA,IAQE8rB,EAAa,IAAIjD,kBAAkB9oB,EAAQC,EAAS,GAC1D,IAAK,IAAI+rB,EAAW,EAAGA,EAAWrK,EAAK1W,OAAQ+gB,GAAY,EAAG,CAC1D,IAAIZ,EAAMrB,EAAaiC,GAAY,MAAS,EACxCX,EAAMtB,EAAaiC,EAAW,GAAK,MAAS,EAC5CC,EAAMlC,EAAaiC,EAAW,GAAK,MAAS,EAChD,MAGME,GAHgBd,EAAKxC,EAAwB,GAC7CyC,EAAKzC,EAAwB,GAC7BqD,EAAKrD,EAAwB,IACO,GAAKvI,KAAK8L,IAAI/D,GAAgB/H,KAAK8L,IAAI9D,IAC3E+D,EAAY/L,KAAKC,IAAI8H,EAAc/H,KAAKoB,IAAIyK,EAAmB7D,IAGrE0D,EAAWC,GAAY3L,KAAKsH,MAAMhG,EAAKqK,GAAY9D,EAAc,GAAKkE,GACtEL,EAAWC,EAAW,GAAK3L,KAAKsH,MAAMhG,EAAKqK,EAAW,GAAK9D,EAAc,GAAKkE,GAC9EL,EAAWC,EAAW,GAAK3L,KAAKsH,MAAMhG,EAAKqK,EAAW,GAAK9D,EAAc,GAAKkE,GAC9EL,EAAWC,EAAW,GAAKrK,EAAKqK,EAAW,EAC/C,CAEA,OAAO,IAAItC,UAAUqC,EAAY/rB,EAAOC,EAC5C,CAAE,MAAOosB,GAEL,OADAC,QAAQC,MAAM,gCAAiCF,GACxC,IACX,GE5KSG,GAAgB,SACzBC,EACAC,GAEE,IADFC,EAAkBxI,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAIyI,SAAiBC,IACxBC,YAAW,KACP,GAAKL,EAAYM,SAAYL,EAEzB,IACID,EAAYM,QAAQC,QAAOC,IACvB,GAAKA,EACA,CACD,MAAMC,EAAMC,IAAIC,gBAAgBH,GAChC,GAAKC,EACA,CACD,MAAMG,EAAQ,IAAIC,MAClBD,EAAM7nB,IAAM0nB,EACZG,EAAME,OAAS,KACXb,EAAU5C,UAAUuD,EAAO,EAAG,GAC9BF,IAAIK,gBAAgBN,GACpBL,GAAQ,EAAK,EAEjBQ,EAAMI,QAAU,KACZN,IAAIK,gBAAgBN,GACpBL,GAAQ,EAAM,CAEtB,MAbUA,GAAQ,EActB,MAjBWA,GAAQ,EAiBnB,GAER,CAAE,MAAOR,GAELK,EAAU5C,UAAU2C,EAAYM,QAAS,EAAG,GAC5CT,QAAQC,MAAMF,GACdQ,GAAQ,EACZ,MA5BoCA,GAAQ,EA6BhD,GACY,GAAbF,EAAgB,GAE3B,EC1Bae,GAAmBC,GACN,gBAAfA,EAAK7tB,QAA4B8tB,GAAaD,GAE5CC,GAAgBD,GACH,UAAfA,EAAK7tB,OAAoC,SAAf6tB,EAAK7tB,OAAmC,gBAAf6tB,EAAK7tB,MAgBtD+tB,GAAwB/tB,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,GAAqC,SAAVA,GAA8B,cAAVA,EAA8B,OAC1E,QAGEguB,GAAoBhuB,IACrB8tB,GAAa,CAAE9tB,WAAYiuB,GAAgBjuB,GAG1CkuB,GAAoBluB,GACtB,CAAC,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUmuB,SAASnuB,GAGzEiuB,GAAmBjuB,GACrB,CAAC,QAAQmuB,SAASnuB,IAAUkuB,GAAiBluB,GAG3CouB,GAAoBA,CAACC,EAA+CrqB,KAAyB,IAAD+jB,EAAAuG,EAAAC,EAAAC,EAAAC,EACrG,MAAM,MACFzuB,EAAK,aACLyW,EAAY,cACZC,EAAa,gBACbL,EAAe,iBACfC,EAAgB,iBAChBC,EAAgB,yBAChBC,GACA6X,EACEK,EAAqB,OAAL1uB,QAAK,IAALA,IAAS,SACzB2uB,EAAmC,SAAjBlY,EAA0BiY,EAAgBjY,EAE5DmY,EAEe,QAFGN,EAAwB,SAApBjY,EACrBrS,EAAa,QAAU2qB,EACxBtY,SAAe,IAAAiY,IAAKI,EAW1B,MAAO,CACHjY,aAAckY,EACdjY,cAhBgF,QAA9DqR,EAAsB,SAAlBrR,EAA2BiY,EAAkBjY,SAAa,IAAAqR,IAAK2G,EAiBrFrY,gBAAiBuY,EACjBtY,iBAZkB,QAFGiY,EAAyB,SAArBjY,EACvBsY,EACAtY,SAAgB,IAAAiY,IAAKG,EAavBnY,iBAVkB,QAFQiY,EAAyB,SAArBjY,EAC5BqY,EACArY,SAAgB,IAAAiY,IAAKE,EAWvBlY,yBAR0B,QAFQiY,EAAiC,SAA7BjY,EACpCoY,EACApY,SAAwB,IAAAiY,IAAKC,EASlC,E,wBCnFE,MAAonCG,GAAYtC,IAAI,IAAI5M,GAAG4M,EAAEA,EAAEuC,UAAU,EAAEvC,EAAEphB,OAAO,IAAI4jB,MAAM,QAAK,GAAGxC,EAAE5M,EAAE,GAAG,EAAEA,EAAExU,OAAO,CAACwU,EAAEA,EAAE,GAAG,IAAI,IAAIqP,KAAKrP,EAAE4M,GAAGA,EAAEA,EAAEwC,MAAMC,IAAI9Y,KAAKqW,EAAE0C,MAAM,CAAC,OAAOC,GAAc3C,EAAE,EAAE,EAAE2C,GAAc,SAAC3C,GAAS,IAAP5M,EAAC0E,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAC,EAAK,MAAM2K,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOG,EAAEA,CAAC5C,EAAE5M,IAAI4M,EAAE6C,QAAQ,IAAIhY,OAAO,IAAIuI,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,OAAOA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,KAAK,MAAK4M,GAAGA,IAAI5M,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEqP,EAAE7jB,SAASwU,EAAE4M,EAAE4C,EAAE5C,EAAEyC,EAAErP,SAAS,IAAIA,EAAEqP,EAAE7jB,OAAOwU,KAAK4M,EAAE4C,EAAE5C,EAAEyC,EAAErP,IAAI,OAAO4M,CAAC,EC+InkD8C,GAAsB,CA5IxB/U,QAAS,KACTL,OAAQ,KACRja,MAAO,KACPwa,WAAY,KACZD,UAAW,KACXE,mBAAoB,MACpBC,KAAM,KACNzW,QAAS,CACLqrB,QAAS,KACTvtB,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEXitB,SAAU,OACVntB,UAAW,OACXC,WAAY,OACZF,SAAU,QAEdwY,OAAQ,KACRC,YAAa,KACb9M,IAAK,KACLwN,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXX,UAAW,MACXY,QAAS,CACL6T,QAAS,MACT5T,EAAG,MACHC,EAAG,MACHzb,MAAO,MACPC,OAAQ,MACRyb,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACf9N,WAAY,KACZgO,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClB/X,eAAgB,MAChBgY,eAAgB,CACZoT,QAAS,MACT5T,EAAG,MACHC,EAAG,MACHzb,MAAO,MACPC,OAAQ,MACRyb,KAAM,MACNC,OAAQ,OAEZ3Z,KAAM,KACN4Y,cAAe,MACf6B,YAAa,CACT2S,QAAS,KACT1S,iBAAkB,OAClB5M,UAAW,MACX6M,OAAQ,MACR7O,WAAY,OAEhB8O,cAAe,CACXwS,QAAS,KACTtf,UAAW,MACX6M,OAAQ,MACR7O,WAAY,OAEhB+M,UAAW,CACPuU,QAAS,KACThnB,YAAa,OACb2S,gBAAiB,OACjB1S,UAAW,OACX7B,UAAW,OACXM,KAAM,OACNI,cAAe,OACfC,cAAe,OACflB,UAAW,OACXH,YAAa,OACbC,WAAY,OACZC,UAAW,OACX8U,kBAAmB,QACnBlU,UAAW,OACXG,YAAa,QACbgB,YAAa,QACbpB,UAAW,OACXT,QAAS,OACTK,OAAQ,OACRqB,WAAY,OACZH,YAAa,OACbE,cAAe,QACfD,cAAe,SAEnBqG,UAAW,KACXiN,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACVgB,QAAS,KACTC,WAAY,KACZC,OAAQ,KACRrY,WAAY,KACZsY,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBtY,aAAc,MACduY,YAAa,KACbK,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVjP,QAAS,MACTkP,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBC,KAAM,KACNC,aAAc,KAGduR,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACT5T,EAAG,MACHC,EAAG,MACHzb,MAAO,MACPC,OAAQ,MACRyb,KAAM,MACNC,OAAQ,QAQH8T,GAAmB,SAC5B9B,GAEE,IADF+B,EAA+BvL,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAGgL,GAElC,MAAMQ,EAAqC,CAAC,EACtCC,EAAiB,IAAKjC,GAkB5B,OAhBAjoB,OAAOmqB,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwB/P,MAAMgQ,QAAQD,GAMrE,CACH,MAAME,EAAcR,EAAWK,GAEJ,kBAAhBG,IAA0BP,EAAcO,GAAeF,EACtE,KAVyF,CAAC,IAADG,EACrF,MAAMC,EAA6B,QAAvBD,EAAGT,EAAWK,UAAS,IAAAI,OAAA,EAApBA,EAAsBf,QAEjCgB,IACAT,EAAcS,GAAUX,GAAiBO,EAAYN,EAAWK,IAExE,CAIA,IAGGJ,CACX,EAEaU,GAAqB,SAC9BV,GAEE,IADFD,EAA+BvL,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAGgL,GAElC,MAAMmB,EAAwC,CAAC,EAgB/C,OAfA5qB,OAAOmqB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBvQ,MAAMgQ,QAAQO,GAOvC,MAA7Bb,EAAca,KACdF,EAAiBC,GAAWZ,EAAca,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAed,EAAcc,KAC7BH,EAAiBC,GAAWF,GAAmBV,EAAcc,GAAcf,EAAWa,IAE9F,CAIA,IAEGD,CACX,EACaI,GAAiC,SAC1Cf,GAEE,IADFD,EAA+BvL,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAGgL,GAElC,MAAMwB,EAAmD,kBAAlBhB,EACjCiB,KAAKC,MAAMlC,GAAYmC,mBAAmBnB,KAC1CA,EAEAoB,EAAuC,CAAC,EAgB9C,OAfArrB,OAAOmqB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBvQ,MAAMgQ,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAcf,EAAWa,IAEnH,CAIA,IAEGQ,CACX,EAmBaC,GAAkB,SAACrD,GAAwE,IAADsD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQpN,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAGhG,YAE3DoT,EAASnX,QAChB,MAAMoX,EAAe,CACjBvT,GAAIC,iBACDqT,KACA5L,aAAMgI,IA6Bb,GA1BA6D,EAAa/U,YAAc,IACpB0B,KAAe1B,eACf+U,EAAa/U,aAGc,MAA9B+U,EAAa5U,cACb4U,EAAa5U,cAAgB,IACtBuB,KAAevB,eAGtB4U,EAAa5U,cAAgB,IACtBuB,KAAevB,iBACf4U,EAAa5U,eAII,MAAxB4U,EAAapX,UAAiBoX,EAAapX,QAAU,GAC9B,MAAvBoX,EAAazX,SAAgByX,EAAazX,OAAS,OACrB,MAA9ByX,EAAapV,gBAAuBoV,EAAapV,cAAgB,QACpC,MAA7BoV,EAAavtB,eAAsButB,EAAavtB,aAAe,UACpC,MAA3ButB,EAAalX,aAAoBkX,EAAalX,WAAa,QACjC,MAA1BkX,EAAanX,YAAmBmX,EAAanX,UAAY,QACtB,MAAnCmX,EAAajX,qBAA4BiX,EAAajX,mBAAqB,QACpD,MAAvBiX,EAAa/W,SAAgB+W,EAAa/W,OAAS,IAEzB,MAA1B+W,EAAa7W,YAAmB6W,EAAa7W,UAAY,UACzD6W,EAAa/W,OAAQ,CACrB,MAAMgX,EAAaD,EAAa/W,OAE5BgX,EAAWxD,SlBjRQ,SkBkRnBuD,EAAa/W,OAASgX,EAAWC,QAAOnZ,GlBlRrB,QkBkR8BA,IACjDiZ,EAAa9W,YAAc,CACvB8W,EAAa7W,UACb6W,EAAa7W,UACb6W,EAAa7W,UACb6W,EAAa7W,WAGzB,CA+DA,IA9DIsF,MAAMgQ,QAAQuB,EAAa9W,cAC4B,IAAlD8W,EAAa9W,YAA0BzP,QAA+C,MAA/BumB,EAAa9W,YAAY,KAErF8W,EAAa9W,YAAY,GAAKyD,KAAezD,YAAY,IAExD8W,EAAqBjC,UAAY5B,EAAK/f,MAAK4jB,EAAa5jB,IAAO4jB,EAAqBjC,gBACjFiC,EAAqBjC,QAExBiC,EAAqBhC,cAAgB7B,EAAKpS,UAASiW,EAAajW,QAAWiW,EAAqBhC,oBAC7FgC,EAAqBhC,YAII,MAAZ,QAAjByB,EAACO,EAAa5jB,WAAG,IAAAqjB,IAAI,MAAYO,EAAa5jB,IAAM,IACnB,MAAZ,QAArBsjB,EAACM,EAAapW,eAAO,IAAA8V,IAAI,MAAYM,EAAapW,QAAU,IACzB,MAAZ,QAAvB+V,EAACK,EAAalW,iBAAS,IAAA6V,IAAI,MAAYK,EAAalW,UAAY,UACzC,MAAvBkW,EAAanW,SAAgBmW,EAAanW,QAAS,GAED,mBAA1CmW,EAAaztB,QAAgBsrB,UAA4D,MAAlCmC,EAAaztB,QAAQ3B,YACpFovB,EAAaztB,QAAQ3B,WAAcovB,EAAaztB,QAAgBsrB,gBACxDmC,EAAaztB,QAAgBsrB,UAEzCmC,EAAaztB,QAAU,IAAKnC,OAA4B4vB,EAAaztB,gBAC7DytB,EAAaztB,QAAgBsrB,SAEG,MAAZ,QAAxB+B,EAACI,EAAa1jB,kBAAU,IAAAsjB,IAAI,MAAYI,EAAa1jB,WAAa,IAC1B,MAAZ,QAA5BujB,EAACG,EAAa3V,sBAAc,IAAAwV,IAAI,MAAYG,EAAa3V,eAAiB,IAChC,MAAZ,QAA9ByV,EAACE,EAAazV,wBAAgB,IAAAuV,IAAI,MAAYE,EAAazV,iBAAmB,UAChD,MAA9ByV,EAAa1V,gBAAuB0V,EAAa1V,eAAgB,GACnC,MAA9B0V,EAAa5V,gBACT4V,EAAa1jB,YAAc0jB,EAAa3V,gBAAkB2V,EAAaztB,QAAQ9B,YAEnFuvB,EAAa5V,eAAgB,GAEjC4V,EAAaxV,eAAiB,CT5T9BR,EAAG,EACHC,EAAG,EACHzb,MAAO,IACPC,OAAQ,KACRyb,KAAM,IACNC,OAAQ,KSyTD6V,EAAaxV,gBAGO,MAAvBwV,EAAarV,QAAyC,SAAvBqV,EAAa1xB,QAC5C0xB,EAAarV,QAAS,GAEK,MAA3BqV,EAAatV,aAAoBsV,EAAatV,WAAa,IAE1DsV,EAAqBG,cAAgBhE,EAAKnQ,iBAAgBgU,EAAahU,eAAkBgU,EAAqBG,oBAC3GH,EAAqBG,iBACOvN,IAAhCoN,EAAahU,iBAA8BgU,EAAahU,gBAAiB,GAExEgU,EAAqBlC,WAAa3B,EAAK1Q,WAAUuU,EAAavU,SAAYuU,EAAqBlC,iBAC5FkC,EAAqBlC,SAExBkC,EAAa7T,kBAAiB6T,EAAa7T,gBxBrTA,EAChD,EACA,WACA,EACA,YwBkTK6T,EAAa5T,oBAAmB4T,EAAa5T,kBxBtTF,EAChD,EACA,WACA,EACA,YwBmTK4T,EAAa9T,gBAAe8T,EAAa9T,cxBvTE,EAChD,EACA,WACA,EACA,YwBoTK8T,EAAa/T,gBAAe+T,EAAa/T,cxBxTE,EAChD,EACA,WACA,EACA,YwBqTK+T,EAAa3T,iBAAgB2T,EAAa3T,exBzTC,EAChD,EACA,WACA,EACA,YwBsT6C,qBAAlC2T,EAAapU,mBAAkCoU,EAAapU,kBAAmB,GACjD,qBAA9BoU,EAAalU,eAA8BkU,EAAalU,cAAe,GAC7EkU,EAAarW,gBAAeqW,EAAarW,cAAgB,QAEzD8E,MAAMgQ,QAAQuB,EAAa1T,QAAO0T,EAAa1T,KtB7VN,CAAC,IsB+VlB,IAAzB0T,EAAapX,SAA0C,IAAzBoX,EAAapX,QAAe,CAC1DoX,EAAapX,QAAU,EAEvB,MAAM,cAAEgC,EAAa,WAAEtY,EAAU,IAAEiZ,EAAG,IAAEC,EAAG,OAAEb,EAAM,QAAEF,EAAO,MAAEnc,GAAU0xB,EAMlEI,EAAYhE,GAAa,CAAE9tB,WACO,SAAlBsc,GAA4BtY,KACzCiZ,GAAOC,GAAQb,GAAUF,EAAQhR,QACpC2mB,KAGFJ,EAAazU,IAAM,GACnByU,EAAaxU,IAAM,GAE3B,CAEA,OAAOwU,CACX,EAEaK,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,CACtB,CAAE,MAAOzF,GAEL,OADAC,QAAQC,MAAMF,IACP,CACX,GAES0F,GAA6BD,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,CACnB,CAAE,MAAOzF,GAEL,OADAC,QAAQC,MAAMF,IACP,CACX,GAGS2F,GAA4BA,CACrCrE,EACAsE,KAEA,GAAuB,YAAnBtE,EAAKrS,WAA4BqS,EAAK/R,eAA2C,YAA1B+R,EAAK5R,iBAC5D,MAAO,CACHmW,WAAW,EACX/tB,OAAQsrB,GAAiB9B,IAIjC,MAAMiC,EAAiB,IAAKjC,EAAMvS,QAAS,GAAIS,eAAgB,IAE/D,MAAO,CACHqW,WAAW,EACX/tB,OAAQsrB,GAAiBG,GAC5B,EAICuC,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiChS,KAAK8L,IAAIiG,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBC,GAAkBA,CAACC,EAAmCC,KACxD,MACI7W,OAAQ8W,EACRxyB,OAAQyyB,EACR1yB,MAAO2yB,EACPnX,EAAGoX,EACHnX,EAAGoX,EACHnX,KAAMoX,GACE,OAARP,QAAQ,IAARA,IAAY,CAAC,GAEb5W,OAAQoX,EACR9yB,OAAQ+yB,EACRhzB,MAAOizB,EACPzX,EAAG0X,EACHzX,EAAG0X,EACHzX,KAAM0X,GACG,OAATZ,QAAS,IAATA,IAAa,CAAC,EAElB,OAAOL,GAAqBM,EAAYM,IACjCZ,GAAqBO,EAAYM,IACjCb,GAAqBQ,EAAWM,IAChCd,GAAqBS,EAAOM,IAC5Bf,GAAqBU,EAAOM,IAC5BL,IAAaM,CAAS,EC/bpBC,GAAqBrxB,IAC9B,IACI,OAAOA,EACNsxB,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,KAC1D,CAAE,MAAOjH,GAEL,OADAC,QAAQC,MAAMF,GACPrqB,CACX,GAESuxB,GAAuB1W,IAChC,IACI,OAAOA,EACFyW,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,KAC9D,CAAE,MAAOjH,GAEL,OADAC,QAAQC,MAAMF,GACPxP,CACX,GChBS2W,GAAeA,CAACxxB,EAAcirB,EAAY9pB,KACnD,MAAMswB,EAAOxU,SAASC,cAAc,KAEpCuU,EAAKC,SAAW1xB,EAChByxB,EAAKE,KAAOC,OAAOzG,IAAIC,gBAAgBH,GACvCwG,EAAKI,QAAQC,YAAc,CAAC3wB,EAAMswB,EAAKC,SAAUD,EAAKE,MAAM3d,KAAK,KAEjE,MAAM+d,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAML,OACNM,SAAS,EACTC,YAAY,IAGhBV,EAAKW,cAAcL,GACnBN,EAAKY,QAAQ,ECFXC,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAAC/vB,GAAU,QAETgwB,GAAqBlvB,OAAO4P,QAAQgf,IAAavnB,QAA+B,CAACC,EAAKC,KACxF,MAAO4nB,EAAaC,GAAY7nB,EAGhC,OAFAD,EAAI8nB,GAAYD,EAET7nB,CAAG,GACX,CAAC,GAEE+nB,GAAqC,CACvCzqB,MAAO,QACPD,OAAQ,SACRb,MAAO,SAELwrB,GAAoBtvB,OAAO4P,QAAQyf,IAAYhoB,QAAqC,CAACC,EAAKC,KAC5F,MAAO4nB,EAAaC,GAAY7nB,EAGhC,OAFAD,EAAI8nB,GAAYD,EAET7nB,CAAG,GACX,CAAC,GAEEioB,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsBjwB,OAAO4P,QAAQ2f,IAAcloB,QAA+B,CAACC,EAAKC,KAC1F,MAAO4nB,EAAaC,GAAY7nB,EAGhC,OAFAD,EAAI8nB,GAAYD,EAET7nB,CAAG,GACX,CAAC,GAEE4oB,GAAmC,CACrCtzB,OAAQ,SACRua,OAAQ,SACRgZ,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLvC,KAAM,OACNwC,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChBzrB,KAAM,QACN,cAAe,SAEb0rB,GAAkB1wB,OAAO4P,QAAQsgB,IAAU7oB,QAA+B,CAACC,EAAKC,KAClF,MAAO4nB,EAAaC,GAAY7nB,EAGhC,OAFAD,EAAI8nB,GAAYD,EAET7nB,CAAG,GACX,CAAC,GAEEqpB,GAA0G,CAC5G,OAAU,CACNhwB,IAAK,IAET,KAAQ,CACJA,IAAK,SACLtE,KAAM,QAEV,OAAU,CACNsE,IAAK,wBACLtE,KAAM,iBACN4Y,UAAW,SAEf,MAAS,CACLtU,IAAK,eACLtE,KAAM,QACN4Y,UAAW,SAEf,QAAW,CACPtU,IAAK,uBACLtE,KAAM,WACN4Y,UAAW,QACXF,OAAQ,CAAC,WAGX6b,GAAY5wB,OAAO4P,QAAQ+gB,IAAkBtpB,QAA+B,CAACC,EAAKC,KACpF,MAAOspB,EAAW1B,GAAe5nB,EAGjC,OAFAD,EAAI6nB,EAAYxuB,KAAOkwB,EAEhBvpB,CAAG,GACX,CAAC,GAWSwpB,GAA2BA,CACpC7I,EACA8I,KAEA,MAAM,KACFz0B,EAAI,KACJkZ,EAAI,YACJsB,EAAW,UACXxB,EAAS,OACT6B,EAAM,IACNE,EAAG,IACHC,EAAG,IACHpP,EAAG,QACHwN,EAAO,UACPE,EAAS,SACT2B,EAAQ,QACRM,EAAO,UACPxP,EAAS,MACT+O,EAAK,eACLT,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,aAChBrY,EAAY,WACZH,EAAU,QACVmY,EAAO,MACPnc,EAAK,aACLie,EAAY,UACZlD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTF,GACAkT,EACE+I,EAAiBrD,GAAkBrxB,GACnC20B,EAAmBpD,GAAoB1W,GACvC+Z,EAA2BrD,GAAoBlX,GAC/Cwa,EAAiBvC,GAAYtZ,GAC7B8b,EAAsB7B,GAAalnB,GACnCgpB,EAAkBnB,GAAS91B,GAC3Bk3B,EAAqC,eAAlBpc,EACnB0b,GACE,CACIzb,EAAUtU,OACVoU,EACAF,EAAOzE,KAAK,MACdA,KAAK,MAET,UACA,SAAElU,EAAQ,OAAEm1B,KAAWC,GAAqB,OAAZnZ,QAAY,IAAZA,IAAgB,CAAC,EAsDvD,MAAO,CACHmU,UArDYlwB,IAAS00B,GAClB7Z,IAAW8Z,GACXta,IAAmBua,QACAxS,IAAnByS,QACwBzS,IAAxB0S,QACoB1S,IAApB2S,QACqB3S,IAArB4S,EAgDH7yB,OA/CW,CACXiW,QAAS,QACTpY,KAAM00B,EACNrT,MAAO,GAAGnI,IACV/X,KAAMqZ,EAAYxG,KAAK,KACvB3Q,KAAoB,OAAdwxB,QAAc,IAAdA,IAAkB,GACxBha,OAAQ8Z,EACR5Z,MACAC,MACAma,OAAQla,EACRma,UAAW7Z,EACXxP,UAA8B,OAAnB+oB,QAAmB,IAAnBA,IAAuB,OAClC7Y,GAAInB,EACJhb,SAAU,CACNu1B,QAASvzB,EACT+Y,OAAQ+Z,EACRU,KAAM/a,EACNgb,IAAKjb,EACLkb,QAASzC,GAAW9wB,GACpBwzB,gBAAgB,KACb31B,GAEP41B,QAAS,SACTjE,KAAM,CACFkE,UAAS1b,EAAQgS,SAAS,KAC1B2J,YAAW3b,EAAQgS,SAAS,KAC5B4J,WAAU5b,EAAQgS,SAAS,KAC3B6J,aAAY7b,EAAQgS,SAAS,KAC7B8J,cAAa9b,EAAQgS,SAAS,KAC9B+J,aAAY/b,EAAQgS,SAAS,KAC7BgK,eAAchc,EAAQgS,SAAS,KAC/BiK,cAAajc,EAAQgS,SAAS,MAElCkK,OAAuB,OAAfpB,QAAe,IAAfA,IAAmB,SAC3BS,QAA0B,UAAjBvzB,EAA2B,QAAU,SAC9CgzB,OAAwB,OAAhBD,QAAgB,IAAhBA,IAAoBC,EAE5B3wB,MAAOmwB,EACDA,EAAO2B,UAAU,cACH,YAAd9c,EACIF,EACAxN,KACPspB,GAMN,EC5MC5C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAAC/vB,GAAU,QAETgwB,GAAqBlvB,OAAO4P,QAAQgf,IAAavnB,QAA+B,CAACC,EAAKC,KACxF,MAAO4nB,EAAaC,GAAY7nB,EAGhC,OAFAD,EAAI8nB,GAAYD,EAET7nB,CAAG,GACX,CAAC,GAaE2oB,GAAsBjwB,OAAO4P,QAXU,CACzC4f,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6C3oB,QAA+B,CAACC,EAAKC,KAC1F,MAAO4nB,EAAaC,GAAY7nB,EAGhC,OAFAD,EAAI8nB,GAAYD,EAET7nB,CAAG,GACX,CAAC,GAqBEopB,GAAkB1wB,OAAO4P,QAnBU,CACrChT,OAAQ,SACRua,OAAQ,SACRgZ,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLvC,KAAM,OACNwC,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfkC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+B3rB,QAA+B,CAACC,EAAKC,KAClF,MAAO4nB,EAAaC,GAAY7nB,EAGhC,OAFAD,EAAI8nB,GAAYD,EAET7nB,CAAG,GACX,CAAC,GAEE2rB,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6BjL,IAAgE,IAAD9F,EAAAgR,EAAAC,EACrG,MAAM,IACF/b,EAAG,UACHhP,EAAS,YACTgrB,EAAW,UACXC,EAAS,IACThc,EAAG,KACHic,EAAI,UACJxvB,EAAS,GACTwU,EAAE,MACFoF,EAAK,aACL6V,EAAY,KACZl3B,EAAI,UACJm3B,EAAS,KACTC,EAAI,MACJ3a,EAAK,SACL4a,EAAQ,QACRC,EAAO,YACPC,GACA5L,EACEkJ,EAAiBjC,GAAmBwE,GACpCtC,EAAsBnB,GAAoB5nB,IACzCgpB,EAAiByC,GAAYpD,GAAgB3sB,GAAWolB,MAAM,KAG/D4K,EAA6F,QAAtE5R,EAAIqR,EAAeA,EAAa5F,WAAW,WAAY,SAAMlP,SAAS,IAAAyD,IAC3FoR,EAAOA,EAAK3F,WAAW,WAAY,IAAM,GAE3CoG,EAAwBD,EAAwB5K,MAAM,MACtD8K,ENpJ4BhM,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACFM,SAASN,EAAK7tB,OM4IgB85B,CAAsB,CAClD95B,MAAsB,OAAfi3B,QAAe,IAAfA,IAAmB,YACxB2C,EAAsBzuB,OAAS,EAC/B,CACE,IAAIyuB,EAAsB,GAAGpG,WAAW,KAAM,UAC3CoG,EAAsB3Z,MAAM,IACjC/J,KAAK,MACLyjB,EACA7C,EAA2BuC,EAC3BA,EAAU7F,WAAW,WAAY,IACjC,GACAuG,EAAYd,EAAY,GAAGe,kBAE3BvI,EAAWpT,KAqCjB,MAAO,CACH+T,WAAW,EACX/tB,OAtCiB,IACdotB,EACHvvB,OACA+a,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAM,GAAGA,IACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAM,GAAGA,IACpC,IACNjP,UAA8B,OAAnB+oB,QAAmB,IAAnBA,IAAuB1yB,EAClCyY,OAAQ8c,EACR3e,UAAyB,OAAd6b,QAAc,IAAdA,IAAkBjyB,EAC7BkY,MAAgD,QAA3C+b,EAAiC,QAAjCC,EAAEE,EAAUA,EAAU/tB,OAAS,UAAE,IAAA6tB,OAAA,EAA/BA,EAAiCiB,gBAAQ,IAAAlB,IAAI,GACpD/4B,MAAsB,OAAfi3B,QAAe,IAAfA,IAAmB,SAC1B7b,KAAoB,SAAdzR,GAAwB6vB,EAAUA,EAAUjW,EAClD7G,YAAa6c,IAEO,UAAd5vB,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACdmE,IAAKisB,EACLve,UAAW,SACXC,QAAS,IACFgW,EAAShW,QACZE,EAAG,GAEPU,OAA4B,SAApB4a,GAA8B9W,MAAMgQ,QAAQsJ,GACpDtd,SAAqB,OAAXsd,QAAW,IAAXA,IAAe,IAAIjhB,KAAI0hB,GAAUrB,GAAeqB,KAC1Dl2B,WAAyB,aAAb01B,EACZjd,kBAA4B,MAATkC,EAAgB,IAAM,GAAGA,IAC5CnC,iBAA2B,MAATmC,EAAgB,IAAM,GAAGA,IAC3CpC,eAAgBua,EAChB3Z,SAAU,GAAGgB,IAAKgc,SAAS,EAAG,KAC9B1c,QAASrI,GAAajJ,IAAI,IAM7B,EC7NCiuB,GAA0B,IA4FnBC,GAAW,SACpBC,GAEE,IADFC,EAAYlW,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAEXmW,EAAkBJ,GACtB,MAAMK,EArEqB,WAA+D,IACtF9Y,EADoC0C,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAEvC7D,EAFsD6D,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG+V,GAGzDM,EAASla,EACTma,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IAGhB,MAuCMlgB,EAASA,IAAMigB,GAAgB,EAErC,MAAO,CACHhW,MAxBU,WAA6C,IAAxBkW,EAAYzW,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG7D,EAC9CmB,EADuB0C,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG1C,EAE1BnB,EAAMsa,EACNJ,EAASI,EACTF,EAAe,GACfC,EAAY,IACZF,EAAgBG,CACpB,EAkBIC,WAhCeA,KACfL,GAAUG,EACVD,GAAgB,EAETF,GA6BPM,cA5CkBA,KACA,IAAdH,EAAiBlgB,KAEjB+f,GAAUG,EACVA,GANsB,GAOtBH,GAAUG,GAGPta,KAAKoB,IAAI+Y,EAAQla,IAqCxB7F,SACAsgB,UAnBcA,IAAMP,EAoBpBQ,UAnBeC,GAAsBT,EAASS,EAoB9CC,iBAlBqB,WAAqB,OAAKT,EAAdtW,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAGqW,CAAuC,EAmB3EW,iBAlBqBA,IAAMV,EAmB3BW,mBAlBuBA,KACvBZ,EAASC,EACTC,GAAgB,EACTF,GAgBPa,gBAboBA,IAAMX,EAelC,CAOsBY,GAClB,KAAOf,EAAUc,mBAAqB,GAAG,CACrC,GAAId,EAAUc,mBAAqB,EAAG,CAIlCf,EAFoBC,EAAUQ,YAG9B,KACJ,CAGI,IAFgBX,EAAOG,EAAUQ,cAEjBR,EAAUQ,YAAc,EAEpCR,EAAUM,iBACP,CAEH,GAAIN,EAAUQ,cAAgBb,GAAyB,MAClDI,EAAkBC,EAAUO,eACrC,CAER,CAKA,MAAMS,EAAelb,KAAKC,IAAI+Z,EAAcha,KAAKoB,IAAI6Y,EAAiBJ,KAEtE,OADIqB,IAAiBjB,GAAiBF,EAAOmB,GACtCA,CACX,EC3HaC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,CAAC,EACd,IAAItnB,EAASunB,EACT/c,EAAQgd,EACRzb,EAA6C,kBAAhB0b,EAA2B,GAAGA,MAAkBA,EAC7EE,EAAsC,kBAAhBF,EAA2BA,EAAcG,WAAWH,EAAYtI,WAAW,KAAM,KACvG0I,EAASH,EAEb,MAAO,CACHI,QAASA,IAAM,GAAG,CAACtd,EAAOxK,EAAQ+L,EAAM8b,GAAQtK,QAAOwK,GAAiB,KAATA,IAAalmB,KAAK,cACjFmmB,YAAaA,KAAA,CAASxd,QAAOuB,OAAM8b,SAAQF,eAAc3nB,WACzDioB,UAAUC,GAEN,OADAloB,EAASkoB,EACFrY,IACX,EACAsY,SAASC,GAEL,OADA5d,EAAQ4d,EACDvY,IACX,EACAS,QAAQ+X,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASV,GACTU,EAON,OANAtc,EAAiC,kBAAnBuc,EACR,GAAGA,MACHA,EACNX,EAAyC,kBAAnBW,EAChBA,EACAV,WAAWU,EAAenJ,WAAW,KAAM,KAC1CtP,IACX,EACA0Y,UAAUC,GAEN,OADAX,EAASW,EACF3Y,IACX,EACH,EAGQ4Y,GAAiB/U,IAMT,IANU,UAC3BgV,EAAS,UACTtuB,GAIHsZ,EACG,MAAO,CACHxZ,YAAagS,KAAKsH,MAAMkV,EAAYtuB,EAAY,IAChDnE,SAAUyyB,EAAYtuB,EAAY,GAClCD,WAAYuuB,EAAYtuB,EACxBA,YACAC,aAAc,EACjB,EAEQsuB,GAAoBA,CAACvsB,EAAoBwsB,KAC3C,IACAxsB,EACHR,SAAU,IACHQ,EAASR,SACZ6sB,GAAeG,MCnEdC,GAA4BA,IAAoBC,G/Bc1C,2C+BZNC,GAAoBC,IAAmC,OAAPA,QAAO,IAAPA,IAAW,IACnE7kB,KAAIuP,IAAA,IAAC,MAAEtjB,EAAK,OAAE64B,GAAQvV,EAAA,MAAK,GAAGuV,KAAU74B,GAAO,IAAEyR,KAAK,KAC9CinB,GAAgBI,GAA8CA,EACrEA,EAAmBxO,MAAM,KACtBvW,KAAI,CAACC,EAAOzN,KACT,MAAOsyB,EAAQ74B,GAASgU,EAAMsW,MAAM,KAEpC,MAAO,CAAEtqB,QAAO64B,SAAQnf,GAAInT,EAAQ,EAAG,IAE7CmyB,G/BGa,2CgCfNK,GAAaA,KACtB,MAAOC,EAAKC,GAAUC,mBAAS,GAK/B,MAAO,CAJSC,uBAAY,KACxBF,GAAOvwB,GAAOA,EAAM,GAAE,GACvB,IAEcswB,EAAI,ECRZI,GAAqB9V,IAgB3B,IAhB4B,MAC/B+V,EAAK,aACLC,EAAY,gBACZC,GAAkB,EAAK,SACvBC,EAAQ,UACRC,EAAS,SACTC,EAAQ,WACRC,GASHrW,EACG,MAAO,CACHsW,SAAU,EACVC,QAASA,KACDR,GAAOtR,QAAQ+R,KAAK,mBAAoBT,GAC5CG,EAAS,EAAE,EAEfO,OAAQA,KACAV,GAAOtR,QAAQ+R,KAAK,kBAAmBT,GAC3CG,GAAU,EAAE,EAEhBQ,UAAYlS,IACJyR,GAAiBzR,EAAEyR,kBACnBF,GAAOtR,QAAQ+R,KAAK,qBAAsBT,EAAOvR,EAAEhmB,MAC/B,KAAV,OAAV63B,QAAU,IAAVA,OAAU,EAAVA,EAAa7R,MACH,eAAVA,EAAEhmB,KAAkC,cAAVgmB,EAAEhmB,KAC5BgmB,EAAEmS,iBACFT,GAAS9wB,GAAOoT,KAAKC,IAAI,EAAGud,EAAe5wB,EAAM,GAAK4wB,KAEvC,cAAVxR,EAAEhmB,KAAiC,YAAVgmB,EAAEhmB,KAChCgmB,EAAEmS,iBACFT,GAAS9wB,GAAOoT,KAAKC,IAAI,EAAGud,EAAe5wB,EAAM,GAAK4wB,KAEvC,UAAVxR,EAAEhmB,KAA6B,MAAVgmB,EAAEhmB,IAC5B23B,IAEe,WAAV3R,EAAEhmB,MACC,OAAR43B,QAAQ,IAARA,QACJ,EAEP,EC5CQQ,GAAsBA,CAACC,EAAgCjgB,KAChE,MAAM,aACF/S,EAAY,SACZC,EAAQ,UACRF,EAAS,cACTG,GACA8yB,EAEJ,MAAO,IACAA,EACHhzB,aAAcA,EAAe+S,EAC7B9S,SAAUA,EAAW8S,EACrBhT,UAAWA,EAAYgT,EACvB7S,cAAwC,kBAAlBA,EAA6BA,EAAgB6S,EAAQ7S,EAC9E,EAGQ+yB,GAAsBA,CAACC,EAA8CngB,IACvEmgB,EAAWtmB,KAAI5Y,GAASA,EAAQ+e,IAG9BogB,GAAoBA,CAC7BC,EACArgB,KAEA,MAAM,qBACFrQ,EAAoB,aACpBI,EAAY,YACZH,EAAW,SACXjE,EAAQ,gBACRuE,EAAe,gBACfgG,EAAe,WACfrG,EAAU,QACVQ,EAAO,mBACPC,EAAkB,kBAClByF,GACAsqB,EAEJ,MAAO,IACAA,EACH1wB,qBAAsD,kBAAzBA,EAAoCA,EAAuBqQ,OAAQ2F,EAChG5V,aAAsC,kBAAjBA,EAA4BA,EAAeiQ,OAAQ2F,EACxE/V,YAAaA,EAAcoQ,EAC3BrU,SAAUA,EAAWqU,EACrB9P,gBAA4C,kBAApBA,EAA+BA,EAAkB8P,OAAQ2F,EACjFzP,gBAA4C,kBAApBA,EAA+BA,EAAkB8J,OAAQ2F,EACjF9V,WAAYA,EAAamQ,EACzB3P,QAA4B,kBAAZA,EAAuBA,EAAU2P,OAAQ2F,EACzDrV,mBAAkD,kBAAvBA,EAAkCA,EAAqB0P,OAAQ2F,EAC1F5P,kBAAgD,kBAAtBA,EAAiCA,EAAoBiK,OAAQ2F,EAC1F,EAGQ2a,GAAgBA,CAACxuB,EAAoBkO,KACvC,IACAlO,EACHR,SAAUQ,EAASR,SAASuI,KAAIC,GACrBsmB,GAAkBtmB,EAAOkG,OC3D/BugB,GAAkB,WAAyD,IAAxDC,EAAO9a,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8BlZ,EAAMkZ,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzEhgB,EAAS,GACb,MAAM+6B,EAAmBD,EAAQh0B,OACjC,IAAK,IAAI4F,EAAI,EAAGA,EAAI5F,EAAQ4F,IACxB1M,GAAU86B,EAAQE,OAAO9e,KAAK+I,MAAM/I,KAAK+e,SAAWF,IAExD,OAAO/6B,CACX,EAiCO,MAAMk7B,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQpb,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7Cmb,EAAArgB,SAASugB,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,OACnD,EAEaC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAAS1b,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAM2b,EAAUF,EAAI1Q,QAAQ,IAAK,IACjC,IAAI6Q,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQ70B,QAAmC,IAAnB60B,EAAQ70B,OAChC80B,EAAW,CACPI,SAAS,GAAGL,EAAQ,KAAKA,EAAQ,KAAM,IACvCK,SAAS,GAAGL,EAAQ,KAAKA,EAAQ,KAAM,IACvCK,SAAS,GAAGL,EAAQ,KAAKA,EAAQ,KAAM,IACvCK,SAAS,GAAa,QAAbH,EAAGF,EAAQ,UAAE,IAAAE,IAAI,MAAgB,QAAbC,EAAGH,EAAQ,UAAE,IAAAG,IAAI,MAAO,KAG7D,GAAuB,IAAnBH,EAAQ70B,QAAmC,IAAnB60B,EAAQ70B,OAChC80B,EAAW,CACPI,SAASL,EAAQ/f,MAAM,EAAG,GAAI,IAC9BogB,SAASL,EAAQ/f,MAAM,EAAG,GAAI,IAC9BogB,SAASL,EAAQ/f,MAAM,EAAG,GAAI,IAC9BogB,SAA4B,QAApBD,EAACJ,EAAQ/f,MAAM,EAAG,UAAE,IAAAmgB,IAAI,KAAM,KAI9C,OAAOH,EAASznB,KAAIC,GAAS6nB,MAAM7nB,GAAS,IAAMA,IAAOwH,MAAM,EAAG8f,EAAY,EAAI,EACtF,CAAE,MAAOxT,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAGtM,MAAM,EAAG8f,EAAY,EAAI,EACjD,CACJ,EAGaQ,GAAiBA,KAC1B,IAAIC,GAAQ,EACZ,IAAUC,EAIV,OAJUA,EACNC,UAAUC,WACPD,UAAUE,QACT9M,OAAe+M,OAHP,2TAA2TC,KAAKL,IAAI,4hDAA4hDK,KAAKL,EAAEM,OAAO,EAAE,OAAKP,GAAQ,GAIt4DA,CAAK,EAGT,SAASQ,KAA8D,IAAD,IAAAC,EAAA5c,UAAAlZ,OAA/C+1B,EAAI,IAAA/gB,MAAA8gB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA9c,UAAA8c,GAC9B,OAAOD,EAAKtP,OAAOwP,SAASlrB,KAAK,IACrC,C,0CCnFO,MAAMmrB,GAAyBC,KAAOC,MAAM;;;;;;;;;;;;;;;;;;;;;;;oCCA5C,MAAMC,GAAmBA,CAAC3T,EAAoB4T,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACFrkB,EAAO,OACPV,EAAM,OACN9C,EAAM,eACNmD,EAAc,KACdlb,EAAI,SACJib,EAAQ,eACRZ,EAAc,MACdS,EAAK,YACLN,EAAW,UACX3B,GACA8S,EAEJ,GAAI5T,IAAWwnB,EAAc,OAAO5T,EAEpC,MAAMkU,EAA2B,QAAjBN,EAAyBlsB,GAAkBD,GACrD0sB,EAA6B,QAAjBP,GAA0B,MAAMX,KAAK9jB,GACjDA,EAAMoS,QAAQ,MAAO,OACJ,QAAjBqS,GAA0B,MAAMX,KAAK9jB,GACjCA,EAAMoS,QAAQ,MAAO,OACrBpS,EACJilB,EAAkC,IACjClnB,EACH/T,KAAuB,QAAjBy6B,GAA6C,YAAnB1mB,EAAU/T,KACpC,MACiB,QAAjBy6B,GAA6C,QAAnB1mB,EAAU/T,KAChC,UACA+T,EAAU/T,MAGxB,MAAO,IACA6mB,EACH3rB,KAAmB,QAAfw/B,EAAEK,EAAQ7/B,UAAK,IAAAw/B,IAAIx/B,EACvB+X,OAAQwnB,EACR1kB,OAAuB,QAAjB4kB,EAAEI,EAAQhlB,UAAO,IAAA4kB,IAAI5kB,EAC3BR,eAAuC,QAAzBqlB,EAAEG,EAAQxlB,UAAe,IAAAqlB,IAAIrlB,EAC3CG,YAAaA,EAAYlE,KAAIC,IAAK,IAAAypB,EAAA,OAAkB,QAAlBA,EAAIH,EAAQtpB,UAAM,IAAAypB,IAAIzpB,CAAK,IAC7DgF,QAAyB,QAAlBokB,EAAEE,EAAQtkB,UAAQ,IAAAokB,IAAIpkB,EAC7BN,SAA2B,QAAnB2kB,EAAEC,EAAQ5kB,UAAS,IAAA2kB,IAAI3kB,EAC/BH,MAAOglB,EACP5kB,eAAiC,QAAjBqkB,GAAiCrkB,EACjDrC,UAAWknB,EACd,E,uDClCE,MAcME,GAAkB,SAACC,GAC5B,MAAMC,EAA0B,IAD2Ehe,UAAAlZ,OAAA,QAAAmZ,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,KAGxG+d,EAAgBE,eAEjBC,EAAsB9pB,IAAmB,IAAD+pB,EAC1C,OAAqC,QAArCA,EAAOH,EAAwB5pB,UAAM,IAAA+pB,IAAI,EAAE,EAEzCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAIxrB,OAAO,OAAOxR,OAAOmqB,KAAK4S,GAASzsB,KAAK,YAEzD2sB,EAAiBH,EAAS3T,MAAM6T,GAEtC,OAAO59B,cAAC89B,IAAMC,SAAQ,CAAAjkB,SACjB+jB,EAAerqB,KAAI,CAACC,EAAOzN,IACpBA,EAAQ,IAAM,EAAUhG,cAAC89B,IAAMC,SAAQ,CAAAjkB,SAA4BrG,GAAtB,GAAGA,KAASzN,KACtD23B,EAAQlqB,MAHKiqB,EAKX,EAEfM,EAAwB,CAC1B,sBAAwBC,GACbV,EAAmB,uBAAuB/O,WAAW,eAAgByP,GAEhF,sBAAwBA,GACbV,EAAmB,uBAAuB/O,WAAW,eAAgByP,GAEhF,6BAA+BC,GACpBX,EAAmB,8BAA8B/O,WAAW,aAAc,GAAG0P,KAExF,gCAAkCC,GACvBV,EACHF,EAAmB,iCACnB,CAAEY,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDb,EACHF,EAAmB,iCACnB,CAAEc,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOlB,EACHF,EAAmB,8BACnB,CAAEiB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOnB,EACHF,EAAmB,kCACnB,CAAEqB,cAGV,4BAA8BC,GACnBpB,EACHF,EAAmB,6BACnB,CAAEsB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCM,CAC9BT,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,sCACIO,GAEOhC,EACHF,EAAmB,uCACnB,CAAEkC,aAGV,oBACIC,GAEOjC,EACHF,EAAmB,qBACnB,CAAEmC,eAKd,MAAO,IACAtC,EACHE,cAAeD,EACf1iC,WAAY,IACL0iC,KACAW,GAGf,EChKa2B,GAAUC,mBAAkB,CAACvjB,EAAKC,KAC3C,MAAMujB,EAAsB,MAExB,MAAMzX,EAAM,IAAIC,IAAIyG,OAAOgR,SAASjR,MAC9BkR,EAAe3X,EAAI4X,aACnBC,EAAyBF,EAAazjB,IAAI,YAIhD,GAFAyjB,EAAaG,OAAO,YACpBpR,OAAOqR,QAAQC,aAAatR,OAAOqR,QAAQE,MAAO,GAAIjY,EAAIyG,MACtDoR,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,KACX,CAAE,MAAO/Y,GAEL,OADAC,QAAQC,MAAM,iDAAkDF,GACzD,KACX,CACH,EAnB2B,GAoBtBkZ,EAAqD,CAAC,EACtDC,EAAkBvD,GAAgB,CDhCxCjgC,KAAM,UACNyjC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,EC6BJzD,cAAe,CAAC,IAsCd0D,EAAeC,UACjB,GAAIR,EAAYS,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiBC,MACnB,yBAAwCH,SACxC,CACII,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBC,QAAsCH,EAASI,OAErD,IAAKD,EAAajE,cAAe,MAAO,IAAIngB,MAAM,uBAClD,MAAMskB,EAAoBtE,GAAgBoE,EAA6B,QAAjBJ,EAAEV,EAAYiB,WAAG,IAAAP,OAAA,EAAfA,EAAiB7D,eAGzE,OAFAmD,EAAYS,GAAgBO,EAErBA,CACX,CAAE,MAAOla,GAEL,OADAC,QAAQC,MAAM,gEAAiEF,GACxE,IACX,GAEEoa,EAAiBV,UACnB,MAAMW,EAAWtlB,IAAMulB,oBAAoBX,GAC3C,IAAKU,EAAU,OAIf,MAAML,EAAgBd,EAAYS,GAE5BT,EAAYS,SADNF,EAAaE,GAGrBK,GACAllB,EAAI,CACAylB,aAAcxlB,IAAMulB,oBAAoBX,GACxCa,SAAUR,EAAa5mC,aAE3B4lC,aAAayB,QAAQ,WAAYd,GACjC7kB,EAAI,CACA4lB,WAAW,EACXH,aAAcF,KAGlBvlB,EAAI,CACA4lB,WAAW,EACXH,aAAcxlB,IAAMulB,oBAAoBH,IACxCK,SAAUrB,EAAgB/lC,YAElC,EAGJ,MAAO,CACHknC,oBAAqB,CAAC,EACtBC,aDhIkC,CACtC5kC,KAAM,UACNyjC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJgB,SAAUrB,EAAgB/lC,WAC1B8sB,MAAO,KACPya,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUnB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MACnB,sCACA,CACIC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBO,QAA8DT,EAASI,OAE7E,IAAKK,EAAqB,MAAO,IAAI1kB,MAAM,qBAE3Cd,EAAI,CACAwlB,sBACAM,iBAAiB,GAEzB,CAAE,MAAO5a,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FlL,EAAI,CACAwlB,oBAAqB,CACjBH,IAAK,CACDxkC,KAAM,UACNyjC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBoB,iBAAiB,GAEzB,GAgEIE,EAAsB,EAE1BC,oBAAqBrB,gBAEXD,EAAa,aACbW,EAAe9B,GACrBxjB,EAAI,CACA6lB,cAAc,GAChB,EAENlB,eACAW,iBACH,IAGQY,GAAcA,IACN5C,IAAQ5c,IAAA,IAAC,SAAEgf,GAAUhf,EAAA,OAAKgf,CAAQ,IAI1CS,GAAcA,IAAM7C,GAAQ8C,WAAWV,S,cC5IpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAActU,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGuU,GAAc,IAAIC,IAAIL,GAAanvB,I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","file":"static/js/main.88638803.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 56,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n];\nexport const ExtraAttributeList = [\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-1',\n        nameKey: 'input.attribute.boss-1',\n        label: 'Boss 1',\n        color: '#9b325d',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-2',\n        nameKey: 'input.attribute.boss-2',\n        label: 'Boss 2',\n        color: '#942a56',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-3',\n        nameKey: 'input.attribute.boss-3',\n        label: 'Boss 3',\n        color: '#86214b',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-START',\n        nameKey: 'input.attribute.boss-start',\n        label: 'Boss Start',\n        color: '#a13864',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 790,\n        artlessFrameY: 553,\n        fontSize: 60.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 806,\n        artlessFrameY: 553,\n        fontSize: 60.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\n    ShowDefAndLink: number,\n];\nexport const getDefaultCardFlag = (): CardFlag => [0];\n\nexport const FlagInfoList = [\n    {\n        index: 0,\n        labelKey: 'input.flag.mix-def-link',\n    }\n];\nexport const FlagIndexMap = {\n    showDefAndLink: 0,\n};\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type10: {\n        value: 'type10',\n        label: '10',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type11: {\n        value: 'type11',\n        label: '11',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type12: {\n        value: 'type12',\n        label: '12',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type13: {\n        value: 'type13',\n        label: '13',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            art: [\n                { blendMode: 'darken', opacity: 1 },\n                { blendMode: 'multiply', opacity: 1 },\n                { blendMode: 'overlay', opacity: 1 },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    background: {\n        key: 'background' as const,\n        labelKey: 'input.background.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 49%',\n            'rgba(239,239,239,1) 51%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);\n\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\n};","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, OtherFinish } from './foil-finish';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\nimport { getDefaultCardFlag } from './flag';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    frame: 'fusion',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    linkRating: '',\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 2,\n    format: 'tcg',\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\n    frame: 'effect',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    linkRating: '',\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './flag';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './pendulum';\nexport * from './regex';","export const createCanvas = (width: number, height: number) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d');\n\n    return {\n        canvas,\n        context,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFooter = (frame: string) => {\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link'].includes(frame) || checkLightFooter(frame);\n};\n\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\n    const {\n        frame,\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    } = frameData;\n    const resolvedFrame = frame ?? 'effect';\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\n        : bottomLeftFrame) ?? resolvedFrame;\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\n        ? resolvedBottomLeft\n        : bottomRightFrame) ?? resolvedFrame;\n    const resolvedEffectBackground = (effectBackground === 'auto'\n        ? resolvedBottomLeft\n        : effectBackground) ?? resolvedFrame;\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\n        ? resolvedBottomLeft\n        : pendulumEffectBackground) ?? resolvedFrame;\n\n    return {\n        topLeftFrame: resolvedTopLeft,\n        topRightFrame: resolvedTopRight,\n        bottomLeftFrame: resolvedBottomLeft,\n        bottomRightFrame: resolvedBottomRight,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    };\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, Card, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    rightFrame: 'rf',\n    leftFrame: 'lf',\n    pendulumRightFrame: 'rpf',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n        background: 'ebg',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n        background: 'pbg',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    linkRating: 'lr',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    flag: 'fl',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detech the actual version from incoming cards. */\n    delete baseCard.version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n            ];\n        }\n    }\n    if (Array.isArray(migratedCard.otherFinish)\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\n    ) {\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = getDefaultCardFlag();\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};\n\nexport const setCharAt = (str: string, index: number, chr: string) => {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n        nameStyle,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n    const nextNameStyle: typeof nameStyle = {\n        ...nameStyle,\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\n            ? 'OCG'\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\n                ? 'Default'\n                : nameStyle.font,\n    };\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n        nameStyle: nextNameStyle,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardFlag,\n    CardOpacity,\n    CondenseType,\n    FLAG_LENGTH,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Link Rating',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Effect Style - Background',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Pendulum Effect Style - Background',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Background',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'Left Frame',\n    'Right Frame',\n    'Bottom Right Frame',\n    'Flag',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            flag,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            leftFrame,\n            linkMap,\n            linkRating,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherFinish,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            pendulumStyle,\n            pendulumTextStyle,\n            rightFrame,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n        const stringifedFlag = flag.join('|');\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Link Rating', linkRating);\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Effect Style - Background', effectStyle.background);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('Other Finish - Background', otherFinish[3]);\n        write('Left Frame', leftFrame);\n        write('Right Frame', rightFrame);\n        write('Bottom Right Frame', pendulumRightFrame);\n        write('Flag', stringifedFlag);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const finishBackground = reader('Other Finish - Background') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n                const linkRating = reader('Link Rating') ?? '';\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n                const flag = reader('Flag').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effect,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle, background: effectBackground },\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    flag,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    leftFrame,\n                    linkMap,\n                    linkRating,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumSize,\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle, background: pendulumEffectBackground },\n                    pendulumTextStyle,\n                    rightFrame,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    globalScale: number,\n    exportFormat: ExportFormat,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    showExtraAttribute: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n    mirrorPendulumScale: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        globalScale,\n        mirrorPendulumScale,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraAttribute,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n        bulletWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    contextualDoubleQuoteRegex,\n    NB_FULL_LINE_OPEN,\n    NB_FULL_LINE_CLOSE\n} from 'src/model';\n\nexport type LineOption = {\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    const fullLineList = [];\n    const fullLineListOption: LineOption[] = [];\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let lineReplacement: string | undefined;\n    let lineContent: string | undefined;\n    let fullLineReplacement: string | undefined;\n    let fullLineContent: string | undefined;\n    let willContinue = false;\n    do {\n        const result = wholeLineRegex.exec(effectText);\n        lineReplacement = result?.[1];\n        lineContent = result?.[2];\n        fullLineReplacement = result?.[3];\n        fullLineContent = result?.[4];\n\n        willContinue = false;\n        if (lineContent && lineReplacement) {\n            fullLineList.push(lineContent);\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ alignment: 'left' });\n            willContinue = true;\n        } else if (fullLineContent && fullLineReplacement) {\n            fullLineList.push(fullLineContent);\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ alignment: 'justify' });\n            willContinue = true;\n        }\n    } while (willContinue);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n    /** Restore all remaining nb line symbol back to their normal letters. */\n    effectText = effectText\n        .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n        .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]');\n\n    return {\n        fullLineList,\n        fullLineListOption,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n    } = option ?? {};\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n        fullLineListOption,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 1000,\n                '2': 1000,\n                '3': 1000,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (additionalLineCount > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current lint count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList,\n                        additionalLineCount,\n                        format, textData,\n                        width,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = lineListWithRatio.length + additionalLineCount;\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (sizeLevel < fontList.length)\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\n                return {\n                    line,\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                                globalScale,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0 && EffectFontData[fontDataKey]) {\n                const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                const dynamicFlavorFontData = useDynamicSize\n                    ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n                    : flavorFontData;\n                const flavorFontSizeData = useDynamicSize\n                    ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                    : flavorFontData.fontList[appliedSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: dynamicFlavorFontData,\n                    fontLevel: dynamicSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                            globalScale,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        context: starContext,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starContext, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            context: starFinishContext,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishContext.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishContext,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishContext,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        starContext.globalCompositeOperation = 'source-in';\n        starContext.drawImage(starFinishCanvas, 0, 0);\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    rating: string,\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || typeof rating !== 'string') return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const baseline = isNaN(Number(rating))\n        ? 1106\n        : 1105;\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import { CanvasConst } from 'src/model';\nimport { drawAsset } from '../image';\nimport { createCanvas } from 'src/util';\n\nconst {\n    width,\n    height,\n    topToPendulumStructure,\n} = CanvasConst;\nexport const getMaskPromise = () => {\n    const topRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-top-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const bottomRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    /**\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\n     * \n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\n    const rightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const nameMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = topToPendulumStructure;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-name.png');\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\n        }\n        return null;\n    })();\n\n    return {\n        topRight: topRightMask,\n        bottomRight: bottomRightMask,\n        right: rightMask,\n        name: nameMask,\n    };\n};\nexport const MaskPromise = getMaskPromise();\n\n/**\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\n * \n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\n * */\nexport const applyAlphaMask = async (\n    urlOrCanvas: string | CanvasImageSource,\n    maskData: Uint8ClampedArray<ArrayBufferLike>,\n    width: number,\n    height: number,\n) => {\n    const { context, canvas } = createCanvas(width, height);\n    if (typeof urlOrCanvas === 'string') await drawAsset(context, urlOrCanvas, 0, 0);\n    else context.drawImage(urlOrCanvas, 0, 0, width, height);\n    const layerData = context.getImageData(0, 0, width, height).data;\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\n        layerData[cnt + 3] = maskData[cnt + 3];\n    }\n\n    context.putImageData(new ImageData(layerData, width, height), 0, 0);\n\n    return canvas;\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, getCardIconFromFrame, resolveFrameStyle } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\nimport { applyAlphaMask, MaskPromise } from './mask';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n) => {\n    if (!ctx) return;\n    if (foil === 'normal') return;\n\n    ctx.scale(globalScale, globalScale);\n    if (withBorder) {\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\n    } else {\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n            .map(async entry => {\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                const coordinate = [left, top, width, height] as const;\n\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\n            })\n        );\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    format,\n    hasBackground,\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n    effectBackground, pendulumEffectBackground,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    format: string,\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\n    effectBackground: string, pendulumEffectBackground: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFrameX,\n        artFrameY,\n        artFrameHeight,\n        artFrameWidth,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resolvedLayoutStyle = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    } = resolvedLayoutStyle;\n\n    const resultAPI = {\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            /** Combine layer frame here */\n            const { context: topFrameContext, canvas: topFrameCanvas } = createCanvas(cardWidth, cardHeight);\n            await drawAsset(topFrameContext, `frame/frame-${topLeftFrame}.png`, 0, 0);\n            if (topLeftFrame !== topRightFrame) {\n                const topRightCanvas = await applyAlphaMask(\n                    `frame/frame-${topRightFrame}.png`,\n                    await MaskPromise.topRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                topFrameContext.drawImage(topRightCanvas, 0, 0);\n            }\n            const { context: bottomFrameContext, canvas: bottomFrameCanvas } = createCanvas(cardWidth, cardHeight);\n            await drawAsset(bottomFrameContext, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\n            if (bottomLeftFrame !== bottomRightFrame) {\n                /** What is this?\n                 * \n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\n                 */\n                bottomFrameContext.clearRect(714, 0, 99, cardHeight);\n                const bottomRightCanvas = await applyAlphaMask(\n                    `frame/frame-${bottomRightFrame}.png`,\n                    await (bottomRightFrame === topRightFrame ? MaskPromise.right : MaskPromise.bottomRight),\n                    cardWidth,\n                    cardHeight,\n                );\n                bottomFrameContext.drawImage(bottomRightCanvas, 0, 0);\n            }\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            /** Leave empty space for card art */\n            if (isPendulum) {\n                topFrameContext.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n                bottomFrameContext.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n            }\n            ctx.drawImage(topFrameCanvas, 0, 0);\n            ctx.drawImage(bottomFrameCanvas, 0, 0);\n            ctx.resetTransform();\n            if (!hasBackground || !backgroundCanvas || backgroundType !== 'frame') {\n                ctx.globalAlpha = 1;\n                return;\n            }\n\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n            const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n\n            const clonedCanvasContext = clonedCanvas?.getContext('2d');\n            if (!clonedCanvas || !clonedCanvasContext) {\n                ctx.globalAlpha = 1;\n                return;\n            }\n\n            /** Clone background to create a new frame */\n            clonedCanvas.width = cardWidth * globalScale;\n            clonedCanvas.height = cardHeight * globalScale;\n            clonedCanvasContext.drawImage(\n                backgroundCanvas,\n                0, 0, backgroundWidth, backgroundHeight,\n                0, 0, cardWidth * globalScale, cardHeight * globalScale,\n            );\n            ctx.drawImage(\n                clonedCanvas,\n                0, 0,\n                globalScale * cardWidth, globalScale * cardHeight,\n                0, 0,\n                globalScale * cardWidth, globalScale * cardHeight,\n            );\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: (\n            externalCtx = ctx,\n        ) => {\n            if (!artworkCanvas || !externalCtx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            externalCtx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: async (\n            externalCtx = ctx,\n            hasArtBorder = false,\n        ) => {\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n                artFrameX,\n                artFrameY,\n                ratio,\n                artRatio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                opacity,\n                backgroundType,\n                pendulumSize,\n            );\n            externalCtx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / ratio,\n            );\n            const backgroundFinish = otherFinish[3] ?? 'normal';\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\n                await loopBackgroundFinish(\n                    externalCtx,\n                    'art',\n                    async type => drawAssetWithSize(\n                        externalCtx,\n                        `finish/art-finish-${type}.png`,\n                        globalScale * artFrameX, globalScale * artFrameY,\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\n                    ),\n                );\n            }\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                context: attributeContext,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeContext,\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    context: attributeFinishContext,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishContext.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishContext,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishContext,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                attributeContext.globalCompositeOperation = 'source-in';\n                attributeContext.drawImage(attributeFinishCanvas, 0, 0);\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            if (!ctx) return;\n            const {\n                canvas: pendulumIconCanvas,\n                context: pendulumIconContext,\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\n            await drawAsset(pendulumIconContext, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconContext.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconContext.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            return await baseDrawLinkArrowMap(ctx, globalScale, linkMap, positionType, boundless || !hasArtBorder);\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            const { context: nameBackgroundContext, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\n            await drawAsset(nameBackgroundContext, `background/background-name-${topLeftFrame}.png`, 0, 0);\n            if (topLeftFrame !== topRightFrame) {\n                const nameRightCanvas = await applyAlphaMask(\n                    `background/background-name-${topRightFrame}.png`,\n                    await MaskPromise.name,\n                    cardWidth,\n                    topToPendulumStructure,\n                );\n                nameBackgroundContext.drawImage(nameRightCanvas, 0, 0);\n            }\n            ctx.globalAlpha = opacityName / 100;\n            ctx.drawImage(nameBackgroundCanvas, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityText / 100;\n\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    ctx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    ctx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\n                await drawAssetWithSize(\n                    ctx,\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            if (!ctx) return;\n            /** We create a new canvas for easier manipulation. */\n            const {\n                canvas: pendulumBorderCanvas,\n                context: pendulumBorderContext,\n            } = createCanvas(cardWidth, cardHeight);\n            await drawAssetWithSize(\n                pendulumBorderContext,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                    + `-${foilType}`\n                    + '-artless'\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                    + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderContext,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                    + `-${foilType}`\n                    + '-artless'\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                    + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderContext.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                await drawAsset(\n                    pendulumBorderContext,\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                    30, topToPendulumStructureFrame,\n                );\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            ctx.resetTransform();\n        },\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\n            return baseDrawLinkMapFoil(ctx, globalScale, foil, withBorder, positionType);\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async (\n            artContext = ctx,\n        ) => {\n            if (!applyArtFinish || !artContext) return;\n            artContext.scale(globalScale, globalScale);\n            await loopArtFinish(\n                artContext,\n                'art',\n                async (finishType, pendulumSuffix) => {\n                    return await drawAssetWithSize(\n                        artContext,\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                        artFinishX, artFinishY,\n                        artFrameWidth, artFrameWidth / artRatio,\n                    );\n                },\n                pendulumSize,\n            );\n            artContext.resetTransform();\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async (\n            artContext = ctx,\n        ) => {\n            if (!artContext) return;\n            artContext.scale(globalScale, globalScale);\n            await loopFinish(\n                artContext,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        artContext,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            artContext.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n    const cloneCtx = cloneNode?.getContext('2d');\n\n    if (!(ctx && cloneCtx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => {};\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n        patternContext.scale(globalScale, globalScale);\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n        patternContext.globalCompositeOperation = patternBlendMode;\n        patternContext.resetTransform();\n        await drawAssetWithSize(\n            patternContext, `finish-name/${patternImage}.png`,\n            edge, trueBaseline - maxAscent,\n            width,\n            maxAscent + maxDescent,\n        );\n        ctx.globalCompositeOperation = 'source-in';\n        ctx.drawImage(patternCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.scale(xRatio, yRatio);\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + embossThickness,\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        const resetShadow = setTextStyle({\n            ctx: shadowContext,\n            x: shadowOffsetX,\n            y: shadowOffsetY,\n            shadowColor: shadowColor,\n            blur: shadowBlur,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.scale(1 / xRatio, 1 / yRatio);\n        shadowContext.drawImage(canvas, 0, 0);\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.drawImage(shadowCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        resetShadow();\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => {},\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            context: iconContext,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconContext,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => iconWidth * globalScale,\n            () => iconHeight * globalScale,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                context: iconFinishContext,\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n            iconFinishContext.drawImage(iconCanvas, 0, 0);\n            await loopIconFinish(\n                iconFinishContext,\n                'art',\n                async (finishType) => {\n                    return await drawAsset(\n                        iconFinishContext,\n                        `finish/finish-typeart-${finishType}.png`,\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                    );\n                },\n            );\n            iconContext.globalCompositeOperation = 'source-in';\n            iconContext.drawImage(iconFinishCanvas, 0, 0);\n            ctx.drawImage(iconCanvas, 0, 0);\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const exceptionDigitWidthRatio = 0.8;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 1 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle, globalScale } = option ?? {};\n    const actualEdge = edge * globalScale;\n    const actualBaseline = baseline * globalScale;\n    const actualBaselineOffset = baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = actualEdge;\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const numberOffset = -1;\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.scale(1, 1.29);\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${36.18 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.scale(1, 1.29);\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkLightFooter,\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveFrameStyle,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n    stickerSize,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame,\n        foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        leftFrame, rightFrame,\n        atk, def, linkMap, linkRating,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n        flag,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const effectBackground = effectStyle.background;\n    const pendulumEffectBackground = pendulumStyle.background;\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = checkLightFooter(bottomFrame);\n    const {\n        bottomRightFrame,\n    } = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const [\n        showDefAndLinkFlag,\n    ] = flag;\n    const showDefAndLink = isLink && showDefAndLinkFlag;\n    const statInEffect = !!(atk || def)\n        || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (\n                ctx: CanvasRenderingContext2D,\n                x: number, y: number,\n                w: number, h: number,\n                customFill?: string,\n            ) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                format,\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n                effectBackground, pendulumEffectBackground,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Fill color background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\n            const {\n                canvas: artOnCardCanvas,\n                context: artOnCardCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\n            await drawArtFinish(artOnCardCtx);\n            await drawArtOverlayFinish(artOnCardCtx);\n\n            /** Combine background and artwork together, overlay for background is applied here */\n            const {\n                canvas: combinedArtCanvas,\n                context: combinedArtCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\n            if (!boundless) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\n\n            /** @summary Draw the overall layout */\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            ctx.drawImage(combinedArtCanvas, 0, 0);\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                ctx.drawImage(\n                    combinedArtCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n                \n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (isLink && !isPendulum) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\n                ctx.drawImage(\n                    artOnCardCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame, so they will be drawn in other useEffect. */\n            if (isLink && !isPendulum) {\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\n            }\n            \n            if (isLink && statInEffect) {\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                if (statInEffect) {\n                    const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\n                        ? linkRating\n                        : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\n                    await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\n                }\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        leftFrame,\n        rightFrame,\n        pendulumRightFrame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        pendulumFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        withBlueScale,\n        withRedScale,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        linkRating,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        finish,\n        otherFinish,\n        effectBackground,\n        pendulumEffectBackground,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        const leftOffset = showDefAndLink ? 168.75 : 0;\n        drawStatText(ctx, 'ATK', 432.10 - leftOffset, 1106, globalScale);\n        drawStat(ctx, atk.trim(), 508.824 - leftOffset, 1106.5, globalScale);\n        if (!isLink || showDefAndLink) {\n            drawStatText(ctx, 'DEF', 600.85 - leftOffset, 1106, globalScale);\n            drawStat(ctx, def.trim(), 673.865 - leftOffset, 1106.5, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightRightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const isNumberPassword = /^[0-9]*$/.test(password);\n        const mayOffset = isNumberPassword && isPendulum && isLink;\n        const willOffset = mayOffset;\n        const { rightEdge } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n            fontLevel: !isNumberPassword ? 1 : 0\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        lightRightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                context: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    context: stickerFinishContext,\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                stickerFinishContext.scale(globalScale, globalScale);\n                await loopStickerFinish(\n                    stickerFinishContext,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            stickerFinishContext,\n                            `finish/finish-typeart-${finishType}.png`,\n                            stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\n                        );\n                    },\n                );\n                stickerContext.globalCompositeOperation = 'source-in';\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                ctx.drawImage(stickerCanvas, 0, 0);\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            const fontDataKey = `${format}-${pendulumSize}`;\n            const coordinateList = PendulumEffectCoordinateMap\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                [pendulumSize];\n            /** Account for half scaleless frame */\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\n                ? coordinateList\n                : coordinateList.map(({\n                    trueEdge, trueWidth, ...rest\n                }) => ({\n                    ...rest,\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    trueWidth: trueWidth\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                }));\n\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[fontDataKey],\n                fontDataKey,\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: modifiedCoordinateList,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink && isPendulum) {\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n                const {\n                    artBorder: keepArtBorder,\n                    body: opacityBody,\n                    boundless,\n                } = normalizedOpacity;\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        opacity,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (_exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        // const {\n        //     isRelevant,\n        //     pendulumSize,\n        //     isPendulum = false,\n        //     opacity,\n        // } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: string,\n    feedbackReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n        feedbackReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    ${({ $freeSize }) => $freeSize ? 'padding: 0 var(--spacing-xxs);' : 'width: 24px;'};\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n    font-size: var(--fs);\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n            $freeSize={!Icon}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    align-items: center;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const SolidLabel = styled.div`\n    display: inline-flex;\n    column-gap: var(--spacing-xs);\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    border-radius: var(--br);\n    box-shadow: var(--bs-input);\n    .ant-checkbox-wrapper {\n        transform: translateY(-1px); // Alignment\n    }\n`;\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 57px 39px 6px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        border-right: none;\n        border-radius: var(--br) 0 0 var(--br);\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\n    display: grid;\n    grid-template-columns: 3em max-content 3em;\n    gap: var(--spacing-xs);\n    .left-part {\n        text-align: right;\n    }\n    .right-part {\n        text-align: left;\n    }\n    ${({ $warning }) => $warning\n        ? `\n            color: var(--main-warning);\n        `\n        : ''}\n`;\nexport type ResolutionLabel = {\n    warning?: boolean,\n    width: number,\n    height: number,\n}\nexport const ResolutionLabel = ({ width, height, warning }: ResolutionLabel) => {\n    return <ResolutionLabelContainer $warning={warning}>\n        <span className=\"left-part\">{width}</span>\n        <span>×</span>\n        <span className=\"right-part\">{height}</span>\n    </ResolutionLabelContainer>;\n};","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    <ResolutionLabel width={width} height={height} warning={true} />\n                                </Popover>\n                                : <ResolutionLabel width={width} height={height} />,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #222222 inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    text-align: center;\n    .content {\n        text-align: left;\n    }\n    a {\n        display: inline-block;\n    }\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 300px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            <div className=\"content\">\n                                {content}\n                            </div>\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\n                                <img src={image} alt={`version-${version}-illust`} />\n                            </a>}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, notification, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\n\nexport const FAD_BUTTON_ID = 'faq-button';\n\ntype Quote = {\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <QuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n    </QuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\n\n    useEffect(() => {\n        const currentReminder = '11/06/2025';\n        if (faqReminder !== currentReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    useEffect(() => {\n        if (feedbackReminder !== true) {\n            setFeedbackReminder(true);\n            setAnimating(true);\n            notification.info({\n                message: 'Feedback Reminder',\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\n                duration: 10,\n                onClose: () => {\n                    setAnimating(false);;\n                }\n            });\n        }\n    }, [feedbackReminder, setFeedbackReminder]);\n\n    return <>\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved feedbacks are removed.</i></div>\n                    <br />\n                    {[\n                        {\n                            author: 'Anonymous User at Jun 06, 2025',\n                            question: 'When using the Link Arrows on a Pendulum card, the Link Rating disappears',\n                            answer: 'It should be fixed by now',\n                        },\n                        {\n                            author: 'Shanaya User at Jun 04, 2025',\n                            question: 'I would like to request another artwork effect like this, like the effect of the attached picture its a secret rare effect',\n                            answer: 'I have added foil 9, this is my best and final attempt, sorry if it does not match your need.',\n                        },\n                        {\n                            author: 'Yugiohfann at Jun 03, 2025',\n                            question: 'Please fix the ATK/DEF font text, the numbers are higher than the ATK/DEF text.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 03, 2025',\n                            question: 'Small adjustment for size and style of card stats (ATK, DEF). Can you bring back the old size and style of card stats. Now the stats are higher than the ATK and DEF text.',\n                            answer: 'Can you provide a sample image so I can see the difference? I cannot take action blindly wihout any reference.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 02, 2025',\n                            question: 'please can you add sizing selection in card name? please? thank you!',\n                            answer: 'Can you provide a sample image of the old card? I would like to take a look to see if it is possible to implement it or not.',\n                        },\n                        {\n                            author: 'Cardmaker_01',\n                            question: 'Hello, the Xyz cards have black font in Set ID and Copyright, making it invisible to Xyz cards. Attached screenshot is an example. Can you please fix those fields to white font again? tysm and more power to you :)',\n                            answer: 'It should be fixed by now, thanks for your feedback.'\n                        },\n                        {\n                            author: 'galaxy dragon',\n                            question: 'Can you add a little space on the edge of the spell and trap card? when it is full of text. Thank you.',\n                            answer: 'I can\\'t quite understand what you mean, can you be more specific, or provide a sample image?',\n                        },\n                        {\n                            author: 'Anonymous User at May 27, 2025',\n                            question: 'Hello, can you add a selection of sizes in card title? because the old card and new card have different card title alignment, the old card seems to appear the title is more stretch than the new maybe because of the card size of the old card. can you fix it pls? maybe add some choices of card title alignments?\\nor maybe size? THANK YOU SO MUCH!!',\n                            answer: 'Do you have any sample image of the old card? I would like to see the difference between the two so I can decide that if it is possible or not.',\n                        },\n                        {\n                            author: 'ATK/DEF at May 26, 2025',\n                            question: 'The ATK/DEF text and values seem to have different sizes than usual. Also the ? seems to be in a different format to how it appears in TCG/OCG',\n                            answer: 'I have made a bit adjustment for font size and font family of stats text.',\n                        },\n                        {\n                            author: 'Maya at May 23, 2025',\n                            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\n                            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\n                        },\n                        {\n                            author: 'Shanaya at May 22, 2025',\n                            question: 'Can you put something rainbow effect on the Finish in number 3?',\n                            answer: 'I have added art finish type 8, which is a mix between type 3 and 6, you may try that out.',\n                        },\n                    ].map(({ author, question, answer }, index) => {\n                        return <Quote key={index} author={author} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import React from 'react';\nimport { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n    &:focus {\n        background-color: var(--main-level-3);\n    }\n    &:focus-visible {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    id,\n    tabIndex,\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n    onClick,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\n    id?: string,\n    tabIndex?: number,\n    className?: string,\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        id={id}\n        tabIndex={tabIndex}\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n        onClick={onClick}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","\nimport { Input } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport styled from 'styled-components';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\n\nexport type InlineColorPicker = {\n    disabled?: boolean,\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nexport const InlineColorPicker = ({\n    disabled,\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst LINK_MARKER_HALF_SIZE = 13;\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 1;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkerPicker = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkerPicker = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkerPicker) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        <ResolutionLabel width={width} height={height} warning={true} />\n                    </Popover>\n                    : <ResolutionLabel width={width} height={height} />}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    // setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Tooltip\n                                title={<div className=\"image-info\">\n                                    {language['image-cropper.online-tip']}\n                                </div>}\n                            >\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                    {language['image-cropper.source.online.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                    </div>\n                </div>\n                {children}\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        if (!receivingCanvas) {\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './inline-color-picker';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './link-marker';\nexport * from './setting';\nexport * from './setting-panel';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay\n            ? <div className=\"copiable-overlay\">\n                {withText\n                    ? <>Copied&nbsp;<CheckOutlined /></>\n                    : <CheckOutlined />}\n                </div>\n            : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['image-cropper.offline-warning']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={window.location.href}\n                                withText\n                            >\n                                <div className=\"icon\"><LinkOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.share-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n    ExtraAttributeList,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n            </Tooltip>,\n        value: name,\n        isCreative,\n        supportFormat,\n    }))\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\n\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\n        label: <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n        value: name,\n        isCreative,\n        supportFormat,\n    }))\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: max-content max-content;\n    color: var(--color);\n    .emboss-control-title {\n        grid-column: -1 / 1;\n        font-size: var(--fs-sm);\n        text-align: center;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({ ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrainRef = {\n    changeFrame: (frameValue: number | string) => void,\n};\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\n};\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}, ref) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n                linkRating,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : atk;\n            const nextDef = willRemoveStat ? '' : def;\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            if (willRemoveStat) {\n                onStatChange(nextAtk, nextDef, nextLinkRating);\n            }\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n                linkRating: nextLinkRating,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    useImperativeHandle(ref, () => ({\n        changeFrame,\n    }));\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n});","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .art-frame {\n        span {\n            padding: 0;\n        }\n    }\n    div.ant-slider {\n        .ant-slider-handle {\n            height: 19px;\n            top: 8px;\n            border-radius: 0;\n            width: 10px;\n        }\n        .ant-slider-step,\n        .ant-slider-track,\n        .ant-slider-rail {\n            height: 10px;\n        }\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        .ant-slider {\n            padding-top: 8px;\n        }\n    }\n    .background-label {\n        cursor: pointer;\n        &:hover {\n            .background-preview {\n                box-shadow: 0 0 2px 0 #222222;\n            }\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        text-align: center;\n        user-select: none;\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .layout-picker-panel {\n            margin-top: var(--spacing);\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <SolidLabel className=\"background-label\">\n                <Checkbox\n                    className=\"art-frame\"\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                    checked={opacity.boundless}\n                >\n                    &nbsp;{language['input.opacity.boundless.label']}\n                </Checkbox>\n            </SolidLabel>\n        </Tooltip>\n        <Popover\n            visible={backgroundInputVisible}\n            destroyTooltipOnHide={false}\n            trigger={['click']}\n            onVisibleChange={setBackgroundInputVisible}\n            overlayClassName={[\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                backgroundInputVisible ? 'picker-visible' : '',\n                backgroundInputHidden ? 'picker-hidden' : '',\n            ].join(' ')}\n            content={<div className=\"overlay-event-absorber\">\n                <StyledBaseFillPickerContainer\n                    className={[\n                        'custom-style-picker',\n                        noBackground ? 'overlay-no-background-image' : ''\n                    ].join(' ')}\n                >\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                        <Checkbox\n                            checked={hasBackground}\n                            onChange={e => {\n                                changeHasBackground(e);\n                            }}\n                        >{language['input.background.toggle-label']}</Checkbox>\n                        <br />\n                        <i>{language['input.background.description']}</i>\n                    </h3>\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                        <BackgroundInputGroup\n                            ref={backgroundInputRef}\n                            receivingCanvas={receivingCanvas}\n                            onSourceLoaded={onSourceLoaded}\n                            onTainted={onTainted}\n                            onCropChange={onCropChange}\n                            backgroundColor={opacity.baseFill}\n                        >\n                            <div className=\"layout-picker-panel\">\n                                <div className=\"layout-picker-subpanel color-section\">\n                                    <h2>{language['input.background-color.label']}</h2>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={opacity.baseFill}\n                                        onChangeComplete={color => {\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                        }}\n                                    />\n                                </div>\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                    <h2>{language['input.background-type.label']}</h2>\n                                    <RadioTrain\n                                        className=\"background-type-picker\"\n                                        onChange={changeBackgroundType}\n                                        optionList={getBackgroundTypeList({\n                                            fit: language['input.background-type.fit.label'],\n                                            full: language['input.background-type.full.label'],\n                                            frame: language['input.background-type.frame.label'],\n                                        })}\n                                        value={backgroundType}\n                                    />\n                                </div>}\n                            </div>\n                        </BackgroundInputGroup>\n                    </div>\n                </StyledBaseFillPickerContainer>\n            </div>}\n            placement=\"bottom\"\n        >\n            <SolidLabel className=\"background-label\">\n                <div\n                    className=\"background-preview\"\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                >\n                    {hasBackground\n                        ? background || backgroundData\n                            ? <img\n                                className=\"background-image-preview\"\n                                src={backgroundSource === 'online'\n                                    ? background\n                                    : backgroundData}\n                                alt=\"Background\"\n                            />\n                            : null\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                </div>\n                {language['input.background.label']}\n            </SolidLabel>\n        </Popover>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <SolidLabel className=\"slider-label\">\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </SolidLabel>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return cardIcon === 'auto' && autoIconType === 'none'\n        ? showCreativeOption\n            ? <RadioTrain\n                className=\"fill-input-train\"\n                value={cardIcon}\n                onChange={changeCardIcon}\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                    return {\n                        label: icon ?? <CloseCircleOutlined />,\n                        value,\n                        tooltipProps: {\n                            title: language[fullLabelKey],\n                        },\n                    };\n                })}\n            >\n                {DropdownChildren}\n            </RadioTrain>\n            : null\n        : iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    position: relative;\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 480px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .inline-input {\n        margin-bottom: var(--spacing-xs);\n    }\n    .checkbox-disabled {\n        .ant-checkbox {\n            display: none;\n        }\n        visibility: hidden; // Avoid collapsing\n    }\n    .frame-part-name {\n        position: absolute;\n        padding: 0 var(--spacing);\n        top: calc(-1 * var(--spacing-xs));\n        right: calc(-1 * var(--spacing-xs));\n        border-radius: 0 0 0 var(--br-lg);\n        background-color: var(--main-level-4);\n        border-left: var(--bw) solid var(--sub-level-4);\n        border-bottom: var(--bw) solid var(--sub-level-4);\n        &:empty {\n            display: none;\n        }\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\nimport { copyrightMap, FlagIndexMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\n    .auto-link-rating-input {\n        margin-left: var(--spacing-sm);\n    }\n    .auto-link-rating {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        line-height: 1;\n        text-align: center;\n        padding: var(--spacing-xs);\n        background: var(--main-level-4);\n        border-radius: var(--br-lg);\n        font-family: 'RoGSanSrfStd-Bd';\n        box-shadow: var(--bs-button);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isLink,\n        linkRating,\n        autoLinkRating,\n        showDefAndLink,\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\n        getUpdater,\n    }) => ({\n        linkRating,\n        autoLinkRating: linkMap.length,\n        isLink,\n        sticker,\n        format,\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def, linkRating }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            {(!isLink || (isLink && showDefAndLink)) && <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />}\n            {(isLink && showDefAndLink) && <div />}\n            {isLink && <CardTextInput ref={linkRatingInputRef}\n                id=\"link\"\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\n                    <div className=\"input-label\">{language['input.link.label']}</div>\n                    <Tooltip title={language['input.link.auto.tooltip']}>\n                        <div className=\"auto-link-rating-input\">\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\n                                ? <Checkbox\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            changeLinkRating('');\n                                            linkRatingInputRef.current.setValue('');\n                                        }\n                                    }}\n                                />\n                                : <div className=\"auto-link-rating\">\n                                    {isLink ? autoLinkRating : '-'}\n                                </div>}\n                        </div>\n                    </Tooltip>\n                </StyledLinkRatingInputContainer>}\n                defaultValue={`${useCard.getState().card.linkRating}`}\n                onChange={changeLinkRating}\n                onTakePicker={onTakePicker}\n                placeholder={language['input.link.custom.placeholder']}\n            />}\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                        <IconButton\n                            onClick={() => {}}\n                            Icon={UnorderedListOutlined}\n                        />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport {\n    ImageCropper,\n    ImageCropperRef,\n    LINK_MARKER_PICKER_WIDTH,\n    LinkMarkerPicker,\n    RadioTrain,\n    StyledDropdown,\n    StyledDropdownLabel,\n} from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\n    position: relative;\n    ${({ $hover }) => $hover\n        ? `\n            .link-marker-picker {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n        `\n        : ''}\n`;\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    text-align: left;\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group {\n        flex: 1;\n    }\n    .ant-radio-button-wrapper {\n        padding: 0 var(--spacing-xs);\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [art: string, ...OtherFinish],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    /** Be careful, we use added order here, so latest foil target is highest index. */\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\n        </>\n        : <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\n        </>;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[artFinish, ...otherFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                        finishMap[OtherFinishTypeMap['background'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <LinkPickerContainer\n            className=\"link-picker-container\"\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\n            $hover={showExtraDecorativeOption}\n        >\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </LinkPickerContainer>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox } from 'antd';\nimport { CardFlag, FlagInfoList } from 'src/model';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst FrameBehaviorSettingPanelContainer = styled.div`\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border-top: var(--bw) solid var(--sub-level-3);\n`;\n\nexport type FrameBehaviorSettingPanel = {\n    \n};\nexport const FrameBehaviorSettingPanel = () => {\n    const language = useLanguage();\n    const {\n        flag,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        flag,\n        setCard,\n        getUpdater,\n    })));\n\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\n        const nextFlagList: CardFlag = [...currentCard.flag];\n        nextFlagList[index] = value;\n\n        return {\n            ...currentCard,\n            flag: nextFlagList,\n        };\n    });\n\n    return <FrameBehaviorSettingPanelContainer>\n        {flag.map((entry, index) => {\n            const { labelKey } = FlagInfoList[index];\n\n            return <div key={labelKey}>\n                <Checkbox\n                    checked={entry !== 0}\n                    onChange={e => {\n                        const value = e.target.checked ? 1 : 0;\n\n                        updateFlag(value, index);\n                    }}\n                >{language[labelKey]}</Checkbox>\n            </div>;\n        })}\n    </FrameBehaviorSettingPanelContainer>;\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { getFrameButtonList } from '../const';\nimport { Button, Checkbox } from 'antd';\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\nimport styled from 'styled-components';\nimport { CanvasConst, FrameInfoMap, FramePositionMap } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\nconst FrameLayoutContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    column-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    ${StyledPendulumFrameContainer} {\n        border: none;\n        box-shadow: none;\n        padding: 0;\n    }\n    .visual-preview-container {\n        color: var(--color-heavy);\n        width: 110px; // Alignment\n        text-align: center;\n        label {\n            padding-bottom: var(--spacing-xs);\n        }\n        .frame-info-block {\n\t\t\theight: 30px; // Alignment\n\t\t\tline-height: 28px; // Alignment with border 1px\n            border: var(--bw) solid var(--sub-level-1);\n            background-color: var(--main-level-1);\n            margin-bottom: var(--spacing-xs);\n            cursor: pointer;\n            .frame-info-block-label {\n                padding: 0 var(--spacing-xs);\n            }\n            &.active {\n                border: var(--bw) dashed var(--main-level-2);\n            }\n            &:hover {\n                border: var(--bw) solid var(--main-level-2);\n            }\n        }\n    }\n`;\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $hoverable: boolean }>`\n    --layout-width: ${props => props.$width}px;\n    --layout-height: ${props => props.$height}px;\n    display: inline-block;\n    width: var(--layout-width);\n    height: var(--layout-height);\n    box-shadow: 0 0 2px 0 #202020;\n    position: relative;\n    background: var(--main-level-2);\n    button {\n        border: none;\n    }\n    .overlay-patch {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .card-layout {\n        position: absolute;\n        cursor: pointer;\n        &.unmodified .overlay-patch {\n            background: repeating-linear-gradient(\n                45deg,\n                #44444466,\n                #44444466 8px,\n                #00000000 8px,\n                #00000000 12px\n            );\n        }\n    }\n    .partial-layout {\n        background-clip: padding-box;\n        ${props => props.$hoverable\n            ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) dashed var(--main-level-2);\n                }\n            `\n            : ''}\n    }\n    .float-layout {\n        ${props => props.$hoverable\n            ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) solid var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n            `\n            : ''}\n    }\n    /** For Zarc's gradient */\n    .partial-layout {\n        background-size: 200%;\n    }\n    .top-left {\n        width: 50%; height: 50%;\n        top: 0; left: 0;\n    }\n    .top-right {\n        width: 50%; height: 50%;\n        top: 0; left: 50%;\n        background-position-x: 100%;\n    }\n    .bottom-left {\n        width: 50%; height: 50%;\n        top: 50%; left: 0;\n    }\n    .bottom-right {\n        width: 50%; height: 50%;\n        top: 50%; left: 50%;\n        background-position-x: 100%;\n    }\n    /** Background width is slightly reduced to help active bottom frames easier */\n    .effect-background {\n        width: 80%;\n        height: 20%;\n        bottom: 5%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    .pendulum-effect-background {\n        width: 80%;\n        height: 13%;\n        bottom: 28%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n`;\n\nexport type CardLayoutPreview = {\n    tabIndex?: number,\n    width: number,\n    height: number,\n    baseLayoutState?: Record<string, string | undefined>,\n    resolvedLayoutState: Record<string, string | undefined>,\n    isPendulum: boolean,\n    activeLayout?: string,\n    onClick?: (key: string) => void,\n};\nexport const CardLayoutPreview = ({\n    tabIndex = 0,\n    width,\n    height,\n    baseLayoutState,\n    resolvedLayoutState,\n    isPendulum,\n    activeLayout,\n    onClick,\n}: CardLayoutPreview) => {\n    return <CardLayoutContainer $width={width} $height={height} $hoverable={!!onClick}>\n        {[\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\n        ].map(({ className, key }) => {\n            const frame = resolvedLayoutState[key];\n\n            if (!frame) return null;\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\n            const {\n                labelBackgroundColor,\n                labelBackgroundImage,\n            } = FrameInfoMap[frame];\n            return <button key={key}\n                {...tabIndex < 0 ? {} : { tabIndex }}\n                className={mergeClass(\n                    className,\n                    key === activeLayout ? 'active' : '',\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\n                )}\n                onClick={() => onClick?.(key)}\n                style={labelBackgroundImage\n                    ? { backgroundImage: labelBackgroundImage }\n                    : { backgroundColor: labelBackgroundColor }\n                }\n            >\n                <div\n                    className=\"overlay-patch\"\n                />\n            </button>;\n        })}\n    </CardLayoutContainer>;\n};\n\ntype FramelayoutSettingPanelRef = {\n    focus: () => void,\n};\nexport type FramelayoutSettingPanel = {\n    isPendulum: boolean,\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onFrameChange: (frame: string) => void,\n    onCancel: () => void,\n};\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\n    frameList,\n    onFrameChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            effectStyle,\n            pendulumStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        setCard,\n        getUpdater,\n    })));\n    const recentCustomPendulumFrame = useRef({\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n    });\n    const [focus, setFocus] = useState(0);\n    const [activeLayout, setActiveLayout] = useState('frame');\n    const frameLayoutMainId = 'frame-layout-main';\n\n    useEffect(() => {\n        /** Avoid confusion */\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\n    }, [activeLayout, isPendulum]);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\n    }));\n\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\n        const nextEffectStyle = { ...currentCard.effectStyle };\n        nextEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            effectStyle: nextEffectStyle,\n        };\n    });\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\n        nextPendulumEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            pendulumStyle: nextPendulumEffectStyle,\n        };\n    });\n    const changeLayout = (layoutValue: string) => {\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\n    };\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const activeFrame = layoutState[activeLayout];\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\n    return <FrameLayoutContainer>\n        <div className=\"visual-preview-container\">\n            <label>{language['input.advanced-frame.main.label']}</label>\n            <FrameInfoBlock\n                id={frameLayoutMainId}\n                tabIndex={0}\n                className={activeLayout === 'frame' ? 'active' : ''}\n                {...FrameInfoMap[frame]}\n                onClick={() => setActiveLayout('frame')}\n            />\n            <label>{language['input.advanced-frame.detailed.label']}</label>\n            <CardLayoutPreview\n                width={Math.round(width / 20) * 2}\n                height={Math.round(height / 20) * 2}\n                isPendulum={isPendulum}\n                baseLayoutState={layoutState}\n                resolvedLayoutState={resolvedLayoutStyle}\n                activeLayout={activeLayout}\n                onClick={key => setActiveLayout(key)}\n            />\n            <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    changeBottomLeftFrame('auto');\n                    changeBottomRightFrame('auto');\n                    changeTopLeftFrame('auto');\n                    changeTopRightFrame('auto');\n                    changeEffectBackground('auto');\n                    changePendulumEffectBackground('auto');\n                }}\n            >\n                {language['button.reset.label']}\n            </Button>\n        </div>\n        <div>\n            <StyledPendulumFrameContainer\n                className=\"pendulum-frame-picker\"\n                {...getNavigationProps({\n                    stopPropagation: true,\n                    optionLength: frameList.length,\n                    setFocus,\n                    onTrigger: () => {\n                        if (focus >= 0) changeLayout(frameList[focus].value);\n                    },\n                    onCancel,\n                })}\n            >\n                <div className=\"frame-part-name\">\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\n                </div>\n                <Checkbox\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\n                    checked={activeFrame === 'auto'}\n                    disabled={activeLayout === 'frame'}\n                    onChange={e => {\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\n                    }}\n                >{language['input.frame.auto']}</Checkbox>\n                <RadioTrain\n                    className=\"frame-radio\"\n                    value={activeFrame}\n                    onChange={value => {\n                        if (activeLayout === 'frame') onFrameChange(value);\n                        else changeLayout(value);\n                    }}\n                    optionList={frameList}\n                />\n            </StyledPendulumFrameContainer>\n        </div>\n    </FrameLayoutContainer>;\n});\n\nexport * from './frame-behavior-setting-panel';","import { Checkbox, Input, Popover } from 'antd';\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, FlagInfoList, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { resolveFrameStyle } from 'src/util';\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n    .card-layout-preview-container {\n        line-height: 0;\n        border: var(--bw) solid var(--sub-level-1);\n        overflow: hidden;\n    }\n    .anticon {\n        align-content: center;\n        padding: 0 var(--spacing-xs);\n        border: var(--bw) solid var(--sub-level-1);\n        border-left: none;\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n}\n& Pick<CardTextInput, 'onTakePicker'>\n& Pick<FramelayoutSettingPanel, 'onFrameChange'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n    onFrameChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        flag,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            effectStyle,\n            pendulumStyle,\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        flag,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\n    const flagList = flag\n        .map((entry, index) => {\n            if (entry !== 0) return <li key={FlagInfoList[index].labelKey}>\n                {language[FlagInfoList[index].labelKey]}\n            </li>;\n            return null;\n        })\n        .filter(entry => entry != null);\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\n                            isPendulum={isPendulum}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onFrameChange={onFrameChange}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                        />\n                        <FrameBehaviorSettingPanel />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">\n                            {language['input.advanced-frame.label']}\n                        </span>\n                        <div className=\"card-layout-preview-container\">\n                            <CardLayoutPreview\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\n                                height={advanceLayoutPreviewHeight}\n                                isPendulum={isPendulum}\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                                tabIndex={-1}\n                            />\n                        </div>\n                        {flagList.length > 0\n                            ? <InternalPopover\n                                content={<StyledPopMarkdown>\n                                    {language['input.flag.effective.label']}\n                                    <ul>{flagList}</ul>\n                                </StyledPopMarkdown>}\n                            >\n                                <ApartmentOutlined />\n                            </InternalPopover>\n                            : null}\n                        <CaretDownOutlined />\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption)\n                    && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { InlineColorPicker, RadioTrain } from 'src/component';\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    IconButton,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    getFinishList,\n    FormatButtonList,\n    getExtraAttributeList,\n} from './const';\nimport { ClearOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledInputLabelWithButton,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting, updateSetting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor, showExtraAttribute } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const frameTrainRef = useRef<FrameTrainRef>(null);\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\n                    <IconButton\n                        onClick={() => onFinishChange([])}\n                        Icon={ClearOutlined}\n                        tooltipProps={{\n                            title: language['input.other-finish.reset.tooltip'],\n                        }}\n                    />\n                </StyledInputLabelWithButton>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain ref={frameTrainRef}\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train span-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                    suffix={!showExtraAttribute && showExtraDecorativeOption\n                        ? <IconButton\n                            onClick={() => updateSetting({ showExtraAttribute: true })}\n                            Icon={DoubleRightOutlined}\n                            tooltipProps={{ overlay: language['button.more.label'] }}\n                        />\n                        : null}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n                {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\n                    className=\"fill-input-train extra-attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={extraAttributeList}\n                    suffix={showExtraDecorativeOption && showExtraAttribute\n                        ? <IconButton\n                            onClick={() => updateSetting({ showExtraAttribute: false })}\n                            Icon={DoubleLeftOutlined}\n                            tooltipProps={{ overlay: language['button.less.label'] }}\n                        />\n                        : null}\n                >\n                    &nbsp;\n                </RadioTrain>}\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        softMode={reduceMotionColor}\n                        onTakePicker={setPickerTarget}\n                        onFrameChange={frame => frameTrainRef.current.changeFrame(frame)}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 50%;\n            height: 50%;\n            position: absolute;\n            &.top-left-frame {\n                top: 0;\n                left: 0;\n            }\n            &.top-right-frame {\n                top: 0;\n                left: 50%;\n            }\n            &.bottom-left-frame {\n                top: 50%;\n                left: 0;\n            }\n            &.bottom-right-frame {\n                top: 50%;\n                left: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        leftFrame, rightFrame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n        effectStyle,\n        pendulumStyle,\n    } = card;\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n    } = resolveFrameStyle({\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n    }, isPendulum);\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame top-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    ExtraAttributeList,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {[...AttributeList, ...ExtraAttributeList]\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Pendulum Size',\n                                    value: <div>\n                                        {PendulumSizeList\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: var(--spacing);\n    margin-top: 0;\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                globalScale={globalScale}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                <div className=\"alert-label\">\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                </div>\n                                <Dropdown\n                                    className=\"save-button-dropdown\"\n                                    placement=\"bottomRight\"\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                >\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                        <GatewayOutlined className=\"resolution-icon\" />\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                    </ResolutionButton>\n                                </Dropdown>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <CardPreviewContainer className=\"card-preview-container\">\n                            <Tooltip title={language['button.reset.tooltip']}>\n                                <ResetButton\n                                    className=\"reset-button\"\n                                    onClick={() => {\n                                        const consent = window.confirm(language['prompt.reset.message']);\n\n                                        if (consent) {\n                                            const { setCard, card } = useCard.getState();\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\n                                            const contextualDefaultCardData = card.format === 'tcg'\n                                                ? defaultCard\n                                                : changeCardFormat(defaultCard, 'ocg');\n\n                                            setCard(contextualDefaultCardData, true);\n                                            setImageChangeCount(cnt => cnt + 1);\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                        }\n                                    }}\n                                >\n                                    <ClearOutlined />\n                                </ResetButton>\n                            </Tooltip>\n                            <Tooltip title={<div className=\"center\">\n                                {language['button.full-size.label']}\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                            </div>}>\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                    <ZoomInOutlined />\n                                </LightboxButton>\n                            </Tooltip>\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                             */}\n                            <canvas\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                id=\"preview-canvas\"\n                                ref={previewCanvasRef}\n                                width={CanvasWidth}\n                                height={CanvasHeight}\n                            />\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"nameCanvas\"\n                                    ref={nameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={148 * globalScale}\n                                />\n                                <canvas id=\"cardIconCanvas\"\n                                    ref={cardIconCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={222 * globalScale}\n                                />\n                                <canvas id=\"pendulumScaleCanvas\"\n                                    ref={pendulumScaleCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"pendulumEffectCanvas\"\n                                    ref={pendulumEffectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"typeCanvas\"\n                                    ref={typeCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"effectCanvas\"\n                                    ref={effectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"statCanvas\"\n                                    ref={statCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"setIdCanvas\"\n                                    ref={setIdCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"passwordCanvas\"\n                                    ref={passwordCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"creatorCanvas\"\n                                    ref={creatorCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"stickerCanvas\"\n                                    ref={stickerCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"finishCanvas\"\n                                    ref={finishCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={artworkCanvasRef}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={backgroundCanvasRef}\n                                />\n                            </CardCanvasGroupContainer>\n                        </CardPreviewContainer>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}