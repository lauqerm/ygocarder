{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-color-picker/index.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","ART_FINISH_TYPE","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilNameMap","gold","platinum","getFoilList","color","isOption","DYE_LIST_LENGTH","length","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","AttributeSetMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","region","leftFrame","rightFrame","pendulumRightFrame","foil","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","isMobileDevice","check","a","navigator","userAgent","vendor","opera","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader17","_reader$split$filter","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_reader45","_reader46","_emptyCard$isLink","_filter","_reader47","_reader49","_reader50","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader48","baseFlag","Number","baseDyeList","String","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","content","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","effectText","flavorConditionRegex","potentialFlavorConditionText","exec","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","precalculatedLine","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","drawFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","resetTransform","backgroundWidth","backgroundHeight","clonedCanvasCtx","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderCtx","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","StyledMono","CopiableCode","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","_templateObject3","SolidLabel","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","ResolutionLabelContainer","_templateObject7","$warning","ResolutionLabel","warning","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","Input","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","transform","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","_ref13","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_AttributeSetMap$regi","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","CardLayoutContainer","$width","$height","$hoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","_FrameInfoMap$frame","dyeColor","FrameLayoutSettingPanel","_FrameInfoMap$frame2","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","layoutState","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_ref14","_pendulumEffectInputR","flagList","willBecomePendulum","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","ghost","header","altField","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_FramePositionMap$key","_FramePositionMap$key2","_ref24","_ref25","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","_templateObject8","ResetButton","_templateObject9","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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AAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,GAAoBL,GAAmBM,QAAO,SAACC,EAAKC,GAE7D,OADAD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICngCI,MAAME,GAAsB,CAC/BC,qBAAsB,EACtBC,YAAa,GACb3C,SAAU,KACV4C,WAAY,KACZC,UAAW,EACXC,aAAc,EACdC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAqCXC,GAAkB,CAC3BC,oBAAqB,GACrBC,iBAAkB,SAClBC,cAAc,EACdC,iBAAkB,Q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4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFzN,KAAK,OAEL0N,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAEzhB,KAAM,IAAKzD,MAAO,MAC9BmlB,EAAG,CAAE1hB,KAAM,IAAKzD,MAAO,EAAM,MAEjC+kB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFxN,KAAK,MACPyN,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFzN,KAAK,OAEL6N,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAErhB,KAAM,KAAMzD,MAAO,GAC7B,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,GAAM,CAAEyD,KAAM,KAAMzD,MAAO,GAC3B,WAAc,CAAEyD,KAAM,KAAMzD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyD,KAAM,IAAKzD,MAAO,OAEtC+kB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFxN,KAAK,MACPyN,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,k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5C,IAAQve,IAAA,IAAC,SAAE2gB,GAAU3gB,EAAA,OAAK2gB,KAIlCS,GAAcA,IAAM7C,GAAQ8C,WAAWV,S,cCxIpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,mCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAclV,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGmV,GAAc,IAAIC,IAAIL,GAAa9xB,IAAI+xB,KAEvCK,GAAsBP,GAAqBj8B,QAAO,CAACC,EAAKm8B,EAAOl+B,KACjE,MAAMu+B,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuBx8B,EAAIm8B,GAAqBl+B,GAE7D+B,IAC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","file":"static/js/main.da7ca9e3.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 56,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n    iconWidth: 43,\r\n    iconHeight: 44,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ART_FINISH_TYPE = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type10: {\r\n        value: 'type10',\r\n        label: '10',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type11: {\r\n        value: 'type11',\r\n        label: '11',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type12: {\r\n        value: 'type12',\r\n        label: '12',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type13: {\r\n        value: 'type13',\r\n        label: '13',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            art: [\r\n                { blendMode: 'darken', opacity: 1 },\r\n                { blendMode: 'multiply', opacity: 1 },\r\n                { blendMode: 'overlay', opacity: 1 },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport const OtherFinishTypeMap = {\r\n    art: {\r\n        key: 'art' as const,\r\n        labelKey: 'input.art-finish.label',\r\n    },\r\n    background: {\r\n        key: 'background' as const,\r\n        labelKey: 'input.background.label',\r\n    },\r\n    attribute: {\r\n        key: 'attribute' as const,\r\n        labelKey: 'input.attribute.label',\r\n    },\r\n    icon: {\r\n        key: 'icon' as const,\r\n        labelKey: 'input.icon-type.icon.label',\r\n    },\r\n    sticker: {\r\n        key: 'sticker' as const,\r\n        labelKey: 'input.sticker.label',\r\n    },\r\n};\r\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\r\n\r\nexport type FrameDyeList = [\r\n    topLeft: string,\r\n    topRight: string,\r\n    bottomLeft: string,\r\n    bottomRight: string,\r\n    effect: string,\r\n    pendulumEffect: string,\r\n];\r\nexport const getDefaultDyeList = () => ['', '', '', '', '', ''] as FrameDyeList;\r\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\r\n\r\nexport const DyeIndexMap = {\r\n    topLeftFrame: 0,\r\n    topRightFrame: 1,\r\n    bottomLeftFrame: 2,\r\n    bottomRightFrame: 3,\r\n    effectBackground: 4,\r\n    pendulumEffectBackground: 5,\r\n};","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const ExtraAttributeList = [\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-1',\r\n        nameKey: 'input.attribute.boss-1',\r\n        label: 'Boss 1',\r\n        color: '#9b325d',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-2',\r\n        nameKey: 'input.attribute.boss-2',\r\n        label: 'Boss 2',\r\n        color: '#942a56',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-3',\r\n        nameKey: 'input.attribute.boss-3',\r\n        label: 'Boss 3',\r\n        color: '#86214b',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-START',\r\n        nameKey: 'input.attribute.boss-start',\r\n        label: 'Boss Start',\r\n        color: '#a13864',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const AttributeSetMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\r\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\r\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\r\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\r\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\r\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\r\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\r\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\r\n};\r\nexport const DefaultFormatAttribute: Record<string, string> = {\r\n    tcg: AttributeSetMap.en.key,\r\n    ocg: AttributeSetMap.jp.key,\r\n};\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 792,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 808,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\r\n    ShowDefAndLink: number,\r\n    LinkRating: number,\r\n];\r\n/**\r\n * Remember, 0 is ALWAYS the default state.\r\n */\r\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\r\n\r\nexport const LINK_RATING_ALWAYS_AUTO = 0;\r\nexport const LINK_RATING_ALWAYS_SHOW = 1;\r\nexport const LINK_RATING_ALWAYS_HIDE = 2;\r\n\r\nexport const FlagInfoList = [\r\n    {\r\n        index: 0,\r\n        labelKey: 'input.flag.mix-def-link',\r\n        type: 'checkbox' as const,\r\n    },\r\n    {\r\n        index: 1,\r\n        labelKey: 'input.flag.link-rating-behavior',\r\n        type: 'link-rating-behavior' as const,\r\n    },\r\n];\r\nexport const FlagIndexMap = {\r\n    showDefAndLink: 0,\r\n    linkRating: 1,\r\n};\r\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 49%',\r\n            'rgba(239,239,239,1) 51%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);\r\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\r\n\r\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\r\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\r\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\r\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\r\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\r\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\r\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\r\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\r\n};","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\r\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\nimport { getDefaultCardFlag } from './flag';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    frame: 'fusion',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    linkRating: '',\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    flag: getDefaultCardFlag(),\r\n    dyeList: getDefaultDyeList(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\r\n    frame: 'effect',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    linkRating: '',\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    dyeList: getDefaultDyeList(),\r\n    flag: getDefaultCardFlag(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './flag';\r\nexport * from './foil-finish-dye';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","import { CanvasConst } from 'src/model';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\n\r\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        ctx,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import { CanvasConst } from 'src/model';\r\nimport { createCanvas } from './create';\r\nimport { HexColorRegex } from '..';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\r\n    if (!HexColorRegex.test(color)) return {\r\n        canvas: baseCanvas,\r\n        ctx: baseCanvas.getContext('2d'),\r\n    };\r\n\r\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\r\n\r\n    /** Draw the target image with grayscale */\r\n    overlayContext.filter = 'grayscale(1)';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.filter = 'none';\r\n\r\n    /** Overlay the color lens on top the grayscale layer to dye it */\r\n    overlayContext.fillStyle = color;\r\n    overlayContext.globalCompositeOperation = 'overlay';\r\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\r\n\r\n    /** Draw the target image again but with destination-in mode to remove excess area */\r\n    overlayContext.globalCompositeOperation = 'destination-in';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.globalCompositeOperation = 'source-over';\r\n\r\n    return {\r\n        canvas: overlayCanvas,\r\n        ctx: overlayCanvas.getContext('2d'),\r\n    };\r\n};","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import {\r\n    Card,\r\n    Foil,\r\n    frameList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PresetNameStyleMap,\r\n} from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFooter = (frame: string) => {\r\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link'].includes(frame) || checkLightFooter(frame);\r\n};\r\n\r\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\r\n    let showLinkRating = false;\r\n    switch (displayMode) {\r\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\r\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\r\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\r\n    }\r\n\r\n    return showLinkRating;\r\n};\r\n\r\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\r\n    const {\r\n        frame,\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    } = frameData;\r\n    const resolvedFrame = frame ?? 'effect';\r\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\r\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\r\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\r\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\r\n        : bottomLeftFrame) ?? resolvedFrame;\r\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\r\n        ? resolvedBottomLeft\r\n        : bottomRightFrame) ?? resolvedFrame;\r\n    const resolvedEffectBackground = (effectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : effectBackground) ?? resolvedFrame;\r\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : pendulumEffectBackground) ?? resolvedFrame;\r\n\r\n    return {\r\n        topLeftFrame: resolvedTopLeft,\r\n        topRightFrame: resolvedTopRight,\r\n        bottomLeftFrame: resolvedBottomLeft,\r\n        bottomRightFrame: resolvedBottomRight,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    };\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { ART_FINISH_TYPE, AttributeSetMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    region: 'rg',\r\n    frame: 'fr',\r\n    rightFrame: 'rf',\r\n    leftFrame: 'lf',\r\n    pendulumRightFrame: 'rpf',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    otherFinish: 'of',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n        background: 'ebg',\r\n        minLine: 'eml',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n        background: 'pbg',\r\n        minLine: 'pml',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    linkRating: 'lr',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    dyeList: 'dl',\r\n    flag: 'fl',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detech the actual version from incoming cards. */\r\n    delete baseCard.version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.region == null) migratedCard.region = AttributeSetMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\r\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\r\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if (migratedCard.finish) {\r\n        const finishList = migratedCard.finish;\r\n\r\n        if (finishList.includes(ART_FINISH_TYPE)) {\r\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\r\n            migratedCard.otherFinish = [\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n            ];\r\n        }\r\n    }\r\n    if (Array.isArray(migratedCard.otherFinish)\r\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\r\n    ) {\r\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\r\n    }\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    const defaultFlagList = getDefaultCardFlag();\r\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\r\n    else if (migratedCard.flag.length < defaultFlagList.length) {\r\n        const currentFlagList = [...migratedCard.flag];\r\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\r\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\r\n            return entry;\r\n        }) as CardFlag;\r\n    }\r\n\r\n    const defaultDyeList = getDefaultDyeList();\r\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\r\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\r\n        const currentDyeList = [...migratedCard.dyeList];\r\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\r\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\r\n            return entry;\r\n        }) as FrameDyeList;\r\n    }\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const setCharAt = (str: string, index: number, chr: string) => {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Contrast formula from google \\ :v / */\r\nexport const getContrastColor = (rgbColor: number[]) => {\r\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\r\n        ? '#000000'\r\n        : '#FFFFFF';\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './color';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { AttributeSetMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        region,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const targetRegion = AttributeSetMap[region].category === targetFormat\r\n        ? region\r\n        : AttributeSetMap[DefaultFormatAttribute[targetFormat]].key;\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        region: targetRegion,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\nexport type WithLanguage = {\r\n    language: LanguageDataDictionary\r\n};\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardFlag,\r\n    CardOpacity,\r\n    CondenseType,\r\n    DYE_LIST_LENGTH,\r\n    FLAG_LENGTH,\r\n    Foil,\r\n    FoilNameMap,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardFlag,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultDyeList,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    'Region',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Link Rating',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Effect Style - Background',\r\n    'Effect Style - Min Line',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Pendulum Effect Style - Background',\r\n    'Pendulum Effect Style - Min Line',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'Other Finish - Attribute',\r\n    'Other Finish - Background',\r\n    'Other Finish - Icon',\r\n    'Other Finish - Sticker',\r\n    'Left Frame',\r\n    'Right Frame',\r\n    'Bottom Right Frame',\r\n    'Dye List',\r\n    'Flag',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            flag,\r\n            foil,\r\n            format,\r\n            region,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            leftFrame,\r\n            linkMap,\r\n            linkRating,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherFinish,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            rightFrame,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n            dyeList,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n        const stringifedFlag = flag.join('|');\r\n        const stringifedDyeList = dyeList.join('|');\r\n\r\n        write('Format', format);\r\n        write('Region', region);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Link Rating', linkRating);\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Effect Style - Background', effectStyle.background);\r\n        write('Effect Style - Min Line', effectStyle.minLine);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\r\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('Other Finish - Attribute', otherFinish[0]);\r\n        write('Other Finish - Icon', otherFinish[1]);\r\n        write('Other Finish - Sticker', otherFinish[2]);\r\n        write('Other Finish - Background', otherFinish[3]);\r\n        write('Left Frame', leftFrame);\r\n        write('Right Frame', rightFrame);\r\n        write('Bottom Right Frame', pendulumRightFrame);\r\n        write('Dye List', stringifedDyeList);\r\n        write('Flag', stringifedFlag);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\r\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\r\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\r\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\r\n                const finishIcon = reader('Other Finish - Icon') ?? '';\r\n                const finishBackground = reader('Other Finish - Background') ?? '';\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\r\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\r\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\r\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n                const linkRating = reader('Link Rating') ?? '';\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\r\n                const flag = getDefaultCardFlag().map((entry, index) => {\r\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\r\n                    return entry;\r\n                }) as CardFlag;\r\n\r\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\r\n                const dyeList = getDefaultDyeList().map((entry, index) => {\r\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\r\n                    return entry;\r\n                }) as FrameDyeList;\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    dyeList,\r\n                    effect,\r\n                    effectStyle: {\r\n                        condenseTolerant,\r\n                        upSize: effectUpSize,\r\n                        fontStyle: effectFontStyle,\r\n                        background: effectBackground,\r\n                        minLine: effectMinLine,\r\n                    },\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    flag,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    leftFrame,\r\n                    linkMap,\r\n                    linkRating,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumSize,\r\n                    pendulumStyle: {\r\n                        upSize: pendulumEffectUpSize,\r\n                        fontStyle: pendulumEffectFontStyle, \r\n                        background: pendulumEffectBackground,\r\n                        minLine: pendulumEffectMinLine,\r\n                    },\r\n                    pendulumTextStyle,\r\n                    region,\r\n                    rightFrame,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    try {\r\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n        if (frameResult !== 0) return frameResult;\r\n\r\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n        return bottomFrameResult;\r\n    } catch (e) {\r\n        return 0;\r\n    }\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    allowHotkey: boolean,\r\n    exportFormat: ExportFormat,\r\n    globalScale: number,\r\n    mirrorPendulumScale: boolean,\r\n    reduceMotionColor: boolean,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraAttribute: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        globalScale,\r\n        mirrorPendulumScale,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraAttribute,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\n\r\nexport type UseColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n};\r\nexport const useColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: UseColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return {\r\n        inputText: currentText,\r\n        color: internalValue,\r\n        setColor: setCurrentText,\r\n    };\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n        bulletWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    FLAVOR_CONDITION_SOURCE,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n    FULL_LINE_PLACEHOLDER,\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    OCG_RUBY_SOURCE,\r\n    UNCOMPRESSED_SOURCE,\r\n    WHOLE_WORD_SOURCE,\r\n    contextualDoubleQuoteRegex,\r\n    ocgKeywordDataMap,\r\n    ocgNumberCircleMap,\r\n    ocgToTCGLetterMap,\r\n    tcgToOCGLetterMap,\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    line: string,\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineList: string[] = [];\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let effectText = effect;\r\n    let effectFlavorCondition = '';\r\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n     * \r\n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n     * \r\n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n     * */\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\r\n    let tryCnt = 0;\r\n    while (effectText.length > 0 && tryCnt <= 100) {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        const lineReplacement = result?.[1];\r\n        const lineContent = result?.[2];\r\n        const fullLineReplacement = result?.[3];\r\n        const fullLineContent = result?.[4];\r\n\r\n        if (lineContent && lineReplacement) {\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else {\r\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\r\n            const lineReplacement = paragraphResult?.[0];\r\n            const lineContent = paragraphResult?.[1];\r\n            if (lineReplacement) {\r\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\r\n                lineList.push(...lineContent\r\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\r\n                    .split('\\n')\r\n                );\r\n                effectText = effectText.replace(lineReplacement, '');\r\n            }\r\n        }\r\n        tryCnt++;\r\n    }\r\n    if (effectFlavorCondition) {\r\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\r\n    }\r\n\r\n    return {\r\n        lineList,\r\n        fullLineListOption: [...fullLineListOption],\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n    FULL_LINE_PLACEHOLDER,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n        minLine?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n        minLine: baseMinLine = 0,\r\n    } = option ?? {};\r\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        lineList,\r\n        fullLineListOption,\r\n        effectFlavorCondition,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 1000,\r\n                '2': 1000,\r\n                '3': 1000,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList: lineList,\r\n                        additionalLineCount: 0,\r\n                        format, textData,\r\n                        width,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = Math.max(minLine, lineListWithRatio.length);\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\r\n            || minLine > lineCount\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            lineListWithRatio\r\n                .forEach(({\r\n                    line: precalculatedLine,\r\n                    effectiveMedian,\r\n                    isLast,\r\n                }) => {\r\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\r\n                        const { line, alignment } = fullLineListOption.shift();\r\n                        const isLast = alignment === 'justify' ? false : true;\r\n                        const xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [line],\r\n                                    format, textData,\r\n                                    width,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            spaceWidth,\r\n                            textData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\r\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                        const dynamicFlavorFontData = useDynamicSize\r\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\r\n                            : flavorFontData;\r\n                        const { fontSize } = useDynamicSize\r\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                            : flavorFontData.fontList[appliedSizeLevel];\r\n                        const flavorTextCurrentFont = createFontGetter();\r\n                        ctx.font = flavorTextCurrentFont\r\n                            .setSize(fontSize)\r\n                            .setFamily(flavorFontData.font)\r\n                            .getFont();\r\n                        const flavorTextData = {\r\n                            fontData: dynamicFlavorFontData,\r\n                            fontLevel: dynamicSizeLevel,\r\n                            currentFont: flavorTextCurrentFont,\r\n                        };\r\n                        const xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [effectFlavorCondition],\r\n                                    format, textData: flavorTextData,\r\n                                    width,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const tokenList = tokenizeText(effectFlavorCondition);\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            textData: flavorTextData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    } else {\r\n                        /** Normal line: Draw with the calculated median */\r\n                        const xRatio = effectiveMedian / 1000;\r\n                        const line = precalculatedLine;\r\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            spaceWidth,\r\n                            textData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    }\r\n\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                    trueBaseline += lineHeight;\r\n                });\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n    loopStarFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        ctx: starCtx,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (loopStarFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            ctx: starFinishCtx,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishCtx.drawImage(starCanvas, 0, 0);\r\n        await loopStarFinish(\r\n            starFinishCtx,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishCtx,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        starCtx.globalCompositeOperation = 'source-in';\r\n        starCtx.drawImage(starFinishCanvas, 0, 0);\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    rating: string,\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || typeof rating !== 'string') return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const baseline = isNaN(Number(rating))\r\n        ? 1106\r\n        : 1105;\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import { CanvasConst } from 'src/model';\r\nimport { drawAsset } from '../image';\r\nimport { createCanvas } from 'src/util';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n    topToPendulumStructure,\r\n} = CanvasConst;\r\nexport const getMaskPromise = () => {\r\n    const topRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-top-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const bottomRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    /**\r\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\r\n     * \r\n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\r\n    const rightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const nameMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = topToPendulumStructure;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-name.png');\r\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\r\n        }\r\n        return null;\r\n    })();\r\n\r\n    return {\r\n        topRight: topRightMask,\r\n        bottomRight: bottomRightMask,\r\n        right: rightMask,\r\n        name: nameMask,\r\n    };\r\n};\r\nexport const MaskPromise = getMaskPromise();\r\n\r\n/**\r\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\r\n * \r\n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\r\n * */\r\nexport const applyAlphaMask = async (\r\n    urlOrCanvas: string | CanvasImageSource,\r\n    maskData: Uint8ClampedArray<ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n) => {\r\n    const { ctx, canvas } = createCanvas(width, height);\r\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\r\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\r\n    const layerData = ctx.getImageData(0, 0, width, height).data;\r\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\r\n        layerData[cnt + 3] = maskData[cnt + 3];\r\n    }\r\n\r\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\r\n\r\n    return canvas;\r\n};","import {\r\n    ArrowPositionMap,\r\n    ArtFinishMap,\r\n    AttributeSetMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, resolveFrameStyle } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\nimport { applyAlphaMask, MaskPromise } from './mask';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n) => {\r\n    if (!ctx) return;\r\n    if (foil === 'normal') return;\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (withBorder) {\r\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\r\n    } else {\r\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n            .map(async entry => {\r\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                const coordinate = [left, top, width, height] as const;\r\n\r\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\r\n            })\r\n        );\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    region,\r\n    hasBackground,\r\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n    dyeList,\r\n    effectBackground, pendulumEffectBackground,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    otherFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    region: string,\r\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\r\n    dyeList: FrameDyeList,\r\n    effectBackground: string, pendulumEffectBackground: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    otherFinish: OtherFinish,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFrameX,\r\n        artFrameY,\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resolvedLayoutStyle = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    } = resolvedLayoutStyle;\r\n\r\n    const resultAPI = {\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            /** Combine layer frame here */\r\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\r\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\r\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\r\n                const topRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${topRightFrame}.png`,\r\n                    await MaskPromise.topRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\r\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\r\n            }\r\n\r\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\r\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\r\n            if (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '') {\r\n                /** What is this?\r\n                 * \r\n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\r\n                 */\r\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\r\n                const bottomRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${bottomRightFrame}.png`,\r\n                    await MaskPromise.bottomRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\r\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\r\n            }\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            /** Leave empty space for card art */\r\n            if (isPendulum) {\r\n                dyedTopFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n                dyedBottomFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n            }\r\n            /** Start assembling the canvas */\r\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\r\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n\r\n            /** Check for background that replace the frame here */\r\n            if (!hasBackground || !backgroundCanvas || backgroundType !== 'frame') {\r\n                ctx.globalAlpha = 1;\r\n                return;\r\n            }\r\n\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n            const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n            const clonedCanvasCtx = clonedCanvas?.getContext('2d');\r\n            if (!clonedCanvas || !clonedCanvasCtx) {\r\n                ctx.globalAlpha = 1;\r\n                return;\r\n            }\r\n\r\n            /** Clone background to create a new frame */\r\n            clonedCanvas.width = cardWidth * globalScale;\r\n            clonedCanvas.height = cardHeight * globalScale;\r\n            clonedCanvasCtx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0, backgroundWidth, backgroundHeight,\r\n                0, 0, cardWidth * globalScale, cardHeight * globalScale,\r\n            );\r\n            ctx.drawImage(\r\n                clonedCanvas,\r\n                0, 0,\r\n                globalScale * cardWidth, globalScale * cardHeight,\r\n                0, 0,\r\n                globalScale * cardWidth, globalScale * cardHeight,\r\n            );\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: (\r\n            externalCtx = ctx,\r\n        ) => {\r\n            if (!artworkCanvas || !externalCtx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            externalCtx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: async (\r\n            externalCtx = ctx,\r\n            hasArtBorder = false,\r\n        ) => {\r\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n                artFrameX,\r\n                artFrameY,\r\n                ratio,\r\n                artRatio,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                opacity,\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            externalCtx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / ratio,\r\n            );\r\n            const backgroundFinish = otherFinish[3] ?? 'normal';\r\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\r\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\r\n                await loopBackgroundFinish(\r\n                    externalCtx,\r\n                    'art',\r\n                    async type => drawAssetWithSize(\r\n                        externalCtx,\r\n                        `finish/art-finish-${type}.png`,\r\n                        globalScale * artFrameX, globalScale * artFrameY,\r\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\r\n                    ),\r\n                );\r\n            }\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                ctx: attributeCtx,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeCtx,\r\n                `attribute/attr-${AttributeSetMap[region].fileKey}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            const attributeFinish = otherFinish[0] ?? 'normal';\r\n            if (attributeFinish !== 'normal') {\r\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    ctx: attributeFinishCtx,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishCtx.drawImage(attributeCanvas, 0, 0);\r\n                await loopAttributeFinish(\r\n                    attributeFinishCtx,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishCtx,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                attributeCtx.globalCompositeOperation = 'source-in';\r\n                attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const starFinish = otherFinish[1] ?? 'normal';\r\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopStarFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            const {\r\n                canvas: pendulumIconCanvas,\r\n                ctx: pendulumIconCtx,\r\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\r\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\r\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\r\n            const {\r\n                canvas: dyedLeftNameCanvas,\r\n                ctx: dyedLeftNameCtx\r\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\r\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\r\n                const nameRightCanvas = await applyAlphaMask(\r\n                    `background/background-name-${topRightFrame}.png`,\r\n                    await MaskPromise.name,\r\n                    cardWidth,\r\n                    topToPendulumStructure,\r\n                );\r\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\r\n                dyedLeftNameCtx.drawImage(dyedRightNameCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = opacityName / 100;\r\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n\r\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\r\n            ctx.globalAlpha = opacityText / 100;\r\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\r\n\r\n            if (withPendulum) {\r\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\r\n                await drawAssetWithSize(\r\n                    pendulumEffectBackgroundCtx,\r\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderCtx.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                await drawAsset(\r\n                    pendulumBorderCtx,\r\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                    30, topToPendulumStructureFrame,\r\n                );\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!applyArtFinish || !artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopArtFinish(\r\n                artCtx,\r\n                'art',\r\n                async (finishType, pendulumSuffix) => {\r\n                    return await drawAssetWithSize(\r\n                        artCtx,\r\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                        artFinishX, artFinishY,\r\n                        artFrameWidth, artFrameWidth / artRatio,\r\n                    );\r\n                },\r\n                pendulumSize,\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                artCtx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        artCtx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n\r\n    if (!(ctx && cloneCtx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => {};\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n        patternContext.scale(globalScale, globalScale);\r\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n        patternContext.globalCompositeOperation = patternBlendMode;\r\n        patternContext.resetTransform();\r\n        await drawAssetWithSize(\r\n            patternContext, `finish-name/${patternImage}.png`,\r\n            edge, trueBaseline - maxAscent,\r\n            width,\r\n            maxAscent + maxDescent,\r\n        );\r\n        ctx.globalCompositeOperation = 'source-in';\r\n        ctx.drawImage(patternCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.scale(xRatio, yRatio);\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        const resetShadow = setTextStyle({\r\n            ctx: shadowContext,\r\n            x: shadowOffsetX,\r\n            y: shadowOffsetY,\r\n            shadowColor: shadowColor,\r\n            blur: shadowBlur,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.scale(1 / xRatio, 1 / yRatio);\r\n        shadowContext.drawImage(canvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.drawImage(shadowCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetShadow();\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => {},\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nconst {\r\n    finishTypeCardWidth,\r\n    width: CanvasWidth,\r\n    iconHeight,\r\n    iconWidth,\r\n} = CanvasConst;\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n    loopIconFinish,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -5 : -1;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        const {\r\n            canvas: iconCanvas,\r\n            ctx: iconCtx,\r\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n        await drawAssetWithSize(\r\n            iconCtx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            () => iconWidth * globalScale,\r\n            () => iconHeight * globalScale,\r\n        );\r\n        if (loopIconFinish) {\r\n            const {\r\n                canvas: iconFinishCanvas,\r\n                ctx: iconFinishCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\r\n            await loopIconFinish(\r\n                iconFinishCtx,\r\n                'art',\r\n                async (finishType) => {\r\n                    return await drawAsset(\r\n                        iconFinishCtx,\r\n                        `finish/finish-typeart-${finishType}.png`,\r\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\r\n                    );\r\n                },\r\n            );\r\n            iconCtx.globalCompositeOperation = 'source-in';\r\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        } else {\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        }\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitList = `${value}`.split('');\r\n\r\n        if (digitList.length === 1) {\r\n            const digit = digitList[0];\r\n            const digitWidth = ctx.measureText(digit).width;\r\n            const accLeft = edge - digitWidth / 2;\r\n\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n        } else if (digitList.length === 2) {\r\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\r\n            const firstDigit = digitList[0];\r\n            const secondDigit = digitList[1];\r\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\r\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\r\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\r\n                ? 0\r\n                : firstDigitWidth * 0.1\r\n            );\r\n\r\n            ctx.fillText(\r\n                firstDigit,\r\n                accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            ctx.fillText(\r\n                secondDigit,\r\n                accLeft + firstDigitWidth - (firstDigit === '1'\r\n                    ? (secondDigit === '1'\r\n                        ? ctx.measureText('1').width * 0.1\r\n                        : secondDigitWidth * 0.1)\r\n                    : secondDigitWidth * -0.1),\r\n                baseline + fontSize,\r\n            );\r\n        } else {\r\n            let totalWidth = 0;\r\n\r\n            digitList.forEach(digit => {\r\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n            let accLeft = edge - totalWidth / 2;\r\n\r\n            digitList.forEach(digit => {\r\n                ctx.fillText(\r\n                    digit,\r\n                    accLeft,\r\n                    baseline + fontSize,\r\n                );\r\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle, globalScale } = option ?? {};\r\n    const actualEdge = edge * globalScale;\r\n    const actualBaseline = baseline * globalScale;\r\n    const actualBaselineOffset = baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = actualEdge;\r\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const numberOffset = -1;\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.scale(1, 1.29);\r\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\r\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${36.18 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.scale(1, 1.29);\r\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkDiplayLinkRating,\r\n    checkLightFooter,\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveFrameStyle,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n    stickerSize,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format, region,\r\n        hasBackground, backgroundType,\r\n        frame,\r\n        foil, finish, artFinish, otherFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        leftFrame, rightFrame,\r\n        dyeList,\r\n        atk, def, linkMap, linkRating,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n        flag,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const effectBackground = effectStyle.background;\r\n    const pendulumEffectBackground = pendulumStyle.background;\r\n    const effectMinLine = effectStyle.minLine;\r\n    const pendulumEffectMinLine = pendulumStyle.minLine;\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = checkLightFooter(bottomFrame);\r\n    const {\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const [\r\n        showDefAndLinkFlag,\r\n        linkRatingDisplayMode,\r\n    ] = flag;\r\n\r\n    /** One special case where we do not show link rating */\r\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\r\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\r\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\r\n    const statInEffect = !!(atk || def)\r\n        || showLinkRating\r\n        || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n    const [, iconFinish, stickerFinish] = otherFinish;\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (\r\n                ctx: CanvasRenderingContext2D,\r\n                x: number, y: number,\r\n                w: number, h: number,\r\n                customFill?: string,\r\n            ) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                region,\r\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n                dyeList,\r\n                effectBackground, pendulumEffectBackground,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                otherFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Fill color background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\r\n            const {\r\n                canvas: artOnCardCanvas,\r\n                ctx: artOnCardCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\r\n            await drawArtFinish(artOnCardCtx);\r\n            await drawArtOverlayFinish(artOnCardCtx);\r\n\r\n            /** Combine background and artwork together, overlay for background is applied here */\r\n            const {\r\n                canvas: combinedArtCanvas,\r\n                ctx: combinedArtCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\r\n            if (!boundless) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\r\n\r\n            /** @summary Draw the overall layout */\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            ctx.drawImage(combinedArtCanvas, 0, 0);\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                ctx.drawImage(\r\n                    combinedArtCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n                \r\n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (isLink && !isPendulum) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\r\n                ctx.drawImage(\r\n                    artOnCardCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            \r\n            if (showLinkRating && statInEffect) {\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\r\n                    ? linkRating\r\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\r\n                await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        attribute,\r\n        backgroundCanvasRef,\r\n        backgroundType,\r\n        cardIcon,\r\n        dyeList,\r\n        effectBackground,\r\n        finish,\r\n        foil,\r\n        format,\r\n        region,\r\n        frame,\r\n        frameCanvasRef,\r\n        hasBackground,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        leftFrame,\r\n        levelStyle,\r\n        lightFooter,\r\n        linkMap,\r\n        linkRating,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        otherFinish,\r\n        pendulumEffectBackground,\r\n        pendulumFrame,\r\n        pendulumRightFrame,\r\n        pendulumSize,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        rightFrame,\r\n        showLinkRating,\r\n        star,\r\n        starAlignment,\r\n        statInEffect,\r\n        withBlueScale,\r\n        withRedScale,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        // const hasAtk = !!atk;\r\n        const hasDef = showLinkRating\r\n            ? !!def && showDefAndLink\r\n            : !!def;\r\n        const hasLink = showLinkRating;\r\n        if (atk) {\r\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\r\n            drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\r\n        }\r\n        if (def && (!showLinkRating || showDefAndLink)) {\r\n            const offset = hasLink ? 168.75 : 0;\r\n            drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, showLinkRating, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightRightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const isNumberPassword = /^[0-9]*$/.test(password);\r\n        const mayOffset = isNumberPassword && isPendulum && isLink;\r\n        const willOffset = mayOffset;\r\n        const { rightEdge } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n            fontLevel: !isNumberPassword ? 1 : 0\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        lightRightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                ctx: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\r\n            if (normalizedStickerFinish !== 'normal') {\r\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    ctx: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                stickerFinishContext.scale(globalScale, globalScale);\r\n                await loopStickerFinish(\r\n                    stickerFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            stickerFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                stickerContext.globalCompositeOperation = 'source-in';\r\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: effectMinLine,\r\n                },\r\n            });\r\n            const normalizedIconFinish = iconFinish ?? 'normal';\r\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n                loopIconFinish,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        effectMinLine,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        iconFinish,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            const fontDataKey = `${format}-${pendulumSize}`;\r\n            const coordinateList = PendulumEffectCoordinateMap\r\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                [pendulumSize];\r\n            /** Account for half scaleless frame */\r\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                ? coordinateList\r\n                : coordinateList.map(({\r\n                    trueEdge, trueWidth, ...rest\r\n                }) => ({\r\n                    ...rest,\r\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    trueWidth: trueWidth\r\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                }));\r\n\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[fontDataKey],\r\n                fontDataKey,\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: modifiedCoordinateList,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: pendulumEffectMinLine,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        pendulumEffectMinLine,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink) {\r\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n                const {\r\n                    artBorder: keepArtBorder,\r\n                    body: opacityBody,\r\n                    boundless,\r\n                } = normalizedOpacity;\r\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        opacity,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (_exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        // const {\r\n        //     isRelevant,\r\n        //     pendulumSize,\r\n        //     isPendulum = false,\r\n        //     opacity,\r\n        // } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: string,\r\n    feedbackReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n        feedbackReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\r\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    ${({ $freeSize, $size }) => $freeSize\r\n        ? 'padding: 0 var(--spacing-xxs);'\r\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\r\n    };\r\n    ${({ $size }) => $size === 'sm'\r\n        ? `\r\n            height: 18px;\r\n            font-size: var(--fs-sm);\r\n        `\r\n        : `\r\n            height: 24px;\r\n            font-size: var(--fs);\r\n        `}\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    size?: 'sm' | 'md',\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    size = 'md',\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            $size={size}\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n            $freeSize={!Icon}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    align-items: center;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\r\n\r\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\r\n    height: 17px;\r\n    width: 17px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    outline: none;\r\n    box-shadow: 0 0 1px 1px var(--main-level-3);\r\n    border-radius: var(--br);\r\n    ${({ $static }) => $static\r\n        ? `\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        `\r\n        : ''}\r\n    ${({ $empty }) => $empty\r\n        ? `\r\n            background-color: var(--sub-level-4);\r\n            background-image: var(--gradient-diagonal-stripe);\r\n        `\r\n        : ''}\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n`;","import copy from 'copy-to-clipboard';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\n\r\nexport type CopiableCode = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string | number) => {\r\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const SolidLabel = styled.div`\r\n    display: inline-flex;\r\n    column-gap: var(--spacing-xs);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    border-radius: var(--br);\r\n    box-shadow: var(--bs-input);\r\n    .ant-checkbox-wrapper {\r\n        transform: translateY(-1px); // Alignment\r\n    }\r\n`;\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 57px 39px 6px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        border-right: none;\r\n        border-radius: var(--br) 0 0 var(--br);\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\r\n    display: grid;\r\n    grid-template-columns: 3em max-content 3em;\r\n    gap: var(--spacing-xs);\r\n    .left-part {\r\n        text-align: right;\r\n    }\r\n    .right-part {\r\n        text-align: left;\r\n    }\r\n    ${({ $warning }) => $warning\r\n        ? `\r\n            color: var(--main-warning);\r\n        `\r\n        : ''}\r\n`;\r\nexport type ResolutionLabel = {\r\n    warning?: boolean,\r\n    width: number,\r\n    height: number,\r\n}\r\nexport const ResolutionLabel = ({ width, height, warning }: ResolutionLabel) => {\r\n    return <ResolutionLabelContainer $warning={warning}>\r\n        <span className=\"left-part\">{width}</span>\r\n        <span>×</span>\r\n        <span className=\"right-part\">{height}</span>\r\n    </ResolutionLabelContainer>;\r\n};\r\n\r\nexport * from './color';\r\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    <ResolutionLabel width={width} height={height} warning={true} />\r\n                                </Popover>\r\n                                : <ResolutionLabel width={width} height={height} />,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #222222 inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    &.js-highlight {\r\n        background: var(--main-info);\r\n        text-shadow: none;\r\n        box-shadow: 0 0 2px 0 #333333;\r\n    }\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    white-space: pre-line;\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n        margin-bottom: var(--spacing-lg);\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    text-align: center;\r\n    .content {\r\n        text-align: left;\r\n    }\r\n    a {\r\n        display: inline-block;\r\n    }\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 300px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            <div className=\"content\">\r\n                                {content}\r\n                            </div>\r\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\r\n                                <img src={image} alt={`version-${version}-illust`} />\r\n                            </a>}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, notification, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport const FAD_BUTTON_ID = 'faq-button';\r\n\r\ntype Quote = {\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <QuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n    </QuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\r\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\r\n\r\n    useEffect(() => {\r\n        const currentReminder = '19/06/2025';\r\n        if (faqReminder !== currentReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    useEffect(() => {\r\n        if (feedbackReminder !== true) {\r\n            setFeedbackReminder(true);\r\n            setAnimating(true);\r\n            notification.info({\r\n                message: 'Feedback Reminder',\r\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\r\n                duration: 10,\r\n                onClose: () => {\r\n                    setAnimating(false);;\r\n                }\r\n            });\r\n        }\r\n    }, [feedbackReminder, setFeedbackReminder]);\r\n\r\n    return <>\r\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {[\r\n                        {\r\n                            author: 'Die Frauen at Jun 19, 2025',\r\n                            question: 'This may be a bit crazy, but since you\\'ve already come a long way with customization, do you think it\\'d be possible to toggle Star Types to be sorted manually in any combinations of the ones currently available?\\n\\nAnd on that note, and this here may be a bit too out there, but do you think you could use the Spell/Trap iconography as you would any of those? And if it\\'s not too much of a bother, maybe the monster Attributes downsized on that row as well?',\r\n                            answer: 'Putting Spell/Trap/Monster Attribute icon in star slots is possible. As for manual icon of each star slot, I think *technically* it should be doable, but I need to do a bit more test, probably will look into it this weekend.',\r\n                        },\r\n                        {\r\n                            author: 'Die Frauen at Jun 19, 2025',\r\n                            question: 'Hello, first of all I would like to congratulate you on creating what\\'s probably the best card editor there is, and thank you for making things convenient for everyone using it. I shall formally make a request of sorts in a different report, but I couldn\\'t just not commend the efforts you and all others involved have done. Even managed to  mesh together the Link Arrows for a Pendulum frame in a not entirely unsightly way, and the new hue feature for advanced layouts is also superb for custom card frame efforts.\\n\\nSuperb work, keep it up',\r\n                            answer: 'Thanks for your kind words, appreciate your support.',\r\n                        },\r\n                        {\r\n                            author: 'Not really a feedback but... at Jun 19, 2025',\r\n                            question: 'It would be cool to see the Attributes in other languages available in TCG',\r\n                            answer: 'I have added many more Attributes that I could find on Yugipedia.',\r\n                        },\r\n                        {\r\n                            author: 'KaibaSetoo at Jun 15, 2025',\r\n                            question: 'Hello, can you fix the scale number 10, 11 and 12. They are not in the center of the scale value border. Thank you.',\r\n                            answer: 'I have updated some cases, but please note that some scale numbers does not place at the center of the box at all, but deviated a bit to the right side (very clear in cards like \"D/D Savant Kepler\").',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 16, 2025',\r\n                            question: 'Can you change back the *LINK-* text as before, like before the increase card larger update, the letter *L* is now higher.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 16, 2025',\r\n                            question: 'And the LINK number are now higher then the text too.',\r\n                        },\r\n                        {\r\n                            author: 'TheDuelistt at Jun 15, 2025',\r\n                            question: 'Can you make this L letter to be consistent with the rest of the INK, also, can you make the Link Rating value (number) lower and consistent with the INK, and the dash \"-\" a little bolder, so that the overall look is similar to the official Konami Yugioh Card template. Thank you.',\r\n                            answer: 'I have updated the layer, hopefully it look better now.',\r\n                        },\r\n                        {\r\n                            author: 'text format at Jun 14, 2025',\r\n                            question: 'The text format looks completely different with the pendulum effect than with the monster effect',\r\n                            answer: 'Text effect is automatically calculated to best fit in the card, I always recommended to let it flow naturally, but regardless, I have added input to define the minimum lines of effect you would want in your cards.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 14, 2025',\r\n                            question: 'The outline is a bit uneven depending on the letter.',\r\n                            answer: 'This is a known issue, unfortunately this is the best I can offer right now.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 14, 2025',\r\n                            question: 'Justify doesn\\'t seem to work',\r\n                            answer: 'It should work normally by now.',\r\n                        },\r\n                        {\r\n                            author: 'Phan Trí Dĩ at Jun 11, 2025',\r\n                            question: 'Hi, firstly, I want to thanks to your hardwork for making a wonderful website, very appreciate your work. There\\'s some K9 card with a special hash sign. It get a bit smaller when I use it. I wondering if you can fix it. Thank you very much.',\r\n                            answer: 'Hi there. There are two parts of the problem here:\\nThe first thing is the hash sign, which is not a bug. This design has been used on many cards in the past, for example \"Hi-Speedroid Glider #2\", and there is no sign that it would be different this time.\\nThe second thing is the letter \"Ø\", which currently only appear on the OCG card, as Lupus itself is not yet revealed for TCG, we doesn\\'t know if the TCG would keep this letter or not.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 06, 2025',\r\n                            question: 'When using the Link Arrows on a Pendulum card, the Link Rating disappears',\r\n                            answer: 'It should be fixed by now',\r\n                        },\r\n                        {\r\n                            author: 'Shanaya User at Jun 04, 2025',\r\n                            question: 'I would like to request another artwork effect like this, like the effect of the attached picture its a secret rare effect',\r\n                            answer: 'I have added foil 9, this is my best and final attempt, sorry if it does not match your need.',\r\n                        },\r\n                        {\r\n                            author: 'Yugiohfann at Jun 03, 2025',\r\n                            question: 'Please fix the ATK/DEF font text, the numbers are higher than the ATK/DEF text.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 03, 2025',\r\n                            question: 'Small adjustment for size and style of card stats (ATK, DEF). Can you bring back the old size and style of card stats. Now the stats are higher than the ATK and DEF text.',\r\n                            answer: 'Can you provide a sample image so I can see the difference? I cannot take action blindly wihout any reference.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 02, 2025',\r\n                            question: 'please can you add sizing selection in card name? please? thank you!',\r\n                            answer: 'Can you provide a sample image of the old card? I would like to take a look to see if it is possible to implement it or not.',\r\n                        },\r\n                        {\r\n                            author: 'Cardmaker_01',\r\n                            question: 'Hello, the Xyz cards have black font in Set ID and Copyright, making it invisible to Xyz cards. Attached screenshot is an example. Can you please fix those fields to white font again? tysm and more power to you :)',\r\n                            answer: 'It should be fixed by now, thanks for your feedback.'\r\n                        },\r\n                        {\r\n                            author: 'galaxy dragon',\r\n                            question: 'Can you add a little space on the edge of the spell and trap card? when it is full of text. Thank you.',\r\n                            answer: 'I can\\'t quite understand what you mean, can you be more specific, or provide a sample image?',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at May 27, 2025',\r\n                            question: 'Hello, can you add a selection of sizes in card title? because the old card and new card have different card title alignment, the old card seems to appear the title is more stretch than the new maybe because of the card size of the old card. can you fix it pls? maybe add some choices of card title alignments?\\nor maybe size? THANK YOU SO MUCH!!',\r\n                            answer: 'Do you have any sample image of the old card? I would like to see the difference between the two so I can decide that if it is possible or not.',\r\n                        },\r\n                        {\r\n                            author: 'ATK/DEF at May 26, 2025',\r\n                            question: 'The ATK/DEF text and values seem to have different sizes than usual. Also the ? seems to be in a different format to how it appears in TCG/OCG',\r\n                            answer: 'I have made a bit adjustment for font size and font family of stats text.',\r\n                        },\r\n                        {\r\n                            author: 'Maya at May 23, 2025',\r\n                            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\r\n                            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\r\n                        },\r\n                        {\r\n                            author: 'Shanaya at May 22, 2025',\r\n                            question: 'Can you put something rainbow effect on the Finish in number 3?',\r\n                            answer: 'I have added art finish type 8, which is a mix between type 3 and 6, you may try that out.',\r\n                        },\r\n                    ].map(({ author, question, answer }, index) => {\r\n                        return <Quote key={index} author={author} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\r\n                    <span\r\n                        className=\"bug-report\"\r\n                        onMouseOver={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\r\n                        }}\r\n                    >\r\n                        <div id=\"sentry-bug-report\">\r\n                            {language['contributor.bug-report.tooltip']}\r\n                        </div>\r\n                    </span>\r\n                </Tooltip>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import React from 'react';\r\nimport { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n    &:focus {\r\n        background-color: var(--main-level-3);\r\n    }\r\n    &:focus-visible {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    id,\r\n    tabIndex,\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n    onClick,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\r\n    id?: string,\r\n    tabIndex?: number,\r\n    className?: string,\r\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\r\n}) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        id={id}\r\n        tabIndex={tabIndex}\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n        onClick={onClick}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","\r\nimport { Input } from 'antd';\r\nimport { useColorPicker } from 'src/service';\r\nimport { getContrastColor } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        gap: 3px; // Alignment\r\n        padding-left: 3px; // Alignment\r\n        input {\r\n            width: 58px; // Alignment\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\n\r\nexport type InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nexport const InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};","import { Input } from 'antd';\r\nimport { CustomPicker, InjectedColorProps } from 'react-color';\r\nimport { Saturation } from 'react-color/lib/components/common';\r\nimport { UseColorPicker, useColorPicker } from 'src/service';\r\nimport { getContrastColor } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { IconButton } from '../icon-button';\r\n\r\nconst SaturationBoardContainer = styled.div`\r\n    position: relative;\r\n    border-radius: var(--br);\r\n    > div,\r\n    .saturation-white,\r\n    .saturation-black {\r\n        border-radius: var(--br);\r\n    }\r\n`;\r\n\r\ntype UnlinkedSaturationBoard = InjectedColorProps;\r\nconst UnlinkedSaturationBoard = ({\r\n    onChange,\r\n    ...props\r\n}: UnlinkedSaturationBoard) => {\r\n    return <SaturationBoardContainer>\r\n        <Saturation\r\n            {...props}\r\n            onChange={color => {\r\n                onChange?.(color);\r\n            }}\r\n        />\r\n    </SaturationBoardContainer>;\r\n};\r\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\r\n\r\nconst HorizontalSketchColorList = [\r\n    { hex: '#B80000', rgb: [184, 0, 0] },\r\n    { hex: '#EB9694', rgb: [235, 150, 148] },\r\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\r\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\r\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\r\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\r\n    { hex: '#008B02', rgb: [0, 139, 2] },\r\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\r\n    { hex: '#006B76', rgb: [0, 107, 118] },\r\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\r\n    { hex: '#1273DE', rgb: [18, 115, 222] },\r\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\r\n    { hex: '#004DCF', rgb: [0, 77, 207] },\r\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\r\n    { hex: '#5300EB', rgb: [83, 0, 235] },\r\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\r\n];\r\n\r\nconst HorizontalSketchPickerContainer = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 3.5rem 5rem max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    .color-input {\r\n        .color-state {\r\n            display: flex;\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n        ${ColorBlock} {\r\n            display: inline-block;\r\n            flex: 1;\r\n            border: var(--bw) solid var(--sub-level-2);\r\n            height: 18px;\r\n        }\r\n    }\r\n    .color-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\r\n        border-radius: var(--br);\r\n        overflow: hidden;\r\n        ${ColorBlock} {\r\n            height: 15px;\r\n            width: 15px;\r\n            box-shadow: none;\r\n            border-radius: 0;\r\n        }\r\n    }\r\n`;\r\nexport type HorizontalSketchPicker = {\r\n    children?: React.ReactNode,\r\n} & UseColorPicker;\r\nexport const HorizontalSketchPicker = ({\r\n    children,\r\n    onChange,\r\n    value,\r\n}: HorizontalSketchPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n    const noColor = inputText === '';\r\n\r\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\r\n        <div className=\"input-label\">\r\n            {children}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-state\">\r\n                <ColorBlock\r\n                    $empty={noColor}\r\n                    style={noColor ? {} : { backgroundColor: color.hex }}\r\n                />\r\n                <IconButton\r\n                    size=\"sm\"\r\n                    Icon={CloseOutlined}\r\n                    onClick={() => {\r\n                        onChange('');\r\n                    }}\r\n                />\r\n            </div>\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n        <div className=\"color-list\">\r\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\r\n    </HorizontalSketchPickerContainer>;\r\n};","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst LINK_MARKER_HALF_SIZE = 13;\r\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 1;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkerPicker = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkerPicker = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkerPicker) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        <ResolutionLabel width={width} height={height} warning={true} />\r\n                    </Popover>\r\n                    : <ResolutionLabel width={width} height={height} />}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\r\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\r\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\r\n    if (Math.abs(widthL - widthR) > 0.01) return false;\r\n    if (Math.abs(heightL - heightR) > 0.01) return false;\r\n    if (Math.abs(xL - xR) > 0.01) return false;\r\n    if (Math.abs(yL - yR) > 0.01) return false;\r\n    if (Math.abs(aspectL - aspectR) > 0.01) return false;\r\n    if (unitL !== unitR) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    // setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Tooltip\r\n                                title={<div className=\"image-info\">\r\n                                    {language['image-cropper.online-tip']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                    {language['image-cropper.source.online.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                            <Tooltip\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        if (!receivingCanvas) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdownLabel = styled.div`\r\n    color: var(--color);\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    padding: 0 var(--spacing);\r\n    padding-bottom: var(--spacing-xs);\r\n    line-height: 1;\r\n    cursor: default;\r\n    &:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './inline-color-picker';\r\nexport * from './inline-sketch-picker';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './link-marker';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['image-cropper.offline-warning']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={window.location.href}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><LinkOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.share-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n    OtherFinishTypeMap,\r\n    ExtraAttributeList,\r\n    AttributeSetMap,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${AttributeSetMap[region]?.fileKey}-${name.toLowerCase()}.png`}\r\n                />\r\n            </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({ ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrainRef = {\r\n    changeFrame: (frameValue: number | string) => void,\r\n};\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\r\n};\r\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}, ref) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n                linkRating,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\r\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\r\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            onStatChange(nextAtk, nextDef, nextLinkRating);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n                linkRating: nextLinkRating,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeFrame,\r\n    }));\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n});","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .art-frame {\r\n        span {\r\n            padding: 0;\r\n        }\r\n    }\r\n    div.ant-slider {\r\n        .ant-slider-handle {\r\n            height: 19px;\r\n            top: 8px;\r\n            border-radius: 0;\r\n            width: 10px;\r\n        }\r\n        .ant-slider-step,\r\n        .ant-slider-track,\r\n        .ant-slider-rail {\r\n            height: 10px;\r\n        }\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        .ant-slider {\r\n            padding-top: 8px;\r\n        }\r\n    }\r\n    .background-label {\r\n        cursor: pointer;\r\n        &:hover {\r\n            .background-preview {\r\n                box-shadow: 0 0 2px 0 #222222;\r\n            }\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        text-align: center;\r\n        user-select: none;\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .layout-picker-panel {\r\n            margin-top: var(--spacing);\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <Checkbox\r\n                    className=\"art-frame\"\r\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                    checked={opacity.boundless}\r\n                >\r\n                    &nbsp;{language['input.opacity.boundless.label']}\r\n                </Checkbox>\r\n            </SolidLabel>\r\n        </Tooltip>\r\n        <Popover\r\n            visible={backgroundInputVisible}\r\n            destroyTooltipOnHide={false}\r\n            trigger={['click']}\r\n            onVisibleChange={setBackgroundInputVisible}\r\n            overlayClassName={[\r\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                backgroundInputVisible ? 'picker-visible' : '',\r\n                backgroundInputHidden ? 'picker-hidden' : '',\r\n            ].join(' ')}\r\n            content={<div className=\"overlay-event-absorber\">\r\n                <StyledBaseFillPickerContainer\r\n                    className={[\r\n                        'custom-style-picker',\r\n                        noBackground ? 'overlay-no-background-image' : ''\r\n                    ].join(' ')}\r\n                >\r\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                        <Checkbox\r\n                            checked={hasBackground}\r\n                            onChange={e => {\r\n                                changeHasBackground(e);\r\n                            }}\r\n                        >{language['input.background.toggle-label']}</Checkbox>\r\n                        <br />\r\n                        <i>{language['input.background.description']}</i>\r\n                    </h3>\r\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                        <BackgroundInputGroup\r\n                            ref={backgroundInputRef}\r\n                            receivingCanvas={receivingCanvas}\r\n                            onSourceLoaded={onSourceLoaded}\r\n                            onTainted={onTainted}\r\n                            onCropChange={onCropChange}\r\n                            backgroundColor={opacity.baseFill}\r\n                        >\r\n                            <div className=\"layout-picker-panel\">\r\n                                <div className=\"layout-picker-subpanel color-section\">\r\n                                    <h2>{language['input.background-color.label']}</h2>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={opacity.baseFill}\r\n                                        onChangeComplete={color => {\r\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                    <h2>{language['input.background-type.label']}</h2>\r\n                                    <RadioTrain\r\n                                        className=\"background-type-picker\"\r\n                                        onChange={changeBackgroundType}\r\n                                        optionList={getBackgroundTypeList({\r\n                                            fit: language['input.background-type.fit.label'],\r\n                                            full: language['input.background-type.full.label'],\r\n                                            frame: language['input.background-type.frame.label'],\r\n                                        })}\r\n                                        value={backgroundType}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </BackgroundInputGroup>\r\n                    </div>\r\n                </StyledBaseFillPickerContainer>\r\n            </div>}\r\n            placement=\"bottom\"\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <div\r\n                    className=\"background-preview\"\r\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                >\r\n                    {hasBackground\r\n                        ? background || backgroundData\r\n                            ? <img\r\n                                className=\"background-image-preview\"\r\n                                src={backgroundSource === 'online'\r\n                                    ? background\r\n                                    : backgroundData}\r\n                                alt=\"Background\"\r\n                            />\r\n                            : null\r\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                </div>\r\n                {language['input.background.label']}\r\n            </SolidLabel>\r\n        </Popover>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <SolidLabel className=\"slider-label\">\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </SolidLabel>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { IconButton, RadioTrain } from 'src/component';\r\nimport { useCard, useSetting, WithLanguage } from 'src/service';\r\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { useMemo } from 'react';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getAttributeList, getExtraAttributeList } from '../const';\r\nimport { AttributeSetMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst AttributeRegionTrain = styled.div`\r\n    align-self: flex-end;\r\n    position: relative;\r\n    min-height: 4px; // Alignment\r\n    .attribute-region-picker {\r\n        position: absolute;\r\n        right: 0;\r\n        top: calc(var(--spacing-xxs) * -1);\r\n        z-index: 1;\r\n    }\r\n    &.container-block .attribute-region-picker {\r\n        position: relative;\r\n        right: 0;\r\n        top: 0;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        font-size: var(--fs-sm);\r\n        height: unset;\r\n        line-height: 1.25;\r\n    }\r\n`;\r\n\r\nexport type AttributeInputGroup = {\r\n} & WithLanguage;\r\nexport const AttributeInputGroup = ({\r\n    language,\r\n}: AttributeInputGroup) => {\r\n    const {\r\n        format,\r\n        region,\r\n        attribute,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            region,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        format,\r\n        region,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n    })));\r\n    const { setting, updateSetting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\r\n\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\r\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    return <>\r\n        <RadioTrain\r\n            className=\"fill-input-train span-input-train attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={attributeList}\r\n            suffix={!showExtraAttribute && showExtraDecorativeOption\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\r\n                    Icon={DoubleRightOutlined}\r\n                    tooltipProps={{ overlay: language['button.more.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            <span>{language['input.attribute.label']}</span>\r\n        </RadioTrain>\r\n        <AttributeRegionTrain className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}>\r\n            <RadioTrain\r\n                className=\"attribute-region-picker\"\r\n                optionList={Object\r\n                    .values(AttributeSetMap)\r\n                    .map(({ key }) => ({\r\n                        value: key,\r\n                        label: key.toUpperCase(),\r\n                    }))\r\n                }\r\n                value={region}\r\n                onChange={changeRegion}\r\n            />\r\n        </AttributeRegionTrain>\r\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\r\n            className=\"fill-input-train extra-attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={extraAttributeList}\r\n            suffix={showExtraDecorativeOption && showExtraAttribute\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\r\n                    Icon={DoubleLeftOutlined}\r\n                    tooltipProps={{ overlay: language['button.less.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            &nbsp;\r\n        </RadioTrain>}\r\n    </>;\r\n};","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return cardIcon === 'auto' && autoIconType === 'none'\r\n        ? showCreativeOption\r\n            ? <RadioTrain\r\n                className=\"fill-input-train\"\r\n                value={cardIcon}\r\n                onChange={changeCardIcon}\r\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                    return {\r\n                        label: icon ?? <CloseCircleOutlined />,\r\n                        value,\r\n                        tooltipProps: {\r\n                            title: language[fullLabelKey],\r\n                        },\r\n                    };\r\n                })}\r\n            >\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : null\r\n        : iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    position: relative;\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 480px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .inline-input {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .checkbox-disabled {\r\n        .ant-checkbox {\r\n            display: none;\r\n        }\r\n        visibility: hidden; // Avoid collapsing\r\n    }\r\n    .frame-part-name {\r\n        position: absolute;\r\n        padding: 0 var(--spacing);\r\n        top: calc(-1 * var(--spacing-xs));\r\n        right: calc(-1 * var(--spacing-xs));\r\n        border-radius: 0 0 0 var(--br-lg);\r\n        background-color: var(--main-level-4);\r\n        border-left: var(--bw) solid var(--sub-level-4);\r\n        border-bottom: var(--bw) solid var(--sub-level-4);\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n    .horizontal-sketch-picker {\r\n        margin-top: var(--spacing);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\r\nimport { copyrightMap, FlagIndexMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\r\n    .auto-link-rating-input {\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n    .auto-link-rating {\r\n        display: inline-block;\r\n        width: 1.5rem;\r\n        height: 1.5rem;\r\n        line-height: 1;\r\n        text-align: center;\r\n        padding: var(--spacing-xs);\r\n        background: var(--main-level-4);\r\n        border-radius: var(--br-lg);\r\n        font-family: 'RoGSanSrfStd-Bd';\r\n        box-shadow: var(--bs-button);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isLink,\r\n        linkRating,\r\n        autoLinkRating,\r\n        showDefAndLink,\r\n        linkRatingDisplayMode,\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\r\n        getUpdater,\r\n    }) => ({\r\n        linkRating,\r\n        autoLinkRating: linkMap.length,\r\n        isLink,\r\n        sticker,\r\n        format,\r\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\r\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const showAtkInput = true;\r\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\r\n    const showDefInput = showLinkInput\r\n        ? showDefAndLink\r\n        : true;\r\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def, linkRating }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            {showAtkInput && <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showDefInput && <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showPadding && <div />}\r\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\r\n                id=\"link\"\r\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\r\n                    <div className=\"input-label\">{language['input.link.label']}</div>\r\n                    <Tooltip title={language['input.link.auto.tooltip']}>\r\n                        <div className=\"auto-link-rating-input\">\r\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\r\n                                ? <Checkbox\r\n                                    onChange={e => {\r\n                                        if (e.target.checked) {\r\n                                            changeLinkRating('');\r\n                                            linkRatingInputRef.current.setValue('');\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                : <div className=\"auto-link-rating\">\r\n                                    {isLink ? autoLinkRating : '-'}\r\n                                </div>}\r\n                        </div>\r\n                    </Tooltip>\r\n                </StyledLinkRatingInputContainer>}\r\n                defaultValue={`${useCard.getState().card.linkRating}`}\r\n                onChange={changeLinkRating}\r\n                onTakePicker={onTakePicker}\r\n                placeholder={language['input.link.custom.placeholder']}\r\n            />}\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                        <IconButton\r\n                            onClick={() => {}}\r\n                            Icon={UnorderedListOutlined}\r\n                        />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport {\r\n    ImageCropper,\r\n    ImageCropperRef,\r\n    LINK_MARKER_PICKER_WIDTH,\r\n    LinkMarkerPicker,\r\n    RadioTrain,\r\n    StyledDropdown,\r\n    StyledDropdownLabel,\r\n} from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\r\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { notification, Popover } from 'antd';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\r\n    position: relative;\r\n    ${({ $hover }) => $hover\r\n        ? `\r\n            .link-marker-picker {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n        `\r\n        : ''}\r\n`;\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    text-align: left;\r\n    .ant-input-group-addon {\r\n        flex: 0 0 auto;\r\n        text-align: left;\r\n    }\r\n    .radio-train-input-group {\r\n        flex: 1;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        padding: 0 var(--spacing-xs);\r\n    }\r\n`;\r\nconst FinishLabel = styled(StyledDropdown.Option)`\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr;\r\n    column-gap: var(--spacing-xs);\r\n    .tag {\r\n        background: var(--sub-level-2);\r\n        color: var(--color-contrast);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    &.default {\r\n        .tag {\r\n            background: var(--sub-level-4);\r\n        }\r\n    }\r\n`;\r\n\r\ntype OtherFinishPicker = {\r\n    finishValueList: [art: string, ...OtherFinish],\r\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\r\n    language: LanguageDataDictionary,\r\n    showCreativeOption: boolean,\r\n};\r\nconst OtherFinishPicker = ({\r\n    finishValueList,\r\n    changeFinish,\r\n    language,\r\n    showCreativeOption,\r\n}: OtherFinishPicker) => {\r\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\r\n    /** Be careful, we use added order here, so latest foil target is highest index. */\r\n    const valueMap = {\r\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\r\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\r\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\r\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\r\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\r\n    };\r\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\r\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\r\n\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\r\n        </>\r\n        : <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\r\n        </>;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledDropdown.Container>\r\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\r\n                {finishList.map(({ label, value }) => {\r\n                    return <FinishLabel key={value}\r\n                        className={mergeClass(\r\n                            valueMap[value] === 'normal' ? 'default' : '',\r\n                            selectedType === value ? 'menu-active' : '',\r\n                        )}\r\n                        onClick={() => {\r\n                            setSelectedType(value);\r\n                        }}\r\n                    >\r\n                        <div className=\"value\">\r\n                            <div className=\"tag\">{valueMap[value] === 'normal' ? 'Auto' : valueMap[value]}</div>\r\n                        </div>\r\n                        <div className=\"label\">{label}</div>\r\n                    </FinishLabel>;\r\n                })}\r\n            </StyledDropdown.Container>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n\r\n    return <StyledImageRadioTrain\r\n        className=\"art-finish-checkbox fill-input-train\"\r\n        value={valueMap[selectedType]}\r\n        onChange={value => {\r\n            const nextValueMap = { ...valueMap };\r\n            nextValueMap[selectedType] = `${value}`;\r\n\r\n            changeFinish(nextValueMap);\r\n        }}\r\n        optionList={ArtFinishButtonList}\r\n    >\r\n        {IconDropdown}\r\n    </StyledImageRadioTrain>;\r\n};\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    showCreativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    showCreativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish, otherFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <OtherFinishPicker\r\n                finishValueList={[artFinish, ...otherFinish]}\r\n                changeFinish={finishMap => {\r\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\r\n                    changeOtherFinish([\r\n                        finishMap[OtherFinishTypeMap['attribute'].key],\r\n                        finishMap[OtherFinishTypeMap['icon'].key],\r\n                        finishMap[OtherFinishTypeMap['sticker'].key],\r\n                        finishMap[OtherFinishTypeMap['background'].key],\r\n                    ]);\r\n                }}\r\n                language={language}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n            : null\r\n        }\r\n    >\r\n        <LinkPickerContainer\r\n            className=\"link-picker-container\"\r\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\r\n            $hover={showExtraDecorativeOption}\r\n        >\r\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </LinkPickerContainer>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox } from 'antd';\r\nimport { RadioTrain } from 'src/component';\r\nimport {\r\n    CardFlag,\r\n    FlagInfoList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n} from 'src/model';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst FrameBehaviorSettingPanelContainer = styled.div`\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border-top: var(--bw) solid var(--sub-level-3);\r\n    > * + * {\r\n        margin-top: var(--spacing-sm);\r\n    }\r\n    .link-rating-behavior-panel {\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n            margin-right: var(--spacing-sm);\r\n        }\r\n        label {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n            font-size: var(--fs);\r\n            color: var(--color);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FrameBehaviorSettingPanel = {\r\n    \r\n};\r\nexport const FrameBehaviorSettingPanel = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        flag,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n\r\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\r\n        const nextFlagList: CardFlag = [...currentCard.flag];\r\n        nextFlagList[index] = value;\r\n\r\n        return {\r\n            ...currentCard,\r\n            flag: nextFlagList,\r\n        };\r\n    });\r\n\r\n    return <FrameBehaviorSettingPanelContainer>\r\n        {flag.map((entry, index) => {\r\n            const { labelKey, type } = FlagInfoList[index] ?? {};\r\n\r\n            if (type === 'checkbox') {\r\n                return <div key={labelKey}>\r\n                    <Checkbox\r\n                        checked={entry !== 0}\r\n                        onChange={e => {\r\n                            const value = e.target.checked ? 1 : 0;\r\n\r\n                            updateFlag(value, index);\r\n                        }}\r\n                    >{language[labelKey]}</Checkbox>\r\n                </div>;\r\n            }\r\n            if (type === 'link-rating-behavior') {\r\n                return <RadioTrain key={labelKey}\r\n                    className=\"link-rating-behavior-panel\"\r\n                    onChange={(value) => updateFlag(Number(value), index)}\r\n                    optionList={[\r\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\r\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\r\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\r\n                    ]}\r\n                    value={entry}\r\n                    suffix={<label>\r\n                        {language[labelKey]}\r\n                    </label>}\r\n                />;\r\n            }\r\n            return null;\r\n        })}\r\n    </FrameBehaviorSettingPanelContainer>;\r\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { getFrameButtonList } from '../const';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\nconst FrameLayoutContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    ${StyledPendulumFrameContainer} {\r\n        border: none;\r\n        box-shadow: none;\r\n        padding: 0;\r\n    }\r\n    .visual-preview-container {\r\n        color: var(--color-heavy);\r\n        width: 110px; // Alignment\r\n        text-align: center;\r\n        label {\r\n            padding-bottom: var(--spacing-xs);\r\n        }\r\n        .frame-info-block {\r\n\t\t\theight: 30px; // Alignment\r\n\t\t\tline-height: 28px; // Alignment with border 1px\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background-color: var(--main-level-1);\r\n            margin-bottom: var(--spacing-xs);\r\n            cursor: pointer;\r\n            .frame-info-block-label {\r\n                padding: 0 var(--spacing-xs);\r\n            }\r\n            &.active {\r\n                border: var(--bw) dashed var(--main-level-2);\r\n            }\r\n            &:hover {\r\n                border: var(--bw) solid var(--main-level-2);\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $hoverable: boolean }>`\r\n    /** Ensure even width */\r\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\r\n    --layout-height: ${props => props.$height}px;\r\n    display: inline-block;\r\n    width: var(--layout-width);\r\n    height: var(--layout-height);\r\n    box-shadow: 0 0 2px 0 #202020;\r\n    position: relative;\r\n    background: var(--main-level-2);\r\n    button {\r\n        border: none;\r\n    }\r\n    .overlay-patch {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .dye-patch {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 10%;\r\n        left: 50%;\r\n        min-width: 6px;\r\n        min-height: 6px;\r\n        width: ${props => props.$width / 6}px;\r\n        height: ${props => props.$width / 6}px;\r\n        border-radius: var(--br-lg);\r\n        transform: translateX(-50%);\r\n    }\r\n    .card-layout {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        padding: 0;\r\n        &.unmodified .overlay-patch {\r\n            background: var(--gradient-diagonal-stripe);\r\n        }\r\n    }\r\n    .partial-layout {\r\n        background-clip: padding-box;\r\n        ${props => props.$hoverable\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                }\r\n            `\r\n            : ''}\r\n    }\r\n    .float-layout {\r\n        ${props => props.$hoverable\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) solid var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n            `\r\n            : ''}\r\n    }\r\n    /** For Zarc's gradient */\r\n    .partial-layout {\r\n        background-size: 200%;\r\n    }\r\n    .top-left {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 0;\r\n    }\r\n    .top-right {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    .bottom-left {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 0;\r\n    }\r\n    .bottom-right {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    /** Background width is slightly reduced to help active bottom frames easier */\r\n    .effect-background {\r\n        width: 80%;\r\n        height: 20%;\r\n        bottom: 5%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n    .pendulum-effect-background {\r\n        width: 80%;\r\n        height: 13%;\r\n        bottom: 28%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n`;\r\n\r\nexport type CardLayoutPreview = {\r\n    tabIndex?: number,\r\n    width: number,\r\n    height: number,\r\n    baseLayoutState?: Record<string, string | undefined>,\r\n    resolvedLayoutState: Record<string, string | undefined>,\r\n    isPendulum: boolean,\r\n    activeLayout?: string,\r\n    dyeList: string[],\r\n    onClick?: (key: string) => void,\r\n};\r\nexport const CardLayoutPreview = ({\r\n    tabIndex = 0,\r\n    width,\r\n    height,\r\n    baseLayoutState,\r\n    resolvedLayoutState,\r\n    isPendulum,\r\n    activeLayout,\r\n    dyeList,\r\n    onClick,\r\n}: CardLayoutPreview) => {\r\n    return <CardLayoutContainer $width={width} $height={height} $hoverable={!!onClick}>\r\n        {[\r\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\r\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\r\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\r\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\r\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\r\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\r\n        ].map(({ className, key }) => {\r\n            const frame = resolvedLayoutState[key];\r\n            const dyeIndex = DyeIndexMap[key];\r\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\r\n\r\n            if (!frame) return null;\r\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\r\n            const {\r\n                labelBackgroundColor,\r\n                labelBackgroundImage,\r\n            } = FrameInfoMap[frame] ?? {};\r\n            return <button key={key}\r\n                {...tabIndex < 0 ? {} : { tabIndex }}\r\n                className={mergeClass(\r\n                    className,\r\n                    key === activeLayout ? 'active' : '',\r\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\r\n                )}\r\n                onClick={() => onClick?.(key)}\r\n                style={labelBackgroundImage\r\n                    ? { backgroundImage: labelBackgroundImage }\r\n                    : { backgroundColor: labelBackgroundColor }\r\n                }\r\n            >\r\n                <div\r\n                    className=\"overlay-patch\"\r\n                    style={dyeColor\r\n                        ? {\r\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\r\n                        }\r\n                        : {}}\r\n                />\r\n            </button>;\r\n        })}\r\n    </CardLayoutContainer>;\r\n};\r\n\r\ntype FramelayoutSettingPanelRef = {\r\n    focus: () => void,\r\n};\r\nexport type FramelayoutSettingPanel = {\r\n    isPendulum: boolean,\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onFrameChange: (frame: string) => void,\r\n    onCancel: () => void,\r\n};\r\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\r\n    frameList,\r\n    onFrameChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            dyeList,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const recentCustomPendulumFrame = useRef({\r\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n    });\r\n    const [focus, setFocus] = useState(0);\r\n    const [activeLayout, setActiveLayout] = useState('frame');\r\n    const frameLayoutMainId = 'frame-layout-main';\r\n\r\n    useEffect(() => {\r\n        /** Avoid confusion */\r\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\r\n    }, [activeLayout, isPendulum]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\r\n    }));\r\n\r\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\r\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\r\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\r\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\r\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextEffectStyle = { ...currentCard.effectStyle };\r\n        nextEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            effectStyle: nextEffectStyle,\r\n        };\r\n    });\r\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\r\n        nextPendulumEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            pendulumStyle: nextPendulumEffectStyle,\r\n        };\r\n    });\r\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\r\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\r\n        const position = DyeIndexMap[name];\r\n\r\n        if (typeof position !== 'number') return currentCard;\r\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\r\n        nextDyeList[position] = color;\r\n\r\n        return {\r\n            ...currentCard,\r\n            dyeList: nextDyeList,\r\n        };\r\n    });\r\n    const changeLayout = (layoutValue: string) => {\r\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\r\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\r\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\r\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\r\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\r\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\r\n    };\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const activeFrame = layoutState[activeLayout];\r\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\r\n    const dyeColor = DyeIndexMap[activeLayout];\r\n    return <FrameLayoutContainer>\r\n        <div className=\"visual-preview-container\">\r\n            <label>{language['input.advanced-frame.main.label']}</label>\r\n            <FrameInfoBlock\r\n                id={frameLayoutMainId}\r\n                tabIndex={0}\r\n                className={activeLayout === 'frame' ? 'active' : ''}\r\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\r\n                onClick={() => setActiveLayout('frame')}\r\n            />\r\n            <label>{language['input.advanced-frame.detailed.label']}</label>\r\n            <CardLayoutPreview\r\n                width={Math.round(width / 20) * 2}\r\n                height={Math.round(height / 20) * 2}\r\n                isPendulum={isPendulum}\r\n                baseLayoutState={layoutState}\r\n                resolvedLayoutState={resolvedLayoutStyle}\r\n                activeLayout={activeLayout}\r\n                onClick={key => setActiveLayout(key)}\r\n                dyeList={dyeList}\r\n            />\r\n            <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    changeBottomLeftFrame('auto');\r\n                    changeBottomRightFrame('auto');\r\n                    changeTopLeftFrame('auto');\r\n                    changeTopRightFrame('auto');\r\n                    changeEffectBackground('auto');\r\n                    changePendulumEffectBackground('auto');\r\n                    changeDyeList(getDefaultDyeList());\r\n                }}\r\n            >\r\n                {language['button.reset.label']}\r\n            </Button>\r\n        </div>\r\n        <div>\r\n            <StyledPendulumFrameContainer\r\n                className=\"pendulum-frame-picker\"\r\n                {...getNavigationProps({\r\n                    stopPropagation: true,\r\n                    optionLength: frameList.length,\r\n                    setFocus,\r\n                    onTrigger: () => {\r\n                        if (focus >= 0) changeLayout(frameList[focus].value);\r\n                    },\r\n                    onCancel,\r\n                })}\r\n            >\r\n                <div className=\"frame-part-name\">\r\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\r\n                </div>\r\n                <Checkbox\r\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\r\n                    checked={activeFrame === 'auto'}\r\n                    disabled={activeLayout === 'frame'}\r\n                    onChange={e => {\r\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\r\n                    }}\r\n                >{language['input.frame.auto']}</Checkbox>\r\n                <RadioTrain\r\n                    className=\"frame-radio\"\r\n                    value={activeFrame}\r\n                    onChange={value => {\r\n                        if (activeLayout === 'frame') onFrameChange(value);\r\n                        else changeLayout(value);\r\n                    }}\r\n                    optionList={frameList}\r\n                />\r\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\r\n                    value={dyeList[dyeColor]}\r\n                    onChange={color => {\r\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.dye']}\r\n                </HorizontalSketchPicker>}\r\n            </StyledPendulumFrameContainer>\r\n        </div>\r\n    </FrameLayoutContainer>;\r\n});\r\n\r\nexport * from './frame-behavior-setting-panel';","import { CopiableCode } from 'src/component';\r\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const FlagPresentationList = [\r\n    {\r\n        ...FlagInfoList[0],\r\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.mix-def-link']}:\r\n            <ul>\r\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\r\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\r\n            </ul>\r\n        </>,\r\n    },\r\n    {\r\n        ...FlagInfoList[1],\r\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\r\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\r\n                ? 'input.flag.link-rating-behavior.show'\r\n                : 'input.flag.link-rating-behavior.hide']}\r\n        </>,\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.link-rating-behavior']}:\r\n            <ul>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\r\n                        {LINK_RATING_ALWAYS_AUTO}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\r\n                        {LINK_RATING_ALWAYS_SHOW}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\r\n                        {LINK_RATING_ALWAYS_HIDE}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\r\n                </li>\r\n            </ul>\r\n        </>,\r\n    },\r\n];","import { Checkbox, Input, Popover } from 'antd';\r\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\r\nimport { FlagPresentationList } from '../../common';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n    .card-layout-preview-container {\r\n        line-height: 0;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        overflow: hidden;\r\n    }\r\n    .anticon {\r\n        align-content: center;\r\n        padding: 0 var(--spacing-xs);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-left: none;\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n}\r\n& Pick<CardTextInput, 'onTakePicker'>\r\n& Pick<FramelayoutSettingPanel, 'onFrameChange'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n    onFrameChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            effectStyle,\r\n            pendulumStyle,\r\n            dyeList,\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\r\n    const flagList = flag\r\n        .map((entry, index) => {\r\n            const target = FlagPresentationList[index];\r\n\r\n            if (entry !== 0 && target) return <li key={target.labelKey}>\r\n                {target.valueDisplay(language, entry)}\r\n            </li>;\r\n            return null;\r\n        })\r\n        .filter(entry => entry != null);\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\r\n                            isPendulum={isPendulum}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onFrameChange={onFrameChange}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                        />\r\n                        <FrameBehaviorSettingPanel />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">\r\n                            {language['input.advanced-frame.label']}\r\n                        </span>\r\n                        <div className=\"card-layout-preview-container\">\r\n                            <CardLayoutPreview\r\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\r\n                                height={advanceLayoutPreviewHeight}\r\n                                isPendulum={isPendulum}\r\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                                tabIndex={-1}\r\n                                dyeList={dyeList}\r\n                            />\r\n                        </div>\r\n                        {flagList.length > 0\r\n                            ? <InternalPopover\r\n                                content={<StyledPopMarkdown>\r\n                                    {language['input.flag.effective.label']}\r\n                                    <ul>{flagList}</ul>\r\n                                </StyledPopMarkdown>}\r\n                            >\r\n                                <ApartmentOutlined />\r\n                            </InternalPopover>\r\n                            : null}\r\n                        <CaretDownOutlined />\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, InputNumber, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst PostPendulumFirstLineContainer = styled.div`\r\n    &.first-line,\r\n    &.second-line {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: var(--spacing-sm);\r\n        align-items: center;\r\n        justify-content: right;\r\n    }\r\n    .type-ability-input {\r\n        flex: 1 1 auto;\r\n        width: unset;\r\n        max-width: 40rem;\r\n    }\r\n    .condense-input {\r\n        flex: 1 1 auto;\r\n    }\r\n    .line-input {\r\n        flex: 0 0 auto;\r\n        display: inline-grid;\r\n        grid-template-columns: var(--width-label) max-content max-content;\r\n        gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-input-number {\r\n            width: 65px;\r\n        }\r\n    }\r\n    .formatting-help-button,\r\n    .input-kanji-helper {\r\n        flex: 0 0 auto;\r\n    }\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .condense-input {\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: {\r\n        typeAbility?: string[],\r\n        effectMinLine?: number,\r\n        pendulumEffectMinLine?: number,\r\n    }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\r\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\r\n\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        /** Changing min line force render effect, so we should do so sparingly */\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) setCard(currentCard => {\r\n                const newEffectStyle = { ...currentCard.effectStyle, minLine: effectMinLine };\r\n                const newPendulumEffectStyle = { ...currentCard.pendulumStyle, minLine: pendulumEffectMinLine };\r\n\r\n                return {\r\n                    ...currentCard,\r\n                    effectStyle: newEffectStyle,\r\n                    pendulumStyle: newPendulumEffectStyle,\r\n                };\r\n            });\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [effectMinLine, pendulumEffectMinLine, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility, effectMinLine, pendulumEffectMinLine }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\r\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\r\n            <CardTextInput ref={typeAbilityInputRef}\r\n                addonBefore={language[typeLabel]}\r\n                id=\"type-ability\"\r\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n                onChange={changeTypeAbility}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            {isOCG && <Tooltip\r\n                overlay={language['input.furigana-helper.tooltip']}\r\n                overlayClassName=\"long-tooltip-overlay\"\r\n            >\r\n                <Checkbox\r\n                    className=\"input-kanji-helper\"\r\n                    onChange={toggleFuriganaHelper}\r\n                    checked={furiganaHelper}\r\n                >\r\n                    {language['input.furigana-helper.label']}\r\n                </Checkbox>\r\n            </Tooltip>}\r\n            <FormattingHelpDrawer />\r\n        </PostPendulumFirstLineContainer>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\r\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n                optionList={CondenseThresholdButtonList}\r\n            >\r\n                <span>\r\n                    {language['input.condense.label']} <Explanation\r\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n            </RadioTrain>\r\n            <div className=\"line-input\">\r\n                <div>\r\n                    {language['input.text-style.min-line.label']}\r\n                </div>\r\n                <InputNumber\r\n                    id=\"effect-line\"\r\n                    value={effectMinLine}\r\n                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                    min={0}\r\n                    max={50}\r\n                />\r\n                <InputNumber\r\n                    id=\"pendulum-effect-line\"\r\n                    value={pendulumEffectMinLine}\r\n                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                    min={0}\r\n                    max={50}\r\n                />\r\n            </div>\r\n        </PostPendulumFirstLineContainer>\r\n    </>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { InlineColorPicker, RadioTrain } from 'src/component';\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    IconButton,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { ClearOutlined } from '@ant-design/icons';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    AttributeInputGroup,\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledInputLabelWithButton,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const frameTrainRef = useRef<FrameTrainRef>(null);\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n                effectStyle, pendulumStyle,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({\r\n                typeAbility,\r\n                effectMinLine: effectStyle.minLine,\r\n                pendulumEffectMinLine: pendulumStyle.minLine,\r\n            });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\r\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\r\n                    <IconButton\r\n                        onClick={() => onFinishChange([])}\r\n                        Icon={ClearOutlined}\r\n                        tooltipProps={{\r\n                            title: language['input.other-finish.reset.tooltip'],\r\n                        }}\r\n                    />\r\n                </StyledInputLabelWithButton>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain ref={frameTrainRef}\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <AttributeInputGroup language={language} />\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        softMode={reduceMotionColor}\r\n                        onTakePicker={setPickerTarget}\r\n                        onFrameChange={frame => frameTrainRef.current.changeFrame(frame)}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 50%;\r\n            height: 50%;\r\n            position: absolute;\r\n            &.top-left-frame {\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n            &.top-right-frame {\r\n                top: 0;\r\n                left: 50%;\r\n            }\r\n            &.bottom-left-frame {\r\n                top: 50%;\r\n                left: 0;\r\n            }\r\n            &.bottom-right-frame {\r\n                top: 50%;\r\n                left: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n        effectStyle,\r\n        pendulumStyle,\r\n    } = card;\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle({\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n    }, isPendulum);\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame top-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    DyeIndexMap,\r\n    ExtraAttributeList,\r\n    FinishMap,\r\n    frameList,\r\n    FramePositionMap,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport { CopiableCode, StyledMono } from 'src/component';\r\nimport { FlagPresentationList } from '../common';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                                </tr>\r\n                                {[\r\n                                    {\r\n                                        field: 'Format',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'tcg',\r\n                                                'ocg',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Frame',\r\n                                        altField: 'Bottom Frame',\r\n                                        value: <div>\r\n                                            {frameList\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Attribute',\r\n                                        value: <div>\r\n                                            {[...AttributeList, ...ExtraAttributeList]\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Spell/Trap Icon',\r\n                                        value: <div>\r\n                                            {IconList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Sticker',\r\n                                        value: <div>\r\n                                            {StickerList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Foil',\r\n                                        value: <div>\r\n                                            {getFoilList()\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Finish',\r\n                                        value: <div>\r\n                                            {Object.values(FinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                            <div>{language['manager.template.description.joinable']}</div>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Art Finish',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'number',\r\n                                                'text',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Alignment',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'left',\r\n                                                'center',\r\n                                                'right',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Icon Type',\r\n                                        value: <div>\r\n                                            {IconTypeList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Background Type',\r\n                                        value: <div>\r\n                                            {getBackgroundTypeList()\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Condense Rate',\r\n                                        value: <div>\r\n                                            {Object.keys(CondenseTolerantMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'predefined',\r\n                                                'custom',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Font',\r\n                                        value: <div>\r\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                        </div>,\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Preset',\r\n                                        value: <div>\r\n                                            {Object.keys(PresetNameStyleMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Pattern',\r\n                                        value: <div>\r\n                                            {PatternList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Pendulum Size',\r\n                                        value: <div>\r\n                                            {PendulumSizeList\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Attribute',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Background',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Icon',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Sticker',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Dye List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.dye-list']}</div>\r\n                                            <ul>\r\n                                                {Object\r\n                                                    .entries(DyeIndexMap)\r\n                                                    .sort((l, r) => l[1] - r[1])\r\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\r\n                                            </ul>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Flag',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.flag']}</div>\r\n                                            {FlagPresentationList\r\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\r\n                                        </div>\r\n                                    },\r\n                                ].map(({\r\n                                    field,\r\n                                    altField,\r\n                                    value,\r\n                                }) => {\r\n                                    return <tr key={field}>\r\n                                        <td>\r\n                                            <StyledMono>{field}</StyledMono>\r\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                        </td>\r\n                                        <td>{value}</td>\r\n                                    </tr>;\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                <div className=\"alert-label\">\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                </div>\r\n                                <Dropdown\r\n                                    className=\"save-button-dropdown\"\r\n                                    placement=\"bottomRight\"\r\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                >\r\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                        <GatewayOutlined className=\"resolution-icon\" />\r\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                    </ResolutionButton>\r\n                                </Dropdown>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}