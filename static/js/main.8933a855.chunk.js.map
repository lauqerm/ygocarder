{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","supportFormat","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","PendulumSizeMap","small","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","medium","large","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","tcg","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","ART_FINISH_TYPE","FinishMap","partInstructionMap","pendulumSubstituteMap","ArtFinishMap","art","OtherFinishTypeMap","attribute","sticker","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","createCanvas","canvas","document","createElement","context","getContext","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","length","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","filter","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader$split$filter","_reader14","_reader15","_reader16","_reader17","_ref4","_reader18","_reader19","_reader20","_ref5","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader40","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","mirrorPendulumScale","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","sizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","flavorFontData","dynamicFlavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","drawLinkRatingText","baseDrawLinkArrowMap","positionType","all","isActive","baseLink","activeLink","resetTransform","baseDrawLinkMapFoil","withBorder","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","fillWidth","fillHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","_otherFinish$","attributeCanvas","attributeContext","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishContext","drawStar","_otherFinish$2","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starContext","starFinishCanvas","starFinishContext","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconContext","drawLinkArrowMap","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","_PendulumSizeMapExcep","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderContext","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","exceptionDigitWidthRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","fillBaseColor","w","customFill","hasArtBorder","artHeight","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconContext","iconFinishCanvas","iconFinishContext","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","_templateObject3","InternalPopover","CardActionButton","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","Number","majorB","minorB","patchB","onMouseOver","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","footer","Tabs","TabPane","tab","answer","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","willMirror","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","_templateObject7","LightboxButton","_templateObject8","ResetButton","_templateObject9","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,SAACC,EAAKC,GAE7D,OADAD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICpiCH,MAAME,EAA8C,CAAC,CAAElE,UAAW,UAAW9E,QAAS,IAChFiJ,EAA8C,CAChD,CAAEnE,UAAW,UAAW9E,QAAS,KACjC,CAAE8E,UAAW,WAAY9E,QAAS,MAKzBkJ,EAAkB,MASlBC,EAA+C,CACxDpE,MAAO,CACHnJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,GACpBC,sBAAuB,IAE3BrE,MAAO,CACHpJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,GACpBC,sBAAuB,IAE3BpE,MAAO,CACHrJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChB,cAAeJ,EACf,cAAeA,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,UAAaA,EACb,MAASA,GAEbK,sBAAuB,IAE3BnE,MAAO,CACHtJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,GACpBC,sBAAuB,IAE3BlE,MAAO,CACHvJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,GACpBC,sBAAuB,IAE3BhE,MAAO,CACHzJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,GACpBC,sBAAuB,IAE3B/D,MAAO,CACH1J,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtE,UAAW,SAAU9E,QAAS,MAAS,CAAE8E,UAAW,cAAe9E,QAAS,QAEpGqJ,sBAAuB,IAE3B9D,MAAO,CACH3J,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChB,cAAeH,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,MAASA,EACT,mBAAoBA,EACpB,KAAQA,EACR,KAAQA,GAEZI,sBAAuB,IAE3B7D,MAAO,CACH5J,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtE,UAAW,SAAU9E,QAAS,OAEtDqJ,sBAAuB,KAIlBC,EAAkD,CAC3DvE,MAAO,CACHnJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChBG,IAAK,CAAC,KAEVF,sBAAuB,CACnB1D,MAAO,kBACPa,OAAQ,mBACRC,MAAO,qBAGfzB,MAAO,CACHpJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChBG,IAAK,CACD,CAAEvJ,QAAS,IAAM8E,UAAW,UAC5B,CAAE9E,QAAS,IAAM8E,UAAW,eAC5B,CAAE9E,QAAS,IAAM8E,UAAW,cAGpCuE,sBAAuB,CACnB1D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfxB,MAAO,CACHrJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChBG,IAAK,CAAC,CAAEvJ,QAAS,IAAM8E,UAAW,eAAiB,CAAE9E,QAAS,IAAM8E,UAAW,cAEnFuE,sBAAuB,CACnB1D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfvB,MAAO,CACHtJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChBG,IAAK,CAAC,CAAEvJ,QAAS,IAAM8E,UAAW,eAAiB,CAAE9E,QAAS,GAAK8E,UAAW,cAElFuE,sBAAuB,CACnB1D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGftB,MAAO,CACHvJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChBG,IAAK,CAAC,CAAEvJ,QAAS,IAAM8E,UAAW,eAAiB,CAAE9E,QAAS,GAAK8E,UAAW,cAElFuE,sBAAuB,CACnB1D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfpB,MAAO,CACHzJ,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChBG,IAAK,CAAC,CAAEvJ,QAAS,IAAM8E,UAAW,eAAiB,CAAE9E,QAAS,GAAK8E,UAAW,cAElFuE,sBAAuB,CACnB1D,MAAO,GACPa,OAAQ,mBACRC,MAAO,qBAGfnB,MAAO,CACH1J,MAAO,QACPC,MAAO,IACPuN,mBAAoB,CAChBG,IAAK,CAAC,KAEVF,sBAAuB,CACnB1D,MAAO,kBACPa,OAAQ,mBACRC,MAAO,sBAKN+C,EAAqB,CAC9BD,IAAK,CACD/G,IAAK,MACLpB,SAAU,0BAEdqI,UAAW,CACPjH,IAAK,YACLpB,SAAU,yBAEdE,KAAM,CACFkB,IAAK,OACLpB,SAAU,8BAEdsI,QAAS,CACLlH,IAAK,UACLpB,SAAU,wBAULuI,EAAc,CACvBnL,OAAQ,SACRwF,KAAM,OACNL,SAAU,YAEDiG,EAAejO,GAAgC,CACxD,CACIuC,KAAMyL,EAAoB,OAC1B9N,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY6C,OACnBiC,MAAO,UACPE,UAAU,GAEd,CACIzC,KAAMyL,EAAkB,KACxB9N,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYqI,KACnBvD,MAAO,UACPE,UAAU,GAEd,CACIzC,KAAMyL,EAAsB,SAC5B9N,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYgI,SACnBlD,MAAO,UACPE,UAAU,ICxMLkJ,EAAsB,CAC/BC,qBAAsB,EACtBC,YAAa,GACbxD,SAAU,KACVyD,WAAY,KACZC,UAAW,EACXC,aAAc,EACdC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAqCXC,EAAkB,CAC3BC,oBAAqB,GACrBC,iBAAkB,SAClBC,cAAc,EACdC,iBAAkB,QAQhBC,GAAwB,CAC1BC,aAAc,0BACdC,aAAc,2BACdf,kBAAmB,GACnBS,oBAAqB,KACrBO,YAAa,sBACbC,WAAY,SACZC,gBAAiB,EACjBN,iBAAkB,GAETO,GAAkCpL,wBAAA,GACxC8K,IAAqB,IACxBhI,KAAM,aACN4H,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAEDC,GAAkCvL,wBAAA,GACxC8K,IAAqB,IACxBhI,KAAM,sBACN4H,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAEDE,GAAkCxL,wBAAA,GACxC8K,IAAqB,IACxBhI,KAAM,0BACNuI,UAAW,MACXI,aAAc,UACdH,SAAU,KAMDI,GAA2C,CACpD,IAAK1L,wBAAA,GACEuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,GAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAG1F,WAAU/J,wBAAA,GACHuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GACnF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAG1F,gBAAe/J,wBAAA,GACRuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,MAG3F,WAAU/J,wBAAA,GACHuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAG1F,oBAAmB/J,wBAAA,GACZuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,MAG1F,yBAAwB/J,wBAAA,GACjBuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,GAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,MAG1F,8BAA6B/J,wBAAA,GACtBuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,MAGzF,yBAAwB/J,wBAAA,GACjBuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,OAOjF4B,GAA2C,CACpD,IAAK3L,wBAAA,GACEoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,GAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAG1F,WAAU/J,wBAAA,GACHoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GACnF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAG1F,gBAAe/J,wBAAA,GACRoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,GAAMyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,MAG1F,WAAU/J,wBAAA,GACHoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAG1F,oBAAmB/J,wBAAA,GACZoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,MAAOC,UAAW,GAAIC,aAAc,GACpF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,MAG1F,yBAAwB/J,wBAAA,GACjBoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GACnF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,MAG1F,8BAA6B/J,wBAAA,GACtBoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,MAGzF,yBAAwB/J,wBAAA,GACjBoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GACjF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,GAAMyD,WAAY,KAAMC,UAAW,GAChE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,GAAMC,UAAW,GAAIC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,GAAIC,aAAc,MAG1F,IAAK/J,wBAAA,GACEwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,GAAIyD,WAAY,GAAIC,UAAW,GAC5D,CAAEF,YAAa,GAAIxD,SAAU,GAAIyD,WAAY,GAAIC,UAAW,MAGpE,WAAU9J,wBAAA,GACHwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,MAGzE,gBAAe9J,wBAAA,GACRwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,MAGzE,WAAU9J,wBAAA,GACHwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,MAGzE,oBAAmB9J,wBAAA,GACZwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,GAAIyD,WAAY,GAAIC,UAAW,GAC5D,CAAEF,YAAa,GAAIxD,SAAU,GAAIyD,WAAY,GAAIC,UAAW,MAGpE,yBAAwB9J,wBAAA,GACjBwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,MAGzE,8BAA6B9J,wBAAA,GACtBwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,MAGzE,yBAAwB9J,wBAAA,GACjBwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,KACvG,CAAEL,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,EAAGE,kBAAmB,IACvG,CAAEL,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,OC3ZhE8B,GAAqE,CAC9EC,QAAS,CACLpQ,MAAO,UACPwF,SAAU,qCACV6K,SAAU,CACNf,aAAc,yBACdjI,KAAM,yBACNkI,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,IACrBY,SAAU,CAAC,CACP1B,YAAa,GACbxD,SAAU,KACV6D,kBAAmB,IACnBG,cAAe,KACfN,UAAW,EACXD,WAAY,KACZQ,QAAS,IAEb0B,mBAAoB,CAChB,EAAK,CACDC,UAAW,IACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,MAGhC,EAAK,CACDH,UAAW,EACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,SAM5CsD,MAAO,CACHhU,MAAO,QACPwF,SAAU,mCACV6K,SAAU,CACNf,aAAc,QACdjI,KAAM,QACNkI,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,KACrBgF,OAAQ,OACRpE,SAAU,CAAC,CACP1B,YAAa,MACbxD,SAAU,GACV6D,kBAAmB,IACnBG,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,MAIrBsF,IAAK,CACDlU,MAAO,MACPwF,SAAU,iCACV6K,SAAU,CACNf,aAAc,0BACdjI,KAAM,0BACNkI,aAAc,2BACdN,oBAAqB,KACrBC,iBAAkB,WAClBC,cAAc,EACda,aAAc,OACdmE,WAAY,oBACZC,gBAAiB,EACjB5E,YAAa,sBACbC,WAAY,SACZC,gBAAiB,KACjBE,UAAW,MACXC,SAAU,CAAC,CACP1B,YAAa,MACbxD,SAAU,GACV6D,kBAAmB,KACnBC,gBAAiB,EACjBE,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,OCvJZyF,GAA4C,CACrDlI,IAlDwC,CACxC9E,KAAM,sBACNiI,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIjB,SAAU,EACVT,YAAa,MACbxD,SAAU,KACVyD,WAAY,KACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIP,YAAa,MACbxD,SAAU,GACVyD,WAAY,GACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,QAyB1BlC,IArBwC,CACxCnF,KAAM,oBACNiI,aAAc,oBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdS,aAAc,UACdJ,UAAW,MACXC,SAAU,CAAC,CACP1B,YAAa,GACbxD,SAAU,GACVgE,cAAe,IACfP,WAAY,KACZC,UAAW,EACXG,kBAAmB,EACnB8F,kBAAmB,QAsEdC,GAA6C,CACtDpI,IA/DyC,CACzC9E,KAAM,sBACNiI,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI1B,YAAa,MACbxD,SAAU,OACVyD,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIP,YAAa,MACbxD,SAAU,OACVyD,WAAY,OACZC,UAAW,EACXM,cAAe,EACfH,kBAAmB,GACnBE,iBAAkB,KAClBE,QAAS,KAsCjBpC,IAlCyC,CACzCnF,KAAM,oBACNiI,aAAc,oBACd6E,WAAY,sBACZ1E,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXI,aAAc,WACdH,SAAU,CACN,CACI1B,YAAa,MACbxD,SAAU,OACVyD,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIP,YAAa,MACbxD,SAAU,GACV6D,kBAAmB,EACnBE,iBAAkB,KAClBL,UAAW,EACXD,WAAY,KACZS,mBAAoB,EACpBC,iBAAkB,SASjB0F,GAAmC,CAC5CnN,KAAM,yBACNiI,aAAc,yBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,yBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI1B,YAAa,MACbxD,SAAU,KACVyD,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GACjBlG,mBAAoB,IACpBI,cAAe,IACfH,kBAAmB,IAEvB,CACIL,YAAa,KACbxD,SAAU,MACVyD,WAAY,MACZC,UAAW,EACXoG,gBAAiB,GACjBlG,mBAAoB,IACpBI,eAAgB,IAChBH,kBAAmB,IAEvB,CACIL,YAAa,KACbxD,SAAU,KACVyD,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GAEjBlG,mBAAoB,OACpBQ,mBAAoB,OACpBJ,eAAgB,IAChBH,kBAAmB,MAIlBkG,GAAmC,CAC5CrN,KAAM,0BACNiI,aAAc,0BACdG,WAAY,SACZC,gBAAiB,GACjBT,oBAAqB,KACrBO,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI1B,YAAa,MACbxD,SAAU,KACVyD,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GACjBjG,kBAAmB,IAEvB,CACIL,YAAa,KACbxD,SAAU,KACVyD,WAAY,KACZC,UAAW,EACXoG,gBAAiB,GACjBjG,kBAAmB,IAEvB,CACIL,YAAa,KACbxD,SAAU,GACVyD,WAAY,GACZC,UAAW,EACXoG,gBAAiB,GACjBjG,kBAAmB,IACnBC,gBAAiB,EACjBE,eAAgB,IAChBI,mBAAoB,WCjMnB4F,GAAmD,CAC5D,YAAWpQ,wBAAA,GACJuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,MAG1F,aAAY/J,wBAAA,GACLuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,GAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,MAGzE,YAAW9J,wBAAA,GACJuL,IAAwB,IAC3BD,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,QAIhEuG,GAAmD,CAC5D,YAAWrQ,wBAAA,GACJoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,MAG1F,aAAY/J,wBAAA,GACLoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,GACjE,CAAEF,YAAa,GAAIxD,SAAU,GAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,MAGzE,YAAW9J,wBAAA,GACJoL,IAAwB,IAC3BE,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,MAAOC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,KAAMyD,WAAY,KAAOC,UAAW,EAAGC,aAAc,MAG1F,YAAW/J,wBAAA,GACJwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,EAAGC,aAAc,GAC1G,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,EAAGC,aAAc,GAC1G,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,EAAGC,aAAc,GAC1G,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,MAGjG,aAAY9J,wBAAA,GACLwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIG,aAAc,EAAG3D,SAAU,MAAOyD,WAAY,KAAMI,kBAAmB,GAAKH,UAAW,GAC1G,CAAEF,YAAa,GAAIG,aAAc,EAAG3D,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GAClF,CAAEF,YAAa,GAAIG,aAAc,EAAG3D,SAAU,MAAOyD,WAAY,KAAMC,UAAW,GAClF,CAAEF,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,MAGzE,YAAW9J,wBAAA,GACJwL,IAAwB,IAC3BF,SAAU,CACN,CAAE1B,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMI,kBAAmB,IAAMH,UAAW,EAAGC,aAAc,GAC3G,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,EAAGC,aAAc,GAClF,CAAEH,YAAa,GAAIxD,SAAU,MAAOyD,WAAY,KAAMC,UAAW,OC1GhEwG,GAA4C,CACrrtD,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,UAICC,GAAe,CACxBxI,IAAK,CACD,+HACA,wGACA,wDAEJL,IAAK,CACD,kDACA,4BACA,oCAIK8I,GAA8C,CACvDzI,IAAK,mGACLL,IAAK,kCAII+I,GAA0C,CAEnD,eAAM,OACN,eAAM,QACN,2BAAQ,gBACR,2BAAQ,cACR,uCAAU,UACV,qBAAO,WACP,2BAAQ,eACR,iCAAS,SACT,qBAAO,QACP,qBAAO,QACP,eAAM,OACN,6CAAW,SACX,2BAAQ,WACR,qBAAO,SACP,qBAAO,UACP,qBAAO,QACP,uCAAU,UACV,eAAM,OACN,2BAAQ,UACR,qBAAO,OACP,qBAAO,cACP,iCAAS,cACT,eAAM,UACN,qBAAO,UACP,qBAAO,eACP,qBAAO,OACP,uCAAU,SACV,uCAAU,SACV,iCAAS,oBACT,6CAAW,cACX,iCAAS,iBACT,yDAAa,gBAEb,iCAAS,UACT,iCAAS,aACT,2BAAQ,YACR,iCAAS,SAET,eAAM,SACN,eAAM,SACN,eAAM,SACN,uCAAU,SACV,eAAM,SACN,2BAAQ,UACR,iCAAS,MACT,uCAAU,WACV,qBAAO,OACP,iCAAS,UACT,2BAAQ,QACR,2BAAQ,iBACR,2EAAgB,eAEhB,iCAAS,QACT,2BAAQ,SACR,2BAAQ,OACR,2BAAQ,OACR,iCAAS,SACT,2BAAQ,QAER,CAACF,GAAaxI,IAAI,IAAKwI,GAAa7I,IAAI,GACxC,CAAC6I,GAAaxI,IAAI,IAAKwI,GAAa7I,IAAI,GACxC,CAAC6I,GAAaxI,IAAI,IAAKwI,GAAa7I,IAAI,GAExC,6CAAgB,QAChB,o5CAGA,+GAAsB,sCAEtB,gQAA+C,+EAC/C,CAAC8I,GAAoBzI,KAAMyI,GAAoB9I,KAEtCgJ,GAAkBlP,OAAOmP,QAAQF,IAAiBjI,QAAO,CAACC,EAAKC,KACxE,MAAOkI,EAASC,GAAWnI,EAG3B,OAFAD,EAAIoI,GAAWD,EAERnI,IACR,CAEC,oFAAgF,kQC7UvEqI,GAA0C,CACnD,OAAU,CACNjT,KAAM,SACNsC,QAAS,qBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,KAEhB,OAAU,CACNrT,KAAM,SACNsC,QAAS,qBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNrT,KAAM,SACNsC,QAAS,qBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACPrT,KAAM,UACNsC,QAAS,sBACT4Q,WAAY,OACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,IAAO,CACHrT,KAAM,MACNsC,QAAS,kBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJrT,KAAM,OACNsC,QAAS,mBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNrT,KAAM,SACNsC,QAAS,qBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACLrT,KAAM,QACNsC,QAAS,oBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJrT,KAAM,OACNsC,QAAS,mBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACLrT,KAAM,QACNsC,QAAS,oBACT4Q,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,GAEhB,eAAgB,CACZrT,KAAM,eACNsC,QAAS,2BACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACPrT,KAAM,UACNsC,QAAS,sBACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNrT,KAAM,SACNsC,QAAS,qBACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,GAAM,CACFrT,KAAM,KACNsC,QAAS,iBACT4Q,WAAY,OACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,OAAU,CACNrT,KAAM,SACNsC,QAAS,qBACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJrT,KAAM,OACNsC,QAAS,mBACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,MAAS,CACLrT,KAAM,QACNsC,QAAS,oBACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,YAAa,CACTrT,KAAM,YACNsC,QAAS,wBACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,cAAe,CACXrT,KAAM,cACNsC,QAAS,0BACT4Q,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJrT,KAAM,OACNsC,QAAS,mBACT4Q,WAAY,OACZC,QAAS,YACTG,yBAA0B,CACtB,qBACA,qBACA,sBACA,iBAEJC,qBAAqB,0BAAD/P,OAA4B,CAC5C,yBACA,yBACA,yBACA,0BACA,0BACA,qBACFgQ,KAAK,MAAK,KACZH,WAAY,IAGPI,GAAY9P,OAAOC,OAAOqP,ICzL1BS,GAAmB,CAC5BpT,OAAQ,CACJ,CAAEqT,IAAK,IAAKC,KAAM,GAAI5V,MAAO,IAAKC,OAAQ,KAC1C,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,IAC3C,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,KAC3C,CAAE0V,IAAK,IAAKC,KAAM,GAAI5V,MAAO,GAAIC,OAAQ,KACzC,CAAE0V,IAAK,EAAGC,KAAM,EAAG5V,MAAO,EAAGC,OAAQ,GACrC,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,GAAIC,OAAQ,KAC1C,CAAE0V,IAAK,IAAKC,KAAM,GAAI5V,MAAO,IAAKC,OAAQ,KAC1C,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,IAC3C,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,MAE/C6B,SAAU,CACN,CAAE6T,IAAK,IAAKC,KAAM,GAAI5V,MAAO,IAAKC,OAAQ,KAC1C,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,IAC3C,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,KAC3C,CAAE0V,IAAK,IAAKC,KAAM,EAAG5V,MAAO,GAAIC,OAAQ,KACxC,CAAE0V,IAAK,EAAGC,KAAM,EAAG5V,MAAO,EAAGC,OAAQ,GACrC,CAAE0V,IAAK,IAAKC,KAAM,IAAK5V,MAAO,GAAIC,OAAQ,KAC1C,CAAE0V,IAAK,KAAMC,KAAM,GAAI5V,MAAO,IAAKC,OAAQ,KAC3C,CAAE0V,IAAK,KAAMC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,IAC5C,CAAE0V,IAAK,KAAMC,KAAM,IAAK5V,MAAO,IAAKC,OAAQ,OAGvC4V,GAAiB,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KACrDC,GAAiB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IACzDC,GAAyB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IACjEC,GAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,GAAyB,EAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GCvBpDC,GAAqB,IAAIC,OADD,sBAIxBC,GAA2B,IAAID,OADP,wBAGxBE,GAAoB,8IACpBC,GAAiB,IAAIH,OAAOE,IAE5BE,GAAqB,IAAIJ,OAAO,cAAD3Q,OAAe6Q,GAAiB,QAK/DG,GAAe,SACfC,GAAgB,SAChBC,GAAe,SACfC,GAAgB,SAChBC,GAAoB,SACpBC,GAAqB,SACrBC,GAAwB,SACxBC,GAAsB,SAEtBC,GAAqB,IAAIb,OAAO,IAAD3Q,OAAK,CAC7CqR,GACAD,GACAD,GACAD,GACAK,GACAD,GACAL,GACAD,IACFhB,KAAK,IAAG,iBAAiB,KAEdyB,GAA8B,yBAAAzR,OAA4BgR,IAAYhR,OAAGkR,IAAYlR,OAAGoR,IAAiBpR,OAAGsR,GAAqB,UACjII,GAA6B,IAAIf,OAAOc,GAAgC,KAExEE,GAA2B,GAAA3R,OAAMgR,GAAY,KAAAhR,OAAIiR,IACjDW,GAA0B,IAAIjB,OAAOgB,IAGrCE,GAAuB,kGAAA7R,OAAqGgR,GAAY,uBAAAhR,OAAsBiR,GAAa,WAK3Ka,GAAuB,IAAInB,OAAO,IAAD3Q,OADX,uBACmC,MAEzD+R,GAAyBlL,EAAmBmL,KAAIC,IAAK,IAAAC,EAAA,OAAmB,QAAnBA,EAAID,EAAMjL,iBAAS,IAAAkL,IAAID,EAAMnL,aAAWkJ,KAAK,KAClGmC,GAAkB,IAAAnS,OAAO+R,GAAsB,eAE/CK,GAAwB,iRACxBC,GAAe,IAAI1B,OAAO,IAAD3Q,OAAKoS,GAAqB,MAGnDE,GAAwB,KAAAtS,OAAQoS,GAAqB,8LAMrDG,GAAuB,IAAI5B,OADD,yBAI1B6B,GAAmB,IAAI7B,OADD,gCAGtB8B,GAAiB,IAAI9B,OAAO,mBAC5B+B,GAAc,IAAI/B,OAAO,SAEzBgC,GAAgB,icAEhBC,GAAgB,ydAEhBC,GAAc,IAAIlC,OAAO,YACzBmC,GAAe,IAAInC,OAAO,YAC1BoC,GAAe,IAAIpC,OAAO,YAG1BqC,GAA+B,IAAIrC,OAAO,IAAD3Q,OADT,SACkD,MAGlFiT,GAAyB,IAAItC,OAAO,IAAD3Q,OADX,eAC4C,MAGpEkT,GAAwB,IAAIvC,OAAO,IAAD3Q,OADV,SAC2C,MAEnEmT,GAAuC,CAChD,UAAM,GACN,UAAM,GACN,SAAK,EACL,SAAK,EACL,SAAK,EACL,IAAK,IACL,KAAM,KAEGC,GAAiD,CAC1D,UAAM,GACN,UAAM,KAEGC,GAAgD,CACzD,IAAK,KACL,IAAK,MAEIC,GAAuC,GAIvCC,GAAiD,GAEjDC,GAAgD,GAQhDC,GAAoBC,GAA8B,QAAXA,EAAmB,EAAI,EAK9DC,GAAa,YAIbC,GAAmB,UAGnBC,IAAuB,KC1GvBC,GAAiBA,KAAA,CAC1BC,QAAS,EACTL,OAAQ,MACRpZ,MAAO,SACP0Z,KAAM,SACN1V,QAASlC,IACT6X,OAAQ,GACRC,YAAa,CAAC,SAAU,SAAU,UAClCC,UAAW,SACX3X,KAAM,QACN4X,cAAe,OACfC,UdpC+B,CAC/B9S,KAAM,UACNN,UAAW,UACXqT,kBAAmB,UACnBpS,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ5B,WAAW,EACXY,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbhB,YAAY,EACZmB,cAAe,EACfC,cAAe,0CACfrB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXyR,gBAAiB,EACjB7T,WAAW,EACXM,OAAQ,UACRL,QAAS,QceToH,UAAW,QACXyM,UAAWrV,EACXsV,SAAU,OACVC,KAAM,EACNC,cAAe,OACf9M,IAAK,kCACL+M,QAAS,GACTC,QAAQ,EACRC,UAAW,SACXC,QAxC0B,CAC1BC,EAAG,EACHC,EAAG,EACHza,MAAO,IACPC,OAAQ,KACRya,KAAM,IACNC,OAAQ,GAmCRC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClBjX,eAAgB,MAChBkX,eA/C0B,CAC1BT,EAAG,EACHC,EAAG,EACHza,MAAO,IACPC,OAAQ,KACRya,KAAM,IACNC,OAAQ,GA0CRO,QAAS,CACL,IACA,IACA,IACA,KAEJC,QAAQ,EACRtX,YAAY,EACZuX,cAAe,OACfC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBvX,aAAc6G,EACd2Q,YAAa,CACT,QACA,SACA,UAEJC,YAAa,CACTC,iBAAkB,SAClBpM,UAAW,OACXqM,OAAQ,GAEZC,cAAe,CACXtM,UAAW,OACXqM,OAAQ,GAEZE,OAAO,oTAEPC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVzO,QAAS,QACT0O,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EACdC,QAAS,kDACTC,gBAAgB,EAChBC,cd/DgD,EAChD,EACA,WACA,EACA,Wc4DAC,cdhEgD,EAChD,EACA,WACA,EACA,Wc6DAC,gBdjEgD,EAChD,EACA,WACA,EACA,Wc8DAC,kBdlEgD,EAChD,EACA,WACA,EACA,Wc+DAC,ednEgD,EAChD,EACA,WACA,EACA,WciEAC,aAAc,KAILC,GAAyBA,IAAA9Y,YAAC,CACnC+Y,GAAIC,eACD3D,MAGM4D,GAAeA,KAAA,CACxB3D,QAAS,EACTL,OAAQ,MACRpZ,MAAO,SACP0Z,KAAM,SACN1V,QAASlC,IACT6X,OAAQ,GACRE,UAAW,SACXD,YAAa,CAAC,SAAU,SAAU,UAClC1X,KAAM,GACN4X,cAAe,OACfC,UdzH+B,CAC/B9S,KAAM,UACNN,UAAW,UACXqT,kBAAmB,UACnBpS,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ5B,WAAW,EACXY,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbhB,YAAY,EACZmB,cAAe,EACfC,cAAe,0CACfrB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXyR,gBAAiB,EACjB7T,WAAW,EACXM,OAAQ,UACRL,QAAS,QcoGToH,UAAWnJ,EACX4V,UAAWrV,EACXsV,SAAU,OACVC,KAAM,EACNC,cAAe,OACf9M,IAAK,kCACL+M,QAAS,GACTE,UAAW,SACXD,QAAQ,EACRE,QAAS,CACLC,EAAG,EACHC,EAAG,EACHza,MAAO,IACPC,OAAQ,KACRya,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClBjX,eAAgB,MAChBkX,eAAgB,CACZT,EAAG,EACHC,EAAG,EACHza,MAAO,IACPC,OAAQ,KACRya,KAAM,IACNC,OAAQ,GAEZO,QAAS,GACTC,OAAQ,KACRtX,YAAY,EACZuX,cAAe,OACfC,eAAgB,GAChBC,iBAAkB,IAClBC,kBAAmB,IACnBvX,aAAc6G,EACd2Q,YAAa,GACbC,YAAa,CACTC,iBAAkB,SAClBpM,UAAW,OACXqM,OAAQ,GAEZC,cAAe,CACXtM,UAAW,OACXqM,OAAQ,GAEZE,OAAQ,GACRC,MAAO,GACPC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVzO,QAASzI,EACTmX,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EAEdC,QAAS,GACTC,gBAAgB,EAChBC,cdzJgD,EAChD,EACA,WACA,EACA,WcsJAC,cd1JgD,EAChD,EACA,WACA,EACA,WcuJAC,gBd3JgD,EAChD,EACA,WACA,EACA,WcwJAC,kBd5JgD,EAChD,EACA,WACA,EACA,WcyJAC,ed7JgD,EAChD,EACA,WACA,EACA,Wc0JAC,aAAc,KAGLK,GAAc,CACvB,CACIja,KAAM,OACNka,QAAS,YACTzd,MAAO,OACPuF,SAAU,2BACVmY,WAAY,oCAEhB,CACIna,KAAM,OACNka,QAAS,aACTzd,MAAO,OACPuF,SAAU,2BACVmY,WAAY,qCAEhB,CACIna,KAAM,WACNvD,MAAO,WACPuF,SAAU,+BACVmY,WAAY,MAEhB,CACIna,KAAM,OACNvD,MAAO,SACPuF,SAAU,6BACVmY,WAAY,OAIPC,GAAmB,CAC5B,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WAG9CC,GAAgB,CACzB,UAAW,CACP5d,MAAO,eACPK,MAAO,IACPC,OAAQ,IACRud,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,UAAW,CACP9d,MAAO,eACPK,MAAO,IACPC,OAAQ,IACRud,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,WAAY,CACR9d,MAAO,gBACPK,MAAO,IACPC,OAAQ,KACRud,MAAO,EACPC,aAAc,CAAC,IAAK,OAExB,YAAa,CACT9d,MAAOkF,cAAA,OAAK6Y,MAAO,CAAEnZ,MAAO,uBAAwBoZ,SAAC,mBACrD3d,MAAO,KACPC,OAAQ,KACRud,MAAO,EACPC,aAAc,CAAC,KAAM,OAEzB,YAAa,CACT9d,MAAOkF,cAAA,OAAK6Y,MAAO,CAAEnZ,MAAO,uBAAwBoZ,SAAC,mBACrD3d,MAAO,KACPC,OAAQ,KACRud,MAAO,EACPC,aAAc,CAAC,KAAM,OAEzB,YAAa,CACT9d,MAAOkF,cAAA,OAAK6Y,MAAO,CAAEnZ,MAAO,uBAAwBoZ,SAAC,mBACrD3d,MAAO,KACPC,OAAQ,KACRud,MAAO,EACPC,aAAc,CAAC,KAAM,QAGhBG,GAAiB,CAC1BL,GAAc,WACdA,GAAc,WACdA,GAAc,YACdA,GAAc,aACdA,GAAc,aACdA,GAAc,cAILM,GAAmB,CAC5B,CACIne,MAAO,MACPC,MAAO,QAEX,CACID,MAAO,OACPC,MAAO,UCxSFme,GAAeA,CAAC9d,EAAeC,KACxC,MAAM8d,EAASC,SAASC,cAAc,UACtCF,EAAO/d,MAAQA,EACf+d,EAAO9d,OAASA,EAChB,MAAMie,EAAUH,EAAOI,WAAW,MAElC,MAAO,CACHJ,SACAG,Y,uJCgBD,SAASE,GAAkBC,EAAgBC,GAC9C,IAMIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXAC,EAAiBR,EAAMS,MAAMC,OAC7BD,EAAQT,EAAMS,MAAME,MAAM,GAC1BC,EAAS,IAAIC,MAAML,GACnBM,EAAO,EACPC,EAAY,EACZC,EAAiB,EAQrB,IADAf,EAAWA,GAAY,EAClBC,EAAQM,EAAiB,EAAGN,GAAS,IAAKA,EAC3CU,EAAOV,GAASY,EAChBA,GAAQL,EAAMP,GACdc,GAAkBP,EAAMP,GACxBa,EAAYE,KAAKC,IAAIH,EAAWN,EAAMP,IAI1C,IAAIiB,EAAyBC,KAAKC,aAAaP,GAC3CQ,EAAoBC,KAAQJ,EAAwBV,EAAME,MAAM,GAAIC,EAAOD,MAAM,GAAI,GACrFa,EAAMJ,KAAKK,aAAaV,GACxBW,EAAMN,KAAKK,aAAaV,GAMxBY,EAAyBP,KAAKC,aAAaP,GAC3Cc,EAAoBL,KAAQI,EAAwBlB,EAAME,MAAM,GAAIC,EAAOD,MAAM,GAAI,GACzF,IAAK,IAAIkB,EAAW,EAAGA,EAAW7B,EAAMS,MAAM,GAAIoB,IAC9C,IAAK,IAAIC,EAAc,EAAGA,EAAc9B,EAAMS,MAAM,GAAIqB,IACpDF,EAAkBG,IAAIF,EAAUC,EAAa9B,EAAMgC,IAAIH,EAAUC,GAAe,EAAId,GAO5F,IA1DJ,SAAgBhB,EAAsCiC,EAAkBC,GACpE,IAAIlQ,EAAWmO,EAAoBgC,EAATC,EAAM,EAAsBC,EAAMpB,KAAKoB,IACjE,IAAKrQ,EAAI,EAAGA,EAAIiQ,IAAYjQ,EAAG,CAE3B,IADAmQ,EAAYnC,EAAMoC,KACbjC,EAAI,EAAGA,EAAI+B,IAAY/B,EACxBgC,EAAYE,EAAIrC,EAAMoC,GAAMD,EAAY,GACxCnC,EAAMoC,KAASD,EAEnB,IAAKhC,EAAI,EAAGA,EAAI+B,IAAY/B,EACxBgC,EAAYE,EAAIrC,IAAQoC,GAAMD,EAAY,GAC1CnC,EAAMoC,GAAOD,EAEjBC,GAAOF,GA2CXI,CAAOV,EAAkBW,KAAOzB,EAAOL,EAAMD,EAAiB,GAAM,EAA+B,EAA5BC,EAAMD,EAAiB,IAGzFN,EAAQM,EAAiB,EAAGN,EAAQ,IAAKA,EAAO,CAGjD,IAFAG,EAAaiB,EAAkBV,OAC/BR,EAAI,EACCD,EAAID,EAAQ,EAAGC,EAAIK,IAAkBL,EACtCE,EAAWF,GAAKC,EAChBA,GAAKK,EAAMN,GAEf,IAAKA,EAAID,EAAQ,EAAGC,GAAK,IAAKA,EAC1BE,EAAWF,GAAKC,EAChBA,GAAKK,EAAMN,GAMf,GAJAqC,KAAIC,OAAOnB,EAAmBM,GAG9BrB,EAAuBE,EAAMP,EAAQ,GAChCwC,SAASzC,GAEP,GAAiB,IAAbA,EACP0C,KAASrB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,QAChG,GAAiB,IAAbzB,EACP2C,KAAStB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,OAChG,IAAIzB,EAAW,EAClB,MAAM,IAAI4C,MAAM,4CAEhBC,KAASxB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,EAAKzB,QARxG8C,KAAWzB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,GAYzGpB,EAAMsB,EACNA,EAAoBN,EACpBA,EAAoBhB,EAUxB,OANAkC,KAAIC,OAAOzC,EAAO4B,GAElBR,KAAK4B,WAAWrB,GAChBP,KAAK4B,WAAW7B,GAChBC,KAAK6B,WAAWzB,GAChBJ,KAAK6B,WAAWvB,GACT1B,E,2CCrGX,MAAMkD,GAAuB,CACzBC,SAAU,CACN,SAAY,CAAEte,KAAM,IAAKxD,MAAO,MAChC,EAAK,CAAEwD,KAAM,IAAKxD,MAAO,EAAM,MAEnC+hB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFjM,KAAK,MACPkM,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFlM,KAAK,OAELmM,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAE1e,KAAM,IAAKxD,MAAO,MAC9BmiB,EAAG,CAAE3e,KAAM,IAAKxD,MAAO,EAAM,MAEjC+hB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFjM,KAAK,MACPkM,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFlM,KAAK,OAELsM,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEte,KAAM,KAAMxD,MAAO,GAC7B,QAAW,CAAEwD,KAAM,KAAMxD,MAAO,GAChC,QAAW,CAAEwD,KAAM,KAAMxD,MAAO,GAChC,QAAW,CAAEwD,KAAM,KAAMxD,MAAO,GAChC,GAAM,CAAEwD,KAAM,KAAMxD,MAAO,GAC3B,WAAc,CAAEwD,KAAM,KAAMxD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEwD,KAAM,IAAKxD,MAAO,OAEtC+hB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFjM,KAAK,MACPkM,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACFlM,KAAK,OAGEuM,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACPpf,KAAM6e,KAIH,MAAMQ,GAUTC,YAAYC,EAAiCC,GAAkC,KAT/EC,cAAQ,OACRC,oBAAc,OACdC,sBAAgB,OAChBC,cAAQ,OACRL,YAAM,OACN1E,YAAM,OACNgF,qBAAe,OACfC,qBAAe,EAGXC,KAAKlF,OAAS2E,EACdO,KAAKR,OAAMxe,wBAAA,GAAQ+d,MAAwCS,GAC3DQ,KAAKC,OAGTC,MAAM5c,GAAiE,IAAvCkc,EAA+BW,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9D,MAAM,MAAEpjB,EAAK,OAAEC,GAAWsG,EACpB+c,EAAUL,KAAKM,WAAWhd,GAChC0c,KAAKJ,iBAAiBW,WAAW9jB,MAAQ4jB,EACzCL,KAAKJ,iBAAiBY,WAAW/jB,MAAQ,CAACM,EAAOC,EAAQ,GACzDgjB,KAAKN,SAASe,QAAQ1jB,EAAOC,GAC7BgjB,KAAKL,eAAec,QAAQ1jB,EAAOC,GACnCgjB,KAAKL,eAAee,MAAMV,KAAKW,gBAAgB5jB,EAAOC,IAEtD,MAAM,YAAEgiB,EAAW,cAAEC,EAAa,eAAEC,EAAc,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,EAAK,KAAEpf,GAAMe,wBAAA,GAC/Egf,KAAKR,QACLA,GAGPQ,KAAKY,UAAU5B,GACfgB,KAAKa,YAAY5B,GACjBe,KAAKc,aAAa5B,GAClBc,KAAKe,aAAa5B,EAAWpiB,EAAOC,GACpCgjB,KAAKgB,oBAAoB5B,EAAUC,GACnCW,KAAKiB,QAAQhhB,GAEb+f,KAAKL,eAAeuB,OAAO,EAAI,IAGnCjB,OACI,MAAMkB,EAAS,IAAIC,MAAyB,GAAQ,GAAO,IAAO,GAAQ,EAAG,GACvEC,EAAQ,IAAID,KACZE,EAAoB,IAAIC,KAAWF,EAAOF,GAEhDnB,KAAKN,SAAW,IAAI0B,KAAoB,CAAEI,OAAO,EAAMC,WAAW,EAAM3G,OAAQkF,KAAKlF,SACrFkF,KAAKN,SAASgC,cAAc,EAAU,GAEtC1B,KAAKJ,iBAAmBwB,KAAoBO,MAAM9C,GAAgBN,UAElEyB,KAAKH,SAAW,IAAIuB,KAAqB,CACrC3C,eAAgBI,GAAgBJ,eAChCD,aAAcK,GAAgBL,aAC9BD,SAAUyB,KAAKJ,mBAEnBI,KAAKH,SAAS+B,aAAc,EAE5B,MAAMC,EAAe,IAAIT,KAAoB,EAAG,EAAG,EAAG,GAChDU,EAAa,IAAIV,KAAWS,EAAc7B,KAAKH,UACrDwB,EAAMU,IAAID,GAEV9B,KAAKD,gBAAkB,IAAIiC,KAAWtD,IACtCsB,KAAKF,gBAAkB,IAAIkC,KAAW1D,IACtC0B,KAAKF,gBAAgBmC,gBAAiB,EAEtCjC,KAAKL,eAAiB,IAAIuC,KAAelC,KAAKN,SAAUM,KAAKW,mBAC7DX,KAAKL,eAAewC,QAAQb,GAC5BtB,KAAKL,eAAewC,QAAQnC,KAAKD,iBACjCC,KAAKL,eAAewC,QAAQnC,KAAKF,iBAErCa,gBAAgB5jB,EAAgBC,GAC5B,OAAO,IAAIokB,KAAwBrkB,EAAOC,EAAQ,CAC9ColB,UAAWhB,KACXiB,UAAWjB,KACXnL,OAAQmL,KACRkB,eAAe,IAGvBhC,WAAWhd,GACP,MAAM+c,EAAU,IAAIe,KAAc9d,GAKlC,OAJA+c,EAAQkC,MAAQlC,EAAQmC,MAAQpB,KAChCf,EAAQ+B,UAAY/B,EAAQgC,UAAYjB,KACxCf,EAAQoC,WAAa,EACrBpC,EAAQqC,aAAc,EACfrC,EAGXO,UAAU+B,GAEF3C,KAAKJ,iBAAiBgD,QAAQnmB,MAD9BkmB,GACuC,EAED,EAI9C9B,YAAY8B,GAEJ3C,KAAKJ,iBAAiBiD,QAAQpmB,MAD9BkmB,GACuC,EAED,EAI9C7B,aAAa6B,GAEL3C,KAAKJ,iBAAiBkD,QAAQrmB,MAD9BkmB,GACuC,EAED,EAI9C5B,aAAatkB,EAAeM,EAAeC,GACvCgjB,KAAKD,gBAAgBxB,SAASK,EAAEniB,MAAQA,EAAQM,EAAQ,EACxDijB,KAAKF,gBAAgBvB,SAASwE,EAAEtmB,MAAQA,EAAQO,EAAS,EAG7DgkB,oBAAoB5B,EAAkBC,GAClCW,KAAKJ,iBAAiBoD,GAAGvmB,MAAQ,EAAM2iB,GAAY,EAAM/C,KAAK4G,IAAI,EAAK5D,IAG3E4B,QAAQhhB,GACJ+f,KAAKJ,iBAAiB3f,KAAKxD,MAAiB,UAATwD,EAAmB,EAAI,GCrX3D,MAAMijB,GAAgBA,CAACC,EAAkBC,KAC5C,MAAMC,GAAeF,EAAW,IAAM9G,KAAKiH,GAAK,IAC1CC,GAAuBH,EAAa,IAAM/G,KAAKiH,GAAK,IACpD/L,EAAI8E,KAAKmH,IAAIH,GAAehH,KAAKmH,IAAID,GACrC/L,EAAI6E,KAAKoH,IAAIJ,GAAehH,KAAKmH,IAAID,GACrCG,EAAIrH,KAAKoH,IAAIF,GAEnB,MAAO,CAAClH,KAAKsH,MAAU,IAAJpM,GAAW,IAAK8E,KAAKsH,MAAU,IAAJnM,GAAW,IAAK6E,KAAKsH,MAAU,IAAJD,GAAW,MAE3EE,GAAcC,IAuBpB,IAvBqB,YACxBC,EAAW,eACXC,EAAc,cACdC,EAAa,UACbC,EAAY,EAAC,cACbC,EAAgB,CAAC,IAAK,IAAK,KAAI,cAE/BC,EAAa,WACbf,EAAU,SACVD,EAAQ,aACRiB,GAAe,EAAE,aACjBC,EAAe,GAYlBR,EACG,MAAMS,EAAMR,EAAY5I,WAAW,MAEnC,IAAKoJ,EAAK,OAGV,MAAMtnB,EAAuB,OAAd+mB,QAAc,IAAdA,IAAkBD,EAAY9mB,OACvCD,EAAqB,OAAbinB,QAAa,IAAbA,IAAiBF,EAAY/mB,MAGrC4gB,EADY2G,EAAIC,aAAa,EAAG,EAAGxnB,EAAOC,EAAQ,CAAEwnB,oBAAoB,IACvD7G,KAEjB8G,EAAkDN,IAE3B,kBAAff,GAA+C,kBAAbD,EACtCD,GAAcE,EAAYD,GAC1B,CAAC,EAAG,EAAG,IACXuB,EAAoBrI,KAAKsI,KAAKF,EAAsB,IAAM,EAAIA,EAAsB,IAAM,EAAIA,EAAsB,IAAM,GAC1HG,EAA0B,CAC5BH,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,GAG/B,GAAK/G,EAEL,IAKI,MAAMkH,EAAiB,IAAIC,kBAAkB/nB,EAAQC,GACrD,IAAK,IAAIoQ,EAAI,EAAGA,EAAIuQ,EAAK7B,OAAQ1O,GAAK,EAC7BuQ,EAAKvQ,IAAMuQ,EAAKvQ,EAAI,IAAMuQ,EAAKvQ,EAAI,IAAMuQ,EAAKvQ,EAAI,GACnDyX,EAAezX,EAAI,GAAK,EAExByX,EAAezX,EAAI,GAAK,EAGhC,MAAM2X,EAAc5J,GAAkBwB,KAAQkI,EAAgB,CAAC7nB,EAAQD,KACjEioB,EAAMD,EAAYlJ,MAAM,GAAIoJ,EAASF,EAAYlJ,MAAM,GACvDqJ,EAAe,IAAIJ,kBAAkB/nB,EAAQC,EAAS,GAGtDmoB,EAAuB9I,KAAK+I,MAAM,IAAMnB,GAC9C,IAAK,IAAIhH,EAAW,EAAGA,EAAW+H,EAAK/H,IACnC,IAAK,IAAIoI,EAAW,EAAGA,EAAWJ,EAAQI,IAAY,CAClD,MAAMC,EAA+C,GAA/BrI,EAAWlgB,EAAQsoB,GACnCE,EAAcR,EAAY3H,IAAIH,EAAUoI,GAE9CH,EAAaI,GAAgBC,EAAcJ,EAC3CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAqB,IAAhBC,EAAoB,EAAI,IAKjE,MAAMC,EAAkBzK,SAASC,cAAc,UAC/CwK,EAAgBzoB,MAAQA,EACxByoB,EAAgBxoB,OAASA,EACzBwoB,EAAgBtK,WAAW,MAAMuK,aAC7B,IAAIC,UAAUR,EAAcnoB,EAAOC,GACnC,EACA,GAMJ,MAAM2oB,EAAkB5K,SAASC,cAAc,UAC/C2K,EAAgB5oB,MAAQA,EACxB4oB,EAAgB3oB,OAASA,EACU,IAAIsiB,GAAkBP,KAAqC4G,GACnEzF,MAAMsF,EAAiB,CAC9CrG,UAAW,EACXE,MAAO,EACPD,SAAU,IACVJ,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBjf,KAAM6e,KAMV,MAAM8G,EAAwB7K,SAASC,cAAc,UACrD4K,EAAsB7oB,MAAQA,EAC9B6oB,EAAsB5oB,OAASA,EAE/B,MAAM6oB,EAAyBD,EAAsB1K,WAAW,MAChE2K,EAAuBC,UACnBH,EACA,EACA,EACA5oB,EACAC,GAEJ,MAAM+oB,ECzIiBC,EAC3BC,EACAlpB,EACAC,EACAkpB,EACAC,EACAC,KAEA,MAAMC,EAAS,IAAIvB,kBAAkB/nB,EAAQC,EAAS,GAChDspB,EAAQjK,KAAK+I,MAAMc,EAAW,GAGpC,SAASK,EAAchP,EAAWC,EAAWgP,EAAYC,GACrD,OAAOpK,KAAKqK,OAAOnP,EAAIiP,IAAO,GAAKhP,EAAIiP,IAAO,IAAM,EAAIL,GAAc,IAI1E,SAASO,EAAYC,EAAYC,GAC7B,OAAOxK,KAAKqK,OAAOE,EAAKC,IAAO,IAAM,EAAIV,GAAc,IAI3D,IAAK,IAAI3O,EAAI,EAAGA,EAAIxa,EAAQwa,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIxa,EAAOwa,IAAK,CAC5B,IAAIuP,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAGzC,IAAK,IAAIC,GAAMZ,EAAOY,GAAMZ,EAAOY,IAC/B,IAAK,IAAIC,GAAMb,EAAOa,GAAMb,EAAOa,IAAM,CACrC,MAAMC,EAAK7P,EAAI4P,EACTE,EAAK7P,EAAI0P,EAGf,GAAIE,GAAM,GAAKC,GAAM,GAAKD,EAAKrqB,GAASsqB,EAAKrqB,EAAQ,CACjD,MAAMsqB,EAAgC,GAAjB9P,EAAIza,EAAQwa,GAC3BgQ,EAAoC,GAAnBF,EAAKtqB,EAAQqqB,GAG9BI,EAAUvB,EAAUqB,GACpBG,EAAUxB,EAAUqB,EAAc,GAClCI,EAAUzB,EAAUqB,EAAc,GAClCK,EAAY1B,EAAUsB,GACtBK,EAAY3B,EAAUsB,EAAgB,GACtCM,EAAY5B,EAAUsB,EAAgB,GAQtC7W,EALU6V,EAAca,EAAIC,EAAI9P,EAAGC,GAC1BmP,EAAYa,EAASG,GACrBhB,EAAYc,EAASG,GACrBjB,EAAYe,EAASG,GAKpCf,GAAQa,EAAYjX,EACpBqW,GAAQa,EAAYlX,EACpBsW,GAAQa,EAAYnX,EACpBuW,GAAQvW,GAMpB,MAAMoX,EAAgC,GAAjBtQ,EAAIza,EAAQwa,GACjC8O,EAAOyB,GAAehB,EAAOG,EAC7BZ,EAAOyB,EAAc,GAAKf,EAAOE,EACjCZ,EAAOyB,EAAc,GAAKd,EAAOC,EACjCZ,EAAOyB,EAAc,GAAK7B,EAAU6B,EAAc,GAI1D,OAAOzB,GDkEkBL,CACjBH,EAAuBtB,aAAa,EAAG,EAAGxnB,EAAOC,GAAQ2gB,KACzD5gB,EACAC,EACA,EACA,GACA,IAQE+qB,EAAa,IAAIjD,kBAAkB/nB,EAAQC,EAAS,GAC1D,IAAK,IAAIgrB,EAAW,EAAGA,EAAWrK,EAAK7B,OAAQkM,GAAY,EAAG,CAC1D,IAAIZ,EAAMrB,EAAaiC,GAAY,MAAS,EACxCX,EAAMtB,EAAaiC,EAAW,GAAK,MAAS,EAC5CC,EAAMlC,EAAaiC,EAAW,GAAK,MAAS,EAChD,MAGME,GAHgBd,EAAKxC,EAAwB,GAC7CyC,EAAKzC,EAAwB,GAC7BqD,EAAKrD,EAAwB,IACO,GAAKvI,KAAK8L,IAAI/D,GAAgB/H,KAAK8L,IAAI9D,IAC3E+D,EAAY/L,KAAKC,IAAI8H,EAAc/H,KAAKoB,IAAIyK,EAAmB7D,IAGrE0D,EAAWC,GAAY3L,KAAKsH,MAAMhG,EAAKqK,GAAY9D,EAAc,GAAKkE,GACtEL,EAAWC,EAAW,GAAK3L,KAAKsH,MAAMhG,EAAKqK,EAAW,GAAK9D,EAAc,GAAKkE,GAC9EL,EAAWC,EAAW,GAAK3L,KAAKsH,MAAMhG,EAAKqK,EAAW,GAAK9D,EAAc,GAAKkE,GAC9EL,EAAWC,EAAW,GAAKrK,EAAKqK,EAAW,GAG/C,OAAO,IAAItC,UAAUqC,EAAYhrB,EAAOC,GAC1C,MAAOqrB,GAEL,OADAC,QAAQC,MAAM,gCAAiCF,GACxC,OE3KFG,GAAgB,SACzBC,EACAC,GAEE,IADFC,EAAkBxI,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAIyI,SAAiBC,IACxBC,YAAW,KACP,GAAKL,EAAYM,SAAYL,EAEzB,IACID,EAAYM,QAAQC,QAAOC,IACvB,GAAKA,EACA,CACD,MAAMC,EAAMC,IAAIC,gBAAgBH,GAChC,GAAKC,EACA,CACD,MAAMG,EAAQ,IAAIC,MAClBD,EAAM/mB,IAAM4mB,EACZG,EAAME,OAAS,KACXb,EAAU5C,UAAUuD,EAAO,EAAG,GAC9BF,IAAIK,gBAAgBN,GACpBL,GAAQ,IAEZQ,EAAMI,QAAU,KACZN,IAAIK,gBAAgBN,GACpBL,GAAQ,SAXNA,GAAQ,QAHXA,GAAQ,MAmBzB,MAAOR,GAELK,EAAU5C,UAAU2C,EAAYM,QAAS,EAAG,GAC5CT,QAAQC,MAAMF,GACdQ,GAAQ,QA3BwBA,GAAQ,KA8BpC,GAAbF,OCxBEe,GAAmBC,GACN,gBAAfA,EAAK9sB,QAA4B+sB,GAAaD,GAE5CC,GAAgBD,GACH,UAAfA,EAAK9sB,OAAoC,SAAf8sB,EAAK9sB,OAAmC,gBAAf8sB,EAAK9sB,MAgBtDgtB,GAAwBhtB,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,GAAqC,SAAVA,GAA8B,cAAVA,EAA8B,OAC1E,QAGEitB,GAAoBjtB,IACrB+sB,GAAa,CAAE/sB,WAAYktB,GAAgBltB,GAG1CktB,GAAmBltB,GACrB,CAAC,OAAQ,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUmtB,SAASntB,G,kCC3C6hCotB,GAAY,SAAA5B,GAAI,IAAI7M,GAAG6M,EAAEA,EAAE6B,UAAU,EAAE7B,EAAEvM,OAAO,IAAIqO,MAAM,QAAK,GAAG9B,EAAE7M,EAAE,GAAG,EAAEA,EAAEM,OAAO,CAACN,EAAEA,EAAE,GAAL,qBAAqBA,GAArB,IAAQ,IAAI,EAAJ,0BAAQ4O,EAAR,QAAe/B,GAAGA,EAAEA,EAAE8B,MAAMC,IAAI7X,KAAK8V,EAAEgC,QAA/C,+BAAsD,OAAOC,GAAcjC,EAAE,IAAIiC,GAAc,SAACjC,GAAS,IAAP7M,EAAM,uDAAJ,EAAW4O,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOG,EAAE,SAAClC,EAAE7M,GAAH,OAAO6M,EAAEmC,QAAQ,IAAItX,OAAJ,WAAesI,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAA/B,aAAsCA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAK,SAAA6M,GAAC,OAAEA,IAAI7M,EAAE,GAAGA,EAAE,GAAGA,EAAE,OAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAE4O,EAAEtO,SAASN,EAAE6M,EAAEkC,EAAElC,EAAE+B,EAAE5O,SAAS,IAAIA,EAAE4O,EAAEtO,OAAON,KAAK6M,EAAEkC,EAAElC,EAAE+B,EAAE5O,IAAI,OAAO6M,GCExkD,MAsIMoC,GAAmBzpB,wBAAA,GAtI+D,CACpFsV,QAAS,KACTL,OAAQ,KACRpZ,MAAO,KACP0Z,KAAM,KACN1V,QAAS,CACL6pB,QAAS,KACT9rB,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEXwrB,SAAU,OACV1rB,UAAW,OACXC,WAAY,OACZF,SAAU,QAEdwX,OAAQ,KACRC,YAAa,KACbrM,IAAK,KACL+M,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXX,UAAW,MACXY,QAAS,CACLoT,QAAS,MACTnT,EAAG,MACHC,EAAG,MACHza,MAAO,MACPC,OAAQ,MACRya,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfC,WAAY,KACZE,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClBjX,eAAgB,MAChBkX,eAAgB,CACZ0S,QAAS,MACTnT,EAAG,MACHC,EAAG,MACHza,MAAO,MACPC,OAAQ,MACRya,KAAM,MACNC,OAAQ,OAEZ3Y,KAAM,KACN4X,cAAe,MACf6B,YAAa,CACTkS,QAAS,KACTjS,iBAAkB,OAClBpM,UAAW,MACXqM,OAAQ,OAEZC,cAAe,CACX+R,QAAS,KACTre,UAAW,MACXqM,OAAQ,OAEZ9B,UAAW,CACP8T,QAAS,KACTtlB,YAAa,OACb0R,gBAAiB,OACjBzR,UAAW,OACX7B,UAAW,OACXM,KAAM,OACNI,cAAe,OACfC,cAAe,OACflB,UAAW,OACXH,YAAa,OACbC,WAAY,OACZC,UAAW,OACX6T,kBAAmB,QACnBjT,UAAW,OACXG,YAAa,QACbgB,YAAa,QACbpB,UAAW,OACXT,QAAS,OACTK,OAAQ,OACRqB,WAAY,OACZH,YAAa,OACbE,cAAe,QACfD,cAAe,SAEnB4F,UAAW,KACXyM,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACTC,OAAQ,KACRtX,WAAY,KACZuX,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBvX,aAAc,MACdwX,YAAa,KACbK,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVzO,QAAS,MACT0O,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBC,aAAc,OAEgB,CAC9B+Q,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTnT,EAAG,MACHC,EAAG,MACHza,MAAO,MACPC,OAAQ,MACRya,KAAM,MACNC,OAAQ,SAQHqT,GAAmB,SAC5BpB,GAEE,IADFqB,EAA+B7K,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAGsK,GAElC,MAAMQ,EAAqC,GACrCC,EAAclqB,YAAA,GAAQ2oB,GAkB5B,OAhBAjnB,OAAOyoB,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBrP,MAAMsP,QAAQD,GAMrE,CACH,MAAME,EAAcR,EAAWK,GAEJ,kBAAhBG,IAA0BP,EAAcO,GAAeF,OATmB,CAAC,IAADG,EACrF,MAAMC,EAA6B,QAAvBD,EAAGT,EAAWK,UAAS,IAAAI,OAAA,EAApBA,EAAsBf,QAEjCgB,IACAT,EAAcS,GAAUX,GAAiBO,EAAYN,EAAWK,SASrEJ,GAGEU,GAAqB,SAC9BV,GAEE,IADFD,EAA+B7K,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAGsK,GAElC,MAAMmB,EAAwC,GAgB9C,OAfAlpB,OAAOyoB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwB7P,MAAMsP,QAAQO,GAOvC,MAA7Bb,EAAca,KACdF,EAAiBC,GAAWZ,EAAca,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAed,EAAcc,KAC7BH,EAAiBC,GAAWF,GAAmBV,EAAcc,GAAcf,EAAWa,SAQ3FD,GAEEI,GAAiC,SAC1Cf,GAEE,IADFD,EAA+B7K,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAGsK,GAElC,MAAMwB,EAAmD,kBAAlBhB,EACjCiB,KAAKC,MAAMlC,GAAYmC,mBAAmBnB,KAC1CA,EAEAoB,EAAuC,GAgB7C,OAfA3pB,OAAOyoB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwB7P,MAAMsP,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAcf,EAAWa,SAQhHQ,GAoBEC,GAAkB,SAAC3C,GAAwE,IAAD4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQ1M,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAGlG,YAE3D4S,EAASvW,QAChB,MAAMwW,EAAY9rB,wBAAA,CACd+Y,GAAIC,eACD6S,GACAlL,aAAMgI,IA0Bb,GAvBAmD,EAAatU,YAAWxX,wBAAA,GACjBiZ,KAAezB,aACfsU,EAAatU,aAGc,MAA9BsU,EAAanU,cACbmU,EAAanU,cAAa3X,YAAA,GACnBiZ,KAAetB,eAGtBmU,EAAanU,cAAa3X,wBAAA,GACnBiZ,KAAetB,eACfmU,EAAanU,eAII,MAAxBmU,EAAaxW,UAAiBwW,EAAaxW,QAAU,GAC9B,MAAvBwW,EAAa7W,SAAgB6W,EAAa7W,OAAS,OACrB,MAA9B6W,EAAa3U,gBAAuB2U,EAAa3U,cAAgB,QACpC,MAA7B2U,EAAa/rB,eAAsB+rB,EAAa/rB,aAAe,UACxC,MAAvB+rB,EAAatW,SAAgBsW,EAAatW,OAAS,IAEzB,MAA1BsW,EAAapW,YAAmBoW,EAAapW,UAAY,UACzDoW,EAAatW,OAAQ,CACrB,MAAMuW,EAAaD,EAAatW,OAE5BuW,EAAW/C,SAASjgB,KACpB+iB,EAAatW,OAASuW,EAAWC,QAAOxY,GAASA,IAAUzK,IAC3D+iB,EAAarW,YAAc,CAACqW,EAAapW,UAAWoW,EAAapW,UAAWoW,EAAapW,YAyDjG,GAtDKoW,EAAqBjC,UAAYlB,EAAKvf,MAAK0iB,EAAa1iB,IAAO0iB,EAAqBjC,gBACjFiC,EAAqBjC,QAExBiC,EAAqBhC,cAAgBnB,EAAKrS,UAASwV,EAAaxV,QAAWwV,EAAqBhC,oBAC7FgC,EAAqBhC,YAII,MAAZ,QAAjByB,EAACO,EAAa1iB,WAAG,IAAAmiB,IAAI,MAAYO,EAAa1iB,IAAM,IACnB,MAAZ,QAArBoiB,EAACM,EAAa3V,eAAO,IAAAqV,IAAI,MAAYM,EAAa3V,QAAU,IACzB,MAAZ,QAAvBsV,EAACK,EAAazV,iBAAS,IAAAoV,IAAI,MAAYK,EAAazV,UAAY,UACzC,MAAvByV,EAAa1V,SAAgB0V,EAAa1V,QAAS,GAED,mBAA1C0V,EAAajsB,QAAgB8pB,UAA4D,MAAlCmC,EAAajsB,QAAQ1B,YACpF2tB,EAAajsB,QAAQ1B,WAAc2tB,EAAajsB,QAAgB8pB,gBACxDmC,EAAajsB,QAAgB8pB,UAEzCmC,EAAajsB,QAAOG,wBAAA,GAAQrC,KAA4BmuB,EAAajsB,gBAC7DisB,EAAajsB,QAAgB8pB,SAEG,MAAZ,QAAxB+B,EAACI,EAAalV,kBAAU,IAAA8U,IAAI,MAAYI,EAAalV,WAAa,IAC1B,MAAZ,QAA5B+U,EAACG,EAAajV,sBAAc,IAAA8U,IAAI,MAAYG,EAAajV,eAAiB,IAChC,MAAZ,QAA9B+U,EAACE,EAAa/U,wBAAgB,IAAA6U,IAAI,MAAYE,EAAa/U,iBAAmB,UAChD,MAA9B+U,EAAahV,gBAAuBgV,EAAahV,eAAgB,GACnC,MAA9BgV,EAAanV,gBACTmV,EAAalV,YAAckV,EAAajV,gBAAkBiV,EAAajsB,QAAQ7B,YAEnF8tB,EAAanV,eAAgB,GAEjCmV,EAAa9U,eAAchX,wBAAA,GT1SD,CAC1BuW,EAAG,EACHC,EAAG,EACHza,MAAO,IACPC,OAAQ,KACRya,KAAM,IACNC,OAAQ,ISsSDoV,EAAa9U,gBAGO,MAAvB8U,EAAa5U,QAAyC,SAAvB4U,EAAajwB,QAC5CiwB,EAAa5U,QAAS,GAGrB4U,EAAqBG,cAAgBtD,EAAKpQ,iBAAgBuT,EAAavT,eAAkBuT,EAAqBG,oBAC3GH,EAAqBG,iBACO7M,IAAhC0M,EAAavT,iBAA8BuT,EAAavT,gBAAiB,GAExEuT,EAAqBlC,WAAajB,EAAK3Q,WAAU8T,EAAa9T,SAAY8T,EAAqBlC,iBAC5FkC,EAAqBlC,SAExBkC,EAAapT,kBAAiBoT,EAAapT,gBvBhSA,EAChD,EACA,WACA,EACA,YuB6RKoT,EAAanT,oBAAmBmT,EAAanT,kBvBjSF,EAChD,EACA,WACA,EACA,YuB8RKmT,EAAarT,gBAAeqT,EAAarT,cvBlSE,EAChD,EACA,WACA,EACA,YuB+RKqT,EAAatT,gBAAesT,EAAatT,cvBnSE,EAChD,EACA,WACA,EACA,YuBgSKsT,EAAalT,iBAAgBkT,EAAalT,evBpSC,EAChD,EACA,WACA,EACA,YuBiS6C,qBAAlCkT,EAAa3T,mBAAkC2T,EAAa3T,kBAAmB,GACjD,qBAA9B2T,EAAazT,eAA8ByT,EAAazT,cAAe,GAC7EyT,EAAa5V,gBAAe4V,EAAa5V,cAAgB,QAEjC,IAAzB4V,EAAaxW,SAA0C,IAAzBwW,EAAaxW,QAAe,CAC1DwW,EAAaxW,QAAU,EAEvB,MAAM,cAAE6B,EAAa,WAAEvX,EAAU,IAAEkY,EAAG,IAAEC,EAAG,OAAEb,EAAM,QAAED,EAAO,MAAEpb,GAAUiwB,EAMlEI,EAAYtD,GAAa,CAAE/sB,WACO,SAAlBsb,GAA4BvX,KACzCkY,GAAOC,GAAQb,GAAUD,EAAQ6D,QACpCoR,KAGFJ,EAAahU,IAAM,GACnBgU,EAAa/T,IAAM,IAI3B,OAAO+T,GAGEK,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,EACpB,MAAO/E,GAEL,OADAC,QAAQC,MAAMF,IACP,IAGFgF,GAA6BD,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,EACjB,MAAO/E,GAEL,OADAC,QAAQC,MAAMF,IACP,IAIFiF,GAA4BA,CACrC3D,EACA4D,KAEA,GAAuB,YAAnB5D,EAAKtS,WAA4BsS,EAAKhS,eAA2C,YAA1BgS,EAAK5R,iBAC5D,MAAO,CACHyV,WAAW,EACXtsB,OAAQ6pB,GAAiBpB,IAIjC,MAAMuB,EAAclqB,wBAAA,GAAQ2oB,GAAI,IAAExS,QAAS,GAAIU,eAAgB,KAE/D,MAAO,CACH2V,WAAW,EACXtsB,OAAQ6pB,GAAiBG,KAK3BuC,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiCtR,KAAK8L,IAAIuF,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBC,GAAkBA,CAACC,EAAmCC,KACxD,MACIpW,OAAQqW,EACR/wB,OAAQgxB,EACRjxB,MAAOkxB,EACP1W,EAAG2W,EACH1W,EAAG2W,EACH1W,KAAM2W,GACE,OAARP,QAAQ,IAARA,IAAY,IAEZnW,OAAQ2W,EACRrxB,OAAQsxB,EACRvxB,MAAOwxB,EACPhX,EAAGiX,EACHhX,EAAGiX,EACHhX,KAAMiX,GACG,OAATZ,QAAS,IAATA,IAAa,GAEjB,OAAOL,GAAqBM,EAAYM,IACjCZ,GAAqBO,EAAYM,IACjCb,GAAqBQ,EAAWM,IAChCd,GAAqBS,EAAOM,IAC5Bf,GAAqBU,EAAOM,IAC5BL,IAAaM,GAGXC,GAAkBA,CAACC,EAAwBC,KACpD,MACIvX,QAASwX,EACT9W,eAAgB+W,GAEhBH,EADGI,EAASC,YACZL,EAAQ,+BAERtX,QAAS4X,EACTlX,eAAgBmX,GAEhBN,EADGO,EAASH,YACZJ,EAAS,8BAEb,OAAOQ,aAAOL,EAAWI,IAClBxB,GAAgBkB,EAAaI,IAC7BtB,GAAgBmB,EAAoBI,ICzblCG,GAAqBvwB,IAC9B,IACI,OAAOA,EACNwwB,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,MACxD,MAAOlH,GAEL,OADAC,QAAQC,MAAMF,GACPtpB,IAGFywB,GAAuB5W,IAChC,IACI,OAAOA,EACF2W,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,MAC5D,MAAOlH,GAEL,OADAC,QAAQC,MAAMF,GACPzP,IAIF6W,GAAqBC,IAC9B,IACI,OAAOA,EAAKC,WAAW,sDACzB,MAAOtH,GAEL,OADAC,QAAQC,MAAMF,IACP,ICxBFuH,GAAeA,CAAC7wB,EAAckqB,EAAYhpB,KACnD,MAAMyvB,EAAO3U,SAASC,cAAc,KAEpC0U,EAAKG,SAAW9wB,EAChB2wB,EAAKI,KAAOC,OAAO5G,IAAIC,gBAAgBH,GACvCyG,EAAKM,QAAQC,YAAc,CAAChwB,EAAMyvB,EAAKG,SAAUH,EAAKI,MAAMvd,KAAK,KAEjE,MAAM2d,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAML,OACNM,SAAS,EACTC,YAAY,IAGhBZ,EAAKa,cAAcL,GACnBR,EAAKc,UCFHC,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACpvB,GAAU,QAETqvB,GAAqBruB,OAAOmP,QAAQ4e,IAAa/mB,QAA+B,CAACC,EAAKC,KACxF,MAAOonB,EAAaC,GAAYrnB,EAGhC,OAFAD,EAAIsnB,GAAYD,EAETrnB,IACR,IAEGunB,GAAqC,CACvC5pB,MAAO,QACPD,OAAQ,SACRb,MAAO,SAEL2qB,GAAoBzuB,OAAOmP,QAAQqf,IAAYxnB,QAAqC,CAACC,EAAKC,KAC5F,MAAOonB,EAAaC,GAAYrnB,EAGhC,OAFAD,EAAIsnB,GAAYD,EAETrnB,IACR,IAEGynB,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsBpvB,OAAOmP,QAAQuf,IAAc1nB,QAA+B,CAACC,EAAKC,KAC1F,MAAOonB,EAAaC,GAAYrnB,EAGhC,OAFAD,EAAIsnB,GAAYD,EAETrnB,IACR,IAEGooB,GAAmC,CACrC1yB,OAAQ,SACRuZ,OAAQ,SACRoZ,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLzC,KAAM,OACN0C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChB5qB,KAAM,QACN,cAAe,SAEb6qB,GAAkB7vB,OAAOmP,QAAQkgB,IAAUroB,QAA+B,CAACC,EAAKC,KAClF,MAAOonB,EAAaC,GAAYrnB,EAGhC,OAFAD,EAAIsnB,GAAYD,EAETrnB,IACR,IAEG6oB,GAA0G,CAC5G,OAAU,CACNnvB,IAAK,IAET,KAAQ,CACJA,IAAK,SACLvE,KAAM,QAEV,OAAU,CACNuE,IAAK,wBACLvE,KAAM,iBACN4X,UAAW,SAEf,MAAS,CACLrT,IAAK,eACLvE,KAAM,QACN4X,UAAW,SAEf,QAAW,CACPrT,IAAK,uBACLvE,KAAM,WACN4X,UAAW,QACXF,OAAQ,CAAC,WAGXic,GAAY/vB,OAAOmP,QAAQ2gB,IAAkB9oB,QAA+B,CAACC,EAAKC,KACpF,MAAO8oB,EAAW1B,GAAepnB,EAGjC,OAFAD,EAAIqnB,EAAY3tB,KAAOqvB,EAEhB/oB,IACR,IAWUgpB,GAA2BA,CACpChJ,EACAiJ,KAEA,MAAM,KACF7zB,EAAI,KACJkY,EAAI,YACJsB,EAAW,UACXxB,EAAS,OACT6B,EAAM,IACNE,EAAG,IACHC,EAAG,IACH3O,EAAG,QACH+M,EAAO,UACPE,EAAS,SACT2B,EAAQ,QACRM,EAAO,UACPhP,EAAS,MACTuO,EAAK,eACLT,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,aAChBtX,EAAY,WACZH,EAAU,QACVqX,EAAO,MACPpb,EAAK,aACLgd,EAAY,UACZjD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTF,GACAmT,EACEkJ,EAAiBvD,GAAkBvwB,GACnC+zB,EAAmBtD,GAAoB5W,GACvCma,EAA2BvD,GAAoBpX,GAC/C4a,EAAiBvC,GAAY1Z,GAC7Bkc,EAAsB7B,GAAa9mB,GACnC4oB,EAAkBnB,GAASl1B,GAC3Bs2B,EAAqC,eAAlBxc,EACnB8b,GACE,CACI7b,EAAUrT,OACVmT,EACAF,EAAOjE,KAAK,MACdA,KAAK,MAET,SACNsR,EAAkD,OAAZhK,QAAY,IAAZA,IAAgB,IAAhD,SAAEhb,EAAQ,OAAEu0B,GAAiBvP,EAANwP,EAAIpE,YAAApL,EAAA,uBAsDjC,MAAO,CACH2J,UArDYzuB,IAAS8zB,GAClBja,IAAWka,GACX1a,IAAmB2a,QACA3S,IAAnB4S,QACwB5S,IAAxB6S,QACoB7S,IAApB8S,QACqB9S,IAArB+S,EAgDHjyB,OA/CQF,YAAA,CACRsV,QAAS,QACTvX,KAAM8zB,EACNxT,MAAM,GAAD9c,OAAK0U,GACVhX,KAAMsY,EAAYhG,KAAK,KACvBpQ,KAAoB,OAAd6wB,QAAc,IAAdA,IAAkB,GACxBpa,OAAQka,EACRha,MACAC,MACAua,OAAQta,EACRua,UAAWja,EACXhP,UAA8B,OAAnB2oB,QAAmB,IAAnBA,IAAuB,OAClClZ,GAAIlB,EACJha,SAAQmC,YAAA,CACJwyB,QAAS5yB,EACTgY,OAAQma,EACRU,KAAMnb,EACNob,IAAKrb,EACLsb,QAASzC,GAAWnwB,GACpB6yB,gBAAgB,GACb/0B,GAEPg1B,QAAS,SACTnE,KAAM,CACFoE,UAAS7b,EAAQ+R,SAAS,KAC1B+J,YAAW9b,EAAQ+R,SAAS,KAC5BgK,WAAU/b,EAAQ+R,SAAS,KAC3BiK,aAAYhc,EAAQ+R,SAAS,KAC7BkK,cAAajc,EAAQ+R,SAAS,KAC9BmK,aAAYlc,EAAQ+R,SAAS,KAC7BoK,eAAcnc,EAAQ+R,SAAS,KAC/BqK,cAAapc,EAAQ+R,SAAS,MAElCsK,OAAuB,OAAfpB,QAAe,IAAfA,IAAmB,SAC3BS,QAA0B,UAAjB5yB,EAA2B,QAAU,SAC9CqyB,OAAwB,OAAhBD,QAAgB,IAAhBA,IAAoBC,EAE5B9vB,MAAOsvB,EACDA,EAAO2B,UAAU,cACH,YAAdld,EACIF,EACA/M,GACPipB,KCtML5C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACpvB,GAAU,QAETqvB,GAAqBruB,OAAOmP,QAAQ4e,IAAa/mB,QAA+B,CAACC,EAAKC,KACxF,MAAOonB,EAAaC,GAAYrnB,EAGhC,OAFAD,EAAIsnB,GAAYD,EAETrnB,IACR,IAaGmoB,GAAsBpvB,OAAOmP,QAXU,CACzCwf,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6CnoB,QAA+B,CAACC,EAAKC,KAC1F,MAAOonB,EAAaC,GAAYrnB,EAGhC,OAFAD,EAAIsnB,GAAYD,EAETrnB,IACR,IAqBG4oB,GAAkB7vB,OAAOmP,QAnBU,CACrCxS,OAAQ,SACRuZ,OAAQ,SACRoZ,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLzC,KAAM,OACN0C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfkC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+BnrB,QAA+B,CAACC,EAAKC,KAClF,MAAOonB,EAAaC,GAAYrnB,EAGhC,OAFAD,EAAIsnB,GAAYD,EAETrnB,IACR,IAEGmrB,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6BpL,IAAgE,IAAD9F,EAAAmR,EAAAC,EACrG,MAAM,IACFnc,EAAG,UACHxO,EAAS,YACT4qB,EAAW,UACXC,EAAS,IACTpc,EAAG,KACHqc,EAAI,UACJ3uB,EAAS,GACTsT,EAAE,MACFsF,EAAK,aACLgW,EAAY,KACZt2B,EAAI,UACJu2B,EAAS,KACTC,EAAI,MACJhb,EAAK,SACLib,EAAQ,QACRC,EAAO,YACPC,GACA/L,EACEqJ,EAAiBjC,GAAmBwE,GACpCtC,EAAsBnB,GAAoBxnB,IACzC4oB,EAAiByC,GAAYpD,GAAgB9rB,GAAW0jB,MAAM,KAG/DyL,EAA6F,QAAtE/R,EAAIwR,EAAeA,EAAa9F,WAAW,WAAY,SAAMnP,SAAS,IAAAyD,IAC3FuR,EAAOA,EAAK7F,WAAW,WAAY,IAAM,GAE3CsG,EAAwBD,EAAwBzL,MAAM,MACtD2L,ENpJ4BnM,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACFK,SAASL,EAAK9sB,OM4IgBk5B,CAAsB,CAClDl5B,MAAsB,OAAfq2B,QAAe,IAAfA,IAAmB,YACxB2C,EAAsB/Z,OAAS,EAC/B,CAAC,IAADvZ,OACMszB,EAAsB,GAAGtG,WAAW,KAAM,IAAG,QAC9CsG,EAAsB9Z,MAAM,IACjCxJ,KAAK,MACLqjB,EACA7C,EAA2BuC,EAC3BA,EAAU/F,WAAW,WAAY,IACjC,GACAyG,EAAYd,EAAY,GAAGe,kBAE3BpJ,EAAW5S,KAqCjB,MAAO,CACHuT,WAAW,EACXtsB,OAtCcF,wBAAA,GACX6rB,GAAQ,IACX9tB,OACA+Z,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAAvW,OAAMuW,GACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAAxW,OAAMwW,GACpC,IACNzO,UAA8B,OAAnB2oB,QAAmB,IAAnBA,IAAuB9xB,EAClCyX,OAAQkd,EACR/e,UAAyB,OAAdic,QAAc,IAAdA,IAAkBtxB,EAC7BmX,MAAgD,QAA3Cmc,EAAiC,QAAjCC,EAAEE,EAAUA,EAAUrZ,OAAS,UAAE,IAAAmZ,OAAA,EAA/BA,EAAiCiB,gBAAQ,IAAAlB,IAAI,GACpDn4B,MAAsB,OAAfq2B,QAAe,IAAfA,IAAmB,SAC1Bjc,KAAoB,SAAdxQ,GAAwBgvB,EAAUA,EAAUpW,EAClD9G,YAAaid,IAEO,UAAd/uB,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACd2D,IAAK4rB,EACL3e,UAAW,SACXC,QAAOtW,wBAAA,GACA6rB,EAASvV,SAAO,IACnBE,EAAG,IAEPU,OAA4B,SAApBgb,GAA8BjX,MAAMsP,QAAQmK,GACpDzd,SAAqB,OAAXyd,QAAW,IAAXA,IAAe,IAAInhB,KAAI4hB,GAAUrB,GAAeqB,KAC1Dv1B,WAAyB,aAAb+0B,EACZrd,kBAA4B,MAATiC,EAAgB,IAAG,GAAAhY,OAAMgY,GAC5ClC,iBAA2B,MAATkC,EAAgB,IAAG,GAAAhY,OAAMgY,GAC3CnC,eAAgB2a,EAChB/Z,SAAU,GAAAzW,OAAGwX,GAAKqc,SAAS,EAAG,KAC9B9c,QAAS7H,GAAa7I,IAAI,OCvNlC,IAAMytB,GAA0B,IA4BnBC,GAAkB,WAA+D,IAA9DC,EAA6D,uDAA9C,EAAGC,EAA2C,uDAA5BH,GACzD5Y,EAAM8Y,EACNja,EAAMka,EACNC,EAASna,EACToa,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IACZC,EAA0B,GAExBC,EAAgB,WAQlB,OAPkB,IAAdF,EAAiBpgB,KAEjBigB,GAAUG,EAEVH,GADAG,GAAaC,GAIVxa,KAAKoB,IAAIgZ,EAAQna,IAGtBya,EAAa,WAIf,OAFAJ,GAAgB,EADhBF,GAAUG,GAMRlW,EAAQ,WAA6C,IAA5C6V,EAA2C,uDAA5B9Y,EAAK+Y,EAAuB,uDAARla,EAC9CmB,EAAM8Y,EACNja,EAAMka,EACNC,EAASD,EACTG,EAAe,GACfC,EAAY,IACZF,EAAgBF,GAGdQ,EAAY,kBAAMP,GAClBQ,EAAY,SAACC,GAAD,OAAuBT,EAASS,GAE5CC,EAAmB,eAACC,EAAD,uDAAeX,EAAf,OAA0BC,EAAgBU,GAC7DC,EAAmB,kBAAMX,GACzBY,EAAqB,WAGvB,OADAX,GAAgB,EADhBF,EAASC,GAKPa,EAAkB,kBAAMZ,GACxBngB,EAAS,kBAAMmgB,GAAgB,GAErC,MAAO,CACHjW,QACAqW,aACAD,gBACAtgB,SACAwgB,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIKC,GAAW,SACpBC,GAKA,IAHE,IADFlB,EACC,uDADc,IAEXmB,EAAkBrB,GAChBsB,EAAYrB,KACXqB,EAAUJ,mBAAqB,GAAG,CACrC,GAAII,EAAUJ,mBAAqB,EAAG,CAElC,IAAMK,EAAcD,EAAUX,YAE9BU,EAAkBE,EAClB,MAEA,IAAMC,EAAUJ,EAAOE,EAAUX,aAEjC,IAAKa,GAAWF,EAAUX,YAAc,EAEpCW,EAAUZ,iBACP,CAEH,GAAIY,EAAUX,cAAgBX,GAAyB,MAClDqB,EAAkBC,EAAUb,iBAQ7C,IAAMgB,EAAezb,KAAKC,IAAIia,EAAcla,KAAKoB,IAAIia,EAAiBrB,KAEtE,OADIyB,IAAiBJ,GAAiBD,EAAOK,GACtCA,GC1HJ,MAAMC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,GACb,IAAItnB,EAASunB,EACTxd,EAAQyd,EACRhc,EAA6C,kBAAhBic,EAAwB,GAAA51B,OAAM41B,EAAW,MAAOA,EAC7EE,EAAsC,kBAAhBF,EAA2BA,EAAcG,WAAWH,EAAY5I,WAAW,KAAM,KACvGgJ,EAASH,EAEb,MAAO,CACHI,QAASA,IAAA,GAAAj2B,OAAS,CAACkY,EAAO/J,EAAQwL,EAAMqc,GAAQvL,QAAOyL,GAAiB,KAATA,IAAalmB,KAAK,KAAI,WACrFmmB,YAAaA,KAAA,CAASje,QAAOyB,OAAMqc,SAAQF,eAAc3nB,WACzDioB,UAAUC,GAEN,OADAloB,EAASkoB,EACF5Y,MAEX6Y,SAASC,GAEL,OADAre,EAAQqe,EACD9Y,MAEXS,QAAQsY,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASV,GACTU,EAON,OANA7c,EAAiC,kBAAnB8c,EAA2B,GAAAz2B,OAChCy2B,EAAc,MACjBA,EACNX,EAAyC,kBAAnBW,EAChBA,EACAV,WAAWU,EAAezJ,WAAW,KAAM,KAC1CvP,MAEXiZ,UAAUC,GAEN,OADAX,EAASW,EACFlZ,QAKNmZ,GAAiBtV,IAMT,IANU,UAC3BuV,EAAS,UACTtuB,GAIH+Y,EACG,MAAO,CACHjZ,YAAayR,KAAKsH,MAAMyV,EAAYtuB,EAAY,IAChD1D,SAAUgyB,EAAYtuB,EAAY,GAClCD,WAAYuuB,EAAYtuB,EACxBA,YACAC,aAAc,IAGTsuB,GAAoBA,CAACvsB,EAAoBwsB,IAClDt4B,wBAAA,GACO8L,GAAQ,IACXR,SAAU,IACHQ,EAASR,SACZ6sB,GAAeG,M,cCnEdC,GAA4B,kBAAoBC,G9Bc1C,4C8BZNC,GAAmB,SAACC,GAAD,OAA4B,OAACA,QAAD,IAACA,IAAW,IACnEnlB,KAAI,gBAAGjT,EAAH,EAAGA,MAAOq4B,EAAV,EAAUA,OAAV,gBAA0BA,EAA1B,YAAoCr4B,MAASiR,KAAK,MAC9CinB,GAAe,SAAfA,EAAgBI,GAAD,OAA+CA,EACrEA,EAAmBzP,MAAM,KACtB5V,KAAI,SAACC,EAAO8G,GAAW,IAAD,EACK9G,EAAM2V,MAAM,KADjB,oBACZwP,EADY,KAGnB,MAAO,CAAEr4B,MAHU,KAGHq4B,SAAQ5f,GAAIuB,EAAQ,MAE1Cke,E9BGa,4C+BfNK,GAAa,WAA6B,IAAD,EAC5BC,mBAAS,GADmB,oBAC3CC,EAD2C,KACtCC,EADsC,KAMlD,MAAO,CAJSC,uBAAY,WACxBD,GAAO,SAAApwB,GAAG,OAAIA,EAAM,OACrB,IAEcmwB,ICRd,IAAMG,GAAqB,SAAC,GAgB5B,IAfHC,EAeE,EAfFA,MACAC,EAcE,EAdFA,aAcE,IAbFC,uBAaE,SAZFC,EAYE,EAZFA,SACAC,EAWE,EAXFA,UACAC,EAUE,EAVFA,SACAC,EASE,EATFA,WAUA,MAAO,CACHC,SAAU,EACVC,QAAS,WACDR,GAAO7R,QAAQsS,KAAK,mBAAoBT,GAC5CG,EAAS,IAEbO,OAAQ,WACAV,GAAO7R,QAAQsS,KAAK,kBAAmBT,GAC3CG,GAAU,IAEdQ,UAAW,SAACzS,GACJgS,GAAiBhS,EAAEgS,kBACnBF,GAAO7R,QAAQsS,KAAK,qBAAsBT,EAAO9R,EAAEhlB,MAC/B,KAAV,OAAVo3B,QAAU,IAAVA,OAAA,EAAAA,EAAapS,MACH,eAAVA,EAAEhlB,KAAkC,cAAVglB,EAAEhlB,KAC5BglB,EAAE0S,iBACFT,GAAS,SAAA1wB,GAAG,OAAIyS,KAAKC,IAAI,EAAG8d,EAAexwB,EAAM,GAAKwwB,MAEvC,cAAV/R,EAAEhlB,KAAiC,YAAVglB,EAAEhlB,KAChCglB,EAAE0S,iBACFT,GAAS,SAAA1wB,GAAG,OAAIyS,KAAKC,IAAI,EAAG8d,EAAexwB,EAAM,GAAKwwB,MAEvC,UAAV/R,EAAEhlB,KAA6B,MAAVglB,EAAEhlB,IAC5Bk3B,IAEe,WAAVlS,EAAEhlB,MACC,OAARm3B,QAAQ,IAARA,YC3CT,MCEMQ,GAAsBA,CAACC,EAAgC1gB,KAChE,MAAM,aACFlS,EAAY,SACZC,EAAQ,UACRF,EAAS,cACTG,GACA0yB,EAEJ,OAAAj6B,wBAAA,GACOi6B,GAAc,IACjB5yB,aAAcA,EAAekS,EAC7BjS,SAAUA,EAAWiS,EACrBnS,UAAWA,EAAYmS,EACvBhS,cAAwC,kBAAlBA,EAA6BA,EAAgBgS,EAAQhS,KAItE2yB,GAAsBA,CAACC,EAA8C5gB,IACvE4gB,EAAW5mB,KAAI9X,GAASA,EAAQ8d,IAG9B6gB,GAAoBA,CAC7BC,EACA9gB,KAEA,MAAM,qBACF5P,EAAoB,aACpBI,EAAY,YACZH,EAAW,SACXxD,EAAQ,gBACR8D,EAAe,gBACfgG,EAAe,WACfrG,EAAU,QACVQ,EAAO,mBACPC,EAAkB,kBAClByF,GACAsqB,EAEJ,OAAAr6B,wBAAA,GACOq6B,GAAY,IACf1wB,qBAAsD,kBAAzBA,EAAoCA,EAAuB4P,OAAQ6F,EAChGrV,aAAsC,kBAAjBA,EAA4BA,EAAewP,OAAQ6F,EACxExV,YAAaA,EAAc2P,EAC3BnT,SAAUA,EAAWmT,EACrBrP,gBAA4C,kBAApBA,EAA+BA,EAAkBqP,OAAQ6F,EACjFlP,gBAA4C,kBAApBA,EAA+BA,EAAkBqJ,OAAQ6F,EACjFvV,WAAYA,EAAa0P,EACzBlP,QAA4B,kBAAZA,EAAuBA,EAAUkP,OAAQ6F,EACzD9U,mBAAkD,kBAAvBA,EAAkCA,EAAqBiP,OAAQ6F,EAC1FrP,kBAAgD,kBAAtBA,EAAiCA,EAAoBwJ,OAAQ6F,KAIlFkb,GAAgBA,CAACxuB,EAAoByN,IAC9CvZ,wBAAA,GACO8L,GAAQ,IACXR,SAAUQ,EAASR,SAASiI,KAAIC,GACrB4mB,GAAkB5mB,EAAO+F,OC3D/BghB,GAAkB,WAAyD,IAAxDC,EAAOrb,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8BrE,EAAMqE,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzEjf,EAAS,GACb,MAAMu6B,EAAmBD,EAAQ1f,OACjC,IAAK,IAAI1O,EAAI,EAAGA,EAAI0O,EAAQ1O,IACxBlM,GAAUs6B,EAAQE,OAAOrf,KAAK+I,MAAM/I,KAAKsf,SAAWF,IAExD,OAAOv6B,GAkCJ,MAAM06B,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQ3b,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7C0b,EAAA9gB,SAASghB,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,SAGtCC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAASjc,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAMkc,EAAUF,EAAI3R,QAAQ,IAAK,IACjC,IAAI8R,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQvgB,QAAmC,IAAnBugB,EAAQvgB,OAChCwgB,EAAW,CACPI,SAAS,GAADn6B,OAAI85B,EAAQ,IAAE95B,OAAG85B,EAAQ,IAAM,IACvCK,SAAS,GAADn6B,OAAI85B,EAAQ,IAAE95B,OAAG85B,EAAQ,IAAM,IACvCK,SAAS,GAADn6B,OAAI85B,EAAQ,IAAE95B,OAAG85B,EAAQ,IAAM,IACvCK,SAAS,GAADn6B,OAAc,QAAdg6B,EAAIF,EAAQ,UAAE,IAAAE,IAAI,KAAGh6B,OAAa,QAAbi6B,EAAGH,EAAQ,UAAE,IAAAG,IAAI,KAAO,KAG7D,GAAuB,IAAnBH,EAAQvgB,QAAmC,IAAnBugB,EAAQvgB,OAChCwgB,EAAW,CACPI,SAASL,EAAQtgB,MAAM,EAAG,GAAI,IAC9B2gB,SAASL,EAAQtgB,MAAM,EAAG,GAAI,IAC9B2gB,SAASL,EAAQtgB,MAAM,EAAG,GAAI,IAC9B2gB,SAA4B,QAApBD,EAACJ,EAAQtgB,MAAM,EAAG,UAAE,IAAA0gB,IAAI,KAAM,KAI9C,OAAOH,EAAS/nB,KAAIC,GAASmoB,MAAMnoB,GAAS,IAAMA,IAAOuH,MAAM,EAAGqgB,EAAY,EAAI,GACpF,MAAO/T,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAGtM,MAAM,EAAGqgB,EAAY,EAAI,KAKxCQ,GAAiBA,KAC1B,IAAIC,GAAQ,EACZ,IAAUC,EAIV,OAJUA,EACNC,UAAUC,WACPD,UAAUE,QACTlN,OAAemN,OAHP,2TAA2TC,KAAKL,IAAI,4hDAA4hDK,KAAKL,EAAEM,OAAO,EAAE,OAAKP,GAAQ,GAIt4DA,GAGJ,SAASQ,KAA8D,IAAD,IAAAC,EAAAnd,UAAArE,OAA/CyhB,EAAI,IAAAthB,MAAAqhB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAArd,UAAAqd,GAC9B,OAAOD,EAAKvQ,OAAOyQ,SAASlrB,KAAK,K,iwBClF9B,MAAMmrB,GAAyBC,KAAOC,OAAMC,M,kCCA5C,MAAMC,GAAmBA,CAACnU,EAAoBoU,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACF9kB,EAAO,OACPV,EAAM,OACN3C,EAAM,eACNgD,EAAc,KACdla,EAAI,SACJia,EAAQ,eACRZ,EAAc,MACdS,EAAK,YACLN,EAAW,UACX3B,GACA+S,EAEJ,GAAI1T,IAAW8nB,EAAc,OAAOpU,EAEpC,MAAM0U,EAA2B,QAAjBN,EAAyBnsB,GAAkBD,GACrD2sB,EAA6B,QAAjBP,GAA0B,MAAMZ,KAAKtkB,GACjDA,EAAM2R,QAAQ,MAAO,OACJ,QAAjBuT,GAA0B,MAAMZ,KAAKtkB,GACjCA,EAAM2R,QAAQ,MAAO,OACrB3R,EACJ0lB,EAA+Bv9B,wBAAA,GAC9B4V,GAAS,IACZ9S,KAAuB,QAAjBi6B,GAA6C,YAAnBnnB,EAAU9S,KACpC,MACiB,QAAjBi6B,GAA6C,QAAnBnnB,EAAU9S,KAChC,UACA8S,EAAU9S,OAGxB,OAAA9C,wBAAA,GACO2oB,GAAI,IACP5qB,KAAmB,QAAfi/B,EAAEK,EAAQt/B,UAAK,IAAAi/B,IAAIj/B,EACvBkX,OAAQ8nB,EACRnlB,OAAuB,QAAjBqlB,EAAEI,EAAQzlB,UAAO,IAAAqlB,IAAIrlB,EAC3BR,eAAuC,QAAzB8lB,EAAEG,EAAQjmB,UAAe,IAAA8lB,IAAI9lB,EAC3CG,YAAaA,EAAYhE,KAAIC,IAAK,IAAAgqB,EAAA,OAAkB,QAAlBA,EAAIH,EAAQ7pB,UAAM,IAAAgqB,IAAIhqB,KACxD8E,QAAyB,QAAlB6kB,EAAEE,EAAQ/kB,UAAQ,IAAA6kB,IAAI7kB,EAC7BN,SAA2B,QAAnBolB,EAAEC,EAAQrlB,UAAS,IAAAolB,IAAIplB,EAC/BH,MAAOylB,EACPrlB,eAAiC,QAAjB8kB,GAAiC9kB,EACjDrC,UAAW2nB,K,uDCjCZ,MAcME,GAAkB,SAACC,GAA0F,IAAxDC,EAA6Cxe,UAAArE,OAAA,QAAAsE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9G,MAAMye,EAAuB59B,wBAAA,GACtB29B,GACAD,EAAgBG,eAEjBC,EAAsBtqB,IAAmB,IAADuqB,EAC1C,OAAqC,QAArCA,EAAOH,EAAwBpqB,UAAM,IAAAuqB,IAAI,IAEvCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAIjsB,OAAO,OAAD3Q,OAAQG,OAAOyoB,KAAK+T,GAAS3sB,KAAK,KAAI,SAE7D6sB,EAAiBH,EAAS9U,MAAMgV,GAEtC,OAAOv9B,cAACy9B,IAAMC,SAAQ,CAAA5kB,SACjB0kB,EAAe7qB,KAAI,CAACC,EAAO8G,IACpBA,EAAQ,IAAM,EAAU1Z,cAACy9B,IAAMC,SAAQ,CAAA5kB,SAA4BlG,GAAK,GAAAjS,OAAxBiS,EAAK,KAAAjS,OAAI+Y,IACtD4jB,EAAQ1qB,MAHKyqB,IAO1BM,EAAwB,CAC1B,sBAAwBC,GACbV,EAAmB,uBAAuBvP,WAAW,eAAgBiQ,GAEhF,sBAAwBA,GACbV,EAAmB,uBAAuBvP,WAAW,eAAgBiQ,GAEhF,6BAA+BC,GACpBX,EAAmB,8BAA8BvP,WAAW,aAAa,GAADhtB,OAAKk9B,IAExF,gCAAkCC,GACvBV,EACHF,EAAmB,iCACnB,CAAEY,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDb,EACHF,EAAmB,iCACnB,CAAEc,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOlB,EACHF,EAAmB,8BACnB,CAAEiB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOnB,EACHF,EAAmB,kCACnB,CAAEqB,cAGV,4BAA8BC,GACnBpB,EACHF,EAAmB,6BACnB,CAAEsB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCM,CAC9BT,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,sCACIO,GAEOhC,EACHF,EAAmB,uCACnB,CAAEkC,aAGV,oBACIC,GAEOjC,EACHF,EAAmB,qBACnB,CAAEmC,eAKd,OAAAjgC,wBAAA,GACO09B,GAAe,IAClBG,cAAeD,EACfpiC,WAAUwE,wBAAA,GACH49B,GACAW,MC7JF2B,GAAUC,mBAAkB,CAAChkB,EAAKC,KAC3C,MAAMgkB,EAAsB,MAExB,MAAMlY,EAAM,IAAIC,IAAI4G,OAAOsR,SAASvR,MAC9BwR,EAAepY,EAAIqY,aACnBC,EAAyBF,EAAalkB,IAAI,YAIhD,GAFAkkB,EAAaG,OAAO,YACpB1R,OAAO2R,QAAQC,aAAa5R,OAAO2R,QAAQE,MAAO,GAAI1Y,EAAI4G,MACtD0R,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,MACT,MAAOxZ,GAEL,OADAC,QAAQC,MAAM,iDAAkDF,GACzD,QAjBa,GAoBtB2Z,EAAqD,GACrDC,EAAkBxD,GAAez9B,wBAAC,GDjCF,CACtCjC,KAAM,UACNmjC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,IC4B2B,IAC/BzD,cAAe,MAsCb0D,EAAeC,UACjB,GAAIR,EAAYS,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiBC,MAAM,GAADrgC,OACrBC,aAAsB,gBAAAD,OAAekgC,EAAY,SACpD,CACII,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBC,QAAsCH,EAASI,OAErD,IAAKD,EAAajE,cAAe,MAAO,IAAI5gB,MAAM,uBAClD,MAAM+kB,EAAoBvE,GAAgBqE,EAA6B,QAAjBJ,EAAEV,EAAYiB,WAAG,IAAAP,OAAA,EAAfA,EAAiB7D,eAGzE,OAFAmD,EAAYS,GAAgBO,EAErBA,EACT,MAAO3a,GAEL,OADAC,QAAQC,MAAM,gEAAiEF,GACxE,OAGT6a,EAAiBV,UACnB,MAAMW,EAAW/lB,IAAMgmB,oBAAoBX,GAC3C,IAAKU,EAAU,OAIf,MAAML,EAAgBd,EAAYS,GAE5BT,EAAYS,SADNF,EAAaE,GAGrBK,GACA3lB,EAAI,CACAkmB,aAAcjmB,IAAMgmB,oBAAoBX,GACxCa,SAAUR,EAAatmC,aAE3BslC,aAAayB,QAAQ,WAAYd,GACjCtlB,EAAI,CACAqmB,WAAW,EACXH,aAAcF,KAGlBhmB,EAAI,CACAqmB,WAAW,EACXH,aAAcjmB,IAAMgmB,oBAAoBH,IACxCK,SAAUrB,EAAgBzlC,cAKtC,MAAO,CACH4mC,oBAAqB,GACrBC,aDhIkC,CACtCtkC,KAAM,UACNmjC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJgB,SAAUrB,EAAgBzlC,WAC1B+rB,MAAO,KACPkb,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUnB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MAAM,GAADrgC,OACrBC,aAAsB,6BACzB,CACIqgC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBO,QAA8DT,EAASI,OAE7E,IAAKK,EAAqB,MAAO,IAAInlB,MAAM,qBAE3Cd,EAAI,CACAimB,sBACAM,iBAAiB,IAEvB,MAAOrb,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FlL,EAAI,CACAimB,oBAAqB,CACjBH,IAAK,CACDlkC,KAAM,UACNmjC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBoB,iBAAiB,MAkErBE,IAEJC,oBAAqBrB,gBAEXD,EAAa,aACbW,EAAe9B,GACrBjkB,EAAI,CACAsmB,cAAc,KAGtBlB,eACAW,qBAIKY,GAAcA,IACN5C,IAAQrd,IAAA,IAAC,SAAEyf,GAAUzf,EAAA,OAAKyf,KAIlCS,GAAcA,IAAM7C,GAAQ8C,WAAWV,S,cC9IpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BAC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","file":"static/js/main.8933a855.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n    iconWidth: 43,\r\n    iconHeight: 44,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 790,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 806,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ART_FINISH_TYPE = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport const OtherFinishTypeMap = {\r\n    art: {\r\n        key: 'art' as const,\r\n        labelKey: 'input.art-finish.label',\r\n    },\r\n    attribute: {\r\n        key: 'attribute' as const,\r\n        labelKey: 'input.attribute.label',\r\n    },\r\n    icon: {\r\n        key: 'icon' as const,\r\n        labelKey: 'input.icon-type.icon.label',\r\n    },\r\n    sticker: {\r\n        key: 'sticker' as const,\r\n        labelKey: 'input.sticker.label',\r\n    },\r\n};\r\nexport type OtherFinish = [attribute: string, icon: string, sticker: string];\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil, OtherFinish } from './foil-finish';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    otherFinish: ['normal', 'normal', 'normal'] as OtherFinish,\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    otherFinish: ['normal', 'normal', 'normal'],\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","export const createCanvas = (width: number, height: number) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const context = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        context,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { ART_FINISH_TYPE, Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    otherFinish: 'of',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detech the actual version from incoming cards. */\r\n    delete baseCard.version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if (migratedCard.finish) {\r\n        const finishList = migratedCard.finish;\r\n\r\n        if (finishList.includes(ART_FINISH_TYPE)) {\r\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\r\n            migratedCard.otherFinish = [migratedCard.artFinish, migratedCard.artFinish, migratedCard.artFinish];\r\n        }\r\n    }\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'Other Finish - Attribute',\r\n    'Other Finish - Icon',\r\n    'Other Finish - Sticker',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            otherFinish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumSize,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('Other Finish - Attribute', otherFinish[0]);\r\n        write('Other Finish - Icon', otherFinish[1]);\r\n        write('Other Finish - Sticker', otherFinish[2]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\r\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\r\n                const finishIcon = reader('Other Finish - Icon') ?? '';\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    otherFinish: [finishAttribute, finishIcon, finishSticker] as OtherFinish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\r\n                    pendulumTextStyle,\r\n                    pendulumSize,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    globalScale: number,\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n    mirrorPendulumScale: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        globalScale,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n        mirrorPendulumScale,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n        bulletWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    contextualDoubleQuoteRegex,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_FULL_LINE_CLOSE\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    const fullLineList = [];\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let lineReplacement: string | undefined;\r\n    let lineContent: string | undefined;\r\n    let fullLineReplacement: string | undefined;\r\n    let fullLineContent: string | undefined;\r\n    let willContinue = false;\r\n    do {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        lineReplacement = result?.[1];\r\n        lineContent = result?.[2];\r\n        fullLineReplacement = result?.[3];\r\n        fullLineContent = result?.[4];\r\n\r\n        willContinue = false;\r\n        if (lineContent && lineReplacement) {\r\n            fullLineList.push(lineContent);\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'left' });\r\n            willContinue = true;\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            fullLineList.push(fullLineContent);\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'justify' });\r\n            willContinue = true;\r\n        }\r\n    } while (willContinue);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n    /** Restore all remaining nb line symbol back to their normal letters. */\r\n    effectText = effectText\r\n        .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n        .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]');\r\n\r\n    return {\r\n        fullLineList,\r\n        fullLineListOption,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n    } = option ?? {};\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n        fullLineListOption,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 1000,\r\n                '2': 1000,\r\n                '3': 1000,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (additionalLineCount > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current lint count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList,\r\n                        additionalLineCount,\r\n                        format, textData,\r\n                        width,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = lineListWithRatio.length + additionalLineCount;\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (sizeLevel < fontList.length)\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\r\n                return {\r\n                    line,\r\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                                globalScale,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0 && EffectFontData[fontDataKey]) {\r\n                const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                const dynamicFlavorFontData = useDynamicSize\r\n                    ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n                    : flavorFontData;\r\n                const flavorFontSizeData = useDynamicSize\r\n                    ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                    : flavorFontData.fontList[appliedSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: dynamicFlavorFontData,\r\n                    fontLevel: dynamicSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                            globalScale,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n    loopStarFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        context: starContext,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starContext, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (loopStarFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            context: starFinishContext,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishContext.drawImage(starCanvas, 0, 0);\r\n        await loopStarFinish(\r\n            starFinishContext,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishContext,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        starContext.globalCompositeOperation = 'source-in';\r\n        starContext.drawImage(starFinishCanvas, 0, 0);\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionMap,\r\n    ArtFinishMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n) => {\r\n    if (!ctx) return;\r\n    if (foil === 'normal') return;\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (withBorder) {\r\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\r\n    } else {\r\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n            .map(async entry => {\r\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                const coordinate = [left, top, width, height] as const;\r\n\r\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\r\n            })\r\n        );\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    otherFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    otherFinish: OtherFinish,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType, pendulumSize);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n                /** Background fill is not depend on art size */\r\n                fillWidth: artFrameWidth,\r\n                fillHeight: pendulumStructureHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth * globalScale;\r\n                    clonedCanvas.height = cardHeight * globalScale;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * leftToEffectBox,\r\n                        globalScale * topToEffectBox,\r\n                        globalScale * effectBoxWidth,\r\n                        globalScale * effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\r\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                ratio,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / ratio,\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                context: attributeContext,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeContext,\r\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            const attributeFinish = otherFinish[0] ?? 'normal';\r\n            if (attributeFinish !== 'normal') {\r\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    context: attributeFinishContext,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishContext.drawImage(attributeCanvas, 0, 0);\r\n                await loopAttributeFinish(\r\n                    attributeFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                attributeContext.globalCompositeOperation = 'source-in';\r\n                attributeContext.drawImage(attributeFinishCanvas, 0, 0);\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const starFinish = otherFinish[1] ?? 'normal';\r\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopStarFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumIconCanvas = document.createElement('canvas');\r\n            pendulumIconCanvas.width = pendulumIconFrameWidth;\r\n            pendulumIconCanvas.height = pendulumIconFrameHeight;\r\n            const pendulumIconContext = pendulumIconCanvas.getContext('2d');\r\n            await drawAsset(pendulumIconContext, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconContext.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconContext.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkArrowMap(ctx, globalScale, linkMap, positionType, boundless);\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityText / 100;\r\n\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-text-${bottomFrame}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    ctx,\r\n                    `background/background-text-${bottomFrame}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][bottomFrame] ?? {};\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-${exceptionFrameType}-${bottomFrame}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumBorderCanvas = document.createElement('canvas');\r\n            pendulumBorderCanvas.width = cardWidth;\r\n            pendulumBorderCanvas.height = cardHeight;\r\n            const pendulumBorderContext = pendulumBorderCanvas.getContext('2d');\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderContext.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                await drawAsset(\r\n                    pendulumBorderContext,\r\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                    30, topToPendulumStructureFrame,\r\n                );\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkMapFoil(ctx, globalScale, foil, withBorder, positionType);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopArtFinish(\r\n                    ctx,\r\n                    'art',\r\n                    async (finishType, pendulumSuffix) => {\r\n                        return await drawAssetWithSize(\r\n                            ctx,\r\n                            `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                            artFinishX, artFinishY,\r\n                            artWidth, artWidth / artRatio,\r\n                        );\r\n                    },\r\n                    pendulumSize,\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n\r\n    if (!(ctx && cloneCtx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => {};\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n        patternContext.scale(globalScale, globalScale);\r\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n        patternContext.globalCompositeOperation = patternBlendMode;\r\n        patternContext.resetTransform();\r\n        await drawAssetWithSize(\r\n            patternContext, `finish-name/${patternImage}.png`,\r\n            edge, trueBaseline - maxAscent,\r\n            width,\r\n            maxAscent + maxDescent,\r\n        );\r\n        ctx.globalCompositeOperation = 'source-in';\r\n        ctx.drawImage(patternCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.scale(xRatio, yRatio);\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + embossThickness,\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        const resetShadow = setTextStyle({\r\n            ctx: shadowContext,\r\n            x: shadowOffsetX,\r\n            y: shadowOffsetY,\r\n            shadowColor: shadowColor,\r\n            blur: shadowBlur,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.scale(1 / xRatio, 1 / yRatio);\r\n        shadowContext.drawImage(canvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.drawImage(shadowCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetShadow();\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => {},\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nconst {\r\n    finishTypeCardWidth,\r\n    width: CanvasWidth,\r\n    iconHeight,\r\n    iconWidth,\r\n} = CanvasConst;\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n    loopIconFinish,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -5 : -1;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        const {\r\n            canvas: iconCanvas,\r\n            context: iconContext,\r\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n        await drawAssetWithSize(\r\n            iconContext,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            () => iconWidth * globalScale,\r\n            () => iconHeight * globalScale,\r\n        );\r\n        if (loopIconFinish) {\r\n            const {\r\n                canvas: iconFinishCanvas,\r\n                context: iconFinishContext,\r\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n            iconFinishContext.drawImage(iconCanvas, 0, 0);\r\n            await loopIconFinish(\r\n                iconFinishContext,\r\n                'art',\r\n                async (finishType) => {\r\n                    return await drawAsset(\r\n                        iconFinishContext,\r\n                        `finish/finish-typeart-${finishType}.png`,\r\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\r\n                    );\r\n                },\r\n            );\r\n            iconContext.globalCompositeOperation = 'source-in';\r\n            iconContext.drawImage(iconFinishCanvas, 0, 0);\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        } else {\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        }\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const exceptionDigitWidthRatio = 0.8;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 1 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    _edge = 99,\r\n    _baseline = 1150.93,\r\n    _baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle, globalScale } = option ?? {};\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const baselineOffset = _baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${37 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${34 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${37 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, otherFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = !!(atk || def) || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n    const [, iconFinish, stickerFinish] = otherFinish;\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number, customFill?: string) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                otherFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                        fillWidth, fillHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * fillWidth, globalScale * fillHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * destinationWidth, globalScale * destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            globalScale * destinationX, globalScale * destinationY,\r\n                            globalScale * destinationWidth, globalScale * destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame */\r\n            if (isLink && !isPendulum) {\r\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\r\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        withBlueScale,\r\n        withRedScale,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        finish,\r\n        otherFinish,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\r\n        drawStat(ctx, atk.trim(), 508.824, 1106.494, globalScale);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865, 1106.494, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const isNumberPassword = /^[0-9]*$/.test(password);\r\n        const mayOffset = isNumberPassword && isPendulum && isLink;\r\n        const willOffset = mayOffset;\r\n        const {\r\n            rightEdge,\r\n        } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n            fontLevel: !isNumberPassword ? 1 : 0\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                context: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\r\n            if (normalizedStickerFinish !== 'normal') {\r\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    context: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth, CanvasHeight);\r\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                await loopStickerFinish(\r\n                    stickerFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            stickerFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            CanvasWidth - finishTypeCardWidth, CanvasHeight - finishTypeCardHeight,\r\n                        );\r\n                    },\r\n                );\r\n                stickerContext.globalCompositeOperation = 'source-in';\r\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                },\r\n            });\r\n            const normalizedIconFinish = iconFinish ?? 'normal';\r\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n                loopIconFinish,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        iconFinish,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            const fontDataKey = `${format}-${pendulumSize}`;\r\n            const coordinateList = PendulumEffectCoordinateMap\r\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                [pendulumSize];\r\n            /** Account for half scaleless frame */\r\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                ? coordinateList\r\n                : coordinateList.map(({\r\n                    trueEdge, trueWidth, ...rest\r\n                }) => ({\r\n                    ...rest,\r\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    trueWidth: trueWidth\r\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                }));\r\n\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[fontDataKey],\r\n                fontDataKey,\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: modifiedCoordinateList,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink && isPendulum) {\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            pendulumSize,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            faqReminder: typeof faqReminder === 'boolean' ? faqReminder : true,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 60px 45px 12px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    {label}\r\n                                </Popover>\r\n                                : label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #222222 inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    &.js-highlight {\r\n        background: var(--main-info);\r\n        text-shadow: none;\r\n        box-shadow: 0 0 2px 0 #333333;\r\n    }\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 200px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            {content}\r\n                            {image && <img src={image} alt={`version-${version}-illust`} />}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ntype Quote = {\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <QuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n    </QuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        faqReminder,\r\n        setMemoizedReminder,\r\n    ] = useNotification('faqReminder');\r\n\r\n    useEffect(() => {\r\n        if (faqReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(false);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    return <>\r\n        <FaqButtonLabel id=\"faq-button\" $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {[\r\n                        {\r\n                            author: 'Anonymous User at May 02, 2025',\r\n                            question: 'can you include the icons, attributes and stars if choosing art finishes? and maybe make a choice if we will put art finish or not if choosing art finishes? Thank you!',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at May 01, 2025',\r\n                            question: 'Can you add a selection of holographic overlay to the stars, attribute, icons and sticker? that would be a great help for making some super rare cards! Looking forward to this update',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Apr 28, 2025',\r\n                            question: 'Hello, can you add art finishes on attributes, stars, icons and sticker like a holographic overlay to it? It would be a great help! THANKS!!! :))',\r\n                            answer: 'Now you can pick individual finish for each attribute, sticker and card icons (spell/trap icon and stars).',\r\n                        },\r\n                        {\r\n                            author: 'hello there at Apr 30, 2025',\r\n                            question: 'can you make the  top and left lines of Synchro monster name border/box more visible/whiter?',\r\n                            answer: 'Even more white it is.',\r\n                        },\r\n                    ].map(({ author, question, answer }, index) => {\r\n                        return <Quote key={index} author={author} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { QuestionAndFeedback } from './faq';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\r\n                    <span\r\n                        className=\"bug-report\"\r\n                        onMouseOver={() => {\r\n                            document.getElementById('faq-button')?.classList.add('js-highlight');\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            document.getElementById('faq-button')?.classList.remove('js-highlight');\r\n                        }}\r\n                    >\r\n                        <div id=\"sentry-bug-report\">\r\n                            {language['contributor.bug-report.tooltip']}\r\n                        </div>\r\n                    </span>\r\n                </Tooltip>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        {label}\r\n                    </Popover>\r\n                    : label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip\r\n                                placement=\"topLeft\"\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdownLabel = styled.div`\r\n    color: var(--color);\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    padding: 0 var(--spacing);\r\n    padding-bottom: var(--spacing-xs);\r\n    line-height: 1;\r\n    cursor: default;\r\n    &:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <div>\r\n                        <CardDataCopyButton\r\n                            disabled={isPartial}\r\n                            data={window.location.href}\r\n                            withText\r\n                        >\r\n                            <div className=\"icon\"><LinkOutlined /></div>\r\n                            <div className=\"label\">\r\n                                {language['button.export-modal.share-button.label']}\r\n                            </div>\r\n                        </CardDataCopyButton>\r\n                    </div>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n    OtherFinishTypeMap,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n        supportFormat,\r\n    }))\r\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({ ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : atk;\r\n            const nextDef = willRemoveStat ? '' : def;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            if (willRemoveStat) {\r\n                onStatChange(nextAtk, nextDef);\r\n            }\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return cardIcon === 'auto' && autoIconType === 'none'\r\n        ? showCreativeOption\r\n            ? <RadioTrain\r\n                className=\"fill-input-train\"\r\n                value={cardIcon}\r\n                onChange={changeCardIcon}\r\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                    return {\r\n                        label: icon ?? <CloseCircleOutlined />,\r\n                        value,\r\n                        tooltipProps: {\r\n                            title: language[fullLabelKey],\r\n                        },\r\n                    };\r\n                })}\r\n            >\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : null\r\n        : iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain, StyledDropdown, StyledDropdownLabel } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\r\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { notification, Popover } from 'antd';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0 0 auto;\r\n        text-align: left;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\nconst FinishLabel = styled(StyledDropdown.Option)`\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr;\r\n    column-gap: var(--spacing-xs);\r\n    .tag {\r\n        background: var(--sub-level-2);\r\n        color: var(--color-contrast);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    &.default {\r\n        .tag {\r\n            background: var(--sub-level-4);\r\n        }\r\n    }\r\n`;\r\n\r\ntype OtherFinishPicker = {\r\n    finishValueList: [...OtherFinish, art: string],\r\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\r\n    language: LanguageDataDictionary,\r\n    showCreativeOption: boolean,\r\n};\r\nconst OtherFinishPicker = ({\r\n    finishValueList,\r\n    changeFinish,\r\n    language,\r\n    showCreativeOption,\r\n}: OtherFinishPicker) => {\r\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\r\n    const valueMap = {\r\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[0],\r\n        [OtherFinishTypeMap['icon'].key]: finishValueList[1],\r\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[2],\r\n        [OtherFinishTypeMap['art'].key]: finishValueList[3],\r\n    };\r\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\r\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\r\n\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined /></>\r\n        : language[OtherFinishTypeMap[selectedType].labelKey];\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledDropdown.Container>\r\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\r\n                {finishList.map(({ label, value }) => {\r\n                    return <FinishLabel key={value}\r\n                        className={mergeClass(\r\n                            valueMap[value] === 'normal' ? 'default' : '',\r\n                            selectedType === value ? 'menu-active' : '',\r\n                        )}\r\n                        onClick={() => {\r\n                            setSelectedType(value);\r\n                        }}\r\n                    >\r\n                        <div className=\"value\">\r\n                            <div className=\"tag\">{valueMap[value] === 'normal' ? 'Auto' : valueMap[value]}</div>\r\n                        </div>\r\n                        <div className=\"label\">{label}</div>\r\n                    </FinishLabel>;\r\n                })}\r\n            </StyledDropdown.Container>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n\r\n    return <StyledImageRadioTrain\r\n        className=\"art-finish-checkbox fill-input-train\"\r\n        value={valueMap[selectedType]}\r\n        onChange={value => {\r\n            const nextValueMap = { ...valueMap };\r\n            nextValueMap[selectedType] = `${value}`;\r\n\r\n            changeFinish(nextValueMap);\r\n        }}\r\n        optionList={ArtFinishButtonList}\r\n    >\r\n        {IconDropdown}\r\n    </StyledImageRadioTrain>;\r\n};\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    showCreativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    showCreativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish, otherFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <OtherFinishPicker\r\n                finishValueList={[...otherFinish, artFinish]}\r\n                changeFinish={finishMap => {\r\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\r\n                    changeOtherFinish([\r\n                        finishMap[OtherFinishTypeMap['attribute'].key],\r\n                        finishMap[OtherFinishTypeMap['icon'].key],\r\n                        finishMap[OtherFinishTypeMap['sticker'].key],\r\n                    ]);\r\n                }}\r\n                language={language}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n            : null\r\n        }\r\n    >\r\n        <div>\r\n            <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </div>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { DEFAULT_PENDULUM_SIZE, FrameInfoMap, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['hover', 'click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                            onChange={changeBottomFrame}\r\n                        />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                        {currentPendulumFrame\r\n                            ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                            : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def) => footerInputGroupRef.current?.setValue({ atk, def })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        softMode={reduceMotionColor}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Pendulum Size',\r\n                                    value: <div>\r\n                                        {PendulumSizeList\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                <div className=\"alert-label\">\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                </div>\r\n                                <Dropdown\r\n                                    className=\"save-button-dropdown\"\r\n                                    placement=\"bottomRight\"\r\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                >\r\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                        <GatewayOutlined className=\"resolution-icon\" />\r\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                    </ResolutionButton>\r\n                                </Dropdown>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}