{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/imgur.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","supportFormat","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","PendulumSizeMap","small","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","medium","large","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","tcg","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","pendulumSubstituteMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","length","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","canvas","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getContext","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","document","createElement","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","uploadToImgur","async","myHeaders","Headers","append","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader37","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","mirrorPendulumScale","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","sizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","flavorFontData","dynamicFlavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","drawLinkRatingText","baseDrawLinkArrowMap","positionType","all","isActive","baseLink","activeLink","resetTransform","baseDrawLinkMapFoil","withBorder","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","fillWidth","fillHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","starWidth","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconContext","drawLinkArrowMap","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","_PendulumSizeMapExcep","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderContext","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","exceptionDigitWidthRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","customFill","hasArtBorder","artHeight","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","_templateObject3","InternalPopover","CardActionButton","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","VersionLogButtonLabel","$animating","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","targetMemory","useShallow","useNotification","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","Number","majorB","minorB","patchB","onMouseOver","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","willMirror","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","_templateObject7","LightboxButton","_templateObject8","ResetButton","_templateObject9","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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ACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU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,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACF7L,KAAK,OAEL8L,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAEje,KAAM,IAAK9C,MAAO,MAC9BghB,EAAG,CAAEle,KAAM,IAAK9C,MAAO,EAAM,MAEjC4gB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACF5L,KAAK,MACP6L,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACF7L,KAAK,OAELiM,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAE7d,KAAM,KAAM9C,MAAO,GAC7B,QAAW,CAAE8C,KAAM,KAAM9C,MAAO,GAChC,QAAW,CAAE8C,KAAM,KAAM9C,MAAO,GAChC,QAAW,CAAE8C,KAAM,KAAM9C,MAAO,GAChC,GAAM,CAAE8C,KAAM,KAAM9C,MAAO,GAC3B,WAAc,CAAE8C,KAAM,KAAM9C,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAE8C,KAAM,IAAK9C,MAAO,OAEtC4gB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACF5L,KAAK,MACP6L,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACF7L,KAAK,OAGEkM,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACP3e,KAAMoe,KAIH,MAAMQ,GAUTC,YAAYC,EAAiCC,GAAkC,KAT/EC,cAAQ,OACRC,oBAAc,OACdC,sBAAgB,OAChBC,cAAQ,OACRL,YAAM,OACNM,YAAM,OACNC,qBAAe,OACfC,qBAAe,EAGXC,KAAKH,OAASL,EACdQ,KAAKT,OAAM/d,wBAAA,GAAQsd,MAAwCS,GAC3DS,KAAKC,OAGTC,MAAMpc,GAAiE,IAAvCyb,EAA+BY,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9D,MAAM,MAAEliB,EAAK,OAAEC,GAAW4F,EACpBuc,EAAUL,KAAKM,WAAWxc,GAChCkc,KAAKL,iBAAiBY,WAAW5iB,MAAQ0iB,EACzCL,KAAKL,iBAAiBa,WAAW7iB,MAAQ,CAACM,EAAOC,EAAQ,GACzD8hB,KAAKP,SAASgB,QAAQxiB,EAAOC,GAC7B8hB,KAAKN,eAAee,QAAQxiB,EAAOC,GACnC8hB,KAAKN,eAAegB,MAAMV,KAAKW,gBAAgB1iB,EAAOC,IAEtD,MAAM,YAAE6gB,EAAW,cAAEC,EAAa,eAAEC,EAAc,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,EAAK,KAAE3e,GAAMe,wBAAA,GAC/Ewe,KAAKT,QACLA,GAGPS,KAAKY,UAAU7B,GACfiB,KAAKa,YAAY7B,GACjBgB,KAAKc,aAAa7B,GAClBe,KAAKe,aAAa7B,EAAWjhB,EAAOC,GACpC8hB,KAAKgB,oBAAoB7B,EAAUC,GACnCY,KAAKiB,QAAQxgB,GAEbuf,KAAKN,eAAewB,OAAO,EAAI,IAGnCjB,OACI,MAAMkB,EAAS,IAAIC,MAAyB,GAAQ,GAAO,IAAO,GAAQ,EAAG,GACvEC,EAAQ,IAAID,KACZE,EAAoB,IAAIC,KAAWF,EAAOF,GAEhDnB,KAAKP,SAAW,IAAI2B,KAAoB,CAAEI,OAAO,EAAMC,WAAW,EAAM5B,OAAQG,KAAKH,SACrFG,KAAKP,SAASiC,cAAc,EAAU,GAEtC1B,KAAKL,iBAAmByB,KAAoBO,MAAM/C,GAAgBN,UAElE0B,KAAKJ,SAAW,IAAIwB,KAAqB,CACrC5C,eAAgBI,GAAgBJ,eAChCD,aAAcK,GAAgBL,aAC9BD,SAAU0B,KAAKL,mBAEnBK,KAAKJ,SAASgC,aAAc,EAE5B,MAAMC,EAAe,IAAIT,KAAoB,EAAG,EAAG,EAAG,GAChDU,EAAa,IAAIV,KAAWS,EAAc7B,KAAKJ,UACrDyB,EAAMU,IAAID,GAEV9B,KAAKD,gBAAkB,IAAIiC,KAAWvD,IACtCuB,KAAKF,gBAAkB,IAAIkC,KAAW3D,IACtC2B,KAAKF,gBAAgBmC,gBAAiB,EAEtCjC,KAAKN,eAAiB,IAAIwC,KAAelC,KAAKP,SAAUO,KAAKW,mBAC7DX,KAAKN,eAAeyC,QAAQb,GAC5BtB,KAAKN,eAAeyC,QAAQnC,KAAKD,iBACjCC,KAAKN,eAAeyC,QAAQnC,KAAKF,iBAErCa,gBAAgB1iB,EAAgBC,GAC5B,OAAO,IAAIkjB,KAAwBnjB,EAAOC,EAAQ,CAC9CkkB,UAAWhB,KACXiB,UAAWjB,KACX/K,OAAQ+K,KACRkB,eAAe,IAGvBhC,WAAWxc,GACP,MAAMuc,EAAU,IAAIe,KAActd,GAKlC,OAJAuc,EAAQkC,MAAQlC,EAAQmC,MAAQpB,KAChCf,EAAQ+B,UAAY/B,EAAQgC,UAAYjB,KACxCf,EAAQoC,WAAa,EACrBpC,EAAQqC,aAAc,EACfrC,EAGXO,UAAU+B,GAEF3C,KAAKL,iBAAiBiD,QAAQjlB,MAD9BglB,GACuC,EAED,EAI9C9B,YAAY8B,GAEJ3C,KAAKL,iBAAiBkD,QAAQllB,MAD9BglB,GACuC,EAED,EAI9C7B,aAAa6B,GAEL3C,KAAKL,iBAAiBmD,QAAQnlB,MAD9BglB,GACuC,EAED,EAI9C5B,aAAapjB,EAAeM,EAAeC,GACvC8hB,KAAKD,gBAAgBzB,SAASK,EAAEhhB,MAAQA,EAAQM,EAAQ,EACxD+hB,KAAKF,gBAAgBxB,SAASyE,EAAEplB,MAAQA,EAAQO,EAAS,EAG7D8iB,oBAAoB7B,EAAkBC,GAClCY,KAAKL,iBAAiBqD,GAAGrlB,MAAQ,EAAMwhB,GAAY,EAAM/C,KAAK6G,IAAI,EAAK7D,IAG3E6B,QAAQxgB,GACJuf,KAAKL,iBAAiBlf,KAAK9C,MAAiB,UAAT8C,EAAmB,EAAI,GCrX3D,MAAMyiB,GAAgBA,CAACC,EAAkBC,KAC5C,MAAMC,GAAeF,EAAW,IAAM/G,KAAKkH,GAAK,IAC1CC,GAAuBH,EAAa,IAAMhH,KAAKkH,GAAK,IACpD3L,EAAIyE,KAAKoH,IAAIH,GAAejH,KAAKoH,IAAID,GACrC3L,EAAIwE,KAAKqH,IAAIJ,GAAejH,KAAKoH,IAAID,GACrCG,EAAItH,KAAKqH,IAAIF,GAEnB,MAAO,CAACnH,KAAKuH,MAAU,IAAJhM,GAAW,IAAKyE,KAAKuH,MAAU,IAAJ/L,GAAW,IAAKwE,KAAKuH,MAAU,IAAJD,GAAW,MAE3EE,GAAcC,IAuBpB,IAvBqB,YACxBC,EAAW,eACXC,EAAc,cACdC,EAAa,UACbC,EAAY,EAAC,cACbC,EAAgB,CAAC,IAAK,IAAK,KAAI,cAE/BC,EAAa,WACbf,EAAU,SACVD,EAAQ,aACRiB,GAAe,EAAE,aACjBC,EAAe,GAYlBR,EACG,MAAMS,EAAMR,EAAYS,WAAW,MAEnC,IAAKD,EAAK,OAGV,MAAMpmB,EAAuB,OAAd6lB,QAAc,IAAdA,IAAkBD,EAAY5lB,OACvCD,EAAqB,OAAb+lB,QAAa,IAAbA,IAAiBF,EAAY7lB,MAGrCyf,EADY4G,EAAIE,aAAa,EAAG,EAAGvmB,EAAOC,EAAQ,CAAEumB,oBAAoB,IACvD/G,KAEjBgH,EAAkDP,IAE3B,kBAAff,GAA+C,kBAAbD,EACtCD,GAAcE,EAAYD,GAC1B,CAAC,EAAG,EAAG,IACXwB,EAAoBvI,KAAKwI,KAAKF,EAAsB,IAAM,EAAIA,EAAsB,IAAM,EAAIA,EAAsB,IAAM,GAC1HG,EAA0B,CAC5BH,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,GAG/B,GAAKjH,EAEL,IAKI,MAAMoH,EAAiB,IAAIC,kBAAkB9mB,EAAQC,GACrD,IAAK,IAAIsP,EAAI,EAAGA,EAAIkQ,EAAK7B,OAAQrO,GAAK,EAC7BkQ,EAAKlQ,IAAMkQ,EAAKlQ,EAAI,IAAMkQ,EAAKlQ,EAAI,IAAMkQ,EAAKlQ,EAAI,GACnDsX,EAAetX,EAAI,GAAK,EAExBsX,EAAetX,EAAI,GAAK,EAGhC,MAAMwX,EAAc9J,GAAkBwB,KAAQoI,EAAgB,CAAC5mB,EAAQD,KACjEgnB,EAAMD,EAAYpJ,MAAM,GAAIsJ,EAASF,EAAYpJ,MAAM,GACvDuJ,EAAe,IAAIJ,kBAAkB9mB,EAAQC,EAAS,GAGtDknB,EAAuBhJ,KAAKiJ,MAAM,IAAMpB,GAC9C,IAAK,IAAIjH,EAAW,EAAGA,EAAWiI,EAAKjI,IACnC,IAAK,IAAIsI,EAAW,EAAGA,EAAWJ,EAAQI,IAAY,CAClD,MAAMC,EAA+C,GAA/BvI,EAAW/e,EAAQqnB,GACnCE,EAAcR,EAAY7H,IAAIH,EAAUsI,GAE9CH,EAAaI,GAAgBC,EAAcJ,EAC3CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAqB,IAAhBC,EAAoB,EAAI,IAKjE,MAAMC,EAAkBC,SAASC,cAAc,UAC/CF,EAAgBxnB,MAAQA,EACxBwnB,EAAgBvnB,OAASA,EACzBunB,EAAgBlB,WAAW,MAAMqB,aAC7B,IAAIC,UAAUV,EAAclnB,EAAOC,GACnC,EACA,GAMJ,MAAM4nB,EAAkBJ,SAASC,cAAc,UAC/CG,EAAgB7nB,MAAQA,EACxB6nB,EAAgB5nB,OAASA,EACU,IAAImhB,GAAkBP,KAAqCgH,GACnE5F,MAAMuF,EAAiB,CAC9CvG,UAAW,EACXE,MAAO,EACPD,SAAU,IACVJ,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBxe,KAAMoe,KAMV,MAAMkH,EAAwBL,SAASC,cAAc,UACrDI,EAAsB9nB,MAAQA,EAC9B8nB,EAAsB7nB,OAASA,EAE/B,MAAM8nB,EAAyBD,EAAsBxB,WAAW,MAChEyB,EAAuBC,UACnBH,EACA,EACA,EACA7nB,EACAC,GAEJ,MAAMgoB,ECzIiBC,EAC3BC,EACAnoB,EACAC,EACAmoB,EACAC,EACAC,KAEA,MAAMC,EAAS,IAAIzB,kBAAkB9mB,EAAQC,EAAS,GAChDuoB,EAAQrK,KAAKiJ,MAAMgB,EAAW,GAGpC,SAASK,EAAc/O,EAAWC,EAAW+O,EAAYC,GACrD,OAAOxK,KAAKyK,OAAOlP,EAAIgP,IAAO,GAAK/O,EAAIgP,IAAO,IAAM,EAAIL,GAAc,IAI1E,SAASO,EAAYC,EAAYC,GAC7B,OAAO5K,KAAKyK,OAAOE,EAAKC,IAAO,IAAM,EAAIV,GAAc,IAI3D,IAAK,IAAI1O,EAAI,EAAGA,EAAI1Z,EAAQ0Z,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAI1Z,EAAO0Z,IAAK,CAC5B,IAAIsP,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAGzC,IAAK,IAAIC,GAAMZ,EAAOY,GAAMZ,EAAOY,IAC/B,IAAK,IAAIC,GAAMb,EAAOa,GAAMb,EAAOa,IAAM,CACrC,MAAMC,EAAK5P,EAAI2P,EACTE,EAAK5P,EAAIyP,EAGf,GAAIE,GAAM,GAAKC,GAAM,GAAKD,EAAKtpB,GAASupB,EAAKtpB,EAAQ,CACjD,MAAMupB,EAAgC,GAAjB7P,EAAI3Z,EAAQ0Z,GAC3B+P,EAAoC,GAAnBF,EAAKvpB,EAAQspB,GAG9BI,EAAUvB,EAAUqB,GACpBG,EAAUxB,EAAUqB,EAAc,GAClCI,EAAUzB,EAAUqB,EAAc,GAClCK,EAAY1B,EAAUsB,GACtBK,EAAY3B,EAAUsB,EAAgB,GACtCM,EAAY5B,EAAUsB,EAAgB,GAQtC5W,EALU4V,EAAca,EAAIC,EAAI7P,EAAGC,GAC1BkP,EAAYa,EAASG,GACrBhB,EAAYc,EAASG,GACrBjB,EAAYe,EAASG,GAKpCf,GAAQa,EAAYhX,EACpBoW,GAAQa,EAAYjX,EACpBqW,GAAQa,EAAYlX,EACpBsW,GAAQtW,GAMpB,MAAMmX,EAAgC,GAAjBrQ,EAAI3Z,EAAQ0Z,GACjC6O,EAAOyB,GAAehB,EAAOG,EAC7BZ,EAAOyB,EAAc,GAAKf,EAAOE,EACjCZ,EAAOyB,EAAc,GAAKd,EAAOC,EACjCZ,EAAOyB,EAAc,GAAK7B,EAAU6B,EAAc,GAI1D,OAAOzB,GDkEkBL,CACjBH,EAAuBxB,aAAa,EAAG,EAAGvmB,EAAOC,GAAQwf,KACzDzf,EACAC,EACA,EACA,GACA,IAQEgqB,EAAa,IAAInD,kBAAkB9mB,EAAQC,EAAS,GAC1D,IAAK,IAAIiqB,EAAW,EAAGA,EAAWzK,EAAK7B,OAAQsM,GAAY,EAAG,CAC1D,IAAIZ,EAAMrB,EAAaiC,GAAY,MAAS,EACxCX,EAAMtB,EAAaiC,EAAW,GAAK,MAAS,EAC5CC,EAAMlC,EAAaiC,EAAW,GAAK,MAAS,EAChD,MAGME,GAHgBd,EAAK1C,EAAwB,GAC7C2C,EAAK3C,EAAwB,GAC7BuD,EAAKvD,EAAwB,IACO,GAAKzI,KAAKkM,IAAIlE,GAAgBhI,KAAKkM,IAAIjE,IAC3EkE,EAAYnM,KAAKC,IAAI+H,EAAchI,KAAKoB,IAAI6K,EAAmBhE,IAGrE6D,EAAWC,GAAY/L,KAAKuH,MAAMjG,EAAKyK,GAAYjE,EAAc,GAAKqE,GACtEL,EAAWC,EAAW,GAAK/L,KAAKuH,MAAMjG,EAAKyK,EAAW,GAAKjE,EAAc,GAAKqE,GAC9EL,EAAWC,EAAW,GAAK/L,KAAKuH,MAAMjG,EAAKyK,EAAW,GAAKjE,EAAc,GAAKqE,GAC9EL,EAAWC,EAAW,GAAKzK,EAAKyK,EAAW,GAG/C,OAAO,IAAItC,UAAUqC,EAAYjqB,EAAOC,GAC1C,MAAOsqB,GAEL,OADAC,QAAQC,MAAM,gCAAiCF,GACxC,OE3KFG,GAAgB,SACzBC,EACAC,GAEE,IADFC,EAAkB3I,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAI4I,SAAiBC,IACxBC,YAAW,KACP,GAAKL,EAAYM,SAAYL,EAEzB,IACID,EAAYM,QAAQC,QAAOC,IACvB,GAAKA,EACA,CACD,MAAMC,EAAMC,IAAIC,gBAAgBH,GAChC,GAAKC,EACA,CACD,MAAMG,EAAQ,IAAIC,MAClBD,EAAM1mB,IAAMumB,EACZG,EAAME,OAAS,KACXb,EAAU5C,UAAUuD,EAAO,EAAG,GAC9BF,IAAIK,gBAAgBN,GACpBL,GAAQ,IAEZQ,EAAMI,QAAU,KACZN,IAAIK,gBAAgBN,GACpBL,GAAQ,SAXNA,GAAQ,QAHXA,GAAQ,MAmBzB,MAAOR,GAELK,EAAU5C,UAAU2C,EAAYM,QAAS,EAAG,GAC5CT,QAAQC,MAAMF,GACdQ,GAAQ,QA3BwBA,GAAQ,KA8BpC,GAAbF,OCxBEe,GAAmBC,GACN,gBAAfA,EAAK/rB,QAA4BgsB,GAAaD,GAE5CC,GAAgBD,GACH,UAAfA,EAAK/rB,OAAoC,SAAf+rB,EAAK/rB,OAAmC,gBAAf+rB,EAAK/rB,MAgBtDisB,GAAwBjsB,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,GAAqC,SAAVA,GAA8B,cAAVA,EAA8B,OAC1E,QAGEksB,GAAoBlsB,IACrBgsB,GAAa,CAAEhsB,WAAYmsB,GAAgBnsB,GAG1CmsB,GAAmBnsB,GACrB,CAAC,OAAQ,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUosB,SAASpsB,G,kCC3C6hCqsB,GAAY,SAAA5B,GAAI,IAAIjN,GAAGiN,EAAEA,EAAE6B,UAAU,EAAE7B,EAAE3M,OAAO,IAAIyO,MAAM,QAAK,GAAG9B,EAAEjN,EAAE,GAAG,EAAEA,EAAEM,OAAO,CAACN,EAAEA,EAAE,GAAL,qBAAqBA,GAArB,IAAQ,IAAI,EAAJ,0BAAQgP,EAAR,QAAe/B,GAAGA,EAAEA,EAAE8B,MAAMC,IAAI5X,KAAK6V,EAAEgC,QAA/C,+BAAsD,OAAOC,GAAcjC,EAAE,IAAIiC,GAAc,SAACjC,GAAS,IAAPjN,EAAM,uDAAJ,EAAWgP,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOG,EAAE,SAAClC,EAAEjN,GAAH,OAAOiN,EAAEmC,QAAQ,IAAIrX,OAAJ,WAAeiI,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAA/B,aAAsCA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAK,SAAAiN,GAAC,OAAEA,IAAIjN,EAAE,GAAGA,EAAE,GAAGA,EAAE,OAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEgP,EAAE1O,SAASN,EAAEiN,EAAEkC,EAAElC,EAAE+B,EAAEhP,SAAS,IAAIA,EAAEgP,EAAE1O,OAAON,KAAKiN,EAAEkC,EAAElC,EAAE+B,EAAEhP,IAAI,OAAOiN,GCExkD,MAqIMoC,GAAmBppB,wBAAA,GArI+D,CACpFkV,QAAS,KACTL,OAAQ,KACRtY,MAAO,KACP4Y,KAAM,KACNtV,QAAS,CACLwpB,QAAS,KACTzrB,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEXmrB,SAAU,OACVrrB,UAAW,OACXC,WAAY,OACZF,SAAU,QAEdoX,OAAQ,KACRjM,IAAK,KACL4M,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXZ,UAAW,MACXa,QAAS,CACLmT,QAAS,MACTlT,EAAG,MACHC,EAAG,MACH3Z,MAAO,MACPC,OAAQ,MACR2Z,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfC,WAAY,KACZE,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClB7W,eAAgB,MAChB8W,eAAgB,CACZyS,QAAS,MACTlT,EAAG,MACHC,EAAG,MACH3Z,MAAO,MACPC,OAAQ,MACR2Z,KAAM,MACNC,OAAQ,OAEZvY,KAAM,KACNuX,cAAe,MACf8B,YAAa,CACTiS,QAAS,KACThS,iBAAkB,OAClBpM,UAAW,MACXqM,OAAQ,OAEZC,cAAe,CACX8R,QAAS,KACTpe,UAAW,MACXqM,OAAQ,OAEZ/B,UAAW,CACP8T,QAAS,KACTjlB,YAAa,OACbqR,gBAAiB,OACjBpR,UAAW,OACX7B,UAAW,OACXM,KAAM,OACNI,cAAe,OACfC,cAAe,OACflB,UAAW,OACXH,YAAa,OACbC,WAAY,OACZC,UAAW,OACXwT,kBAAmB,QACnB5S,UAAW,OACXG,YAAa,QACbgB,YAAa,QACbpB,UAAW,OACXT,QAAS,OACTK,OAAQ,OACRqB,WAAY,OACZH,YAAa,OACbE,cAAe,QACfD,cAAe,SAEnBgS,UAAW,KACXC,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACTC,OAAQ,KACRlX,WAAY,KACZmX,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBnX,aAAc,MACdoX,YAAa,KACbK,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVC,QAAS,MACTC,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBC,aAAc,OAEgB,CAC9B6Q,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTlT,EAAG,MACHC,EAAG,MACH3Z,MAAO,MACPC,OAAQ,MACR2Z,KAAM,MACNC,OAAQ,SAQHoT,GAAmB,SAC5BpB,GAEE,IADFqB,EAA+BhL,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAGyK,GAElC,MAAMQ,EAAqC,GACrCC,EAAc7pB,YAAA,GAAQsoB,GAkB5B,OAhBA5mB,OAAOooB,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBzP,MAAM0P,QAAQD,GAMrE,CACH,MAAME,EAAcR,EAAWK,GAEJ,kBAAhBG,IAA0BP,EAAcO,GAAeF,OATmB,CAAC,IAADG,EACrF,MAAMC,EAA6B,QAAvBD,EAAGT,EAAWK,UAAS,IAAAI,OAAA,EAApBA,EAAsBf,QAEjCgB,IACAT,EAAcS,GAAUX,GAAiBO,EAAYN,EAAWK,SASrEJ,GAGEU,GAAqB,SAC9BV,GAEE,IADFD,EAA+BhL,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAGyK,GAElC,MAAMmB,EAAwC,GAgB9C,OAfA7oB,OAAOooB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBjQ,MAAM0P,QAAQO,GAOvC,MAA7Bb,EAAca,KACdF,EAAiBC,GAAWZ,EAAca,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAed,EAAcc,KAC7BH,EAAiBC,GAAWF,GAAmBV,EAAcc,GAAcf,EAAWa,SAQ3FD,GAEEI,GAAiC,SAC1Cf,GAEE,IADFD,EAA+BhL,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAGyK,GAElC,MAAMwB,EAAmD,kBAAlBhB,EACjCiB,KAAKC,MAAMlC,GAAYmC,mBAAmBnB,KAC1CA,EAEAoB,EAAuC,GAgB7C,OAfAtpB,OAAOooB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBjQ,MAAM0P,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAcf,EAAWa,SAQhHQ,GAoBEC,GAAkB,SAAC3C,GAAwE,IAAD4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQ7M,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG7F,YAE3D0S,EAAStW,QAChB,MAAMuW,EAAYzrB,wBAAA,CACd4Y,GAAIC,eACD2S,GACArL,aAAMmI,IAgFb,GA7EAmD,EAAarU,YAAWpX,wBAAA,GACjB8Y,KAAe1B,aACfqU,EAAarU,aAGc,MAA9BqU,EAAalU,cACbkU,EAAalU,cAAavX,YAAA,GACnB8Y,KAAevB,eAGtBkU,EAAalU,cAAavX,wBAAA,GACnB8Y,KAAevB,eACfkU,EAAalU,eAII,MAAxBkU,EAAavW,UAAiBuW,EAAavW,QAAU,GAC9B,MAAvBuW,EAAa5W,SAAgB4W,EAAa5W,OAAS,OACrB,MAA9B4W,EAAa1U,gBAAuB0U,EAAa1U,cAAgB,QACpC,MAA7B0U,EAAa1rB,eAAsB0rB,EAAa1rB,aAAe,UACxC,MAAvB0rB,EAAarW,SAAgBqW,EAAarW,OAAS,IAEzB,MAA1BqW,EAAapW,YAAmBoW,EAAapW,UAAY,UACxDoW,EAAqBjC,UAAYlB,EAAKnf,MAAKsiB,EAAatiB,IAAOsiB,EAAqBjC,gBACjFiC,EAAqBjC,QAExBiC,EAAqBhC,cAAgBnB,EAAKpS,UAASuV,EAAavV,QAAWuV,EAAqBhC,oBAC7FgC,EAAqBhC,YAII,MAAZ,QAAjByB,EAACO,EAAatiB,WAAG,IAAA+hB,IAAI,MAAYO,EAAatiB,IAAM,IACnB,MAAZ,QAArBgiB,EAACM,EAAa1V,eAAO,IAAAoV,IAAI,MAAYM,EAAa1V,QAAU,IACzB,MAAZ,QAAvBqV,EAACK,EAAaxV,iBAAS,IAAAmV,IAAI,MAAYK,EAAaxV,UAAY,UACzC,MAAvBwV,EAAazV,SAAgByV,EAAazV,QAAS,GAED,mBAA1CyV,EAAa5rB,QAAgBypB,UAA4D,MAAlCmC,EAAa5rB,QAAQ1B,YACpFstB,EAAa5rB,QAAQ1B,WAAcstB,EAAa5rB,QAAgBypB,gBACxDmC,EAAa5rB,QAAgBypB,UAEzCmC,EAAa5rB,QAAOG,wBAAA,GAAQrC,KAA4B8tB,EAAa5rB,gBAC7D4rB,EAAa5rB,QAAgBypB,SAEG,MAAZ,QAAxB+B,EAACI,EAAajV,kBAAU,IAAA6U,IAAI,MAAYI,EAAajV,WAAa,IAC1B,MAAZ,QAA5B8U,EAACG,EAAahV,sBAAc,IAAA6U,IAAI,MAAYG,EAAahV,eAAiB,IAChC,MAAZ,QAA9B8U,EAACE,EAAa9U,wBAAgB,IAAA4U,IAAI,MAAYE,EAAa9U,iBAAmB,UAChD,MAA9B8U,EAAa/U,gBAAuB+U,EAAa/U,eAAgB,GACnC,MAA9B+U,EAAalV,gBACTkV,EAAajV,YAAciV,EAAahV,gBAAkBgV,EAAa5rB,QAAQ7B,YAEnFytB,EAAalV,eAAgB,GAEjCkV,EAAa7U,eAAc5W,wBAAA,GRjSD,CAC1BmW,EAAG,EACHC,EAAG,EACH3Z,MAAO,IACPC,OAAQ,KACR2Z,KAAM,IACNC,OAAQ,IQ6RDmV,EAAa7U,gBAGO,MAAvB6U,EAAa3U,QAAyC,SAAvB2U,EAAalvB,QAC5CkvB,EAAa3U,QAAS,GAGrB2U,EAAqBC,cAAgBpD,EAAKlQ,iBAAgBqT,EAAarT,eAAkBqT,EAAqBC,oBAC3GD,EAAqBC,iBACO9M,IAAhC6M,EAAarT,iBAA8BqT,EAAarT,gBAAiB,GAExEqT,EAAqBlC,WAAajB,EAAK1Q,WAAU6T,EAAa7T,SAAY6T,EAAqBlC,iBAC5FkC,EAAqBlC,SAExBkC,EAAalT,kBAAiBkT,EAAalT,gBtBvRA,EAChD,EACA,WACA,EACA,YsBoRKkT,EAAajT,oBAAmBiT,EAAajT,kBtBxRF,EAChD,EACA,WACA,EACA,YsBqRKiT,EAAanT,gBAAemT,EAAanT,ctBzRE,EAChD,EACA,WACA,EACA,YsBsRKmT,EAAapT,gBAAeoT,EAAapT,ctB1RE,EAChD,EACA,WACA,EACA,YsBuRKoT,EAAahT,iBAAgBgT,EAAahT,etB3RC,EAChD,EACA,WACA,EACA,YsBwR6C,qBAAlCgT,EAAazT,mBAAkCyT,EAAazT,kBAAmB,GACjD,qBAA9ByT,EAAavT,eAA8BuT,EAAavT,cAAe,GAC7EuT,EAAa3V,gBAAe2V,EAAa3V,cAAgB,QAEjC,IAAzB2V,EAAavW,SAA0C,IAAzBuW,EAAavW,QAAe,CAC1DuW,EAAavW,QAAU,EAEvB,MAAM,cAAE6B,EAAa,WAAEnX,EAAU,IAAE8X,EAAG,IAAEC,EAAG,OAAEb,EAAM,QAAED,EAAO,MAAEta,GAAUkvB,EAMlEE,EAAYpD,GAAa,CAAEhsB,WACO,SAAlBwa,GAA4BnX,KACzC8X,GAAOC,GAAQb,GAAUD,EAAQwD,QACpCsR,KAGFF,EAAa/T,IAAM,GACnB+T,EAAa9T,IAAM,IAI3B,OAAO8T,GAGEG,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,EACpB,MAAO7E,GAEL,OADAC,QAAQC,MAAMF,IACP,IAGF8E,GAA6BD,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,EACjB,MAAO7E,GAEL,OADAC,QAAQC,MAAMF,IACP,IAIF+E,GAA4BA,CACrCzD,EACA0D,KAEA,GAAuB,YAAnB1D,EAAKrS,WAA4BqS,EAAK/R,eAA2C,YAA1B+R,EAAK3R,iBAC5D,MAAO,CACHsV,WAAW,EACX/rB,OAAQwpB,GAAiBpB,IAIjC,MAAMuB,EAAc7pB,wBAAA,GAAQsoB,GAAI,IAAEvS,QAAS,GAAIU,eAAgB,KAE/D,MAAO,CACHwV,WAAW,EACX/rB,OAAQwpB,GAAiBG,KAK3BqC,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiCxR,KAAKkM,IAAIqF,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBC,GAAkBA,CAACC,EAAmCC,KACxD,MACIjW,OAAQkW,EACR9vB,OAAQ+vB,EACRhwB,MAAOiwB,EACPvW,EAAGwW,EACHvW,EAAGwW,EACHvW,KAAMwW,GACE,OAARP,QAAQ,IAARA,IAAY,IAEZhW,OAAQwW,EACRpwB,OAAQqwB,EACRtwB,MAAOuwB,EACP7W,EAAG8W,EACH7W,EAAG8W,EACH7W,KAAM8W,GACG,OAATZ,QAAS,IAATA,IAAa,GAEjB,OAAOL,GAAqBM,EAAYM,IACjCZ,GAAqBO,EAAYM,IACjCb,GAAqBQ,EAAWM,IAChCd,GAAqBS,EAAOM,IAC5Bf,GAAqBU,EAAOM,IAC5BL,IAAaM,GAGXC,GAAkBA,CAACC,EAAwBC,KACpD,MACIpX,QAASqX,EACT3W,eAAgB4W,GAEhBH,EADGI,EAASC,YACZL,EAAQ,+BAERnX,QAASyX,EACT/W,eAAgBgX,GAEhBN,EADGO,EAASH,YACZJ,EAAS,8BAEb,OAAOQ,aAAOL,EAAWI,IAClBxB,GAAgBkB,EAAaI,IAC7BtB,GAAgBmB,EAAoBI,IChblCG,GAAqBhwB,IAC9B,IACI,OAAOA,EACNiwB,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,MACxD,MAAOhH,GAEL,OADAC,QAAQC,MAAMF,GACPjpB,IAGFkwB,GAAuBzW,IAChC,IACI,OAAOA,EACFwW,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,MAC5D,MAAOhH,GAEL,OADAC,QAAQC,MAAMF,GACPxP,IAIF0W,GAAqBC,IAC9B,IACI,OAAOA,EAAKC,WAAW,sDACzB,MAAOpH,GAEL,OADAC,QAAQC,MAAMF,IACP,ICxBFqH,GAAeA,CAACtwB,EAAc6pB,EAAY3oB,KACnD,MAAMkvB,EAAOjK,SAASC,cAAc,KAEpCgK,EAAKG,SAAWvwB,EAChBowB,EAAKI,KAAOC,OAAO1G,IAAIC,gBAAgBH,GACvCuG,EAAKM,QAAQC,YAAc,CAACzvB,EAAMkvB,EAAKG,SAAUH,EAAKI,MAAMpd,KAAK,KAEjE,MAAMwd,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAML,OACNM,SAAS,EACTC,YAAY,IAGhBZ,EAAKa,cAAcL,GACnBR,EAAKc,UCFHC,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAAC7uB,GAAU,QAET8uB,GAAqB9tB,OAAO+O,QAAQye,IAAaxmB,QAA+B,CAACC,EAAKC,KACxF,MAAO6mB,EAAaC,GAAY9mB,EAGhC,OAFAD,EAAI+mB,GAAYD,EAET9mB,IACR,IAEGgnB,GAAqC,CACvCrpB,MAAO,QACPD,OAAQ,SACRb,MAAO,SAELoqB,GAAoBluB,OAAO+O,QAAQkf,IAAYjnB,QAAqC,CAACC,EAAKC,KAC5F,MAAO6mB,EAAaC,GAAY9mB,EAGhC,OAFAD,EAAI+mB,GAAYD,EAET9mB,IACR,IAEGknB,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsB7uB,OAAO+O,QAAQof,IAAcnnB,QAA+B,CAACC,EAAKC,KAC1F,MAAO6mB,EAAaC,GAAY9mB,EAGhC,OAFAD,EAAI+mB,GAAYD,EAET9mB,IACR,IAEG6nB,GAAmC,CACrCnyB,OAAQ,SACRmZ,OAAQ,SACRiZ,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLzC,KAAM,OACN0C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChBrqB,KAAM,QACN,cAAe,SAEbsqB,GAAkBtvB,OAAO+O,QAAQ+f,IAAU9nB,QAA+B,CAACC,EAAKC,KAClF,MAAO6mB,EAAaC,GAAY9mB,EAGhC,OAFAD,EAAI+mB,GAAYD,EAET9mB,IACR,IAEGsoB,GAA0G,CAC5G,OAAU,CACN5uB,IAAK,IAET,KAAQ,CACJA,IAAK,SACLvE,KAAM,QAEV,OAAU,CACNuE,IAAK,wBACLvE,KAAM,iBACNuX,UAAW,SAEf,MAAS,CACLhT,IAAK,eACLvE,KAAM,QACNuX,UAAW,SAEf,QAAW,CACPhT,IAAK,uBACLvE,KAAM,WACNuX,UAAW,QACXD,OAAQ,CAAC,WAGX8b,GAAYxvB,OAAO+O,QAAQwgB,IAAkBvoB,QAA+B,CAACC,EAAKC,KACpF,MAAOuoB,EAAW1B,GAAe7mB,EAGjC,OAFAD,EAAI8mB,EAAYptB,KAAO8uB,EAEhBxoB,IACR,IAWUyoB,GAA2BA,CACpC9I,EACA+I,KAEA,MAAM,KACFtzB,EAAI,KACJ8X,EAAI,YACJsB,EAAW,UACXxB,EAAS,OACT6B,EAAM,IACNE,EAAG,IACHC,EAAG,IACHxO,EAAG,QACH4M,EAAO,UACPE,EAAS,SACT2B,EAAQ,QACRO,EAAO,UACPzC,EAAS,MACT+B,EAAK,eACLT,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,aAChBlX,EAAY,WACZH,EAAU,QACViX,EAAO,MACPta,EAAK,aACLmc,EAAY,UACZnD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTD,GACAkT,EACEgJ,EAAiBvD,GAAkBhwB,GACnCwzB,EAAmBtD,GAAoBzW,GACvCga,EAA2BvD,GAAoBjX,GAC/Cya,EAAiBvC,GAAYvZ,GAC7B+b,EAAsB7B,GAAana,GACnCic,EAAkBnB,GAASj0B,GAC3Bq1B,EAAqC,eAAlBtc,EACnB4b,GACE,CACI3b,EAAUhT,OACV8S,EACAD,EAAOjE,KAAK,MACdA,KAAK,MAET,SACNkR,EAAkD,OAAZ3J,QAAY,IAAZA,IAAgB,IAAhD,SAAE7a,EAAQ,OAAEg0B,GAAiBxP,EAANyP,EAAIpE,YAAArL,EAAA,uBAsDjC,MAAO,CACH4J,UArDYluB,IAASuzB,GAClB9Z,IAAW+Z,GACXva,IAAmBwa,QACA5S,IAAnB6S,QACwB7S,IAAxB8S,QACoB9S,IAApB+S,QACqB/S,IAArBgT,EAgDH1xB,OA/CQF,YAAA,CACRkV,QAAS,QACTnX,KAAMuzB,EACN1T,MAAM,GAADrc,OAAKsU,GACV5W,KAAMkY,EAAYhG,KAAK,KACvBhQ,KAAoB,OAAdswB,QAAc,IAAdA,IAAkB,GACxBja,OAAQ+Z,EACR7Z,MACAC,MACAoa,OAAQna,EACRoa,UAAW7Z,EACXzC,UAA8B,OAAnBgc,QAAmB,IAAnBA,IAAuB,OAClC9Y,GAAInB,EACJ5Z,SAAQmC,YAAA,CACJiyB,QAASryB,EACT4X,OAAQga,EACRU,KAAMhb,EACNib,IAAKlb,EACLmb,QAASzC,GAAW5vB,GACpBsyB,gBAAgB,GACbx0B,GAEPy0B,QAAS,SACTnE,KAAM,CACFoE,UAAS1b,EAAQ8R,SAAS,KAC1B6J,YAAW3b,EAAQ8R,SAAS,KAC5B8J,WAAU5b,EAAQ8R,SAAS,KAC3B+J,aAAY7b,EAAQ8R,SAAS,KAC7BgK,cAAa9b,EAAQ8R,SAAS,KAC9BiK,aAAY/b,EAAQ8R,SAAS,KAC7BkK,eAAchc,EAAQ8R,SAAS,KAC/BmK,cAAajc,EAAQ8R,SAAS,MAElCoK,OAAuB,OAAfpB,QAAe,IAAfA,IAAmB,SAC3BS,QAA0B,UAAjBryB,EAA2B,QAAU,SAC9C8xB,OAAwB,OAAhBD,QAAgB,IAAhBA,IAAoBC,EAE5BvvB,MAAO+uB,EACDA,EAAO2B,UAAU,cACH,YAAd/c,EACIF,EACA5M,GACP2oB,KCtML5C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAAC7uB,GAAU,QAET8uB,GAAqB9tB,OAAO+O,QAAQye,IAAaxmB,QAA+B,CAACC,EAAKC,KACxF,MAAO6mB,EAAaC,GAAY9mB,EAGhC,OAFAD,EAAI+mB,GAAYD,EAET9mB,IACR,IAaG4nB,GAAsB7uB,OAAO+O,QAXU,CACzCqf,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6C5nB,QAA+B,CAACC,EAAKC,KAC1F,MAAO6mB,EAAaC,GAAY9mB,EAGhC,OAFAD,EAAI+mB,GAAYD,EAET9mB,IACR,IAqBGqoB,GAAkBtvB,OAAO+O,QAnBU,CACrCpS,OAAQ,SACRmZ,OAAQ,SACRiZ,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLzC,KAAM,OACN0C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfkC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+B5qB,QAA+B,CAACC,EAAKC,KAClF,MAAO6mB,EAAaC,GAAY9mB,EAGhC,OAFAD,EAAI+mB,GAAYD,EAET9mB,IACR,IAEG4qB,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6BlL,IAAgE,IAADjG,EAAAoR,EAAAC,EACrG,MAAM,IACFhc,EAAG,UACHhC,EAAS,YACTie,EAAW,UACXC,EAAS,IACTjc,EAAG,KACHkc,EAAI,UACJpuB,EAAS,GACTmT,EAAE,MACFgF,EAAK,aACLkW,EAAY,KACZ/1B,EAAI,UACJg2B,EAAS,KACTC,EAAI,MACJ5a,EAAK,SACL6a,EAAQ,QACRC,EAAO,YACPC,GACA7L,EACEmJ,EAAiBjC,GAAmBwE,GACpCtC,EAAsBnB,GAAoB7a,IACzCic,EAAiByC,GAAYpD,GAAgBvrB,GAAWqjB,MAAM,KAG/DuL,EAA6F,QAAtEhS,EAAIyR,EAAeA,EAAa9F,WAAW,WAAY,SAAMpP,SAAS,IAAAyD,IAC3FwR,EAAOA,EAAK7F,WAAW,WAAY,IAAM,GAE3CsG,EAAwBD,EAAwBvL,MAAM,MACtDyL,ENpJ4BjM,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACFK,SAASL,EAAK/rB,OM4IgBi4B,CAAsB,CAClDj4B,MAAsB,OAAfo1B,QAAe,IAAfA,IAAmB,YACxB2C,EAAsBja,OAAS,EAC/B,CAAC,IAAD9Y,OACM+yB,EAAsB,GAAGtG,WAAW,KAAM,IAAG,QAC9CsG,EAAsBha,MAAM,IACjCnJ,KAAK,MACLkjB,EACA7C,EAA2BuC,EAC3BA,EAAU/F,WAAW,WAAY,IACjC,GACAyG,EAAYd,EAAY,GAAGe,kBAE3BlJ,EAAW1S,KAqCjB,MAAO,CACHmT,WAAW,EACX/rB,OAtCcF,wBAAA,GACXwrB,GAAQ,IACXztB,OACA2Z,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAAnW,OAAMmW,GACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAApW,OAAMoW,GACpC,IACNjC,UAA8B,OAAnBgc,QAAmB,IAAnBA,IAAuBvxB,EAClCqX,OAAQ+c,EACR5e,UAAyB,OAAd8b,QAAc,IAAdA,IAAkB/wB,EAC7B+W,MAAgD,QAA3Cgc,EAAiC,QAAjCC,EAAEE,EAAUA,EAAUvZ,OAAS,UAAE,IAAAqZ,OAAA,EAA/BA,EAAiCiB,gBAAQ,IAAAlB,IAAI,GACpDl3B,MAAsB,OAAfo1B,QAAe,IAAfA,IAAmB,SAC1B9b,KAAoB,SAAdpQ,GAAwByuB,EAAUA,EAAUtW,EAClDzG,YAAa8c,IAEO,UAAdxuB,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACd0D,IAAKsrB,EACLxe,UAAW,SACXC,QAAOlW,wBAAA,GACAwrB,EAAStV,SAAO,IACnBE,EAAG,IAEPU,OAA4B,SAApB6a,GAA8BnX,MAAM0P,QAAQiK,GACpDtd,SAAqB,OAAXsd,QAAW,IAAXA,IAAe,IAAIhhB,KAAIyhB,GAAUrB,GAAeqB,KAC1Dh1B,WAAyB,aAAbw0B,EACZld,kBAA4B,MAATkC,EAAgB,IAAG,GAAA7X,OAAM6X,GAC5CnC,iBAA2B,MAATmC,EAAgB,IAAG,GAAA7X,OAAM6X,GAC3CpC,eAAgBwa,EAChB5Z,SAAU,GAAArW,OAAGqX,GAAKic,SAAS,EAAG,KAC9B1c,QAAS9H,GAAazI,IAAI,OCvNlC,IAAMktB,GAA0B,IA4BnBC,GAAkB,WAA+D,IAA9DC,EAA6D,uDAA9C,EAAGC,EAA2C,uDAA5BH,GACzD9Y,EAAMgZ,EACNna,EAAMoa,EACNC,EAASra,EACTsa,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IACZC,EAA0B,GAExBC,EAAgB,WAQlB,OAPkB,IAAdF,EAAiBjgB,KAEjB8f,GAAUG,EAEVH,GADAG,GAAaC,GAIV1a,KAAKoB,IAAIkZ,EAAQra,IAGtB2a,EAAa,WAIf,OAFAJ,GAAgB,EADhBF,GAAUG,GAMRnW,EAAQ,WAA6C,IAA5C8V,EAA2C,uDAA5BhZ,EAAKiZ,EAAuB,uDAARpa,EAC9CmB,EAAMgZ,EACNna,EAAMoa,EACNC,EAASD,EACTG,EAAe,GACfC,EAAY,IACZF,EAAgBF,GAGdQ,EAAY,kBAAMP,GAClBQ,EAAY,SAACC,GAAD,OAAuBT,EAASS,GAE5CC,EAAmB,eAACC,EAAD,uDAAeX,EAAf,OAA0BC,EAAgBU,GAC7DC,EAAmB,kBAAMX,GACzBY,EAAqB,WAGvB,OADAX,GAAgB,EADhBF,EAASC,GAKPa,EAAkB,kBAAMZ,GACxBhgB,EAAS,kBAAMggB,GAAgB,GAErC,MAAO,CACHlW,QACAsW,aACAD,gBACAngB,SACAqgB,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIKC,GAAW,SACpBC,GAKA,IAHE,IADFlB,EACC,uDADc,IAEXmB,EAAkBrB,GAChBsB,EAAYrB,KACXqB,EAAUJ,mBAAqB,GAAG,CACrC,GAAII,EAAUJ,mBAAqB,EAAG,CAElC,IAAMK,EAAcD,EAAUX,YAE9BU,EAAkBE,EAClB,MAEA,IAAMC,EAAUJ,EAAOE,EAAUX,aAEjC,IAAKa,GAAWF,EAAUX,YAAc,EAEpCW,EAAUZ,iBACP,CAEH,GAAIY,EAAUX,cAAgBX,GAAyB,MAClDqB,EAAkBC,EAAUb,iBAQ7C,IAAMgB,EAAe3b,KAAKC,IAAIma,EAAcpa,KAAKoB,IAAIma,EAAiBrB,KAEtE,OADIyB,IAAiBJ,GAAiBD,EAAOK,GACtCA,GC1HJ,MAAMC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,GACb,IAAInnB,EAASonB,EACTpd,EAAQqd,EACRlc,EAA6C,kBAAhBmc,EAAwB,GAAAr1B,OAAMq1B,EAAW,MAAOA,EAC7EE,EAAsC,kBAAhBF,EAA2BA,EAAcG,WAAWH,EAAY5I,WAAW,KAAM,KACvGgJ,EAASH,EAEb,MAAO,CACHI,QAASA,IAAA,GAAA11B,OAAS,CAAC+X,EAAOhK,EAAQmL,EAAMuc,GAAQE,QAAOC,GAAiB,KAATA,IAAahmB,KAAK,KAAI,WACrFimB,YAAaA,KAAA,CAAS9d,QAAOmB,OAAMuc,SAAQF,eAAcxnB,WACzD+nB,UAAUC,GAEN,OADAhoB,EAASgoB,EACF9Y,MAEX+Y,SAASC,GAEL,OADAle,EAAQke,EACDhZ,MAEXS,QAAQwY,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASX,GACTW,EAON,OANAhd,EAAiC,kBAAnBid,EAA2B,GAAAn2B,OAChCm2B,EAAc,MACjBA,EACNZ,EAAyC,kBAAnBY,EAChBA,EACAX,WAAWW,EAAe1J,WAAW,KAAM,KAC1CxP,MAEXmZ,UAAUC,GAEN,OADAZ,EAASY,EACFpZ,QAKNqZ,GAAiBxV,IAMT,IANU,UAC3ByV,EAAS,UACTpuB,GAIH2Y,EACG,MAAO,CACH7Y,YAAaoR,KAAKuH,MAAM2V,EAAYpuB,EAAY,IAChDtD,SAAU0xB,EAAYpuB,EAAY,GAClCD,WAAYquB,EAAYpuB,EACxBA,YACAC,aAAc,IAGTouB,GAAoBA,CAACrsB,EAAoBssB,IAClDh4B,wBAAA,GACO0L,GAAQ,IACXR,SAAU,IACHQ,EAASR,SACZ2sB,GAAeG,M,cCnEdC,GAA4B,kBAAoBC,G7Bc1C,4C6BZNC,GAAmB,SAACC,GAAD,OAA4B,OAACA,QAAD,IAACA,IAAW,IACnEjlB,KAAI,gBAAG7S,EAAH,EAAGA,MAAO+3B,EAAV,EAAUA,OAAV,gBAA0BA,EAA1B,YAAoC/3B,MAAS6Q,KAAK,MAC9C+mB,GAAe,SAAfA,EAAgBI,GAAD,OAA+CA,EACrEA,EAAmBxP,MAAM,KACtB3V,KAAI,SAACC,EAAOyG,GAAW,IAAD,EACKzG,EAAM0V,MAAM,KADjB,oBACZuP,EADY,KAGnB,MAAO,CAAE/3B,MAHU,KAGH+3B,SAAQzf,GAAIiB,EAAQ,MAE1Cqe,E7BGa,4C8BfNK,GAAa,WAA6B,IAAD,EAC5BC,mBAAS,GADmB,oBAC3CC,EAD2C,KACtCC,EADsC,KAMlD,MAAO,CAJSC,uBAAY,WACxBD,GAAO,SAAA9vB,GAAG,OAAIA,EAAM,OACrB,IAEc6vB,ICRd,MAAMG,GAAgBC,UACzB,MAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAgB,aAADz3B,OAAeC,oBAE/C,MAAMy3B,EAAW,IAAIC,SAKrB,OAJAD,EAASD,OAAO,QAASG,GACzBF,EAASD,OAAO,OAAQ,OACxBC,EAASD,OAAO,QAASG,EAAQhQ,QAAQ,sDAAuD,IAAIA,QAAQ,OAAQ,WAEvGiQ,MAAM,gCAAiC,CAChDC,OAAQ,OACRC,QAASR,EACTl7B,KAAMq7B,EACNM,SAAU,YCbX,IAAMC,GAAqB,SAAC,GAgB5B,IAfHC,EAeE,EAfFA,MACAC,EAcE,EAdFA,aAcE,IAbFC,uBAaE,SAZFC,EAYE,EAZFA,SACAC,EAWE,EAXFA,UACAC,EAUE,EAVFA,SACAC,EASE,EATFA,WAUA,MAAO,CACHC,SAAU,EACVC,QAAS,WACDR,GAAOxS,QAAQiT,KAAK,mBAAoBT,GAC5CG,EAAS,IAEbO,OAAQ,WACAV,GAAOxS,QAAQiT,KAAK,kBAAmBT,GAC3CG,GAAU,IAEdQ,UAAW,SAACpT,GACJ2S,GAAiB3S,EAAE2S,kBACnBF,GAAOxS,QAAQiT,KAAK,qBAAsBT,EAAOzS,EAAE3kB,MAC/B,KAAV,OAAV03B,QAAU,IAAVA,OAAA,EAAAA,EAAa/S,MACH,eAAVA,EAAE3kB,KAAkC,cAAV2kB,EAAE3kB,KAC5B2kB,EAAEqT,iBACFT,GAAS,SAAAhxB,GAAG,OAAIgS,KAAKC,IAAI,EAAG6e,EAAe9wB,EAAM,GAAK8wB,MAEvC,cAAV1S,EAAE3kB,KAAiC,YAAV2kB,EAAE3kB,KAChC2kB,EAAEqT,iBACFT,GAAS,SAAAhxB,GAAG,OAAIgS,KAAKC,IAAI,EAAG6e,EAAe9wB,EAAM,GAAK8wB,MAEvC,UAAV1S,EAAE3kB,KAA6B,MAAV2kB,EAAE3kB,IAC5Bw3B,IAEe,WAAV7S,EAAE3kB,MACC,OAARy3B,QAAQ,IAARA,YC3CT,MCEMQ,GAAsBA,CAACC,EAAgCnhB,KAChE,MAAM,aACF/R,EAAY,SACZC,EAAQ,UACRF,EAAS,cACTG,GACAgzB,EAEJ,OAAAv6B,wBAAA,GACOu6B,GAAc,IACjBlzB,aAAcA,EAAe+R,EAC7B9R,SAAUA,EAAW8R,EACrBhS,UAAWA,EAAYgS,EACvB7R,cAAwC,kBAAlBA,EAA6BA,EAAgB6R,EAAQ7R,KAItEizB,GAAsBA,CAACC,EAA8CrhB,IACvEqhB,EAAWtnB,KAAIhX,GAASA,EAAQid,IAG9BshB,GAAoBA,CAC7BC,EACAvhB,KAEA,MAAM,qBACF7P,EAAoB,aACpBI,EAAY,YACZH,EAAW,SACXpD,EAAQ,gBACR0D,EAAe,gBACfgG,EAAe,WACfrG,EAAU,QACVQ,EAAO,mBACPC,EAAkB,kBAClByF,GACAgrB,EAEJ,OAAA36B,wBAAA,GACO26B,GAAY,IACfpxB,qBAAsD,kBAAzBA,EAAoCA,EAAuB6P,OAAQwF,EAChGjV,aAAsC,kBAAjBA,EAA4BA,EAAeyP,OAAQwF,EACxEpV,YAAaA,EAAc4P,EAC3BhT,SAAUA,EAAWgT,EACrBtP,gBAA4C,kBAApBA,EAA+BA,EAAkBsP,OAAQwF,EACjF9O,gBAA4C,kBAApBA,EAA+BA,EAAkBsJ,OAAQwF,EACjFnV,WAAYA,EAAa2P,EACzBnP,QAA4B,kBAAZA,EAAuBA,EAAUmP,OAAQwF,EACzD1U,mBAAkD,kBAAvBA,EAAkCA,EAAqBkP,OAAQwF,EAC1FjP,kBAAgD,kBAAtBA,EAAiCA,EAAoByJ,OAAQwF,KAIlFgc,GAAgBA,CAAClvB,EAAoB0N,IAC9CpZ,wBAAA,GACO0L,GAAQ,IACXR,SAAUQ,EAASR,SAASiI,KAAIC,GACrBsnB,GAAkBtnB,EAAOgG,OC3D/ByhB,GAAkB,WAAyD,IAAxDC,EAAOnc,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8BtE,EAAMsE,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzEze,EAAS,GACb,MAAM66B,EAAmBD,EAAQzgB,OACjC,IAAK,IAAIrO,EAAI,EAAGA,EAAIqO,EAAQrO,IACxB9L,GAAU46B,EAAQE,OAAOpgB,KAAKiJ,MAAMjJ,KAAKqgB,SAAWF,IAExD,OAAO76B,GAkCJ,MAAMg7B,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQzc,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7Cwc,EAAAjX,SAASmX,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,SAGtCC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAAS/c,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAMgd,EAAUF,EAAItS,QAAQ,IAAK,IACjC,IAAIyS,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQthB,QAAmC,IAAnBshB,EAAQthB,OAChCuhB,EAAW,CACPI,SAAS,GAADz6B,OAAIo6B,EAAQ,IAAEp6B,OAAGo6B,EAAQ,IAAM,IACvCK,SAAS,GAADz6B,OAAIo6B,EAAQ,IAAEp6B,OAAGo6B,EAAQ,IAAM,IACvCK,SAAS,GAADz6B,OAAIo6B,EAAQ,IAAEp6B,OAAGo6B,EAAQ,IAAM,IACvCK,SAAS,GAADz6B,OAAc,QAAds6B,EAAIF,EAAQ,UAAE,IAAAE,IAAI,KAAGt6B,OAAa,QAAbu6B,EAAGH,EAAQ,UAAE,IAAAG,IAAI,KAAO,KAG7D,GAAuB,IAAnBH,EAAQthB,QAAmC,IAAnBshB,EAAQthB,OAChCuhB,EAAW,CACPI,SAASL,EAAQrhB,MAAM,EAAG,GAAI,IAC9B0hB,SAASL,EAAQrhB,MAAM,EAAG,GAAI,IAC9B0hB,SAASL,EAAQrhB,MAAM,EAAG,GAAI,IAC9B0hB,SAA4B,QAApBD,EAACJ,EAAQrhB,MAAM,EAAG,UAAE,IAAAyhB,IAAI,KAAM,KAI9C,OAAOH,EAASzoB,KAAIC,GAAS6oB,MAAM7oB,GAAS,IAAMA,IAAOkH,MAAM,EAAGohB,EAAY,EAAI,GACpF,MAAO1U,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG1M,MAAM,EAAGohB,EAAY,EAAI,KAKxCQ,GAAiBA,KAC1B,IAAIC,GAAQ,EACZ,IAAUC,EAIV,OAJUA,EACNC,UAAUC,WACPD,UAAUE,QACT/N,OAAegO,OAHP,2TAA2TC,KAAKL,IAAI,4hDAA4hDK,KAAKL,EAAEM,OAAO,EAAE,OAAKP,GAAQ,GAIt4DA,GAGJ,SAASQ,KAA8D,IAAD,IAAAC,EAAAje,UAAAtE,OAA/CwiB,EAAI,IAAAriB,MAAAoiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAne,UAAAme,GAC9B,OAAOD,EAAK3F,OAAO6F,SAAS5rB,KAAK,K,iwBClF9B,MAAM6rB,GAAyBC,KAAOC,OAAMC,M,kCCA5C,MAAMC,GAAmBA,CAAC9U,EAAoB+U,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACFvlB,EAAO,OACPX,EAAM,OACN3C,EAAM,eACNiD,EAAc,KACd/Z,EAAI,SACJ6Z,EAAQ,eACRZ,EAAc,MACdS,EAAK,YACLN,EAAW,UACX5B,GACA+S,EAEJ,GAAIzT,IAAWwoB,EAAc,OAAO/U,EAEpC,MAAMqV,EAA2B,QAAjBN,EAAyB7sB,GAAkBD,GACrDqtB,EAA6B,QAAjBP,GAA0B,MAAMZ,KAAKhlB,GACjDA,EAAM0R,QAAQ,MAAO,OACJ,QAAjBkU,GAA0B,MAAMZ,KAAKhlB,GACjCA,EAAM0R,QAAQ,MAAO,OACrB1R,EACJomB,EAA+B79B,wBAAA,GAC9BuV,GAAS,IACZzS,KAAuB,QAAjBu6B,GAA6C,YAAnB9nB,EAAUzS,KACpC,MACiB,QAAjBu6B,GAA6C,QAAnB9nB,EAAUzS,KAChC,UACAyS,EAAUzS,OAGxB,OAAA9C,wBAAA,GACOsoB,GAAI,IACPvqB,KAAmB,QAAfu/B,EAAEK,EAAQ5/B,UAAK,IAAAu/B,IAAIv/B,EACvB8W,OAAQwoB,EACR7lB,OAAuB,QAAjB+lB,EAAEI,EAAQnmB,UAAO,IAAA+lB,IAAI/lB,EAC3BR,eAAuC,QAAzBwmB,EAAEG,EAAQ3mB,UAAe,IAAAwmB,IAAIxmB,EAC3CG,YAAaA,EAAYhE,KAAIC,IAAK,IAAA0qB,EAAA,OAAkB,QAAlBA,EAAIH,EAAQvqB,UAAM,IAAA0qB,IAAI1qB,KACxD+E,QAAyB,QAAlBslB,EAAEE,EAAQxlB,UAAQ,IAAAslB,IAAItlB,EAC7BP,SAA2B,QAAnB8lB,EAAEC,EAAQ/lB,UAAS,IAAA8lB,IAAI9lB,EAC/BH,MAAOmmB,EACP9lB,eAAiC,QAAjBulB,GAAiCvlB,EACjDvC,UAAWsoB,K,uDCjCZ,MAcME,GAAkB,SAACC,GAA0F,IAAxDC,EAA6Ctf,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9G,MAAMuf,EAAuBl+B,wBAAA,GACtBi+B,GACAD,EAAgBG,eAEjBC,EAAsBhrB,IAAmB,IAADirB,EAC1C,OAAqC,QAArCA,EAAOH,EAAwB9qB,UAAM,IAAAirB,IAAI,IAEvCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAI3sB,OAAO,OAADvQ,OAAQG,OAAOooB,KAAK0U,GAASrtB,KAAK,KAAI,SAE7DutB,EAAiBH,EAASzV,MAAM2V,GAEtC,OAAO79B,cAAC+9B,IAAMC,SAAQ,CAAArlB,SACjBmlB,EAAevrB,KAAI,CAACC,EAAOyG,IACpBA,EAAQ,IAAM,EAAUjZ,cAAC+9B,IAAMC,SAAQ,CAAArlB,SAA4BnG,GAAK,GAAA7R,OAAxB6R,EAAK,KAAA7R,OAAIsY,IACtD2kB,EAAQprB,MAHKmrB,IAO1BM,EAAwB,CAC1B,sBAAwBC,GACbV,EAAmB,uBAAuBpQ,WAAW,eAAgB8Q,GAEhF,sBAAwBA,GACbV,EAAmB,uBAAuBpQ,WAAW,eAAgB8Q,GAEhF,6BAA+BC,GACpBX,EAAmB,8BAA8BpQ,WAAW,aAAa,GAADzsB,OAAKw9B,IAExF,gCAAkCC,GACvBV,EACHF,EAAmB,iCACnB,CAAEY,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDb,EACHF,EAAmB,iCACnB,CAAEc,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOlB,EACHF,EAAmB,8BACnB,CAAEiB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOnB,EACHF,EAAmB,kCACnB,CAAEqB,cAGV,4BAA8BC,GACnBpB,EACHF,EAAmB,6BACnB,CAAEsB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCM,CAC9BT,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,sCACIO,GAEOhC,EACHF,EAAmB,uCACnB,CAAEkC,aAGV,oBACIC,GAEOjC,EACHF,EAAmB,qBACnB,CAAEmC,eAKd,OAAAvgC,wBAAA,GACOg+B,GAAe,IAClBG,cAAeD,EACfhiC,WAAU8D,wBAAA,GACHk+B,GACAW,MC7JF2B,GAAUC,mBAAkB,CAAC/kB,EAAKC,KAC3C,MAAM+kB,EAAsB,MAExB,MAAM7Y,EAAM,IAAIC,IAAI0G,OAAOmS,SAASpS,MAC9BqS,EAAe/Y,EAAIgZ,aACnBC,EAAyBF,EAAajlB,IAAI,YAIhD,GAFAilB,EAAaG,OAAO,YACpBvS,OAAOwS,QAAQC,aAAazS,OAAOwS,QAAQE,MAAO,GAAIrZ,EAAI0G,MACtDuS,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,MACT,MAAOna,GAEL,OADAC,QAAQC,MAAM,iDAAkDF,GACzD,QAjBa,GAoBtBsa,EAAqD,GACrDC,EAAkBxD,GAAe/9B,wBAAC,GDjCF,CACtCjC,KAAM,UACNyjC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,IC4B2B,IAC/BzD,cAAe,MAsCb0D,EAAehJ,UACjB,GAAIyI,EAAYQ,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiB5I,MAAM,GAAD73B,OACrBC,aAAsB,gBAAAD,OAAeugC,EAAY,SACpD,CACIxI,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhB2I,QAAsCD,EAASE,OAErD,IAAKD,EAAa9D,cAAe,MAAO,IAAI3hB,MAAM,uBAClD,MAAM2lB,EAAoBpE,GAAgBkE,EAA6B,QAAjBF,EAAET,EAAYc,WAAG,IAAAL,OAAA,EAAfA,EAAiB5D,eAGzE,OAFAmD,EAAYQ,GAAgBK,EAErBA,EACT,MAAOnb,GAEL,OADAC,QAAQC,MAAM,gEAAiEF,GACxE,OAGTqb,EAAiBxJ,UACnB,MAAMyJ,EAAW3mB,IAAM4mB,oBAAoBT,GAC3C,IAAKQ,EAAU,OAIf,MAAML,EAAgBX,EAAYQ,GAE5BR,EAAYQ,SADND,EAAaC,GAGrBG,GACAvmB,EAAI,CACA8mB,aAAc7mB,IAAM4mB,oBAAoBT,GACxCW,SAAUR,EAAa/lC,aAE3BklC,aAAasB,QAAQ,WAAYZ,GACjCpmB,EAAI,CACAinB,WAAW,EACXH,aAAcF,KAGlB5mB,EAAI,CACAinB,WAAW,EACXH,aAAc7mB,IAAM4mB,oBAAoBH,IACxCK,SAAUlB,EAAgBrlC,cAKtC,MAAO,CACHqmC,oBAAqB,GACrBC,aDhIkC,CACtCzkC,KAAM,UACNyjC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJa,SAAUlB,EAAgBrlC,WAC1BgrB,MAAO,KACP0b,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUjK,UAjGeA,WACzB,IACI,MAAMmJ,QAAiB5I,MAAM,GAAD73B,OACrBC,aAAsB,6BACzB,CACI83B,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBiJ,QAA8DP,EAASE,OAE7E,IAAKK,EAAqB,MAAO,IAAI/lB,MAAM,qBAE3Cd,EAAI,CACA6mB,sBACAM,iBAAiB,IAEvB,MAAO7b,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FtL,EAAI,CACA6mB,oBAAqB,CACjBH,IAAK,CACDrkC,KAAM,UACNyjC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBiB,iBAAiB,MAkErBE,IAEJC,oBAAqBnK,gBAEXgJ,EAAa,aACbQ,EAAe3B,GACrBhlB,EAAI,CACAknB,cAAc,KAGtBf,eACAQ,qBAIKY,GAAcA,IACNzC,IAAQne,IAAA,IAAC,SAAEogB,GAAUpgB,EAAA,OAAKogB,KAIlCS,GAAcA,IAAM1C,GAAQ2C,WAAWV,S,cC/IpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAcxV,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGyV,GAAc,IAAIC,IAAIL,GAAalwB,IAAImwB,KAEvCK,GAAsBP,GAAqB1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","file":"static/js/main.001d151a.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 790,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 806,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detech the actual version from incoming cards. */\r\n    delete baseCard.version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const uploadToImgur = async (imgLink: string) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('image', imgLink);\r\n    formdata.append('type', 'url');\r\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\r\n\r\n    return await fetch('https://api.imgur.com/3/image', {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow',\r\n    });\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumSize,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\r\n                    pendulumTextStyle,\r\n                    pendulumSize,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    globalScale: number,\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n    mirrorPendulumScale: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        globalScale,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n        mirrorPendulumScale,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n        bulletWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    contextualDoubleQuoteRegex,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_FULL_LINE_CLOSE\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    const fullLineList = [];\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let lineReplacement: string | undefined;\r\n    let lineContent: string | undefined;\r\n    let fullLineReplacement: string | undefined;\r\n    let fullLineContent: string | undefined;\r\n    let willContinue = false;\r\n    do {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        lineReplacement = result?.[1];\r\n        lineContent = result?.[2];\r\n        fullLineReplacement = result?.[3];\r\n        fullLineContent = result?.[4];\r\n\r\n        willContinue = false;\r\n        if (lineContent && lineReplacement) {\r\n            fullLineList.push(lineContent);\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'left' });\r\n            willContinue = true;\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            fullLineList.push(fullLineContent);\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'justify' });\r\n            willContinue = true;\r\n        }\r\n    } while (willContinue);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n    /** Restore all remaining nb line symbol back to their normal letters. */\r\n    effectText = effectText\r\n        .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n        .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]');\r\n\r\n    return {\r\n        fullLineList,\r\n        fullLineListOption,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n    } = option ?? {};\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n        fullLineListOption,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 1000,\r\n                '2': 1000,\r\n                '3': 1000,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (additionalLineCount > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current lint count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList,\r\n                        additionalLineCount,\r\n                        format, textData,\r\n                        width,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = lineListWithRatio.length + additionalLineCount;\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (sizeLevel < fontList.length)\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\r\n                return {\r\n                    line,\r\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                                globalScale,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0 && EffectFontData[fontDataKey]) {\r\n                const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                const dynamicFlavorFontData = useDynamicSize\r\n                    ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n                    : flavorFontData;\r\n                const flavorFontSizeData = useDynamicSize\r\n                    ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                    : flavorFontData.fontList[appliedSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: dynamicFlavorFontData,\r\n                    fontLevel: dynamicSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                            globalScale,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n) => {\r\n    if (!ctx) return;\r\n    if (foil === 'normal') return;\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (withBorder) {\r\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\r\n    } else {\r\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n            .map(async entry => {\r\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                const coordinate = [left, top, width, height] as const;\r\n\r\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\r\n            })\r\n        );\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType, pendulumSize);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n                /** Background fill is not depend on art size */\r\n                fillWidth: artFrameWidth,\r\n                fillHeight: pendulumStructureHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth * globalScale;\r\n                    clonedCanvas.height = cardHeight * globalScale;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * leftToEffectBox,\r\n                        globalScale * topToEffectBox,\r\n                        globalScale * effectBoxWidth,\r\n                        globalScale * effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\r\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(\r\n                ctx,\r\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\r\n                678, 55,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumIconCanvas = document.createElement('canvas');\r\n            pendulumIconCanvas.width = pendulumIconFrameWidth;\r\n            pendulumIconCanvas.height = pendulumIconFrameHeight;\r\n            const pendulumIconContext = pendulumIconCanvas.getContext('2d');\r\n            await drawAsset(pendulumIconContext, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconContext.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconContext.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkArrowMap(ctx, globalScale, linkMap, positionType, boundless);\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityText / 100;\r\n\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-text-${bottomFrame}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    ctx,\r\n                    `background/background-text-${bottomFrame}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][bottomFrame] ?? {};\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-${exceptionFrameType}-${bottomFrame}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumBorderCanvas = document.createElement('canvas');\r\n            pendulumBorderCanvas.width = cardWidth;\r\n            pendulumBorderCanvas.height = cardHeight;\r\n            const pendulumBorderContext = pendulumBorderCanvas.getContext('2d');\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderContext.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                await drawAsset(\r\n                    pendulumBorderContext,\r\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                    30, topToPendulumStructureFrame,\r\n                );\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkMapFoil(ctx, globalScale, foil, withBorder, positionType);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopArtFinish(\r\n                    ctx,\r\n                    'art',\r\n                    async (finishType, pendulumSuffix) => {\r\n                        return await drawAssetWithSize(\r\n                            ctx,\r\n                            `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                            artFinishX, artFinishY,\r\n                            artWidth, artWidth / artRatio,\r\n                        );\r\n                    },\r\n                    pendulumSize,\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n\r\n    if (!(ctx && cloneCtx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => {};\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n        patternContext.scale(globalScale, globalScale);\r\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n        patternContext.globalCompositeOperation = patternBlendMode;\r\n        patternContext.resetTransform();\r\n        await drawAssetWithSize(\r\n            patternContext, `finish-name/${patternImage}.png`,\r\n            edge, trueBaseline - maxAscent,\r\n            width,\r\n            maxAscent + maxDescent,\r\n        );\r\n        ctx.globalCompositeOperation = 'source-in';\r\n        ctx.drawImage(patternCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.scale(xRatio, yRatio);\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + embossThickness,\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        const resetShadow = setTextStyle({\r\n            ctx: shadowContext,\r\n            x: shadowOffsetX,\r\n            y: shadowOffsetY,\r\n            shadowColor: shadowColor,\r\n            blur: shadowBlur,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.scale(1 / xRatio, 1 / yRatio);\r\n        shadowContext.drawImage(canvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.drawImage(shadowCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetShadow();\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => {},\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + (image.naturalWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            image => baseline - image.naturalWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            image => globalScale * image.naturalWidth,\r\n            image => globalScale * image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const exceptionDigitWidthRatio = 0.8;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 1 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    _edge = 99,\r\n    _baseline = 1150.93,\r\n    _baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle, globalScale } = option ?? {};\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const baselineOffset = _baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${37 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${34 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${37 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    generateLayer,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = !!(atk || def) || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number, customFill?: string) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                        fillWidth, fillHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * fillWidth, globalScale * fillHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * destinationWidth, globalScale * destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            globalScale * destinationX, globalScale * destinationY,\r\n                            globalScale * destinationWidth, globalScale * destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame */\r\n            if (isLink && !isPendulum) {\r\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\r\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        withBlueScale,\r\n        withRedScale,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\r\n        drawStat(ctx, atk.trim(), 508.824, 1106.494, globalScale);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865, 1106.494, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const isNumberPassword = /^[0-9]*$/.test(password);\r\n        const mayOffset = isNumberPassword && isPendulum && isLink;\r\n        const willOffset = mayOffset;\r\n        const {\r\n            rightEdge,\r\n        } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n            fontLevel: !isNumberPassword ? 1 : 0\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n                globalScale,\r\n            });\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            const fontDataKey = `${format}-${pendulumSize}`;\r\n            const coordinateList = PendulumEffectCoordinateMap\r\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                [pendulumSize];\r\n            /** Account for half scaleless frame */\r\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                ? coordinateList\r\n                : coordinateList.map(({\r\n                    trueEdge, trueWidth, ...rest\r\n                }) => ({\r\n                    ...rest,\r\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    trueWidth: trueWidth\r\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                }));\r\n\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[fontDataKey],\r\n                fontDataKey,\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: modifiedCoordinateList,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink && isPendulum) {\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            pendulumSize,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 60px 45px 12px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    {label}\r\n                                </Popover>\r\n                                : label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nconst LogSentence = styled.li`\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 200px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            {content}\r\n                            {image && <img src={image} alt={`version-${version}-illust`} />}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #222222 inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']}\r\n                    </div>\r\n                </span>\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        {label}\r\n                    </Popover>\r\n                    : label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip\r\n                                placement=\"topLeft\"\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        .resolution-overlay {\r\n            position: absolute;\r\n            left: 50%;\r\n            bottom: 3px; // Alignment\r\n            font-size: var(--fs-xs);\r\n            text-align: center;\r\n            transform: translateX(-50%);\r\n        }\r\n        .resolution-icon {\r\n            transform: translateY(-5px); // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <div>\r\n                        <CardDataCopyButton\r\n                            disabled={isPartial}\r\n                            data={window.location.href}\r\n                            withText\r\n                        >\r\n                            <div className=\"icon\"><LinkOutlined /></div>\r\n                            <div className=\"label\">\r\n                                {language['button.export-modal.share-button.label']}\r\n                            </div>\r\n                        </CardDataCopyButton>\r\n                    </div>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    try {\r\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                        if (imgurResponse.status !== 200) {\r\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                        }\r\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    } catch (e) {\r\n                        /** Failing the upload process does not terminate the import process */\r\n                        console.error('Upload error:', e);\r\n                        notification.error({\r\n                            message: language['prompt.import.imgur.message'],\r\n                            description: language['prompt.import.imgur.description'],\r\n                        });\r\n                    }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n        supportFormat,\r\n    }))\r\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({ ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : atk;\r\n            const nextDef = willRemoveStat ? '' : def;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            if (willRemoveStat) {\r\n                onStatChange(nextAtk, nextDef);\r\n            }\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return cardIcon === 'auto' && autoIconType === 'none'\r\n        ? showCreativeOption\r\n            ? <RadioTrain\r\n                className=\"fill-input-train\"\r\n                value={cardIcon}\r\n                onChange={changeCardIcon}\r\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                    return {\r\n                        label: icon ?? <CloseCircleOutlined />,\r\n                        value,\r\n                        tooltipProps: {\r\n                            title: language[fullLabelKey],\r\n                        },\r\n                    };\r\n                })}\r\n            >\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : null\r\n        : iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        <div>\r\n            <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </div>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { DEFAULT_PENDULUM_SIZE, FrameInfoMap, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: flex;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <div className=\"pendulum-size\">\r\n                <Popover key=\"color-picker\"\r\n                    overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <StyledDropdown.Container>\r\n                            {pendulumSizeList.map(({ value, label }) => {\r\n                                return <StyledDropdown.Option key={value}\r\n                                    className={pendulumSize === value ? 'menu-active' : ''}\r\n                                    onClick={() => {\r\n                                        onPendulumSizeChange(value);\r\n                                    }}\r\n                                >\r\n                                    {label}\r\n                                </StyledDropdown.Option>;\r\n                            })}\r\n                        </StyledDropdown.Container>\r\n                    </div>}\r\n                    placement=\"bottomLeft\"\r\n                >\r\n                    <PopoverButton\r\n                        $softMode={softMode}\r\n                        $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                    >\r\n                        {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                    </PopoverButton>\r\n                </Popover>\r\n            </div>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox\r\n                    className=\"mirror-scale\"\r\n                    onChange={e => {\r\n                        const willMirror = e.target.checked;\r\n\r\n                        updateSetting({ mirrorPendulumScale: willMirror });\r\n                        if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                    }}\r\n                    checked={mirrorPendulumScale}\r\n                >\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? '#eaeaea' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def) => footerInputGroupRef.current?.setValue({ atk, def })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        softMode={reduceMotionColor}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Pendulum Size',\r\n                                    value: <div>\r\n                                        {PendulumSizeList\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { notification, Tooltip } from 'antd';\r\nimport { Lightbox, LightboxRef, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}