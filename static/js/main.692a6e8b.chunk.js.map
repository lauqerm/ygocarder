{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","util/imgur.ts","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","hasEmboss","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletSymbolWidth","fontSize","lineHeight","lineCount","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","PendulumNormalFontData","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","canvas","gaussianShaderX","gaussianShaderY","this","init","console","info","ShaderPass","RenderPass","EffectComposer","apply","arguments","length","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","renderToScreen","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","Math","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getContext","data","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","distanceTransform","ndarray","row","shape","column","nextDtBitmap","heightIntensityRatio","floor","rowIndex","colIndex","currentIndex","heightValue","get","heightmapCanvas","document","createElement","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","max","min","e","error","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","n","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","kanjiHelper","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","blob","link","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","slice","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader36","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","useDefault","strokeStyle","imageCacheMap","drawAsset","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawFrom","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","dx","dy","sw","sh","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_fullLineList$length","content","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","resetTransform","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","resetStroke","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","embossedImageData","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","isMonster","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","rightEdge","isNumberPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","condenseReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","CombinedSliderContainer","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","Affiliation","rel","GithubFilled","StyledVersionLog","StyledAppHeaderButtonContainer","AppHeader","useShallow","Radio","Group","Button","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","MenuOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","imgurResponse","myHeaders","Headers","append","formdata","FormData","imgLink","method","redirect","uploadToImgur","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","EmbossControlContainer","VECTOR_VALUE_EPSILON","DEFAULT_PITCH","DEFAULT_YAW","EmbossController","defaultPitch","defaultYaw","requestUpdate","verticalAngle","setVerticalAngle","colorVec","angleVec","allowPickColor","nextAngle","nextColor","hexToRgb","pitch","yaw","SyncOutlined","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","CaretDownOutlined","fontValue","__","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","changeFrame","frameValue","nextFrame","isST","nextTypeAbility","nextPassword","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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AU,OACVF,UAAW,KAEfK,IAAK,CACDJ,aAAc,SACdC,SAAU,OACVF,UAAW,MCxFNa,EAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,CAACC,EAAKC,KAC7DD,EAAIC,EAAIP,WAAaO,EACdD,IACR,CAAC,GCpiCEE,EAA8C,CAAC,CAAEnC,UAAW,UAAWxE,QAAS,IAChF4G,EAA8C,CAChD,CAAEpC,UAAW,UAAWxE,QAAS,KACjC,CAAEwE,UAAW,WAAYxE,QAAS,MAUzB6G,EAA+C,CACxDpC,MAAO,CACH1H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAAC,GAEzBpC,MAAO,CACH3H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAAC,GAEzBnC,MAAO,CACH5H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChB,cAAeH,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,UAAaA,EACb,MAASA,IAGjB/B,MAAO,CACH7H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAAC,GAEzBjC,MAAO,CACH9H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAAC,GAEzB/B,MAAO,CACHhI,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAAC,GAEzB9B,MAAO,CACHjI,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAUxE,QAAS,MAAS,CAAEwE,UAAW,cAAexE,QAAS,SAGxGiF,MAAO,CACHlI,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChB,aAAcF,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,MAASA,EACT,mBAAoBA,EACpB,KAAQA,EACR,KAAQA,IAGhB1B,MAAO,CACHnI,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAUxE,QAAS,SAKjD+G,EAAkD,CAC3DtC,MAAO,CACH1H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChBE,IAAK,CAAC,CAAC,KAGftC,MAAO,CACH3H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChBE,IAAK,CACD,CAAEhH,QAAS,IAAMwE,UAAW,UAC5B,CAAExE,QAAS,IAAMwE,UAAW,eAC5B,CAAExE,QAAS,IAAMwE,UAAW,eAIxCG,MAAO,CACH5H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChBE,IAAK,CAAC,CAAEhH,QAAS,IAAMwE,UAAW,eAAiB,CAAExE,QAAS,IAAMwE,UAAW,eAGvFI,MAAO,CACH7H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChBE,IAAK,CAAC,CAAEhH,QAAS,IAAMwE,UAAW,eAAiB,CAAExE,QAAS,GAAKwE,UAAW,eAGtFK,MAAO,CACH9H,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChBE,IAAK,CAAC,CAAEhH,QAAS,IAAMwE,UAAW,eAAiB,CAAExE,QAAS,GAAKwE,UAAW,eAGtFO,MAAO,CACHhI,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChBE,IAAK,CAAC,CAAEhH,QAAS,IAAMwE,UAAW,eAAiB,CAAExE,QAAS,GAAKwE,UAAW,eAGtFQ,MAAO,CACHjI,MAAO,QACPC,MAAO,IACP8J,mBAAoB,CAChBE,IAAK,CAAC,CAAC,MAUNC,EAAc,CACvBrI,OAAQ,SACR6E,KAAM,OACNL,SAAU,YAED8D,EAAepK,GAAgC,CACxD,CACIwB,KAAM2I,EAAoB,OAC1BjK,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY8B,OACnB0B,MAAO,UACPE,UAAU,GAEd,CACIlC,KAAM2I,EAAkB,KACxBjK,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY2G,KACnBnD,MAAO,UACPE,UAAU,GAEd,CACIlC,KAAM2I,EAAsB,SAC5BjK,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYsG,SACnB9C,MAAO,UACPE,UAAU,IClIL2G,EAAsB,CAC/BC,qBAAsB,EACtBC,kBAAmB,GACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXC,mBAAoB,EACpBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAqCXC,EAAkB,CAC3BC,oBAAqB,GACrBC,iBAAkB,SAClBC,cAAc,EACdC,iBAAkB,QAQhBC,EAAwB,CAC1BC,aAAc,0BACdC,aAAc,2BACdf,kBAAmB,GACnBS,oBAAqB,KACrBO,YAAa,sBACbC,WAAY,SACZC,gBAAiB,EACjBN,iBAAkB,GAEhBO,EAAqC,IACpCN,EACH9F,KAAM,aACN0F,oBAAqB,IACrBW,UAAW,MACXC,SAAU,IAEDC,EAAqC,IAC3CT,EACH9F,KAAM,sBACN0F,oBAAqB,IACrBW,UAAW,MACXC,SAAU,IAERE,EAAqC,IACpCV,EACH9F,KAAM,0BACNqG,UAAW,MACXI,aAAc,UACdH,SAAU,IAGDI,EAA2C,CACpD,IAAO,IACAH,EACHD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,GAAIC,mBAAoB,GAChG,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,KAGtG,WAAY,IACLwB,EACHD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC/F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,KAGtG,gBAAiB,IACVwB,EACHD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,GAAMC,UAAW,GAAIC,mBAAoB,KAGvG,WAAY,IACLwB,EACHD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,MAO7F4B,EAA2C,CACpD,IAAO,IACAP,EACHE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,GAAIC,mBAAoB,GAChG,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,KAGtG,WAAY,IACLqB,EACHE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC/F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,KAGtG,gBAAiB,IACVqB,EACHE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,GAAMC,UAAW,GAAIC,mBAAoB,KAGtG,WAAY,IACLqB,EACHE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,KAGtG,IAAO,IACAyB,EACHF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAClE,CAAEH,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,KAG1E,WAAY,IACL0B,EACHF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,KAG/E,gBAAiB,IACV0B,EACHF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,KAG/E,WAAY,IACL0B,EACHF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAMtE8B,EAAmD,CAC5D5D,IAAK,IACEuD,EACHD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,MAItE+B,EAAmD,CAC5D7D,IAAK,IACEoD,EACHE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,KAG/EzB,IAAK,IACEmD,EACHF,SAAU,CACN,CACI3B,kBAAmB,GACnBI,mBAAoB,EACpBH,SAAU,MACVC,WAAY,KACZI,kBAAmB,GACnBH,UAAW,GAEf,CACIH,kBAAmB,GACnBI,mBAAoB,EACpBH,SAAU,MACVC,WAAY,KACZI,kBAAmB,GACnBH,UAAW,GAEf,CACIH,kBAAmB,GACnBI,mBAAoB,EACpBH,SAAU,MACVC,WAAY,KACZI,kBAAmB,IACnBH,UAAW,GAEf,CACIH,kBAAmB,GACnBC,SAAU,MACVC,WAAY,KACZI,kBAAmB,GACnBH,UAAW,MASdgC,EAAoE,CAC7EC,WAAY,CACR,EAAK,IACL,EAAK,IACL,EAAK,KAETC,OAAQ,CACJ,EAAK,IACL,EAAK,IACL,EAAK,KAETC,MAAO,CACH,EAAK,IACL,EAAK,IACL,EAAK,KAETC,UAAW,CACP,EAAK,IACL,EAAK,IACL,EAAK,KAETC,QAAS,CACL,EAAK,IACL,EAAK,IACL,EAAK,MC7WAC,EAAqE,CAC9EC,QAAS,CACLhN,MAAO,UACPiE,SAAU,qCACVgJ,SAAU,CACNvB,aAAc,yBACd/F,KAAM,yBACNgG,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,IACrBY,SAAU,CAAC,CACP3B,kBAAmB,GACnBC,SAAU,KACVK,kBAAmB,IACnBG,cAAe,KACfN,UAAW,EACXD,WAAY,KACZQ,QAAS,IAEbkC,mBAAoB,CAChB,EAAK,CACDC,UAAW,IACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,MAGhC,EAAK,CACDH,UAAW,EACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,SAM5CsD,MAAO,CACH5Q,MAAO,QACPiE,SAAU,mCACVgJ,SAAU,CACNvB,aAAc,QACd/F,KAAM,QACNgG,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,KACrBwF,OAAQ,OACR5E,SAAU,CAAC,CACP3B,kBAAmB,MACnBC,SAAU,GACVK,kBAAmB,IACnBG,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,MAIrB8F,IAAK,CACD9Q,MAAO,MACPiE,SAAU,iCACVgJ,SAAU,CACNvB,aAAc,0BACd/F,KAAM,0BACNgG,aAAc,2BACdN,oBAAqB,KACrBC,iBAAkB,WAClBC,cAAc,EACda,aAAc,OACd2E,WAAY,oBACZC,gBAAiB,EACjBpF,YAAa,sBACbC,WAAY,SACZC,gBAAiB,KACjBE,UAAW,MACXC,SAAU,CAAC,CACP3B,kBAAmB,MACnBC,SAAU,GACVK,kBAAmB,KACnBC,gBAAiB,EACjBE,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,OCvJZiG,GAA4C,CACrDtI,IAlDwC,CACxChD,KAAM,sBACN+F,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIjB,SAAU,EACVV,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIR,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,QAyB1B9B,IArBwC,CACxCrD,KAAM,oBACN+F,aAAc,oBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdS,aAAc,UACdJ,UAAW,MACXC,SAAU,CAAC,CACP3B,kBAAmB,GACnBC,SAAU,GACVQ,cAAe,IACfP,WAAY,KACZC,UAAW,EACXG,kBAAmB,EACnBsG,kBAAmB,QAsEdC,GAA6C,CACtDxI,IA/DyC,CACzChD,KAAM,sBACN+F,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIR,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXM,cAAe,EACfH,kBAAmB,GACnBE,iBAAkB,KAClBE,QAAS,KAsCjBhC,IAlCyC,CACzCrD,KAAM,oBACN+F,aAAc,oBACdqF,WAAY,sBACZlF,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXI,aAAc,WACdH,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIR,kBAAmB,MACnBC,SAAU,GACVK,kBAAmB,EACnBE,iBAAkB,KAClBL,UAAW,EACXD,WAAY,KACZS,mBAAoB,EACpBC,iBAAkB,SASjBkG,GAAmC,CAC5CzL,KAAM,yBACN+F,aAAc,yBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,yBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GACjB1G,mBAAoB,IACpBI,cAAe,IACfH,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,MACVC,WAAY,MACZC,UAAW,EACX4G,gBAAiB,GACjB1G,mBAAoB,IACpBI,eAAgB,IAChBH,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GAEjB1G,mBAAoB,OACpBQ,mBAAoB,OACpBJ,eAAgB,IAChBH,kBAAmB,MAIlB0G,GAAmC,CAC5C3L,KAAM,0BACN+F,aAAc,0BACdG,WAAY,SACZC,gBAAiB,GACjBT,oBAAqB,KACrBO,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GACjBzG,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GACjBzG,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACX4G,gBAAiB,GACjBzG,kBAAmB,IACnBC,gBAAiB,EACjBE,eAAgB,IAChBI,mBAAoB,WCxMnBoG,GAA4C,CACrrtD,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,UAICC,GAAe,CACxB1I,IAAK,CACD,+HACA,wGACA,wDAEJL,IAAK,CACD,kDACA,4BACA,oCAIKgJ,GAA8C,CACvD3I,IAAK,mGACLL,IAAK,kCAIIiJ,GAA0C,CAEnD,eAAM,OACN,eAAM,QACN,2BAAQ,gBACR,2BAAQ,cACR,uCAAU,UACV,qBAAO,WACP,2BAAQ,eACR,iCAAS,SACT,qBAAO,QACP,qBAAO,QACP,eAAM,OACN,6CAAW,SACX,2BAAQ,WACR,qBAAO,SACP,qBAAO,UACP,qBAAO,QACP,uCAAU,UACV,eAAM,OACN,2BAAQ,UACR,qBAAO,OACP,qBAAO,cACP,iCAAS,cACT,eAAM,UACN,qBAAO,UACP,qBAAO,eACP,qBAAO,OACP,uCAAU,SACV,uCAAU,SACV,iCAAS,oBACT,6CAAW,cACX,iCAAS,iBACT,yDAAa,gBAEb,iCAAS,UACT,iCAAS,aACT,2BAAQ,YACR,iCAAS,SAET,eAAM,SACN,eAAM,SACN,eAAM,SACN,uCAAU,SACV,eAAM,SACN,2BAAQ,UACR,iCAAS,MACT,uCAAU,WACV,qBAAO,OACP,iCAAS,UACT,2BAAQ,QACR,2BAAQ,iBACR,2EAAgB,eAEhB,iCAAS,QACT,2BAAQ,SACR,2BAAQ,OACR,2BAAQ,OACR,iCAAS,SACT,2BAAQ,QAER,CAACF,GAAa1I,IAAI,IAAK0I,GAAa/I,IAAI,GACxC,CAAC+I,GAAa1I,IAAI,IAAK0I,GAAa/I,IAAI,GACxC,CAAC+I,GAAa1I,IAAI,IAAK0I,GAAa/I,IAAI,GAExC,6CAAgB,QAChB,gmCACuK,oTAEvK,+GAAsB,sCAEtB,gQAA+C,+EAC/C,CAACgJ,GAAoB3I,KAAM2I,GAAoBhJ,KAEtCkJ,GAAkBrN,OAAOsN,QAAQF,IAAiBnI,QAAO,CAACC,EAAKC,KACxE,MAAOoI,EAASC,GAAWrI,EAG3B,OAFAD,EAAIsI,GAAWD,EAERrI,CAAG,GACX,CAEC,oFAAgF,kQC7UvEuI,GAA0C,CACnD,OAAU,CACN1Q,KAAM,SACN+B,QAAS,qBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,KAEhB,OAAU,CACN9Q,KAAM,SACN+B,QAAS,qBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN9Q,KAAM,SACN+B,QAAS,qBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACP9Q,KAAM,UACN+B,QAAS,sBACT4O,WAAY,OACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,IAAO,CACH9Q,KAAM,MACN+B,QAAS,kBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJ9Q,KAAM,OACN+B,QAAS,mBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN9Q,KAAM,SACN+B,QAAS,qBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACL9Q,KAAM,QACN+B,QAAS,oBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJ9Q,KAAM,OACN+B,QAAS,mBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACL9Q,KAAM,QACN+B,QAAS,oBACT4O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,GAEhB,eAAgB,CACZ9Q,KAAM,eACN+B,QAAS,2BACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACP9Q,KAAM,UACN+B,QAAS,sBACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN9Q,KAAM,SACN+B,QAAS,qBACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,GAAM,CACF9Q,KAAM,KACN+B,QAAS,iBACT4O,WAAY,OACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,OAAU,CACN9Q,KAAM,SACN+B,QAAS,qBACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJ9Q,KAAM,OACN+B,QAAS,mBACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,MAAS,CACL9Q,KAAM,QACN+B,QAAS,oBACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,YAAa,CACT9Q,KAAM,YACN+B,QAAS,wBACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,cAAe,CACX9Q,KAAM,cACN+B,QAAS,0BACT4O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJ9Q,KAAM,OACN+B,QAAS,mBACT4O,WAAY,OACZC,QAAS,YACTG,yBAA0B,CACtB,qBACA,qBACA,sBACA,iBAEJC,qBAAsB,0BAA0B,CAC5C,yBACA,yBACA,yBACA,0BACA,0BACA,qBACFC,KAAK,SACPH,WAAY,IAGPI,GAAYjO,OAAOC,OAAOwN,ICzL1BS,GAAoB,CAC7B,CAAEC,IAAK,IAAKC,KAAM,GAAItS,MAAO,IAAKC,OAAQ,KAC1C,CAAEoS,IAAK,IAAKC,KAAM,IAAKtS,MAAO,IAAKC,OAAQ,IAC3C,CAAEoS,IAAK,IAAKC,KAAM,IAAKtS,MAAO,IAAKC,OAAQ,KAC3C,CAAEoS,IAAK,IAAKC,KAAM,GAAItS,MAAO,GAAIC,OAAQ,KACzC,CAAEoS,IAAK,EAAGC,KAAM,EAAGtS,MAAO,EAAGC,OAAQ,GACrC,CAAEoS,IAAK,IAAKC,KAAM,IAAKtS,MAAO,GAAIC,OAAQ,KAC1C,CAAEoS,IAAK,IAAKC,KAAM,GAAItS,MAAO,IAAKC,OAAQ,KAC1C,CAAEoS,IAAK,IAAKC,KAAM,IAAKtS,MAAO,IAAKC,OAAQ,IAC3C,CAAEoS,IAAK,IAAKC,KAAM,IAAKtS,MAAO,IAAKC,OAAQ,MAElCsS,GAAiB,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KACrDC,GAAiB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,ICPzDC,GAAqB,IAAIC,OADD,sBAIxBC,GAA2B,IAAID,OADP,wBAGxBE,GAAoB,8IACpBC,GAAiB,IAAIH,OAAOE,IAE5BE,GAAqB,IAAIJ,OAAO,cAAcE,SAK9CG,GAAe,SACfC,GAAgB,SAChBC,GAAe,SACfC,GAAgB,SAChBC,GAAwB,SACxBC,GAAsB,SAEtBC,GAAqB,IAAIX,OAAO,IAAI,CAC7CK,GACAC,GACAC,GACAC,GACAC,GACAC,IACFlB,KAAK,mBAAoB,KAGdoB,GAA6B,IAAIZ,OADA,yBAAyBK,KAAeE,KAAeE,WAChB,KAExEI,GAA8B,GAAGR,MAAgBC,KACjDQ,GAA0B,IAAId,OAAOa,IAGrCE,GAA0B,kGAAkGV,wBAAkCC,YAK9JU,GAAuB,IAAIhB,OAAO,0BAGlCiB,GAAqB,IADI9K,EAAmB+K,KAAIC,IAAK,IAAAC,EAAA,OAAmB,QAAnBA,EAAID,EAAM7K,iBAAS,IAAA8K,IAAID,EAAM/K,SAAS,IAAEoJ,KAAK,kBAGlG6B,GAAwB,iRACxBC,GAAe,IAAItB,OAAO,IAAIqB,OAG9BE,GAA2B,KAAKF,8LAMhCG,GAAuB,IAAIxB,OADD,yBAI1ByB,GAAmB,IAAIzB,OADD,gCAGtB0B,GAAiB,IAAI1B,OAAO,mBAC5B2B,GAAc,IAAI3B,OAAO,SAEzB4B,GAAgB,icAEhBC,GAAgB,ydAEhBC,GAAc,IAAI9B,OAAO,YACzB+B,GAAe,IAAI/B,OAAO,YAC1BgC,GAAe,IAAIhC,OAAO,YAG1BiC,GAA+B,IAAIjC,OAAO,YAG1CkC,GAAyB,IAAIlC,OAAO,kBAGpCmC,GAAwB,IAAInC,OAAO,YAEnCoC,GAAuC,CAChD,UAAM,GACN,UAAM,GACN,SAAK,EACL,SAAK,EACL,SAAK,EACL,IAAK,IACL,KAAM,KAEGC,GAAiD,CAC1D,UAAM,GACN,UAAM,KAEGC,GAAgD,CACzD,IAAK,KACL,IAAK,MAEIC,GAAuC,CAEhD,EAESC,GAAiD,CAC9D,EACaC,GAAgD,CAEzD,EAMSC,GAAoBC,GAA8B,QAAXA,EAAmB,EAAI,EAK9DC,GAAa,YAIbC,GAAmB,UAGnBC,IAAuB,KChHvBC,GAAiBA,KAAA,CAC1BC,QAAS,EACTL,OAAQ,MACRvV,MAAO,SACP6V,KAAM,SACNhT,QAAS9B,IACT+U,OAAQ,GACRC,UAAW,SACX5U,KAAM,QACN6U,cAAe,OACfC,UZzB+B,CAC/B1Q,KAAM,UACNN,UAAW,UACXiR,kBAAmB,UACnBhQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXF,WAAW,EACX7B,OAAQ,UACRL,QAAS,QYKTwR,UAAW,QACXC,UAAW9S,EACX+S,SAAU,OACVC,KAAM,EACNC,cAAe,OACf1M,IAAK,kCACL2M,QAAS,GACTC,QAAQ,EACRC,UAAW,SACXC,QA9B0B,CAC1BC,EAAG,EACHC,EAAG,EACH3W,MAAO,IACPC,OAAQ,KACR2W,KAAM,IACNC,OAAQ,GAyBRC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClBtU,eAAgB,MAChBuU,eArC0B,CAC1BT,EAAG,EACHC,EAAG,EACH3W,MAAO,IACPC,OAAQ,KACR2W,KAAM,IACNC,OAAQ,GAgCRO,QAAS,CACL,IACA,IACA,IACA,KAEJC,QAAQ,EACR3U,YAAY,EACZ4U,cAAe,OACfC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,CACT,QACA,SACA,UAEJC,YAAa,CACTC,iBAAkB,SAClBlM,UAAW,OACXmM,OAAQ,GAEZC,cAAe,CACXpM,UAAW,OACXmM,OAAQ,GAEZE,OAAQ,oTAERC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVC,QAAS,QACTC,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EACdC,QAAS,kDACTC,gBAAgB,EAChBC,cZpDgD,EAChD,EACA,WACA,EACA,WYiDAC,cZrDgD,EAChD,EACA,WACA,EACA,WYkDAC,gBZtDgD,EAChD,EACA,WACA,EACA,WYmDAC,kBZvDgD,EAChD,EACA,WACA,EACA,WYoDAC,eZxDgD,EAChD,EACA,WACA,EACA,WYsDAC,aAAc,CAAC,IAINC,GAAyBA,KAAA,CAClCC,GAAIC,iBACD3D,OAGM4D,GAAeA,KAAA,CACxB3D,QAAS,EACTL,OAAQ,MACRvV,MAAO,SACP6V,KAAM,SACNhT,QAAS9B,IACT+U,OAAQ,GACRC,UAAW,SACX5U,KAAM,GACN6U,cAAe,OACfC,UZ5G+B,CAC/B1Q,KAAM,UACNN,UAAW,UACXiR,kBAAmB,UACnBhQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXF,WAAW,EACX7B,OAAQ,UACRL,QAAS,QYwFTwR,UAAWnT,EACXoT,UAAW9S,EACX+S,SAAU,OACVC,KAAM,EACNC,cAAe,OACf1M,IAAK,kCACL2M,QAAS,GACTE,UAAW,SACXD,QAAQ,EACRE,QAAS,CACLC,EAAG,EACHC,EAAG,EACH3W,MAAO,IACPC,OAAQ,KACR2W,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClBtU,eAAgB,MAChBuU,eAAgB,CACZT,EAAG,EACHC,EAAG,EACH3W,MAAO,IACPC,OAAQ,KACR2W,KAAM,IACNC,OAAQ,GAEZO,QAAS,GACTC,OAAQ,KACR3U,YAAY,EACZ4U,cAAe,OACfC,eAAgB,GAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,GACbC,YAAa,CACTC,iBAAkB,SAClBlM,UAAW,OACXmM,OAAQ,GAEZC,cAAe,CACXpM,UAAW,OACXmM,OAAQ,GAEZE,OAAQ,GACRC,MAAO,GACPC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVC,QAAS5U,EACT6U,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EAEdC,QAAS,GACTC,gBAAgB,EAChBC,cZ5IgD,EAChD,EACA,WACA,EACA,WYyIAC,cZ7IgD,EAChD,EACA,WACA,EACA,WY0IAC,gBZ9IgD,EAChD,EACA,WACA,EACA,WY2IAC,kBZ/IgD,EAChD,EACA,WACA,EACA,WY4IAC,eZhJgD,EAChD,EACA,WACA,EACA,WY6IAC,aAAc,CAAC,IAGNK,GAAc,CACvB,CACInX,KAAM,OACNoX,QAAS,YACT5Z,MAAO,OACPgE,SAAU,2BACV6V,WAAY,oCAEhB,CACIrX,KAAM,OACNoX,QAAS,aACT5Z,MAAO,OACPgE,SAAU,2BACV6V,WAAY,qCAEhB,CACIrX,KAAM,WACNxC,MAAO,WACPgE,SAAU,+BACV6V,WAAY,MAEhB,CACIrX,KAAM,OACNxC,MAAO,SACPgE,SAAU,6BACV6V,WAAY,OAIPC,GAAmB,CAC5B,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WAG9CC,GAAgB,CACzB,UAAW,CACP/Z,MAAO,eACPK,MAAO,IACPC,OAAQ,IACR0Z,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,UAAW,CACPja,MAAO,eACPK,MAAO,IACPC,OAAQ,IACR0Z,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,WAAY,CACRja,MAAO,gBACPK,MAAO,IACPC,OAAQ,KACR0Z,MAAO,EACPC,aAAc,CAAC,IAAK,OAExB,YAAa,CACTja,MAAO2D,cAAA,OAAKuW,MAAO,CAAE5W,MAAO,uBAAwB6W,SAAC,mBACrD9Z,MAAO,KACPC,OAAQ,KACR0Z,MAAO,EACPC,aAAc,CAAC,KAAM,OAEzB,YAAa,CACTja,MAAO2D,cAAA,OAAKuW,MAAO,CAAE5W,MAAO,uBAAwB6W,SAAC,mBACrD9Z,MAAO,KACPC,OAAQ,KACR0Z,MAAO,EACPC,aAAc,CAAC,KAAM,QAGhBG,GAAiB,CAC1BL,GAAc,WACdA,GAAc,WACdA,GAAc,YACdA,GAAc,aACdA,GAAc,cAILM,GAAmB,CAC5B,CACIta,MAAO,MACPC,MAAO,QAEX,CACID,MAAO,OACPC,MAAO,U,qFC7Qf,MAAMsa,GAAuB,CACzBC,SAAU,CACN,SAAY,CAAE/X,KAAM,IAAKzC,MAAO,MAChC,EAAK,CAAEyC,KAAM,IAAKzC,MAAO,EAAM,MAEnCya,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFjI,KAAK,MACPkI,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFlI,KAAK,OAELmI,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAEnY,KAAM,IAAKzC,MAAO,MAC9B6a,EAAG,CAAEpY,KAAM,IAAKzC,MAAO,EAAM,MAEjCya,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFjI,KAAK,MACPkI,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFlI,KAAK,OAELsI,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAE/X,KAAM,KAAMzC,MAAO,GAC7B,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,GAAM,CAAEyC,KAAM,KAAMzC,MAAO,GAC3B,WAAc,CAAEyC,KAAM,KAAMzC,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyC,KAAM,IAAKzC,MAAO,OAEtCya,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFjI,KAAK,MACPkI,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACFlI,KAAK,OAGEuI,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACP7Y,KAAMsY,KAIH,MAAMQ,GAUTC,YAAYC,EAAiCC,GAAkC,KAT/EC,cAAQ,OACRC,oBAAc,OACdC,sBAAgB,OAChBC,cAAQ,OACRL,YAAM,OACNM,YAAM,OACNC,qBAAe,OACfC,qBAAe,EAGXC,KAAKH,OAASL,EACdQ,KAAKT,OAAS,IAAKT,QAAwCS,GAC3DS,KAAKC,OACLC,QAAQC,KAAK,6BAAoBC,KAAYC,KAAYC,KAC7D,CAEAC,MAAMtX,GAAiE,IAAvCsW,EAA+BiB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/D,MAAM,MAAEpc,EAAK,OAAEC,GAAW4E,EACpB0X,EAAUX,KAAKY,WAAW3X,GAChC+W,KAAKL,iBAAiBkB,WAAW/c,MAAQ6c,EACzCX,KAAKL,iBAAiBmB,WAAWhd,MAAQ,CAACM,EAAOC,EAAQ,GACzD2b,KAAKP,SAASsB,QAAQ3c,EAAOC,GAC7B2b,KAAKN,eAAeqB,QAAQ3c,EAAOC,GACnC2b,KAAKN,eAAesB,MAAMhB,KAAKiB,gBAAgB7c,EAAOC,IAEtD,MAAM,YAAE0a,EAAW,cAAEC,EAAa,eAAEC,EAAc,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,EAAK,KAAE7Y,GAAS,IAClFyZ,KAAKT,UACLA,GAGPS,KAAKkB,UAAUnC,GACfiB,KAAKmB,YAAYnC,GACjBgB,KAAKoB,aAAanC,GAClBe,KAAKqB,aAAanC,EAAW9a,EAAOC,GACpC2b,KAAKsB,oBAAoBnC,EAAUC,GACnCY,KAAKuB,QAAQhb,GAEbyZ,KAAKN,eAAe8B,OAAO,EAAI,GACnC,CAEAvB,OACI,MAAMwB,EAAS,IAAIC,MAAyB,GAAQ,GAAO,IAAO,GAAQ,EAAG,GACvEC,EAAQ,IAAID,KACZE,EAAoB,IAAIvB,KAAWsB,EAAOF,GAEhDzB,KAAKP,SAAW,IAAIiC,KAAoB,CAAEG,OAAO,EAAMC,WAAW,EAAMjC,OAAQG,KAAKH,SACrFG,KAAKP,SAASsC,cAAc,EAAU,GAEtC/B,KAAKL,iBAAmB+B,KAAoBM,MAAMpD,GAAgBN,UAElE0B,KAAKJ,SAAW,IAAI8B,KAAqB,CACrClD,eAAgBI,GAAgBJ,eAChCD,aAAcK,GAAgBL,aAC9BD,SAAU0B,KAAKL,mBAEnBK,KAAKJ,SAASqC,aAAc,EAE5B,MAAMC,EAAe,IAAIR,KAAoB,EAAG,EAAG,EAAG,GAChDS,EAAa,IAAIT,KAAWQ,EAAclC,KAAKJ,UACrD+B,EAAMS,IAAID,GAEVnC,KAAKD,gBAAkB,IAAIK,KAAW3B,IACtCuB,KAAKF,gBAAkB,IAAIM,KAAW/B,IACtC2B,KAAKF,gBAAgBuC,gBAAiB,EAEtCrC,KAAKN,eAAiB,IAAIY,KAAeN,KAAKP,SAAUO,KAAKiB,mBAC7DjB,KAAKN,eAAe4C,QAAQV,GAC5B5B,KAAKN,eAAe4C,QAAQtC,KAAKD,iBACjCC,KAAKN,eAAe4C,QAAQtC,KAAKF,gBACrC,CACAmB,gBAAgB7c,EAAgBC,GAC5B,OAAO,IAAIqd,KAAwBtd,EAAOC,EAAQ,CAC9Cke,UAAWb,KACXc,UAAWd,KACXjI,OAAQiI,KACRe,eAAe,GAEvB,CACA7B,WAAW3X,GACP,MAAM0X,EAAU,IAAIe,KAAczY,GAKlC,OAJA0X,EAAQ+B,MAAQ/B,EAAQgC,MAAQjB,KAChCf,EAAQ4B,UAAY5B,EAAQ6B,UAAYd,KACxCf,EAAQiC,WAAa,EACrBjC,EAAQkC,aAAc,EACflC,CACX,CAEAO,UAAU4B,GAEF9C,KAAKL,iBAAiBoD,QAAQjf,MAD9Bgf,GACuC,EAED,CAE9C,CAEA3B,YAAY2B,GAEJ9C,KAAKL,iBAAiBqD,QAAQlf,MAD9Bgf,GACuC,EAED,CAE9C,CAEA1B,aAAa0B,GAEL9C,KAAKL,iBAAiBsD,QAAQnf,MAD9Bgf,GACuC,EAED,CAE9C,CAEAzB,aAAavd,EAAOM,EAAOC,GACvB2b,KAAKD,gBAAgBzB,SAASK,EAAE7a,MAAQA,EAAQM,EAAQ,EACxD4b,KAAKF,gBAAgBxB,SAAS4E,EAAEpf,MAAQA,EAAQO,EAAS,CAC7D,CAEAid,oBAAoBnC,EAAUC,GAC1BY,KAAKL,iBAAiBwD,GAAGrf,MAAQ,EAAMqb,GAAY,EAAMiE,KAAKC,IAAI,EAAKjE,GAC3E,CAEAmC,QAAQhb,GACJyZ,KAAKL,iBAAiBpZ,KAAKzC,MAAiB,UAATyC,EAAmB,EAAI,CAC9D,ECxXG,MAAM+c,GAAgBA,CAACC,EAAkBC,KAC5C,MAAMC,GAAeF,EAAW,IAAMH,KAAKM,GAAK,IAC1CC,GAAuBH,EAAa,IAAMJ,KAAKM,GAAK,IACpD5I,EAAIsI,KAAKQ,IAAIH,GAAeL,KAAKQ,IAAID,GACrC5I,EAAIqI,KAAKS,IAAIJ,GAAeL,KAAKQ,IAAID,GACrCG,EAAIV,KAAKS,IAAIF,GAEnB,MAAO,CAACP,KAAKW,MAAU,IAAJjJ,GAAW,IAAKsI,KAAKW,MAAU,IAAJhJ,GAAW,IAAKqI,KAAKW,MAAU,IAAJD,GAAW,IAAI,EAE/EE,GAAcC,IAmBpB,IAnBqB,YACxBC,EAAW,UACXC,EAAY,EAAC,cACbC,EAAgB,CAAC,IAAK,IAAK,KAAI,cAE/BC,EAAa,WACbb,EAAU,SACVD,EAAQ,aACRe,GAAe,EAAE,aACjBC,EAAe,GAUlBN,EACG,MAAMO,EAAMN,EAAYO,WAAW,MAEnC,IAAKD,EAAK,OAEV,MAAM,MAAEpgB,EAAK,OAAEC,GAAW6f,EAGpBQ,EADYF,EAAIG,aAAa,EAAG,EAAGvgB,EAAOC,EAAQ,CAAEugB,oBAAoB,IACvDF,KAEjBG,EAAkDR,IAE3B,kBAAfb,GAA+C,kBAAbD,EACtCD,GAAcE,EAAYD,GAC1B,CAAC,EAAG,EAAG,IACXuB,EAAoB1B,KAAK2B,KAAKF,EAAsB,IAAM,EAAIA,EAAsB,IAAM,EAAIA,EAAsB,IAAM,GAC1HG,EAA0B,CAC5BH,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,GAG/B,GAAKJ,EAEL,IAKI,MAAMO,EAAiB,IAAIC,kBAAkB9gB,EAAQC,GACrD,IAAK,IAAIgN,EAAI,EAAGA,EAAIqT,EAAKjE,OAAQpP,GAAK,EAC7BqT,EAAKrT,IAAMqT,EAAKrT,EAAI,IAAMqT,EAAKrT,EAAI,IAAMqT,EAAKrT,EAAI,GACnD4T,EAAe5T,EAAI,GAAK,EAExB4T,EAAe5T,EAAI,GAAK,EAGhC,MAAM8T,EAAcC,KAAkBC,KAAQJ,EAAgB,CAAC5gB,EAAQD,KACjEkhB,EAAMH,EAAYI,MAAM,GAAIC,EAASL,EAAYI,MAAM,GACvDE,EAAe,IAAIP,kBAAkB9gB,EAAQC,EAAS,GAGtDqhB,EAAuBtC,KAAKuC,MAAM,IAAMxB,GAC9C,IAAK,IAAIyB,EAAW,EAAGA,EAAWN,EAAKM,IACnC,IAAK,IAAIC,EAAW,EAAGA,EAAWL,EAAQK,IAAY,CAClD,MAAMC,EAA+C,GAA/BF,EAAWxhB,EAAQyhB,GACnCE,EAAcZ,EAAYa,IAAIJ,EAAUC,GAE9CJ,EAAaK,GAAgBC,EAAcL,EAC3CD,EAAaK,EAAe,GAAKC,EAAcL,EAC/CD,EAAaK,EAAe,GAAKC,EAAcL,EAC/CD,EAAaK,EAAe,GAAqB,IAAhBC,EAAoB,EAAI,GAC7D,CAEJ,MAAME,EAAkBC,SAASC,cAAc,UAC/CF,EAAgB7hB,MAAQA,EACxB6hB,EAAgB5hB,OAASA,EACzB4hB,EAAgBxB,WAAW,MAAM2B,aAC7B,IAAIC,UAAUZ,EAAcrhB,EAAOC,GACnC,EACA,GAMJ,MAAMiiB,EAAkBJ,SAASC,cAAc,UAC/CG,EAAgBliB,MAAQA,EACxBkiB,EAAgBjiB,OAASA,EACU,IAAIgb,GAAkBP,KAAqCwH,GACnE/F,MAAM0F,EAAiB,CAC9C/G,UAAW,EACXE,MAAO,EACPD,SAAU,IACVJ,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChB1Y,KAAMsY,KAMV,MAAM0H,EAAwBL,SAASC,cAAc,UACrDI,EAAsBniB,MAAQA,EAC9BmiB,EAAsBliB,OAASA,EAE/B,MAAMmiB,EAAyBD,EAAsB9B,WAAW,MAChE+B,EAAuBC,UACnBH,EACA,EACA,EACAliB,EACAC,GAEJ,MAAMqiB,EChIiBC,EAC3BC,EACAxiB,EACAC,EACAwiB,EACAC,EACAC,KAEA,MAAMC,EAAS,IAAI9B,kBAAkB9gB,EAAQC,EAAS,GAChD4iB,EAAQ7D,KAAKuC,MAAMkB,EAAW,GAGpC,SAASK,EAAcpM,EAAWC,EAAWoM,EAAYC,GACrD,OAAOhE,KAAKiE,OAAOvM,EAAIqM,IAAO,GAAKpM,EAAIqM,IAAO,IAAM,EAAIL,GAAc,GAC1E,CAGA,SAASO,EAAYC,EAAYC,GAC7B,OAAOpE,KAAKiE,OAAOE,EAAKC,IAAO,IAAM,EAAIV,GAAc,GAC3D,CAGA,IAAK,IAAI/L,EAAI,EAAGA,EAAI1W,EAAQ0W,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAI1W,EAAO0W,IAAK,CAC5B,IAAI2M,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAGzC,IAAK,IAAIC,GAAMZ,EAAOY,GAAMZ,EAAOY,IAC/B,IAAK,IAAIC,GAAMb,EAAOa,GAAMb,EAAOa,IAAM,CACrC,MAAMC,EAAKjN,EAAIgN,EACTE,EAAKjN,EAAI8M,EAGf,GAAIE,GAAM,GAAKC,GAAM,GAAKD,EAAK3jB,GAAS4jB,EAAK3jB,EAAQ,CACjD,MAAM4jB,EAAgC,GAAjBlN,EAAI3W,EAAQ0W,GAC3BoN,EAAoC,GAAnBF,EAAK5jB,EAAQ2jB,GAG9BI,EAAUvB,EAAUqB,GACpBG,EAAUxB,EAAUqB,EAAc,GAClCI,EAAUzB,EAAUqB,EAAc,GAClCK,EAAY1B,EAAUsB,GACtBK,EAAY3B,EAAUsB,EAAgB,GACtCM,EAAY5B,EAAUsB,EAAgB,GAQtCvT,EALUuS,EAAca,EAAIC,EAAIlN,EAAGC,GAC1BuM,EAAYa,EAASG,GACrBhB,EAAYc,EAASG,GACrBjB,EAAYe,EAASG,GAKpCf,GAAQa,EAAY3T,EACpB+S,GAAQa,EAAY5T,EACpBgT,GAAQa,EAAY7T,EACpBiT,GAAQjT,CACZ,CACJ,CAIJ,MAAM8T,EAAgC,GAAjB1N,EAAI3W,EAAQ0W,GACjCkM,EAAOyB,GAAehB,EAAOG,EAC7BZ,EAAOyB,EAAc,GAAKf,EAAOE,EACjCZ,EAAOyB,EAAc,GAAKd,EAAOC,EACjCZ,EAAOyB,EAAc,GAAK7B,EAAU6B,EAAc,EACtD,CAGJ,OAAOzB,CAAM,EDyDYL,CACjBH,EAAuB7B,aAAa,EAAG,EAAGvgB,EAAOC,GAAQqgB,KACzDtgB,EACAC,EACA,EACA,GACA,IAQEqkB,EAAa,IAAIxD,kBAAkB9gB,EAAQC,EAAS,GAC1D,IAAK,IAAIskB,EAAW,EAAGA,EAAWjE,EAAKjE,OAAQkI,GAAY,EAAG,CAC1D,IAAIZ,EAAMrB,EAAaiC,GAAY,MAAS,EACxCX,EAAMtB,EAAaiC,EAAW,GAAK,MAAS,EAC5CC,EAAMlC,EAAaiC,EAAW,GAAK,MAAS,EAChD,MAGME,GAHgBd,EAAK/C,EAAwB,GAC7CgD,EAAKhD,EAAwB,GAC7B4D,EAAK5D,EAAwB,IACO,GAAK5B,KAAK0F,IAAIxE,GAAgBlB,KAAK0F,IAAIvE,IAC3EwE,EAAY3F,KAAK4F,IAAI1E,EAAclB,KAAK6F,IAAIJ,EAAmBtE,IAGrEmE,EAAWC,GAAYvF,KAAKW,MAAMW,EAAKiE,GAAYvE,EAAc,GAAK2E,GACtEL,EAAWC,EAAW,GAAKvF,KAAKW,MAAMW,EAAKiE,EAAW,GAAKvE,EAAc,GAAK2E,GAC9EL,EAAWC,EAAW,GAAKvF,KAAKW,MAAMW,EAAKiE,EAAW,GAAKvE,EAAc,GAAK2E,GAC9EL,EAAWC,EAAW,GAAKjE,EAAKiE,EAAW,EAC/C,CAEA,OAAO,IAAItC,UAAUqC,EAAYtkB,EAAOC,EAC5C,CAAE,MAAO6kB,GAEL,OADAhJ,QAAQiJ,MAAM,gCAAiCD,GACxC,IACX,GE/JSE,GAAYC,GACC,QAAfA,EAAKnlB,MAQHolB,GAAmBD,GACN,gBAAfA,EAAKnlB,QAA4BqlB,GAAaF,GAE5CE,GAAgBF,GACH,UAAfA,EAAKnlB,OAAoC,SAAfmlB,EAAKnlB,OAAmC,gBAAfmlB,EAAKnlB,MAgBtDslB,GAAwBtlB,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,EAAgC,OAC7B,QAGEulB,GAAoBvlB,IACrBqlB,GAAa,CAAErlB,WAAYwlB,GAAgBxlB,GAG1CwlB,GAAmBxlB,GACrB,CAAC,OAAQ,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUylB,SAASzlB,G,wBC3CvF,MAAonC0lB,GAAYV,IAAI,IAAIW,GAAGX,EAAEA,EAAEY,UAAU,EAAEZ,EAAEzI,OAAO,IAAIsJ,MAAM,QAAK,GAAGb,EAAEW,EAAE,GAAG,EAAEA,EAAEpJ,OAAO,CAACoJ,EAAEA,EAAE,GAAG,IAAI,IAAIG,KAAKH,EAAEX,GAAGA,EAAEA,EAAEa,MAAMC,IAAI1T,KAAK4S,EAAEe,MAAM,CAAC,OAAOC,GAAchB,EAAE,EAAE,EAAEgB,GAAc,SAAChB,GAAS,IAAPW,EAACrJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,EAAK,MAAMwJ,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOG,EAAEA,CAACjB,EAAEW,IAAIX,EAAEkB,QAAQ,IAAItT,OAAO,IAAI+S,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,OAAOA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,KAAK,MAAKX,GAAGA,IAAIW,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEG,EAAEvJ,SAASoJ,EAAEX,EAAEiB,EAAEjB,EAAEc,EAAEH,SAAS,IAAIA,EAAEG,EAAEvJ,OAAOoJ,KAAKX,EAAEiB,EAAEjB,EAAEc,EAAEH,IAAI,OAAOX,CAAC,ECoInkDmB,GAAsB,CAlIxBvQ,QAAS,KACTL,OAAQ,KACRvV,MAAO,KACP6V,KAAM,KACNhT,QAAS,CACLujB,QAAS,KACTplB,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEX8kB,SAAU,OACVhlB,UAAW,OACXC,WAAY,OACZF,SAAU,QAEd0U,OAAQ,KACRjM,IAAK,KACL2M,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXX,UAAW,MACXY,QAAS,CACLyP,QAAS,MACTxP,EAAG,MACHC,EAAG,MACH3W,MAAO,MACPC,OAAQ,MACR2W,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfC,WAAY,KACZE,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClBtU,eAAgB,MAChBuU,eAAgB,CACZ+O,QAAS,MACTxP,EAAG,MACHC,EAAG,MACH3W,MAAO,MACPC,OAAQ,MACR2W,KAAM,MACNC,OAAQ,OAEZ5V,KAAM,KACN6U,cAAe,MACf6B,YAAa,CACTuO,QAAS,KACTtO,iBAAkB,OAClBlM,UAAW,MACXmM,OAAQ,OAEZC,cAAe,CACXoO,QAAS,KACTxa,UAAW,MACXmM,OAAQ,OAEZ9B,UAAW,CACPmQ,QAAS,KACT7gB,KAAM,OACNN,UAAW,OACXiR,kBAAmB,QACnBhQ,YAAa,OACbC,cAAe,QACfC,cAAe,QACfC,WAAY,OACZ3B,UAAW,OACXW,UAAW,OACXD,UAAW,OACXoB,YAAa,QACbhB,YAAa,QACbf,WAAY,OACZkB,cAAe,OACfC,cAAe,OACfpB,YAAa,OACbsC,YAAa,OACbC,UAAW,OACXF,UAAW,OACX7B,OAAQ,OACRL,QAAS,QAEbwR,UAAW,KACXC,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACTC,OAAQ,KACR3U,WAAY,KACZ4U,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,YAAa,KACbK,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVC,QAAS,MACTC,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBC,aAAc,KAGdmN,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTxP,EAAG,MACHC,EAAG,MACH3W,MAAO,MACPC,OAAQ,MACR2W,KAAM,MACNC,OAAQ,QAQH0P,GAAmB,SAC5BtB,GAEE,IADFuB,EAA+BpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6J,GAElC,MAAMQ,EAAqC,CAAC,EACtCC,EAAiB,IAAKzB,GAkB5B,OAhBA/gB,OAAOyiB,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBC,MAAMC,QAAQF,GAMrE,CACH,MAAMG,EAAcT,EAAWK,GAEJ,kBAAhBI,IAA0BR,EAAcQ,GAAeH,EACtE,KAVyF,CAAC,IAADI,EACrF,MAAMC,EAA6B,QAAvBD,EAAGV,EAAWK,UAAS,IAAAK,OAAA,EAApBA,EAAsBhB,QAEjCiB,IACAV,EAAcU,GAAUZ,GAAiBO,EAAYN,EAAWK,IAExE,CAIA,IAGGJ,CACX,EAEaW,GAAqB,SAC9BX,GAEE,IADFD,EAA+BpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6J,GAElC,MAAMoB,EAAwC,CAAC,EAgB/C,OAfAnjB,OAAOyiB,KAAKH,GAAYI,SAAQU,IAC5B,MAAMC,EAAaf,EAAWc,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBR,MAAMC,QAAQO,GAOvC,MAA7Bd,EAAcc,KACdF,EAAiBC,GAAWb,EAAcc,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYrB,QAE5BsB,GAAef,EAAce,KAC7BH,EAAiBC,GAAWF,GAAmBX,EAAce,GAAchB,EAAWc,IAE9F,CAIA,IAEGD,CACX,EACaI,GAAiC,SAC1ChB,GAEE,IADFD,EAA+BpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6J,GAElC,MAAMyB,EAAmD,kBAAlBjB,EACjCkB,KAAKC,MAAMpC,GAAYqC,mBAAmBpB,KAC1CA,EAEAqB,EAAuC,CAAC,EAgB9C,OAfA5jB,OAAOyiB,KAAKH,GAAYI,SAAQU,IAC5B,MAAMC,EAAaf,EAAWc,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBR,MAAMC,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYrB,QAE5BsB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAchB,EAAWc,IAEnH,CAIA,IAEGQ,CACX,EAmBaC,GAAkB,SAAC9C,GAAwE,IAAD+C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQlM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG/C,KAClE,MAAMkP,EAAe,CACjBpP,GAAIC,iBACDkP,KACA1K,aAAMqH,IA+Eb,OA5EAsD,EAAa5Q,YAAc,IACpB0B,KAAe1B,eACf4Q,EAAa5Q,aAGc,MAA9B4Q,EAAazQ,cACbyQ,EAAazQ,cAAgB,IACtBuB,KAAevB,eAGtByQ,EAAazQ,cAAgB,IACtBuB,KAAevB,iBACfyQ,EAAazQ,eAII,MAAxByQ,EAAa7S,UAAiB6S,EAAa7S,QAAU,GAC9B,MAAvB6S,EAAalT,SAAgBkT,EAAalT,OAAS,OACrB,MAA9BkT,EAAajR,gBAAuBiR,EAAajR,cAAgB,QAC1C,MAAvBiR,EAAa3S,SAAgB2S,EAAa3S,OAAS,IAEzB,MAA1B2S,EAAa1S,YAAmB0S,EAAa1S,UAAY,UACxD0S,EAAqBlC,UAAYpB,EAAKtb,MAAK4e,EAAa5e,IAAO4e,EAAqBlC,gBACjFkC,EAAqBlC,QAExBkC,EAAqBjC,cAAgBrB,EAAKxO,UAAS8R,EAAa9R,QAAW8R,EAAqBjC,oBAC7FiC,EAAqBjC,YAII,MAAZ,QAAjB0B,EAACO,EAAa5e,WAAG,IAAAqe,IAAI,MAAYO,EAAa5e,IAAM,IACnB,MAAZ,QAArBse,EAACM,EAAajS,eAAO,IAAA2R,IAAI,MAAYM,EAAajS,QAAU,IACzB,MAAZ,QAAvB4R,EAACK,EAAa/R,iBAAS,IAAA0R,IAAI,MAAYK,EAAa/R,UAAY,UACzC,MAAvB+R,EAAahS,SAAgBgS,EAAahS,QAAS,GAED,mBAA1CgS,EAAa5lB,QAAgBwjB,UAA4D,MAAlCoC,EAAa5lB,QAAQtB,YACpFknB,EAAa5lB,QAAQtB,WAAcknB,EAAa5lB,QAAgBwjB,gBACxDoC,EAAa5lB,QAAgBwjB,UAEzCoC,EAAa5lB,QAAU,IAAK9B,OAA4B0nB,EAAa5lB,gBAC7D4lB,EAAa5lB,QAAgBwjB,SAEG,MAAZ,QAAxBgC,EAACI,EAAaxR,kBAAU,IAAAoR,IAAI,MAAYI,EAAaxR,WAAa,IAC1B,MAAZ,QAA5BqR,EAACG,EAAavR,sBAAc,IAAAoR,IAAI,MAAYG,EAAavR,eAAiB,IAChC,MAAZ,QAA9BqR,EAACE,EAAarR,wBAAgB,IAAAmR,IAAI,MAAYE,EAAarR,iBAAmB,UAChD,MAA9BqR,EAAatR,gBAAuBsR,EAAatR,eAAgB,GACnC,MAA9BsR,EAAazR,gBACTyR,EAAaxR,YAAcwR,EAAavR,gBAAkBuR,EAAa5lB,QAAQzB,YAEnFqnB,EAAazR,eAAgB,GAEjCyR,EAAapR,eAAiB,CN3R9BT,EAAG,EACHC,EAAG,EACH3W,MAAO,IACPC,OAAQ,KACR2W,KAAM,IACNC,OAAQ,KMwRD0R,EAAapR,gBAGO,MAAvBoR,EAAalR,QAAyC,SAAvBkR,EAAazoB,QAC5CyoB,EAAalR,QAAS,GAGrBkR,EAAqBC,cAAgBvD,EAAKtM,iBAAgB4P,EAAa5P,eAAkB4P,EAAqBC,oBAC3GD,EAAqBC,iBACOlM,IAAhCiM,EAAa5P,iBAA8B4P,EAAa5P,gBAAiB,GAExE4P,EAAqBnC,WAAanB,EAAK9M,WAAUoQ,EAAapQ,SAAYoQ,EAAqBnC,iBAC5FmC,EAAqBnC,SAExBmC,EAAazP,kBAAiByP,EAAazP,gBlBlRA,EAChD,EACA,WACA,EACA,YkB+QKyP,EAAaxP,oBAAmBwP,EAAaxP,kBlBnRF,EAChD,EACA,WACA,EACA,YkBgRKwP,EAAa1P,gBAAe0P,EAAa1P,clBpRE,EAChD,EACA,WACA,EACA,YkBiRK0P,EAAa3P,gBAAe2P,EAAa3P,clBrRE,EAChD,EACA,WACA,EACA,YkBkRK2P,EAAavP,iBAAgBuP,EAAavP,elBtRC,EAChD,EACA,WACA,EACA,YkBmR6C,qBAAlCuP,EAAahQ,mBAAkCgQ,EAAahQ,kBAAmB,GACjD,qBAA9BgQ,EAAa9P,eAA8B8P,EAAa9P,cAAe,GAC7E8P,EAAalS,gBAAekS,EAAalS,cAAgB,QAEvDkS,CACX,EAEaE,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,CACtB,CAAE,MAAO5D,GAEL,OADAhJ,QAAQiJ,MAAMD,IACP,CACX,GAES6D,GAA6BD,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,CACnB,CAAE,MAAO5D,GAEL,OADAhJ,QAAQiJ,MAAMD,IACP,CACX,GAGS8D,GAA4BA,CACrC3D,EACA4D,KAEA,GAAuB,YAAnB5D,EAAKzO,WAA4ByO,EAAKnO,eAA2C,YAA1BmO,EAAK/N,iBAC5D,MAAO,CACH4R,WAAW,EACXjmB,OAAQ0jB,GAAiBtB,IAIjC,MAAMyB,EAAiB,IAAKzB,EAAM3O,QAAS,GAAIU,eAAgB,IAE/D,MAAO,CACH8R,WAAW,EACXjmB,OAAQ0jB,GAAiBG,GAC5B,EAICqC,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiCjK,KAAK0F,IAAIsE,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBC,GAAkBA,CAACC,EAAmCC,KACxD,MACIvS,OAAQwS,EACRppB,OAAQqpB,EACRtpB,MAAOupB,EACP7S,EAAG8S,EACH7S,EAAG8S,EACH7S,KAAM8S,GACE,OAARP,QAAQ,IAARA,IAAY,CAAC,GAEbtS,OAAQ8S,EACR1pB,OAAQ2pB,EACR5pB,MAAO6pB,EACPnT,EAAGoT,EACHnT,EAAGoT,EACHnT,KAAMoT,GACG,OAATZ,QAAS,IAATA,IAAa,CAAC,EAElB,OAAOL,GAAqBM,EAAYM,IACjCZ,GAAqBO,EAAYM,IACjCb,GAAqBQ,EAAWM,IAChCd,GAAqBS,EAAOM,IAC5Bf,GAAqBU,EAAOM,IAC5BL,IAAaM,CAAS,ECrYpBC,GAAqBhpB,IAC9B,IACI,OAAOA,EAAKipB,WAAW,4BAA6B,KACxD,CAAE,MAAOpF,GAEL,OADAhJ,QAAQiJ,MAAMD,GACP7jB,CACX,GAESkpB,GAAuBpS,IAChC,IACI,OAAOA,EAAOmS,WAAW,4BAA6B,KAC1D,CAAE,MAAOpF,GAEL,OADAhJ,QAAQiJ,MAAMD,GACP/M,CACX,GCZSqS,GAAeA,CAACnpB,EAAcopB,EAAYloB,KACnD,MAAMmoB,EAAOxI,SAASC,cAAc,KAEpCuI,EAAKC,SAAWtpB,EAChBqpB,EAAKE,KAAOC,OAAOC,IAAIC,gBAAgBN,GACvCC,EAAKM,QAAQC,YAAc,CAAC1oB,EAAMmoB,EAAKC,SAAUD,EAAKE,MAAMtY,KAAK,KAEjE,MAAM4Y,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAMP,OACNQ,SAAS,EACTC,YAAY,IAGhBZ,EAAKa,cAAcL,GACnBR,EAAKc,QAAQ,ECHXC,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACtoB,GAAU,QAETuoB,GAAqBznB,OAAOsN,QAAQ6Z,IAAaliB,QAA+B,CAACC,EAAKC,KACxF,MAAOuiB,EAAaC,GAAYxiB,EAGhC,OAFAD,EAAIyiB,GAAYD,EAETxiB,CAAG,GACX,CAAC,GAEE0iB,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsBtoB,OAAOsN,QAAQsa,IAAc3iB,QAA+B,CAACC,EAAKC,KAC1F,MAAOuiB,EAAaC,GAAYxiB,EAGhC,OAFAD,EAAIyiB,GAAYD,EAETxiB,CAAG,GACX,CAAC,GAEEqjB,GAAmC,CACrClrB,OAAQ,SACRwW,OAAQ,SACR2U,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLvC,KAAM,OACNwC,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChBC,KAAM,QACN,cAAe,SAEbC,GAAkBhpB,OAAOsN,QAAQib,IAAUtjB,QAA+B,CAACC,EAAKC,KAClF,MAAOuiB,EAAaC,GAAYxiB,EAGhC,OAFAD,EAAIyiB,GAAYD,EAETxiB,CAAG,GACX,CAAC,GAEE+jB,GAA0G,CAC5G,OAAU,CACNvoB,IAAK,IAET,KAAQ,CACJA,IAAK,SACL5D,KAAM,QAEV,OAAU,CACN4D,IAAK,wBACL5D,KAAM,iBACN6U,UAAW,SAEf,MAAS,CACLjR,IAAK,eACL5D,KAAM,QACN6U,UAAW,SAEf,QAAW,CACPjR,IAAK,uBACL5D,KAAM,WACN6U,UAAW,QACXD,OAAQ,CAAC,WAGXwX,GAAYlpB,OAAOsN,QAAQ2b,IAAkBhkB,QAA+B,CAACC,EAAKC,KACpF,MAAOgkB,EAAWzB,GAAeviB,EAGjC,OAFAD,EAAIwiB,EAAYhnB,KAAOyoB,EAEhBjkB,CAAG,GACX,CAAC,GAWSkkB,GAA2BA,CACpCrI,EACAsI,KAEA,MAAM,KACFtsB,EAAI,KACJmV,EAAI,YACJsB,EAAW,UACXxB,EAAS,OACT6B,EAAM,IACNE,EAAG,IACHC,EAAG,IACHvO,EAAG,QACH2M,EAAO,UACPE,EAAS,SACT2B,EAAQ,QACRO,EAAO,UACPzC,EAAS,MACT+B,EAAK,eACLT,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,WAChB9U,EAAU,QACV0U,EAAO,MACPtX,EAAK,aACLmZ,EAAY,UACZlD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTD,GACAqP,EACEuI,EAAiBvD,GAAkBhpB,GACnCwsB,EAAmBtD,GAAoBpS,GACvC2V,EAA2BvD,GAAoB5S,GAC/CoW,EAAiBtC,GAAYnV,GAC7B0X,EAAsB9B,GAAa7V,GACnC4X,EAAkBpB,GAAS3sB,GAC3BguB,EAAqC,eAAlBhY,EACnBsX,GACE,CACIrX,EAAUjR,OACV+Q,EACAD,EAAO1D,KAAK,MACdA,KAAK,MAET,UACA,SAAEnR,EAAQ,OAAEgtB,KAAWC,GAAqB,OAAZ/U,QAAY,IAAZA,IAAgB,CAAC,EAsDvD,MAAO,CACH6P,UArDY7nB,IAASusB,GAClBzV,IAAW0V,GACXlW,IAAmBmW,QACApR,IAAnBqR,QACwBrR,IAAxBsR,QACoBtR,IAApBuR,QACqBvR,IAArBwR,EAgDHjrB,OA/CW,CACX6S,QAAS,QACTzU,KAAMusB,EACNxS,MAAO,GAAG5E,IACVjU,KAAMuV,EAAYxF,KAAK,KACvBrO,KAAoB,OAAd8pB,QAAc,IAAdA,IAAkB,GACxB5V,OAAQ0V,EACRxV,MACAC,MACA+V,OAAQ9V,EACR+V,UAAWxV,EACXzC,UAA8B,OAAnB2X,QAAmB,IAAnBA,IAAuB,OAClCzU,GAAInB,EACJjX,SAAU,CACNotB,QAASzrB,EACTqV,OAAQ2V,EACRU,KAAM3W,EACN4W,IAAK7W,EACL8W,QAAS,SACTC,gBAAgB,KACbxtB,GAEPytB,QAAS,SACTlE,KAAM,CACFmE,UAASrX,EAAQmO,SAAS,KAC1BmJ,YAAWtX,EAAQmO,SAAS,KAC5BoJ,WAAUvX,EAAQmO,SAAS,KAC3BqJ,aAAYxX,EAAQmO,SAAS,KAC7BsJ,cAAazX,EAAQmO,SAAS,KAC9BuJ,aAAY1X,EAAQmO,SAAS,KAC7BwJ,eAAc3X,EAAQmO,SAAS,KAC/ByJ,cAAa5X,EAAQmO,SAAS,MAElC0J,OAAuB,OAAfpB,QAAe,IAAfA,IAAmB,SAC3BS,QAAS,SACTP,OAAwB,OAAhBD,QAAgB,IAAhBA,IAAoBC,EAE5BlpB,MAAO0oB,EACDA,EAAO2B,UAAU,cACH,YAAd1Y,EACIF,EACA3M,KACPqkB,GAMN,EC9LC3C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACtoB,GAAU,QAETuoB,GAAqBznB,OAAOsN,QAAQ6Z,IAAaliB,QAA+B,CAACC,EAAKC,KACxF,MAAOuiB,EAAaC,GAAYxiB,EAGhC,OAFAD,EAAIyiB,GAAYD,EAETxiB,CAAG,GACX,CAAC,GAaEojB,GAAsBtoB,OAAOsN,QAXU,CACzCua,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6CpjB,QAA+B,CAACC,EAAKC,KAC1F,MAAOuiB,EAAaC,GAAYxiB,EAGhC,OAFAD,EAAIyiB,GAAYD,EAETxiB,CAAG,GACX,CAAC,GAqBE8jB,GAAkBhpB,OAAOsN,QAnBU,CACrCjQ,OAAQ,SACRwW,OAAQ,SACR2U,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLvC,KAAM,OACNwC,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfmC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+BrmB,QAA+B,CAACC,EAAKC,KAClF,MAAOuiB,EAAaC,GAAYxiB,EAGhC,OAFAD,EAAIyiB,GAAYD,EAETxiB,CAAG,GACX,CAAC,GAEEqmB,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6BzK,IAAgE,IAADpF,EAAA8P,EAAAC,EACrG,MAAM,IACF3X,EAAG,UACHhC,EAAS,YACT4Z,EAAW,UACXC,EAAS,IACT5X,EAAG,KACH6X,EAAI,UACJC,EAAS,GACT7W,EAAE,MACF6B,EAAK,aACLiV,EAAY,KACZhvB,EAAI,UACJivB,EAAS,KACTC,EAAI,MACJxW,EAAK,SACLyW,EAAQ,QACRC,EAAO,YACPC,GACArL,EACE0I,EAAiBhC,GAAmBwE,GACpCvC,EAAsBpB,GAAoBvW,IACzC4X,EAAiB0C,GAAYrD,GAAgB8C,GAAWrK,MAAM,KAG/D6K,EAA6F,QAAtE3Q,EAAIoQ,EAAeA,EAAa/F,WAAW,WAAY,SAAM5N,SAAS,IAAAuD,IAC3FkQ,EAAOA,EAAK7F,WAAW,WAAY,IAAM,GAE3CuG,EAAwBD,EAAwB7K,MAAM,MACtD+K,ENpJ4BzL,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACFM,SAASN,EAAKnlB,OM4IgB6wB,CAAsB,CAClD7wB,MAAsB,OAAf+tB,QAAe,IAAfA,IAAmB,YACxB4C,EAAsBpU,OAAS,EAC/B,CACE,IAAIoU,EAAsB,GAAGvG,WAAW,KAAM,UAC3CuG,EAAsBG,MAAM,IACjC1e,KAAK,MACLse,EACA9C,EAA2BwC,EAC3BA,EAAUhG,WAAW,WAAY,IACjC,GACA2G,EAAYhB,EAAY,GAAGiB,kBAE3BxI,EAAWjP,KAqCjB,MAAO,CACHyP,WAAW,EACXjmB,OAtCiB,IACdylB,EACHrnB,OACAgX,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAM,GAAGA,IACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAM,GAAGA,IACpC,IACNjC,UAA8B,OAAnB2X,QAAmB,IAAnBA,IAAuB9qB,EAClCiV,OAAQ2Y,EACRxa,UAAyB,OAAdyX,QAAc,IAAdA,IAAkBvqB,EAC7B4U,MAAgD,QAA3C2X,EAAiC,QAAjCC,EAAEE,EAAUA,EAAUzT,OAAS,UAAE,IAAAuT,OAAA,EAA/BA,EAAiCmB,gBAAQ,IAAApB,IAAI,GACpD7vB,MAAsB,OAAf+tB,QAAe,IAAfA,IAAmB,SAC1BzX,KAAoB,SAAd4Z,GAAwBK,EAAUA,EAAUrV,EAClDtD,YAAa0Y,IAEO,UAAdJ,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACdrmB,IAAKknB,EACLra,UAAW,SACXC,QAAS,IACF6R,EAAS7R,QACZE,EAAG,GAEPU,OAA4B,SAApBwW,GAA8B9G,MAAMC,QAAQsJ,GACpDlZ,SAAqB,OAAXkZ,QAAW,IAAXA,IAAe,IAAI1c,KAAIod,GAAUvB,GAAeuB,KAC1DtuB,WAAyB,aAAb6tB,EACZ9Y,kBAA4B,MAATkC,EAAgB,IAAM,GAAGA,IAC5CnC,iBAA2B,MAATmC,EAAgB,IAAM,GAAGA,IAC3CpC,eAAgBmW,EAChBvV,SAAU,GAAGgB,IAAK8X,SAAS,EAAG,KAC9BvY,QAAStH,GAAa/I,IAAI,IAM7B,EC7NC6oB,GAA0B,IA4FnBC,GAAW,SACpBC,GAEE,IADFC,EAAYjV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEXkV,EAAkBJ,GACtB,MAAMK,EArEqB,WAA+D,IACtF1M,EADoCzI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAEvCwI,EAFsDxI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG8U,GAGzDM,EAAS5M,EACT6M,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IAGhB,MAuCM/b,EAASA,IAAM8b,GAAgB,EAErC,MAAO,CACH9U,MAxBU,WAA6C,IAAxBgV,EAAYxV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGwI,EAC9CC,EADuBzI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGyI,EAE1BD,EAAMgN,EACNJ,EAASI,EACTF,EAAe,GACfC,EAAY,IACZF,EAAgBG,CACpB,EAkBIC,WAhCeA,KACfL,GAAUG,EACVD,GAAgB,EAETF,GA6BPM,cA5CkBA,KACA,IAAdH,EAAiB/b,KAEjB4b,GAAUG,EACVA,GANsB,GAOtBH,GAAUG,GAGP3S,KAAK6F,IAAI2M,EAAQ5M,IAqCxBhP,SACAmc,UAnBcA,IAAMP,EAoBpBQ,UAnBeC,GAAsBT,EAASS,EAoB9CC,iBAlBqB,WAAqB,OAAKT,EAAdrV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGoV,CAAuC,EAmB3EW,iBAlBqBA,IAAMV,EAmB3BW,mBAlBuBA,KACvBZ,EAASC,EACTC,GAAgB,EACTF,GAgBPa,gBAboBA,IAAMX,EAelC,CAOsBY,GAClB,KAAOf,EAAUc,mBAAqB,GAAG,CACrC,GAAId,EAAUc,mBAAqB,EAAG,CAIlCf,EAFoBC,EAAUQ,YAG9B,KACJ,CAGI,IAFgBX,EAAOG,EAAUQ,cAEjBR,EAAUQ,YAAc,EAEpCR,EAAUM,iBACP,CAEH,GAAIN,EAAUQ,cAAgBb,GAAyB,MAClDI,EAAkBC,EAAUO,eACrC,CAER,CAKA,MAAMS,EAAevT,KAAK4F,IAAIyM,EAAcrS,KAAK6F,IAAIyM,EAAiBJ,KAEtE,OADIqB,IAAiBjB,GAAiBF,EAAOmB,GACtCA,CACX,EC3HaC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,CAAC,EACd,IAAIliB,EAASmiB,EACT7Y,EAAQ8Y,EACRG,EAA6C,kBAAhBF,EAA2B,GAAGA,MAAkBA,EAC7EG,EAAsC,kBAAhBH,EAA2BA,EAAcI,WAAWJ,EAAY1I,WAAW,KAAM,KACvG+I,EAASJ,EAEb,MAAO,CACHK,QAASA,IAAM,GAAG,CAACrZ,EAAOtJ,EAAQuiB,EAAMG,GAAQE,QAAOC,GAAiB,KAATA,IAAalhB,KAAK,cACjFmhB,YAAaA,KAAA,CAASxZ,QAAOiZ,OAAMG,SAAQF,eAAcxiB,WACzD+iB,UAAUC,GAEN,OADAhjB,EAASgjB,EACF3X,IACX,EACA4X,SAASC,GAEL,OADA5Z,EAAQ4Z,EACD7X,IACX,EACAe,QAAQ+W,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASX,GACTW,EAON,OANAZ,EAAiC,kBAAnBa,EACR,GAAGA,MACHA,EACNZ,EAAyC,kBAAnBY,EAChBA,EACAX,WAAWW,EAAezJ,WAAW,KAAM,KAC1CtO,IACX,EACAgY,UAAUC,GAEN,OADAZ,EAASY,EACFjY,IACX,EACH,EC5CQkY,GAA4BA,IAAoBC,GzBc1C,2CyBZNC,GAAoBC,IAAmC,OAAPA,QAAO,IAAPA,IAAW,IACnErgB,KAAIiM,IAAA,IAAC,MAAE5c,EAAK,OAAEixB,GAAQrU,EAAA,MAAK,GAAGqU,KAAUjxB,GAAO,IAAEiP,KAAK,KAC9C6hB,GAAgBI,GAA8CA,EACrEA,EAAmBxO,MAAM,KACtB/R,KAAI,CAACC,EAAOugB,KACT,MAAOF,EAAQjxB,GAAS4Q,EAAM8R,MAAM,KAEpC,MAAO,CAAE1iB,QAAOixB,SAAQ/a,GAAIib,EAAQ,EAAG,IAE7CL,GzBGa,2C0BfNM,GAAaA,KACtB,MAAOC,EAAKC,GAAUC,mBAAS,GAK/B,MAAO,CAJSC,uBAAY,KACxBF,GAAOlrB,GAAOA,EAAM,GAAE,GACvB,IAEcirB,EAAI,ECRZI,GAAqB7U,IAgB3B,IAhB4B,MAC/B8U,EAAK,aACLC,EAAY,gBACZC,GAAkB,EAAK,SACvBC,EAAQ,UACRC,EAAS,SACTC,EAAQ,WACRC,GASHpV,EACG,MAAO,CACHqV,SAAU,EACVC,QAASA,KACDR,GAAO7Y,QAAQC,KAAK,mBAAoB4Y,GAC5CG,EAAS,EAAE,EAEfM,OAAQA,KACAT,GAAO7Y,QAAQC,KAAK,kBAAmB4Y,GAC3CG,GAAU,EAAE,EAEhBO,UAAYvQ,IACJ+P,GAAiB/P,EAAE+P,kBACnBF,GAAO7Y,QAAQC,KAAK,qBAAsB4Y,EAAO7P,EAAElgB,MAC/B,KAAV,OAAVqwB,QAAU,IAAVA,OAAU,EAAVA,EAAanQ,MACH,eAAVA,EAAElgB,KAAkC,cAAVkgB,EAAElgB,KAC5BkgB,EAAEwQ,iBACFR,GAASzrB,GAAO2V,KAAK4F,IAAI,EAAGgQ,EAAevrB,EAAM,GAAKurB,KAEvC,cAAV9P,EAAElgB,KAAiC,YAAVkgB,EAAElgB,KAChCkgB,EAAEwQ,iBACFR,GAASzrB,GAAO2V,KAAK4F,IAAI,EAAGgQ,EAAevrB,EAAM,GAAKurB,KAEvC,UAAV9P,EAAElgB,KAA6B,MAAVkgB,EAAElgB,IAC5BmwB,IAEe,WAAVjQ,EAAElgB,MACC,OAARowB,QAAQ,IAARA,QACJ,EAEP,EC5CQO,GAAsBA,CAACC,EAAgC7b,KACzD,IACA6b,EACHvtB,aAAcutB,EAAevtB,aAAe0R,EAC5CzR,SAAUstB,EAAettB,SAAWyR,EACpC3R,UAAWwtB,EAAextB,UAAY2R,IAIjC8b,GAAsBA,CAACC,EAA8C/b,IACvE+b,EAAW9hB,KAAIlU,GAASA,EAAQia,IAG9Bgc,GAAoBA,CAC7BC,EACAjc,KAEA,MAAM,qBACF5P,EAAoB,mBACpBK,EAAkB,kBAClBJ,EAAiB,SACjBC,EAAQ,gBACRM,EAAe,gBACfwG,EAAe,WACf7G,EAAU,QACVQ,EAAO,mBACPC,EAAkB,kBAClBiG,GACAglB,EAEJ,MAAO,IACAA,EACH7rB,qBAAsD,kBAAzBA,EAAoCA,EAAuB4P,OAAQ2C,EAChGlS,mBAAkD,kBAAvBA,EAAkCA,EAAqBuP,OAAQ2C,EAC1FtS,kBAAmBA,EAAoB2P,EACvC1P,SAAUA,EAAW0P,EACrBpP,gBAA4C,kBAApBA,EAA+BA,EAAkBoP,OAAQ2C,EACjFvL,gBAA4C,kBAApBA,EAA+BA,EAAkB4I,OAAQ2C,EACjFpS,WAAYA,EAAayP,EACzBjP,QAA4B,kBAAZA,EAAuBA,EAAUiP,OAAQ2C,EACzD3R,mBAAkD,kBAAvBA,EAAkCA,EAAqBgP,OAAQ2C,EAC1F1L,kBAAgD,kBAAtBA,EAAiCA,EAAoB+I,OAAQ2C,EAC1F,EAGQuZ,GAAgBA,CAAClpB,EAAoBgN,KACvC,IACAhN,EACHhB,SAAUgB,EAAShB,SAASiI,KAAIC,GACrB8hB,GAAkB9hB,EAAO8F,OCnD/Bmc,GAAkB,WAAyD,IAAxDC,EAAO3Z,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,6BAA8BC,EAAMD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACzEvZ,EAAS,GACb,MAAMmzB,EAAmBD,EAAQ1Z,OACjC,IAAK,IAAIpP,EAAI,EAAGA,EAAIoP,EAAQpP,IACxBpK,GAAUkzB,EAAQE,OAAOjX,KAAKuC,MAAMvC,KAAKkX,SAAWF,IAExD,OAAOnzB,CACX,EAiCO,MAAMszB,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQja,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7Cga,EAAAtU,SAASwU,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,OACnD,EAEaC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAASva,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAMwa,EAAUF,EAAI1Q,QAAQ,IAAK,IACjC,IAAI6Q,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQva,QAAmC,IAAnBua,EAAQva,OAChCwa,EAAW,CACPI,SAAS,GAAGL,EAAQ,KAAKA,EAAQ,KAAM,IACvCK,SAAS,GAAGL,EAAQ,KAAKA,EAAQ,KAAM,IACvCK,SAAS,GAAGL,EAAQ,KAAKA,EAAQ,KAAM,IACvCK,SAAS,GAAa,QAAbH,EAAGF,EAAQ,UAAE,IAAAE,IAAI,MAAgB,QAAbC,EAAGH,EAAQ,UAAE,IAAAG,IAAI,MAAO,KAG7D,GAAuB,IAAnBH,EAAQva,QAAmC,IAAnBua,EAAQva,OAChCwa,EAAW,CACPI,SAASL,EAAQhG,MAAM,EAAG,GAAI,IAC9BqG,SAASL,EAAQhG,MAAM,EAAG,GAAI,IAC9BqG,SAASL,EAAQhG,MAAM,EAAG,GAAI,IAC9BqG,SAA4B,QAApBD,EAACJ,EAAQhG,MAAM,EAAG,UAAE,IAAAoG,IAAI,KAAM,KAI9C,OAAOH,EAASjjB,KAAIC,GAASqjB,MAAMrjB,GAAS,IAAMA,IAAO+c,MAAM,EAAG+F,EAAY,EAAI,EACtF,CAAE,MAAO7R,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG8L,MAAM,EAAG+F,EAAY,EAAI,EACjD,CACJ,EAGaQ,GAAiBA,KAC1B,IAAIC,GAAQ,EACZ,IAAUC,EAIV,OAJUA,EACNC,UAAUC,WACPD,UAAUE,QACT/M,OAAegN,OAHP,2TAA2TC,KAAKL,IAAI,4hDAA4hDK,KAAKL,EAAEM,OAAO,EAAE,OAAKP,GAAQ,GAIt4DA,CAAK,EAGT,SAASQ,KAA8D,IAAD,IAAAC,EAAAzb,UAAAC,OAA/Cyb,EAAI,IAAA/Q,MAAA8Q,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA3b,UAAA2b,GAC9B,OAAOD,EAAK3E,OAAO6E,SAAS9lB,KAAK,IACrC,C,0CCnFO,MAAM+lB,GAAyBC,KAAOC,MAAM;;;;;;;;;;;;;;;;;;;;;;;oCCA5C,MAAMC,GAAmBA,CAACnT,EAAoBoT,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACFhgB,EAAO,OACPX,EAAM,OACN1C,EAAM,eACNgD,EAAc,KACdpX,EAAI,SACJkX,EAAQ,eACRZ,EAAc,MACdS,EAAK,YACLN,EAAW,UACX3B,GACAkP,EAEJ,GAAI5P,IAAWgjB,EAAc,OAAOpT,EAEpC,MAAM0T,EAA2B,QAAjBN,EAAyB9mB,GAAkBD,GACrDsnB,EAA6B,QAAjBP,GAA0B,MAAMX,KAAK1f,GACjDA,EAAMgO,QAAQ,MAAO,OACJ,QAAjBqS,GAA0B,MAAMX,KAAK1f,GACjCA,EAAMgO,QAAQ,MAAO,OACrBhO,EACJ6gB,EAAkC,IACjC9iB,EACH1Q,KAAuB,QAAjBgzB,GAA6C,YAAnBtiB,EAAU1Q,KACpC,MACiB,QAAjBgzB,GAA6C,QAAnBtiB,EAAU1Q,KAChC,UACA0Q,EAAU1Q,MAGxB,MAAO,IACA4f,EACHhkB,KAAmB,QAAfq3B,EAAEK,EAAQ13B,UAAK,IAAAq3B,IAAIr3B,EACvBoU,OAAQgjB,EACRtgB,OAAuB,QAAjBwgB,EAAEI,EAAQ5gB,UAAO,IAAAwgB,IAAIxgB,EAC3BR,eAAuC,QAAzBihB,EAAEG,EAAQphB,UAAe,IAAAihB,IAAIjhB,EAC3CG,YAAaA,EAAY9D,KAAIC,IAAK,IAAAilB,EAAA,OAAkB,QAAlBA,EAAIH,EAAQ9kB,UAAM,IAAAilB,IAAIjlB,CAAK,IAC7D6E,QAAyB,QAAlB+f,EAAEE,EAAQjgB,UAAQ,IAAA+f,IAAI/f,EAC7BP,SAA2B,QAAnBugB,EAAEC,EAAQxgB,UAAS,IAAAugB,IAAIvgB,EAC/BH,MAAO4gB,EACPvgB,eAAiC,QAAjBggB,GAAiChgB,EACjDtC,UAAW8iB,EACd,E,uDClCE,MAcME,GAAkB,SAACC,GAC5B,MAAMC,EAA0B,IAD2E7c,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,KAGxG4c,EAAgBE,eAEjBC,EAAsBtlB,IAAmB,IAADulB,EAC1C,OAAqC,QAArCA,EAAOH,EAAwBplB,UAAM,IAAAulB,IAAI,EAAE,EAEzCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAI9mB,OAAO,OAAOxO,OAAOyiB,KAAK4S,GAASrnB,KAAK,YAEzDunB,EAAiBH,EAAS3T,MAAM6T,GAEtC,OAAOl2B,cAACo2B,IAAMC,SAAQ,CAAA7f,SACjB2f,EAAe7lB,KAAI,CAACC,EAAOugB,IACpBA,EAAQ,IAAM,EAAU9wB,cAACo2B,IAAMC,SAAQ,CAAA7f,SAA4BjG,GAAtB,GAAGA,KAASugB,KACtDmF,EAAQ1lB,MAHKylB,EAKX,EAEfM,EAAwB,CAC1B,sBAAwBC,GACbV,EAAmB,uBAAuBjP,WAAW,eAAgB2P,GAEhF,sBAAwBA,GACbV,EAAmB,uBAAuBjP,WAAW,eAAgB2P,GAEhF,6BAA+BC,GACpBX,EAAmB,8BAA8BjP,WAAW,aAAc,GAAG4P,KAExF,gCAAkCC,GACvBV,EACHF,EAAmB,iCACnB,CAAEY,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDb,EACHF,EAAmB,iCACnB,CAAEc,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOlB,EACHF,EAAmB,8BACnB,CAAEiB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOnB,EACHF,EAAmB,kCACnB,CAAEqB,cAGV,4BAA8BC,GACnBpB,EACHF,EAAmB,6BACnB,CAAEsB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,oBACIM,GAEO/B,EACHF,EAAmB,qBACnB,CAAEiC,eAKd,MAAO,IACApC,EACHE,cAAeD,EACfx5B,WAAY,IACLw5B,KACAW,GAGf,EC7IayB,GAAUC,mBAAkB,CAACC,EAAK3Z,KAC3C,MAAM4Z,EAAsB,MAExB,MAAMC,EAAM,IAAI/Q,IAAID,OAAOiR,SAASlR,MAC9BmR,EAAeF,EAAIG,aACnBC,EAAyBF,EAAa/Z,IAAI,YAIhD,GAFA+Z,EAAaG,OAAO,YACpBrR,OAAOsR,QAAQC,aAAavR,OAAOsR,QAAQE,MAAO,GAAIR,EAAIjR,MACtDqR,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,KACX,CAAE,MAAOpX,GAEL,OADAhJ,QAAQiJ,MAAM,iDAAkDD,GACzD,KACX,CACH,EAnB2B,GAoBtBuX,EAAqD,CAAC,EACtDC,EAAkBvD,GAAgB,CDhCxC93B,KAAM,UACNs7B,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,EC6BJzD,cAAe,CAAC,IAsCd0D,EAAeC,UACjB,GAAIR,EAAYS,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiBC,MACnB,yBAAwCH,SACxC,CACII,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBC,QAAsCH,EAASI,OAErD,IAAKD,EAAajE,cAAe,MAAO,IAAImE,MAAM,uBAClD,MAAMC,EAAoBvE,GAAgBoE,EAA6B,QAAjBJ,EAAEV,EAAYkB,WAAG,IAAAR,OAAA,EAAfA,EAAiB7D,eAGzE,OAFAmD,EAAYS,GAAgBQ,EAErBA,CACX,CAAE,MAAOxY,GAEL,OADAhJ,QAAQiJ,MAAM,gEAAiED,GACxE,IACX,GAEE0Y,EAAiBX,UACnB,MAAMY,EAAW7b,IAAM8b,oBAAoBZ,GAC3C,IAAKW,EAAU,OAIf,MAAMN,EAAgBd,EAAYS,GAE5BT,EAAYS,SADNF,EAAaE,GAGrBK,GACA5B,EAAI,CACAoC,aAAc/b,IAAM8b,oBAAoBZ,GACxCc,SAAUT,EAAa19B,aAE3B08B,aAAa0B,QAAQ,WAAYf,GACjCvB,EAAI,CACAuC,WAAW,EACXH,aAAcF,KAGlBlC,EAAI,CACAuC,WAAW,EACXH,aAAc/b,IAAM8b,oBAAoBH,IACxCK,SAAUtB,EAAgB78B,YAElC,EAGJ,MAAO,CACHi+B,oBAAqB,CAAC,EACtBC,aDhIkC,CACtC18B,KAAM,UACNs7B,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJiB,SAAUtB,EAAgB78B,WAC1BslB,MAAO,KACPgZ,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUpB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MACnB,sCACA,CACIC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBQ,QAA8DV,EAASI,OAE7E,IAAKM,EAAqB,MAAO,IAAIL,MAAM,qBAE3C9B,EAAI,CACAmC,sBACAM,iBAAiB,GAEzB,CAAE,MAAOlZ,GACLhJ,QAAQiJ,MAAM,6EAA8ED,GAC5FyW,EAAI,CACAmC,oBAAqB,CACjBH,IAAK,CACDt8B,KAAM,UACNs7B,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBqB,iBAAiB,GAEzB,GAgEIE,EAAsB,EAE1BC,oBAAqBtB,gBAEXD,EAAa,aACbY,EAAehC,GACrBD,EAAI,CACAwC,cAAc,GAChB,EAENnB,eACAY,iBACH,IAGQY,GAAcA,IACN/C,IAAQxb,IAAA,IAAC,SAAE+d,GAAU/d,EAAA,OAAK+d,CAAQ,IAI1CS,GAAcA,IAAMhD,GAAQiD,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAczU,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzG0U,GAAc,IAAIC,IAAIL,GAAa5qB,IAAI6qB,KAEvCK,GAAsBP,GAAqBp1B,QAAO,CAACC,EAAKs1B,EAAOtK,KACjE,MAAM2K,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB31B,EAAIs1B,GAAqBtK,GAE7DhrB,CAAG,GACX,CAAC,GAEE61B,GAAoB3e,GACV,MAARA,GACS,KAATA,EADqB,GAElB,IAAIA,EAAK0F,QAAQ,KAAM,SA8N5BkZ,GAAmBA,CAACx/B,EAAYy/B,KAClC,GAAqB,mBAAVz/B,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAAM0/B,EAAkB1/B,EAAMi/B,cAC9B,MAA2B,SAApBS,GAEmB,UAApBA,GAEID,CACd,CACA,OAAOA,CAAQ,EAEbE,GAAeA,CAAC3/B,EAAYy/B,IACT,kBAAVz/B,EAA2B4/B,SAAS5/B,GAASA,EAAQy/B,EAC3C,kBAAVz/B,GAA2B4/B,SAASrI,SAASv3B,IAAUu3B,SAASv3B,GACpEy/B,EAELI,GAAiBA,CAAC7/B,EAAYy/B,IACX,kBAAVz/B,EAA2B4/B,SAAS5/B,GAASA,EAAQy/B,EAC3C,kBAAVz/B,GAA2B4/B,SAAStM,WAAWtzB,IAAUszB,WAAWtzB,GACxEy/B,EAELK,GAAiBA,CAAC9/B,EAAYy/B,IACX,kBAAVz/B,EACHA,EAAM+/B,WAAW,KAAa//B,EAC3B,IAAIA,IAERy/B,EAEEO,GAAiBpf,IAC1B,IACI,MAAMqf,EAAqCrf,EAAK,GAhDtCnX,QAAO,CAACC,EAAKs1B,EAAOtK,KAC9B,MAAM2K,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB31B,EAAIs1B,GAAqBtK,GAE7DhrB,CAAG,GACX,CAAC,GA6CA,OAAOkX,EACF1M,KAAI,CAACsN,EAAKkT,KAAW,IAADvU,EAAA+f,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEjB,GAAc,IAAVjO,EAAa,OAAO,KAExB,GAAqB,KAAjBlT,EAAIhP,KAAK,IAAY,OAAO,KAChC,MAAMowB,EAAYjpB,KACZkpB,EAlDIC,EAACthB,EAA6Bye,IAC5CjB,IAAqB,IAAD+D,EAAAC,EACxB,MAAMC,EAAmC,QAAxBF,EAAG9C,EAAejB,UAAM,IAAA+D,KAAK,EACxC/iC,GAAyB,QAAjBgjC,EAACxhB,EAAIyhB,UAAY,IAAAD,IAAI,IAAIE,OAEvC,MAAiB,KAAVljC,OACD4c,EACA5c,CAAK,EA2CY8iC,CAAkBthB,EAAKye,GAEhC7/B,GAAqD,QAA7C+f,EAAgB,QAAhB+f,EAAC2C,EAAO,gBAAQ,IAAA3C,IAAI2C,EAAO,0BAAkB,IAAA1iB,IAAIyiB,EAAUxiC,OAAO6+B,cAE1EkE,GAAgD,QAAzChD,EAAiB,QAAjBC,EAAGyC,EAAO,eAAO,IAAAzC,IAAIyC,EAAO,qBAAa,IAAA1C,IAAI,GACpDzpB,GAA+B,SAAxBmsB,EAAO,aACdM,GACA5L,SAAS4L,KAAY,IAAM5L,SAAS4L,KAAY,GAA6B,MAAxBN,EAAO,aACxDtL,SAAS4L,IACTA,GAEJC,IAA6C,QAAnC/C,EAAe,QAAfC,EAACuC,EAAO,eAAO,IAAAvC,IAAIuC,EAAO,iBAAS,IAAAxC,IAAI,UAAUpB,cAC3DhpB,GAAO/L,EAAYk5B,IAAWA,GAAU,SAExCC,GAAkC,QAAtB9C,EAAGsC,EAAO,oBAAY,IAAAtC,OAAA,EAAnBA,EAAqB+C,cACpC/sB,GAAY8sB,GACK,SAAjBA,GACIjgC,EACAigC,GACM,UAAVjjC,EACI,QACU,SAAVA,EACI,OACAwiC,EAAUrsB,UAElBJ,GAAiC,QAAxBqqB,EAAIqC,EAAO,qBAAa,IAAArC,IAAKqC,EAAO,cAAgB,OAAOA,EAAO,gBAAkB,GAC7FtqB,GAAmB,QAAhBkoB,EAAGoC,EAAO,cAAM,IAAApC,IAAI,GACvBhqB,GAAoC,QAA5BiqB,EAAImC,EAAO,yBAAiB,IAAAnC,IAAIkC,EAAUnsB,SAClDuC,GAA6B,QAAtB2nB,EAAGkC,EAAO,oBAAY,IAAAlC,IAAI,GACjCnoB,GAAmB,QAAhBooB,EAAGiC,EAAO,cAAM,IAAAjC,IAAI,GACvBvoB,GAAyB,QAAnBwoB,EAAGgC,EAAO,iBAAS,IAAAhC,IAAI,GAC7B3qB,GAA0E,QAApE4qB,EAAwB,QAAxBC,EAAG8B,EAAO,sBAAc,IAAA9B,OAAA,EAArBA,EAAuB9a,MAAM,OAAOwN,QAAOtf,GAAmB,KAAVA,WAAa,IAAA2sB,IAAI,GAC9EnrB,IAA0B,QAAjBqrB,EAAC6B,EAAO,iBAAS,IAAA7B,IAAI4B,EAAUjtB,QAAQspB,cAChDhmB,GAAiBumB,GAAiBqD,EAAO,uBAAwBD,EAAU3pB,gBAC3E1X,GAAqB,QAAjB0/B,EAAG4B,EAAO,eAAO,IAAA5B,IAAI,GACzBxoB,GAA6B,QAArByoB,EAAG2B,EAAO,mBAAW,IAAA3B,IAAI,GACjC5oB,GAA4C,QAAvC6oB,EAAmB,QAAnBC,EAAGyB,EAAO,iBAAS,IAAAzB,IAAIyB,EAAO,iBAAS,IAAA1B,IAAI,GAChDxqB,IAAyC,QAAzB0qB,EAACwB,EAAO,yBAAiB,IAAAxB,IAAIuB,EAAUjsB,eAAesoB,cACtEvmB,IAA4B,QAAlB4oB,EAACuB,EAAO,kBAAU,IAAAvB,IAAIsB,EAAUlqB,SAASumB,cACnDzoB,IAAwE,QAA5D+qB,EAA0B,QAA1BC,EAACqB,EAAO,0BAAkB,IAAArB,IAAIqB,EAAO,+BAAuB,IAAAtB,IAAIqB,EAAUpsB,WAAW8sB,cAEjGnxB,GAA2B,QAApBsvB,EAAGoB,EAAO,kBAAU,IAAApB,OAAA,EAAjBA,EAAmBxC,cAC7BtmB,GAAiB6mB,GACnBqD,EAAO,oBACP1wB,GAAsB,gBAAZA,GAA4BywB,EAAUjqB,gBAE9CG,GAAqB0mB,GACvBqD,EAAO,yBACP1wB,GAAsB,kBAAZA,GAA8BywB,EAAU9pB,oBAEhDD,GAAmB2mB,GACrBqD,EAAO,sBACP1wB,GAAsB,oBAAZA,GAAgCywB,EAAU/pB,kBAElDD,GAAc4mB,GAChBqD,EAAO,iBACP1wB,GAAsB,eAAZA,GAA2BywB,EAAUhqB,aAE7CG,GAAeymB,GAAiBqD,EAAO,kBAAmBD,EAAU7pB,cAEpE/V,GAAaw8B,GAAiBqD,EAAO,eAAgBD,EAAU5/B,YAC/D4U,IAAuC,QAAvB8pB,EAACmB,EAAO,uBAAe,IAAAnB,IAAIkB,EAAUhrB,eAAeqnB,cACpEpnB,GAA0C,QAA5B8pB,EAAGkB,EAAO,0BAAkB,IAAAlB,IAAI,GAC9C7pB,GAA+C,QAA/B8pB,EAAGiB,EAAO,6BAAqB,IAAAjB,IAAIgB,EAAU9qB,iBAC7DC,GAAiD,QAAhC8pB,EAAGgB,EAAO,8BAAsB,IAAAhB,IAAIe,EAAU7qB,kBAE/DwrB,GAAiBV,EAAO,gBACxB7qB,GAAcurB,GACdA,GAAetd,MAAM,KACrB,CAAC4c,EAAO,UAAWA,EAAO,UAAWA,EAAO,UAAWA,EAAO,WAC3DpP,QAAOtf,GAA0B,kBAAVA,GAAgC,KAAVA,IAEhD+D,IAA2C,QAAxB4pB,EAACe,EAAO,wBAAgB,IAAAf,IAAIc,EAAU3qB,YAAYC,kBAAkB+mB,cACvFuE,GAAe7D,GAAakD,EAAO,yBAA0BD,EAAU3qB,YAAYE,QACnFsrB,GAAuB9D,GAAakD,EAAO,kCAAmCD,EAAUxqB,cAAcD,QACtGurB,IAAsD,QAApC3B,EAACc,EAAO,oCAA4B,IAAAd,IAAIa,EAAU3qB,YAAYjM,WAAWizB,cAC3F0E,IAAuE,QAA7C3B,EAACa,EAAO,6CAAqC,IAAAb,IAAIY,EAAUxqB,cAAcpM,WAAWizB,cAE9G2E,GAAeziC,IACf8B,GAAuB,CACzBxB,UAAW+9B,GAAiBqD,EAAO,wBAAyBe,GAAaniC,WACzED,SAAuC,QAA/BygC,EAAEY,EAAO,8BAAsB,IAAAZ,IAAI2B,GAAapiC,SACxDJ,KAAMu+B,GAAakD,EAAO,kBAAmBe,GAAaxiC,MAC1DO,UAAW69B,GAAiBqD,EAAO,uBAAwBe,GAAajiC,WACxEJ,KAAMo+B,GAAakD,EAAO,kBAAmBe,GAAariC,MAC1DG,WAAY89B,GAAiBqD,EAAO,yBAA0Be,GAAaliC,YAC3EL,SAAUs+B,GAAakD,EAAO,sBAAuBe,GAAaviC,UAClEC,KAAMq+B,GAAakD,EAAO,kBAAmBe,GAAatiC,OAGxDuiC,GtBxgBQ,CAC1B7sB,EAAG,EACHC,EAAG,EACH3W,MAAO,IACPC,OAAQ,KACR2W,KAAM,IACNC,OAAQ,GsBmgBUlN,GAAwB,QAArBi4B,EAAGW,EAAO,mBAAW,IAAAX,IAAIU,EAAU34B,IACtC4M,GAAS2oB,GAAiBqD,EAAO,qBAAsBD,EAAU/rB,QACjEE,GAAgB,CAClBI,OAAQpU,EAAuBC,GAAYC,IAASd,MACpD5B,OAAQs/B,GAAegD,EAAO,yBAA0BgB,GAAatjC,QACrED,MAAOu/B,GAAegD,EAAO,wBAAyBgB,GAAavjC,OACnE0W,EAAG6oB,GAAegD,EAAO,oBAAqBgB,GAAa7sB,GAC3DC,EAAG4oB,GAAegD,EAAO,oBAAqBgB,GAAa5sB,GAC3DC,KAAM,KAGJ4sB,GtBphBQ,CAC1B9sB,EAAG,EACHC,EAAG,EACH3W,MAAO,IACPC,OAAQ,KACR2W,KAAM,IACNC,OAAQ,GsB+gBUC,GAAgBooB,GAAiBqD,EAAO,kBAAmBD,EAAUxrB,eACrEC,GAAsC,QAA5B8qB,EAAGU,EAAO,0BAAkB,IAAAV,IAAIS,EAAUvrB,WACpDnU,IAA2C,QAA1Bk/B,EAACS,EAAO,0BAAkB,IAAAT,IAAIQ,EAAU1/B,gBAAgB+7B,cACzE1nB,GAAgBioB,GAAiBqD,EAAO,4BAA6BD,EAAUrrB,eAC/EE,GAAuB,CACzBN,OAAQpU,EAAuBC,GAAYC,GAASC,IAAgBf,MACpE5B,OAAQs/B,GAAegD,EAAO,gCAAiCiB,GAAoBvjC,QACnFD,MAAOu/B,GAAegD,EAAO,+BAAgCiB,GAAoBxjC,OACjF0W,EAAG6oB,GAAegD,EAAO,2BAA4BiB,GAAoB9sB,GACzEC,EAAG4oB,GAAegD,EAAO,2BAA4BiB,GAAoB7sB,GACzEC,KAAM,KAGJ6sB,GlCviBa,CAC/Bp+B,KAAM,UACNN,UAAW,UACXiR,kBAAmB,UACnBhQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXF,WAAW,EACX7B,OAAQ,UACRL,QAAS,QkCmhBSqR,IAA0C,QAA1BisB,EAACQ,EAAO,0BAAkB,IAAAR,IAAIO,EAAUxsB,eAAe6oB,cACvE5oB,GAAuB,CACzBnP,YAAay4B,GAAakD,EAAO,6BAA8BkB,GAAe78B,aAC9EC,UAAWw4B,GAAakD,EAAO,2BAA4BkB,GAAe58B,WAC1E9B,UAAWy6B,GAAe+C,EAAO,2BAA4BkB,GAAe1+B,WAC5EM,KAAiC,QAA7B28B,EAAEO,EAAO,4BAAoB,IAAAP,IAAIyB,GAAep+B,KACpDI,cAAe45B,GAAakD,EAAO,+BAAgCkB,GAAeh+B,eAClFC,cAAoD,QAAvCu8B,EAAEM,EAAO,sCAA8B,IAAAN,IAAIwB,GAAe/9B,cACvEiB,UAAWu4B,GAAiBqD,EAAO,2BAA4BkB,GAAe98B,WAC9ErC,YAAa46B,GAAiBqD,EAAO,6BAA8BkB,GAAen/B,aAClFC,WAAY26B,GAAiBqD,EAAO,4BAA6BkB,GAAel/B,YAChFC,UAAW06B,GAAiBqD,EAAO,2BAA4BkB,GAAej/B,WAC9EwR,kBAAmBwpB,GAAe+C,EAAO,oCAAqCkB,GAAeztB,mBAC7F7Q,UAAWq6B,GAAe+C,EAAO,2BAA4BkB,GAAet+B,WAC5EG,YAAa+5B,GAAakD,EAAO,8BAA+BkB,GAAen+B,aAC/EgB,YAAa+4B,GAAakD,EAAO,8BAA+BkB,GAAen9B,aAC/EpB,UAAWm6B,GAAakD,EAAO,2BAA4BkB,GAAev+B,WAC1ET,QAAuC,QAAhCy9B,EAAEK,EAAO,+BAAuB,IAAAL,IAAIuB,GAAeh/B,QAC1DK,OAAsC,QAAhCq9B,EAAGI,EAAO,8BAAsB,IAAAJ,IAAIsB,GAAe3+B,OACzDqB,WAAYk5B,GAAakD,EAAO,4BAA6BkB,GAAet9B,YAC5EH,YAAaw5B,GAAe+C,EAAO,6BAA8BkB,GAAez9B,aAChFE,cAAem5B,GAAakD,EAAO,gCAAiCkB,GAAev9B,eACnFD,cAAeo5B,GAAakD,EAAO,gCAAiCkB,GAAex9B,gBAGjFoR,GAAS6nB,GAAiBqD,EAAO,WAA4B,QAAlBH,EAAEE,EAAUjrB,cAAM,IAAA+qB,IAAe,SAAVtiC,GAClEsX,GASyB,QATlBirB,EAAG,CACZnD,GAAiBqD,EAAO,0BAA0B,GAAS,IAAM,GACjErD,GAAiBqD,EAAO,qBAAqB,GAAS,IAAM,GAC5DrD,GAAiBqD,EAAO,2BAA2B,GAAS,IAAM,GAClErD,GAAiBqD,EAAO,sBAAsB,GAAS,IAAM,GAC7DrD,GAAiBqD,EAAO,uBAAuB,GAAS,IAAM,GAC9DrD,GAAiBqD,EAAO,6BAA6B,GAAS,IAAM,GACpErD,GAAiBqD,EAAO,wBAAwB,GAAS,IAAM,GAC/DrD,GAAiBqD,EAAO,8BAA8B,GAAS,IAAM,IACvEpP,QAAOtf,GAAmB,KAAVA,WAAa,IAAAwuB,IAAI,GAE7BqB,GlC9iB8B,EAChD,EACA,WACA,EACA,WkC2iBkB9qB,GAAgB,CAClBsmB,GAAiBqD,EAAO,0BAA2BmB,GAAe,IAClElE,GAAe+C,EAAO,2BAA4BmB,GAAe,IACjExE,GAAiBqD,EAAO,2BAA4BmB,GAAe,IACnElE,GAAe+C,EAAO,6BAA8BmB,GAAe,KAEjE7qB,GAAgB,CAClBqmB,GAAiBqD,EAAO,0BAA2BmB,GAAe,IAClElE,GAAe+C,EAAO,2BAA4BmB,GAAe,IACjExE,GAAiBqD,EAAO,2BAA4BmB,GAAe,IACnElE,GAAe+C,EAAO,6BAA8BmB,GAAe,KAEjE5qB,GAAkB,CACpBomB,GAAiBqD,EAAO,4BAA6BmB,GAAe,IACpElE,GAAe+C,EAAO,6BAA8BmB,GAAe,IACnExE,GAAiBqD,EAAO,6BAA8BmB,GAAe,IACrElE,GAAe+C,EAAO,+BAAgCmB,GAAe,KAEnE3qB,GAAoB,CACtBmmB,GAAiBqD,EAAO,qCAAsCmB,GAAe,IAC7ElE,GAAe+C,EAAO,sCAAuCmB,GAAe,IAC5ExE,GAAiBqD,EAAO,sCAAuCmB,GAAe,IAC9ElE,GAAe+C,EAAO,wCAAyCmB,GAAe,KAE5E1qB,GAAiB,CACnBkmB,GAAiBqD,EAAO,2BAA4BmB,GAAe,IACnElE,GAAe+C,EAAO,4BAA6BmB,GAAe,IAClExE,GAAiBqD,EAAO,4BAA6BmB,GAAe,IACpElE,GAAe+C,EAAO,8BAA+BmB,GAAe,KAExE,IAAIzqB,GAAe,CAAC,EACpB,IAAK,IAAD0qB,GACA1qB,GAAe0O,KAAKC,MAAoC,QAA/B+b,GAACpB,EAAO,+BAAuB,IAAAoB,MAAI,KAChE,CAAE,MAAO7e,IACLhJ,QAAQiJ,MAAM,gBAAiBD,GACnC,CAEA,MAAO,CACH3L,GAAIC,iBACDkpB,EACH34B,OACA8M,WACAZ,aACAU,UACAC,UAAW,SACXyB,OACAhC,aACAc,cACAI,kBACAF,iBACAC,iBAAkB,SAClBtU,kBACAuT,YACAyB,oBACAc,WACAR,OACAP,YAAa,CAAEC,oBAAkBC,OAAQqrB,GAAcx3B,UAAW03B,IAClErrB,UACAe,mBACAG,gBACArD,UACAD,QACAN,UACAvV,QACA6Y,kBACA7B,iBACA0B,sBACAH,kBACAI,gBACAF,oBACAlB,UACA3U,cACA4V,eACAlB,WACAnW,QACA8U,aACAD,iBACAnT,WACAqW,kBACAb,YACAZ,kBACAD,iBACAG,qBACAD,oBACAM,cAAe,CAAED,OAAQsrB,GAAsBz3B,UAAW23B,IAC1DtqB,qBACAf,SACA5B,QACAC,iBACAuC,iBACAR,WACAlC,aACAwB,eACAmB,iBACH,IAGJsa,QAAOtf,GACY,MAATA,GAEnB,CAAE,MAAOiR,GAEL,OADAhJ,QAAQiJ,MAAM,gBAAiBD,GACxB,EACX,GChrBE8e,GAAaA,CAACC,EAAuCC,KACvD,MAAMC,EAAqC,kBAAbF,EAAwB5M,SAAS4M,GAAYA,EACrEG,EAAuC,kBAAdF,EAAyB7M,SAAS6M,GAAaA,EACxEG,IAAeF,GAAiBzE,SAASyE,GACzCG,IAAgBF,GAAkB1E,SAAS0E,GAEjD,GAAIC,IAAiBC,EAAe,OAAQ,EAC5C,IAAKD,GAAgBC,EAAe,OAAO,EAC3C,GAAID,GAAgBC,EAAe,OAAuB,OAAfF,QAAe,IAAfA,IAAmB,IAAoB,OAAdD,QAAc,IAAdA,IAAkB,GAEtF,MAAMI,EAAgC,MAAbN,EACnB,EACa,KAAbA,GACK,EACD,EACJO,EAAkC,MAAdN,EACpB,EACc,KAAdA,GACK,EACD,EAEV,OACIM,EAAoBD,IAAqB,GAClB,kBAAbN,GACc,kBAAdC,GACI,OAARD,QAAQ,IAARA,IAAY,IAAIQ,cAAcP,GACjCM,EAAoBD,CAAgB,EAEzCG,GAAcA,CAACC,EAAiB3e,IAAoB2e,EAAEtjC,KAAKojC,cAAcze,EAAE3kB,MAC3EujC,GAAeA,CAACD,EAAiB3e,IAAoB2e,EAAEvsB,MAAMqsB,cAAcze,EAAE5N,OAC7EysB,GAAaA,CAACF,EAAiB3e,IAAoBge,GAAWW,EAAEtsB,IAAK2N,EAAE3N,KACvEysB,GAAaA,CAACH,EAAiB3e,IAAoBge,GAAWW,EAAErsB,IAAK0N,EAAE1N,KACvEysB,GAAcA,CAACJ,EAAiB3e,IAC9B2e,EAAEltB,QAAUuO,EAAEvO,OAAeuO,EAAExO,QAAQiF,OAASkoB,EAAEntB,QAAQiF,OACvDunB,GAAWW,EAAEnuB,KAAMwP,EAAExP,MAE1BwuB,GAAeA,CAACL,EAAiB3e,KAAqB,IAADif,EAAAC,EAAAC,EAAAC,EACvD,MAAMC,EAActzB,GAAaiU,EAAE9lB,OAAOiS,WAAaJ,GAAa4yB,EAAEzkC,OAAOiS,WAE7E,GAAoB,IAAhBkzB,EAAmB,OAAOA,EAK9B,OAFoE,QAA1CJ,EAA8B,QAA9BC,EAACnzB,GAAaiU,EAAEtO,sBAAc,IAAAwtB,OAAA,EAA7BA,EAA+B/yB,kBAAU,IAAA8yB,IAAI,MAAkD,QAA9CE,EAAkC,QAAlCC,EAAKrzB,GAAa4yB,EAAEjtB,sBAAc,IAAA0tB,OAAA,EAA7BA,EAA+BjzB,kBAAU,IAAAgzB,IAAI,IAEtG,EAEtBG,GAAiBjgB,IACnB,MAAMyB,EAAiB,IAAKzB,IACtB,MAAEnlB,EAAK,OAAEuX,GAAWqP,EAY1B,OAVc,UAAV5mB,GAA+B,SAAVA,GAAoBolB,GAAgBwB,MACzDA,EAAezO,IAAM,GACrByO,EAAexO,IAAM,GACrBwO,EAAetQ,KAAO,GAEtBiB,IACAqP,EAAexO,IAAM,GACrBwO,EAAetQ,KAAO,GAGnBsQ,CAAc,EAEnBye,GAAeA,CAACC,EAA+DC,EAAqBC,KACtG,IAAK,IAAIhR,EAAM,EAAGA,EAAM8Q,EAAY/oB,OAAQiY,IAAO,CAC/C,MAAMzxB,EAASuiC,EAAY9Q,GAAK+Q,EAAOC,GAEvC,GAAe,IAAXziC,EAAc,OAAOA,CAC7B,CACA,OAAO,CAAC,EAEC0iC,GAAkB,CAC3BtkC,KAAM,CACF2D,IAAK,OACL4gC,aAAeC,GACJA,EACF7xB,IAAIsxB,IACJQ,MAAK,CAACnB,EAAG3e,IAAMuf,GACZ,CACIb,GACAK,GACAC,GACAJ,GACAC,GACAC,IAEJH,EACA3e,MAIhB3N,IAAK,CACDrT,IAAK,MACL4gC,aAAeC,GACJA,EACF7xB,IAAIsxB,IACJQ,MAAK,CAACnB,EAAG3e,IAAMuf,GACZ,CACIV,GACAC,GACAC,GACAC,GACAN,GACAE,IAEJD,EACA3e,MAIhB1N,IAAK,CACDtT,IAAK,MACL4gC,aAAeC,GACJA,EACF7xB,IAAIsxB,IACJQ,MAAK,CAACnB,EAAG3e,IAAMuf,GACZ,CACIT,GACAD,GACAE,GACAC,GACAN,GACAE,IAEJD,EACA3e,MAIhB2V,IAAK,CACD32B,IAAK,MACL4gC,aAAeC,GACJA,EACF7xB,IAAIsxB,IACJQ,MAAK,CAACnB,EAAG3e,IAAMuf,GACZ,CACIX,GACAI,GACAD,GACAL,GACAG,GACAC,IAEJH,EACA3e,MAIhB5K,MAAO,CACHpW,IAAK,QACL4gC,aAAeC,GACJA,EACF7xB,IAAIsxB,IACJQ,MAAK,CAACnB,EAAG3e,IAAMuf,GACZ,CACIP,GACAD,GACAL,GACAE,GACAC,GACAC,IAEJH,EACA3e,OAKd+f,GAAcA,CAChBF,EACAG,KAEA,MAAMC,EAAa3hC,OACdC,OAAOyhC,GACPzS,QAAQtf,GAA0E,MAATA,IAE9E,OAA0B,IAAtBgyB,EAAWxpB,OAAqBopB,EAC7BI,EAAW18B,QAAO,CAAC28B,EAAcC,IAC7BA,EAAcD,IACtBL,EAAS,EA+BHO,GAAc1K,kBAGzB2K,kCAAuB1K,IACd,CACH2K,SAAU,GACVC,gBAAiB,GACjBV,SAAU,GACVW,kBAAmB,CAAC,EACpBC,kBAAmB,EACnBC,aAAa,EACbC,SAAU,YACVC,uBAAmBlqB,EACnBmqB,QAA2D,SAAlDtK,aAAaC,QAAQ,yBAC9BsK,kBAAmB7mB,IAAA,IAAC,KAAE1d,EAAI,MAAEzC,GAAOmgB,EAAA,OAAK0b,GAAIsE,IAGrC,IAHsC,SACzC4F,EAAQ,kBACRW,GACHvG,EACG,MAAM8G,EAAwB,IAAKP,GACnC,GAAa,SAATjkC,EAAiB,CACjB,MAAMi9B,EAAkB1/B,EAAMi/B,cAC9BgI,EAAsBxkC,GAAQsjC,GACnBA,EAAStS,QAAO4M,IAAuC,IAAtC,KAAE9+B,EAAI,OAAE8W,EAAM,eAAER,GAAgBwoB,EACpD,OAAQ9V,GAAkBhpB,GAAM09B,cAC1BxU,GAAoBpS,GAAQ4mB,cAC5BxU,GAAoB5S,GAAgBonB,eAAepZ,SAAS6Z,EAAgB,GAG9F,CAEA,MAAO,CACHgH,kBAAmBO,EACnBR,gBAAiBR,GAAYF,EAAUkB,GAC1C,GACH,EACFC,YAAaA,KACTrL,GAAIsF,IAAsC,IAArC,kBAAEwF,EAAiB,SAAEZ,GAAU5E,EAChC,MAAO,CACHuF,kBAAmB,CAAC,EACpBC,kBAAmBA,EAAoB,EACvCF,gBAAiB,IAAIV,GACxB,GACH,EAENoB,QAAS5hB,GAAQsW,GAAI0F,IAAmB,IAAlB,SAAEwE,GAAUxE,EAC9B,MACM6F,EAAU,CAAE3tB,GADPC,iBACc6L,GAEzB,MAAO,CACHihB,SAAUY,EAAQ3tB,GAClBssB,SAAU,IAAIA,EAAUqB,GAExBX,gBAAiB,IAAIV,EAAUqB,GAClC,IAELC,iBAAkBC,IACA,SAAVA,GAAkBzL,EAAI,CAAE+K,aAAa,IAC3B,aAAVU,GAAsBzL,EAAI,CAAE+K,aAAa,GAAQ,EAEzDW,cAAevoB,GAAU6c,GAAI2L,IAAA,IAAC,QAAET,GAASS,EAAA,MAAM,CAAET,QAAe,OAAN/nB,QAAM,IAANA,KAAW+nB,EAAS,IAC9EU,YAAalmC,GAAQs6B,EAAI,CAAEgL,SAAUtlC,IACrCmmC,qBAAsBniB,GAAQsW,EAAI,CAAEiL,kBAAmBvhB,IACvDoiB,iBAAkB,SAACC,GAAyC,IAAzBC,EAAWnrB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1Cmf,GAAIiM,IAAiD,IAAhD,SAAE/B,EAAQ,gBAAEU,EAAe,YAAEG,GAAakB,EACvCC,EAAkBnB,EAGtB,IAAwB,IAApBmB,GAA6BF,EAAa,CAC1C,MAAMG,EAAajC,EAASkC,MAAK1iB,GAAQA,EAAK9L,KAAOmuB,EAAenuB,KAEpEsuB,GAAkBC,IjB0GPE,EAACC,EAAwBC,KACpD,MACIrxB,QAASsxB,EACT5wB,eAAgB6wB,KACbC,GACHJ,GAEApxB,QAASyxB,EACT/wB,eAAgBgxB,KACbC,GACHN,EAEJ,OAAOO,aAAOJ,EAAWG,IAClBlf,GAAgB6e,EAAaG,IAC7Bhf,GAAgB8e,EAAoBG,EAAoB,EiBvHxCP,CAAgBN,EAAgBI,EAE3C,CASA,MAAO,CACHpB,YAAamB,EACbhC,SAViBA,EAAS7xB,KAAIqR,GAC1BA,EAAK9L,KAAOmuB,EAAenuB,GAAW,IAAKmuB,GACxCriB,IASPkhB,gBAPwBA,EAAgBvyB,KAAIqR,GACxCA,EAAK9L,KAAOmuB,EAAenuB,GAAW,IAAKmuB,GACxCriB,IAMV,GAET,EACAqjB,YAAanvB,GAAMoiB,EAAI,CAAE2K,SAAU/sB,IACnCovB,YAAaA,CAAC9C,EAAUS,KAAc,IAADsC,EAEjCjN,EAAI,CACA6K,kBAAmB,CAAC,EACpBE,aAAa,EACbJ,SAAkB,OAARA,QAAQ,IAARA,IAAuB,QAAfsC,EAAI/C,EAAS,UAAE,IAAA+C,OAAA,EAAXA,EAAarvB,GACnCssB,SAAUA,EACVU,gBAAiB,IAAIV,IACvB,EAENgD,WAAYtvB,IACRoiB,GAAImN,IAA8C,IAADC,EAAAC,EAAAC,EAAAC,EAAA,IAA5C,SAAErD,EAAQ,SAAES,EAAQ,gBAAEC,GAAiBuC,EACxC,MAAMK,EAAqBtD,EAAStS,QAAOlO,GAAQA,EAAK9L,KAAOA,IACzD6vB,EAA4B7C,EAAgBhT,QAAOlO,GAAQA,EAAK9L,KAAOA,IACvE8vB,EAAkBD,EAA0BE,WAAUjkB,GAAQA,EAAK9L,KAAO+sB,IAKhF,MAAO,CACHA,SALiBA,IAAa/sB,EAC0D,QADxDwvB,EACoB,QADpBC,EACgB,QADhBC,EAC9BG,EAA0BC,EAAkB,UAAE,IAAAJ,OAAA,EAA9CA,EAAgD1vB,UAAE,IAAAyvB,IAAgC,QAAhCE,EAAIE,EAA0B,UAAE,IAAAF,OAAA,EAA5BA,EAA8B3vB,UAAE,IAAAwvB,IAAI,GAC1FzC,EAIFT,SAAUsD,EACV5C,gBAAiB6C,EACpB,GACH,EAENG,cAAelkB,IACXsW,GAAI6N,IAAsC,IAArC,SAAE3D,EAAQ,kBAAEW,GAAmBgD,EAChC,MAAMC,EAAc5D,EAASyD,WAAUI,IAAA,IAAC,KAAEroC,GAAMqoC,EAAA,OAAKroC,IAASgkB,EAAKhkB,IAAI,IACjEsoC,EAAWnwB,cACXowB,EAAa,IACZ5rB,aAAMqH,GACThkB,KAAM,GAAGgkB,EAAKhkB,cACdkY,GAAIowB,GAEFE,EAAeJ,EAAc,EAC7B,IAAI5D,EAAU+D,GACd,IACK/D,EAAS7U,MAAM,EAAGyY,GACrB5D,EAAS4D,GACTG,KACG/D,EAAS7U,MAAMyY,EAAc,EAAG5D,EAASppB,SAGpD,MAAO,CACH6pB,SAAUqD,EACV/C,kBAAmBgD,EACnB/D,SAAUgE,EACVtD,gBAAiBR,GAAY8D,EAAcrD,GAC9C,GACH,EAENsD,SAAUvnC,IACNo5B,GAAIoO,IAAoC,IAAnC,gBAAExD,EAAe,SAAEV,GAAUkE,EAI9B,MAAO,CACHxD,gBAJsBZ,GAAgBpjC,GAAMqjC,aAAaW,GAMzDV,SALeF,GAAgBpjC,GAAMqjC,aAAaC,GAMrD,GACH,OCvVDmE,GAAaA,CACtBC,EACAvhB,KAKA,MAAMnP,EAAKC,cACX,IAAI0wB,EAAczwB,KACdyP,GAAY,EAChB,IAAK+gB,EAAU,MAAO,CAAE/gB,YAAW7D,KAAM,IAAK6kB,EAAa3wB,OAC3D,IACI,MAAMuN,EAAqC,kBAAbmjB,EACxBliB,KAAKC,MAAMiiB,GACXA,EAGN,GAAIvhB,EAAU,CACV,MAAM/lB,EAAgC6kB,GAAmBV,GAIrDojB,EADA5lC,OAAOyiB,KAAKpkB,GAAU8Z,OAAS,EACjB0L,GAAgBxlB,EAAU+lB,GAI1BP,GAAgBrB,EAAgB4B,EAEtD,MACK,GAAIG,GAAmB/B,GACxBojB,EAAc/hB,GAAgBrB,QAE7B,GAAIiC,GAA0BjC,GAAiB,CAChD,MAAMnkB,EAAgC6kB,GAAmBV,GAEzDojB,EAAc/hB,GAAgBxlB,EAClC,MAEK,GAAIwkB,MAAMC,QAAQN,EAAepG,MAAO,CACzC,MAAMypB,EAAgBhjB,MAAMC,QAAQN,EAAepG,MAAQoG,EAAepG,KAAK,GAAKoG,GAC5EoC,UAAWkhB,EAAa,OAAEnnC,GAAW6sB,GAA0Bqa,GACvEjhB,EAAYkhB,EACZF,EAAcjnC,CAClB,MACK,Gd1DuB6lB,KAChC,IAEI,MAAO,OAAQA,GACR,cAAeA,GACf,cAAeA,CAC1B,CAAE,MAAO5D,GAEL,OADAhJ,QAAQiJ,MAAMD,IACP,CACX,GciDamlB,CAAoBvjB,GAAiB,CAC1C,MAAQoC,UAAWkhB,EAAa,OAAEnnC,GAAW6sB,GAA0BhJ,GACvEoC,EAAYkhB,EACZF,EAAcjnC,CAClB,KACK,CACD,MAAQimB,UAAWkhB,EAAa,OAAEnnC,Gf6ILoiB,KACrC,MAAM,KACFhkB,EAAI,IACJgX,EAAG,IACHC,EAAG,UACHjC,EAAS,OACT8B,EAAM,QACNuW,EAAO,UACPJ,EAAS,KACTrqB,EAAI,GACJsV,EAAE,MACFtU,EAAK,OACLoqB,EAAM,MACNjU,EAAK,KACLsP,EAAI,SACJvpB,EAAQ,OACRgtB,EAAM,OACNE,EAAM,KACN9rB,EAAI,QACJqsB,EAAO,QACP9Y,GACAuP,GACE,IAAEoJ,EAAG,KAAED,EAAME,QAAS4b,EAAe,eAAE3b,EAAgBxW,OAAQR,EAAc,QAAE4W,GAAYptB,EAC3F4sB,EAAiBhC,GAAmB9nB,GACpC+pB,EAAsBpB,GAAoBvW,GAC1C4X,EAAkBX,GAAgB+B,GAClCkb,EDlPgD,kBAA9B7pB,ECkPSzb,IDlPiCyb,EAAKmf,WAAW,eAA1Dnf,MCmPxB,MAAM8pB,EAAgBnT,SAASjc,GACzB8S,EAAmBC,EAASZ,GAAiBY,EAAO4Q,oBAAiBriB,EAE3E,IAAIwM,OAA+BxM,IAAnBqR,QACerR,IAAxBsR,QACoBtR,IAApBuR,QACqBvR,IAArBwR,EACP,MAAM,OACFlY,EAAM,UACNC,EAAS,KACT7U,GACgB,OAAhB8sB,QAAgB,IAAhBA,IAAoB,CAAC,EACnBuc,EAAarpC,EAAO0D,EAAmB1D,GAA2B,KAqDxE,MAAO,CACH8nB,YACAjmB,OArDiB,IADJwW,KAGbzD,OAAc,OAANA,QAAM,IAANA,IAAU,GAClB3U,OACA6U,cAAe9U,EAAO,aAAe,OACrC+U,UAAWs0B,EACLA,EAAW3qC,MrBrQU,CAC/B2F,KAAM,UACNN,UAAW,UACXiR,kBAAmB,UACnBhQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXF,WAAW,EACX7B,OAAQ,UACRL,QAAS,QqBkPLwT,MACAC,MACAjC,UAA8B,OAAnB2X,QAAmB,IAAnBA,IAAuB9qB,EAClCiV,SACAW,QAASwV,EACThY,UAAyB,OAAdyX,QAAc,IAAdA,IAAkBvqB,EAC7B4U,MAAOmB,EACPrZ,MAAsB,OAAf+tB,QAAe,IAAfA,IAAmB,SAC1BzX,KAAM,GAAGg0B,MAAoBpvB,GAASovB,GAAiB,GAAKA,EAAgBpvB,EAC5EtD,YAAavV,EAAKwjB,MAAM,KAAK/R,KAAIC,GAASA,EAAM+uB,SAChDj5B,IAAKwgC,EAAe,GAAKtlC,EACzB0R,QAAQ,EACRD,QAAS6zB,EAAetlC,EAAQ,GAChC2R,UAAW2zB,EAAe,UAAY,SACtCt0B,UAAoB,OAATA,QAAS,IAATA,IAAa,SACxBwB,OAA4B,SAApBwW,GAAsC,MAARvD,EACtClT,QAAS,EACa,KAAd,OAAJkT,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,SAAmB,IAAM,MACX,KAAhB,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMoE,WAAqB,IAAM,MACd,KAAf,OAAJpE,QAAI,IAAJA,OAAI,EAAJA,EAAMqE,UAAoB,IAAM,MACX,KAAjB,OAAJrE,QAAI,IAAJA,OAAI,EAAJA,EAAMsE,YAAsB,IAAM,MACZ,KAAlB,OAAJtE,QAAI,IAAJA,OAAI,EAAJA,EAAMuE,aAAuB,IAAM,MACd,KAAjB,OAAJvE,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,YAAsB,IAAM,MACX,KAAnB,OAAJxE,QAAI,IAAJA,OAAI,EAAJA,EAAMyE,cAAwB,IAAM,MACd,KAAlB,OAAJzE,QAAI,IAAJA,OAAI,EAAJA,EAAM0E,aAAuB,IAAM,MACrCmE,QAAOtf,GAA0B,kBAAVA,IACzBnR,WAAYyrB,EACZ1W,kBAAmB2W,EACnB5W,iBAAkB6W,EAClB9W,eAAgBA,EAChBY,SAAU8V,EACVhV,aAAc,CACVvD,UACA8Y,UACAF,UACAP,SACAhtB,SAAU,CACNutB,QAAS4b,EACT3b,oBAQX,Ee5OoD+b,CAAyB5jB,GACtEoC,EAAYkhB,EACZF,EAAcjnC,CAClB,CACJ,CAAE,MAAOiiB,GACLhJ,QAAQiJ,MAAM,cAAe8kB,EAAU/kB,GACvC,IACIglB,ElBsIyB,SACjC7kB,GAEE,IACEslB,EASJ,OAPIA,EAJOnuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAIOqL,GAA+BxC,GAEf,kBAATA,EACf0C,KAAKC,MAAM3C,GACXA,EAGH8C,GAAgBwiB,EAC3B,CkBpJ0BC,CAAsBX,GAAU,GAC9CY,KAAa1uB,KAAK,CACd2uB,QAASrM,KAAc,mCACvBsM,YAAatM,KAAc,wCAEnC,CAAE,MAAOvZ,GACLhJ,QAAQiJ,MAAM,WAAY8kB,EAAU/kB,GACpC2lB,KAAa1lB,MAAM,CACf2lB,QAASrM,KAAc,gCACvBsM,YAAatM,KAAc,qCAEnC,CACJ,CACA,MAAO,CACHvV,YACA7D,KAAM,IAAK6kB,EAAa3wB,MAC3B,EA8CCyxB,GAAmB,CACrBC,SAAU,CAAE1oC,KAAM,WAAqB2oC,KAAM,KAC7CC,SAAU,CAAE5oC,KAAM,WAAqB2oC,KAAM,MAoBpCE,GAAU1P,mBAAkB,CAACC,EAAK3Z,KACpC,CACHqD,KAAM/L,KACN+xB,QAASA,CAACC,EAAeC,KAErB,MAAM9D,EAAmBrB,GAAY1H,WAAW+I,iBAChD,GAA6B,oBAAlB6D,EACP3P,GAAIlyB,IACA,MAAM+hC,EAAWF,EAAc7hC,EAAI4b,MAGnC,OAFAoiB,EAAiB+D,EAA0B,OAAhBD,QAAgB,IAAhBA,MAEpB,CAAElmB,KAAMmmB,EAAU,SAI5B,GAhCN,OADoBnmB,EAiCKimB,IAhCG,KAAZjmB,EAAK9L,GAiChBkuB,EAAiB6D,EAAeC,GAChC5P,EAAI,CAAEtW,KAAMimB,QAEX,CACD,MAAMxkB,EAAiB,CAAEvN,GAAIC,iBAAW8xB,GACxC7D,EAAiB3gB,EAAgBykB,GACjC5P,EAAI,CAAEtW,KAAMyB,GAChB,CAzCmBzB,KAyCnB,EAEJomB,WAAY,SACRzmC,GAGE,IAAD0mC,EAAA,IAFDC,EAAmCnvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAI1c,GAAUA,EACjD8uB,EAAOpS,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEP,MAAM,QAAE2uB,GAAYrpB,IACd4pB,EAAkB1mB,IACpBmmB,GAAQQ,IAAO,IAAAC,EAAA,MAAK,IACbD,EACH,CAAC7mC,GAAM2mC,EAA4B,kBAANzmB,GAA+B,kBAANA,GAAkBiC,MAAMC,QAAQlC,GAAKA,EAAK,OAADA,QAAC,IAADA,GAAS,QAAR4mB,EAAD5mB,EAAG6mB,cAAM,IAAAD,OAAR,EAADA,EAAWhsC,OAC7G,GAAE,EAGP,IAAK8uB,EAAS,OAAOgd,EACrB,MAAMI,EAAmC,kBAAZpd,EACE,QADkB8c,EAC3CV,GAAiBpc,UAAQ,IAAA8c,SAAIhvB,EAC7BkS,EAEN,IAAKod,EAAe,OAAOJ,EAC3B,MAAM,KAAEV,EAAI,KAAE3oC,GAASypC,EAEvB,MAAa,aAATzpC,EAA4B0oC,KAASW,EAAgBV,GAC5C,aAAT3oC,EAA4B4oC,KAASS,EAAgBV,GAElDU,CACX,MCxMKK,GAAavQ,mBAAsBC,IAC5C,MAAM,YACFuQ,EAAW,aACXC,EAAY,kBACZC,EAAiB,WACjBC,EAAU,YACVC,EAAW,mBACXC,EAAkB,0BAClBC,GACA,MACA,IAAK,IAADC,EACA,MAAMC,EAAc3kB,KAAKC,MAAqC,QAAhCykB,EAAClQ,aAAaC,QAAQ,kBAAU,IAAAiQ,IAAI,MAElE,OAAIC,GAAsC,kBAAhBA,IAA6BvlB,MAAMC,QAAQslB,GAAqBA,EACnF,CAAC,CACZ,CAAE,MAAOxnB,GAEL,OADAhJ,QAAQiJ,MAAM,gDAAiDD,GACxD,CAAC,CACZ,CACH,EAVG,GAYJ,MAAO,CACHynB,QAAS,CACLL,YAAoC,kBAAhBA,GAA4BA,GAAensC,EAAYG,aACrEgsC,EACA,EACNH,aAAsC,kBAAjBA,EAA4BA,EAA+B,MAChFE,WAAYllB,MAAMC,QAAQilB,IAAwC,kBAAlBA,EAAW,IAA4C,kBAAlBA,EAAW,GAC1FA,EACA,CAAClsC,EAAYC,MAAOD,EAAYE,QACtC6rC,YAAoC,mBAAhBA,GAA4BA,EAChDE,kBAAgD,mBAAtBA,GAAkCA,EAC5DG,mBAAkD,mBAAvBA,GAAmCA,EAC9DC,0BAAgE,mBAA9BA,GAA0CA,GAEhFI,cAAeC,IACXlR,GAAImR,IACA,MAAMC,EAA6C,oBAAzBF,EACpBA,EAAqBC,EAAaH,SAClC,IAAKG,EAAaH,WAAYE,GAIpC,OAFAtQ,aAAa0B,QAAQ,UAAWlW,KAAKilB,UAAUD,IAExC,CACHJ,QAASI,EACZ,GACH,EAET,ICxCQE,GAAgBhtB,IAQP,IARQ,UAC1BitB,EAAS,eACTC,EAAc,gBACdC,EAAe,UACfC,EAAS,SACTC,EAAQ,gBACRC,EAAe,mBACfC,GACYvtB,EACZ,MAAM+d,EAAWQ,MAEbnZ,KAAMooB,GACNrC,KACEiB,EAAaJ,IAAW5P,GAASA,EAAMsQ,QAAQN,cAC/C,QACFtpC,EAAO,KACP1B,EAAI,WACJyB,GACA2qC,EACEC,EAAcC,kBAAO,GAErBhjB,EAAWkK,uBAAY,WAA0C,IAAD2B,EAAA,IAAxCtD,EAAsB1W,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6vB,EACnD,MAAMuB,EAAaR,EAAgBvB,QAE7BgC,EAAyB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYE,YAC3BC,EAA8B,OAAVH,QAAU,IAAVA,OAAU,EAAVA,EAAYntB,WAAW,MAC3CutB,EAAkC,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcptB,WAAW,MACrD,GAAImtB,GAAcG,GACXF,GAAgBG,IACfd,EAEJ,IACQha,IACA2a,EAAaztC,MAAQ8yB,EAAK,GAC1B2a,EAAaxtC,OAAS6yB,EAAK,IAG/B8a,EAAoBvrB,UAChBmrB,EACA,EAAG,EAAGA,EAAWxtC,MAAOwtC,EAAWvtC,OACnC,EAAG,EAAGwtC,EAAaztC,MAAOytC,EAAaxtC,QAG3C,MAAMutB,EAAiBvD,GAAkBhpB,GACzC,IAAIqpB,EAAOxI,SAASC,cAAc,KAClCuI,EAAKC,SAAWiD,EACV,GAAGA,QACH,WACNlD,EAAKE,KAAOijB,EAAave,UAAU,aACnC5E,EAAKujB,OACT,CAAE,MAAO/oB,GACLqoB,GACJ,CAE0C,QAA9C/W,EAAAtU,SAASwU,cAAc,+BAAuB,IAAAF,GAA9CA,EAAgD0X,UAAU1iB,OAAO,YACjEgiB,GACJ,GAAG,CAACJ,EAAiBF,EAAW7rC,EAAMgrC,EAAYmB,EAAoBD,IAyHtE,OA7GAY,qBAAU,KACN,IAAIC,GAAW,EAWf,OAVAC,YAAW,KACP,MAAMzgB,EAAiBvD,GAAkBhpB,GAErC+sC,IACAlsB,SAASosB,MAAQ1gB,EACX,GAAGA,sBACH,kBACV,GACD,KAEI,KACHwgB,GAAW,CAAK,CACnB,GACF,CAAC/sC,IAEJ8sC,qBAAU,KACN,IAAII,EAAmBA,KAAO,IAADC,EACzBjS,aAAa0B,QAAQ,YAAalW,KAAKilB,UAAUS,IACjDlR,aAAa0B,QAAQ,eAA6C,QAA/BuQ,EAAEC,UAA6BD,EAAI,UAAU,EAIpF,OAFA3jB,OAAO6jB,iBAAiB,eAAgBH,GAEjC,KACH1jB,OAAO8jB,oBAAoB,eAAgBJ,EAAiB,CAC/D,IAGLJ,qBAAU,KACN,IAAIC,GAAW,EACXQ,EAAiBC,IACjBA,EAAGnZ,iBACIsI,EAAS,kCAEpB,IAAuB,IAAnBmP,EAA0B,CAC1B,IAAK,IAAD2B,EACAvS,aAAa0B,QAAQ,YAAalW,KAAKilB,UAAUS,IACjDlR,aAAa0B,QAAQ,eAA6C,QAA/B6Q,EAAEL,UAA6BK,EAAI,UAC1E,CAAE,MAAO5pB,GAEL,MAAMlgB,EAAM,mCACZ6lC,KAAakE,MAAM/pC,GACnB6lC,KAAa1lB,MAAM,CACfngB,MACA8lC,QAAS9M,EAAS,+BAClB+M,YAAa/M,EAAS,oCAE9B,CAUA,WAEoB,IAADgR,EAAAC,EAAAC,EAAAC,EAAf,GADkB/B,EAAgBvB,UAE9BhhB,OAAO6jB,iBAAiB,eAAgBE,GACA,QAAxCI,EAAA9sB,SAASktB,eAAe,wBAAgB,IAAAJ,GAAxCA,EAA0Cd,UAAU1iB,OAAO,uBAClB,QAAzCyjB,EAAA/sB,SAASktB,eAAe,yBAAiB,IAAAH,GAAzCA,EAA2Cf,UAAU1iB,OAAO,uBACd,QAA9C0jB,EAAAhtB,SAASktB,eAAe,8BAAsB,IAAAF,GAA9CA,EAAgDG,aAAa,QAAS,IACxB,QAA9CF,EAAAjtB,SAASktB,eAAe,8BAAsB,IAAAD,GAA9CA,EAAgDE,aAAa,QAAS,kBAEtEhC,EAAUxB,QAAQyD,iBAAkB,QAG9BjC,EAAUxB,QAAQ0D,gBAEpBnB,IACAf,EAAUxB,QAAQ0D,gBAAkBjC,EAAS,CACzCxqC,aACAC,UACAysC,WAAYA,IAAMpB,UAGhBf,EAAUxB,QAAQ0D,gBACpBnB,IAAU,CAAC,IAADqB,EAAAC,EAAAC,EAAAC,EAEV,MAAM9oB,EAAiB,IAAK2mB,EAAa/2B,QAAS,GAAIU,eAAgB,IAChEyP,EAAgBkB,KAAKilB,UAAUrmB,GAAiBG,IACzB,kBAAlBD,GTtJhC,SAAwB7hB,EAAalF,GACxC,GAAI+qB,OAAOsR,QAAQ0T,UAAW,CAC1B,IAAI7T,EAAe,IAAI8T,gBAAgBjlB,OAAOiR,SAASiU,QACvD/T,EAAaL,IAAI32B,EAAKlF,GACtB,IAAIkwC,EAASnlB,OAAOiR,SAASmU,SACvB,KACAplB,OAAOiR,SAASoU,KAChBrlB,OAAOiR,SAASqU,SAChB,IACAnU,EAAaoU,WACnBvlB,OAAOsR,QAAQ0T,UAAU,CAAEQ,KAAML,GAAU,GAAIA,EACnD,CACJ,CS0ImEM,CAAe,OAAQzpB,GAEtB,QAAxC4oB,EAAAvtB,SAASktB,eAAe,wBAAgB,IAAAK,GAAxCA,EAA0CvB,UAAU9vB,IAAI,uBACf,QAAzCsxB,EAAAxtB,SAASktB,eAAe,yBAAiB,IAAAM,GAAzCA,EAA2CxB,UAAU9vB,IAAI,uBACX,QAA9CuxB,EAAAztB,SAASktB,eAAe,8BAAsB,IAAAO,GAA9CA,EAAgDN,aAAa,QAAS,iBACxB,QAA9CO,EAAA1tB,SAASktB,eAAe,8BAAsB,IAAAQ,GAA9CA,EAAgDP,aAAa,QAAS,iBACtExkB,OAAO8jB,oBAAoB,eAAgBC,GAC3CvB,EAAUxB,QAAQyD,iBAAkB,EAEhC5B,EAAY7B,UACZ6B,EAAY7B,SAAU,EACtBlhB,IAER,CAGX,EA1CD,EA2CJ,CAEA,MAAO,KACHE,OAAO8jB,oBAAoB,eAAgBC,GAC3CR,GAAW,CAAK,CACnB,IAGE,CACHmC,OAzHYrd,IAA6B,IAADsd,EACM,QAA9CA,EAAAtuB,SAASwU,cAAc,+BAAuB,IAAA8Z,GAA9CA,EAAgDtC,UAAU9vB,IAAI,YAC9D,MAAMqyB,EAAcvd,EAAO,IAAIA,QAA4BxW,EAE3D2xB,YAAW,MACmC,IAAtChB,EAAUxB,QAAQyD,gBAClB3kB,EAAS8lB,GACN/C,EAAY7B,SAAU,CAAI,GAClC,IAAI,EAkHP6E,kBAAmBA,IAAMrD,EAAUxB,QAAQyD,gBAC9C,GCzMGjvC,OAAQswC,GAAcvwC,MAAOwwC,GAAW,aAAEtwC,IAAiBH,EAEtD0wC,GAAkBA,IAAM,UAAUzqB,QAAQ,MAAM,QAA0B,GAAhBhH,KAAKkX,SAAgB,IAAI8Z,SAAS,MAG5FU,GAAa7wB,IAYnB,IAZoB,IACvBO,EAAG,MACHnd,EAAQwtC,KAAiB,MAAEzwC,EAAK,OAChCk0B,EAAS,EAAC,KACVyc,EAAI,SAAEC,EAAQ,OACdC,GAOHhxB,EACG,MAAMixB,EAAmB1wB,EAAIrb,UAC7Bqb,EAAIrb,UAAY9B,EAChBmd,EAAI2wB,YACJ3wB,EAAI4wB,KAAKL,EAAOE,EAAQD,EAAW,EAAI5xB,KAAKkX,SAAWhC,EAAQl0B,EAAQ6wC,EAAQ,GAE/EzwB,EAAIrb,UAAY+rC,CAAgB,EAWvBG,GAA0BA,CACnC7wB,EACA8wB,EACAC,EACAR,EACAC,EACAz1B,KAIA,IAAKiF,IAAQ8wB,EAAK,OAAOP,EAEzB,MAAM,OAAES,GAAS,GAAgB,OAANj2B,QAAM,IAANA,IAAU,CAAC,EACtCiF,EAAIixB,UAAY,OAChB,MAAMC,EAAWJ,EAAIvrB,MAAM,IAC3B,IAAI4rB,EAAUZ,EAQd,OANAW,EAAS1qB,SAAQ4qB,IACbpxB,EAAIqxB,SAASD,EAAMD,EAASX,GACxBQ,GAAQhxB,EAAIsxB,WAAWF,EAAMD,EAASX,GAC1CW,GAAWnxB,EAAIuxB,YAAYH,GAAMxxC,OAAS,EAAImxC,GAAsB,CAAC,IAGlEI,CAAO,EAGLK,GAA2BA,CACpCxxB,EACA8wB,EACAzmC,EACAkmC,EACAC,EACAz1B,KAIA,IAAKiF,IAAQ8wB,EAAK,OAAOP,EAEzB,MAAM,OAAES,GAAS,GAAgB,OAANj2B,QAAM,IAANA,IAAU,CAAC,EACtCiF,EAAIixB,UAAY,QAChB,MAAMC,EAAWJ,EAAIvrB,MAAM,IAC3B,IAAIksB,EAAWlB,EAQf,OANAW,EAAS1qB,SAAQ,CAACkrB,EAAG1d,KACjB,MAAMod,EAAOF,EAASA,EAASj1B,OAAS+X,EAAQ,GAChDhU,EAAIqxB,SAASD,EAAMK,EAAUjB,GACzBQ,GAAQhxB,EAAIsxB,WAAWF,EAAMK,EAAUjB,GAC3CiB,GAAYzxB,EAAIuxB,YAAYH,GAAMxxC,OAAS,EAAIyK,GAAiB,CAAC,IAE9DonC,CAAQ,EAINE,GAAc,SACvB3xB,GAGmC,IAFnCpgB,EAAKoc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGo0B,GAActwC,GACtBD,EAAMmc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGm0B,GAAerwC,GAExB,QAAIkgB,IACAA,EAAI4xB,UAAU,EAAG,EAAGhyC,EAAOC,IAEpB,EAGf,EAGagyC,GAAoB,SAC7Br8B,GAEE,IADFs8B,EAA4C91B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG5S,EAE/C,OAAOqzB,MACHzc,EACAnf,EACAkxC,KAEA,IAAK/xB,IAAQ2G,MAAMC,QAAQpR,IAAWA,EAAOyG,QAAU,EAAG,OAAO+1B,QAAQC,UACzE,IAAK,MAAMC,KAAc18B,EAAQ,CAC7B,MAAM28B,EAAoBL,EAAUI,GACpC,GAAIH,GAAUD,EAAUI,GAAa,CAAC,IAADE,EACjC,MAAM,mBAAE/oC,GAAuB8oC,EACzBE,EAAkBxxC,GAA+B,QAA3BuxC,EAAG/oC,EAAmBxI,UAAK,IAAAuxC,IAAS,GAEhE,GAAIC,EAAgBp2B,OAChB,IAAK,MAAM,UAAElV,EAAY,cAAa,QAAExE,EAAU,KAAO8vC,EACrDryB,EAAIsyB,yBAA2BvrC,EAC/BiZ,EAAIuyB,YAAchwC,QAEZwvC,EAAOG,cAGXH,EAAOG,GAEjBlyB,EAAIuyB,YAAc,EAClBvyB,EAAIsyB,yBAA2B,aACnC,CACJ,CACAtyB,EAAIuyB,YAAc,EAClBvyB,EAAIsyB,yBAA2B,aAAa,CAEpD,EAEME,GAAqB,UAGrBC,GAAuB,UAGvBC,GAAqB,UAEdC,GAAelT,IAeH,IAfI,IACzBzf,EAAG,EACH1J,EAAC,EACDC,EAAC,KACDq8B,EAAI,MACJ/vC,EAAK,YACL+C,EAAW,UACXb,EAAS,UACTD,EAAS,YACTgnC,EAAc,EAAC,WACf+G,GAAa,GAKEpT,EASf,OARIoT,GAA2B,kBAANv8B,KAAgB0J,EAAIla,eAAkB,OAADwQ,QAAC,IAADA,IApBlC,GAoBkEw1B,IAC1F+G,GAA2B,kBAANt8B,KAAgByJ,EAAIna,eAAkB,OAAD0Q,QAAC,IAADA,IApBlC,GAoBkEu1B,IAC1F+G,GAA8B,kBAATD,KAAmB5yB,EAAIja,YAAkB,OAAJ6sC,QAAI,IAAJA,IAxBtC,GAwBqE9G,IACzF+G,GAAqC,kBAAhBjtC,KAA0Boa,EAAIpa,YAAyB,OAAXA,QAAW,IAAXA,IAAe6sC,KAChFI,GAA+B,kBAAVhwC,KAAoBmd,EAAIrb,UAAiB,OAAL9B,QAAK,IAALA,IAAS6vC,KAClEG,GAAmC,kBAAd9tC,KAAwBib,EAAI8yB,YAAuB,OAAT/tC,QAAS,IAATA,IAAaytC,KAC5EK,GAAmC,kBAAd/tC,KAAwBkb,EAAIlb,WAAsB,OAATA,QAAS,IAATA,IA7B3C,GA6B8EgnC,GAE9F,MACC+G,GAA2B,kBAANv8B,KAAgB0J,EAAIla,cA7BrB,IA8BpB+sC,GAA2B,kBAANt8B,KAAgByJ,EAAIna,cA7BrB,IA8BpBgtC,GAA8B,kBAATD,KAAmB5yB,EAAIja,WAjC5B,IAkChB8sC,GAAqC,kBAAhBjtC,KAA0Boa,EAAIpa,YAAc6sC,KACjEI,GAA+B,kBAAVhwC,KAAoBmd,EAAIrb,UAAY+tC,KACzDG,GAAmC,kBAAd9tC,KAAwBib,EAAI8yB,YAAcN,KAC/DK,GAAmC,kBAAd/tC,KAAwBkb,EAAIlb,UAtClC,EAsCgE,CACtF,EChLCiuC,GAKD,CAAC,EAsEOC,GAAYvW,eACrBzc,EACAizB,GAGE,IAFFC,EAAkDl3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACrDm3B,EAAkDn3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAErD,aA1EoBygB,eACpBzc,EACAizB,GAGE,IAFFC,EAAkDl3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACrDm3B,EAAkDn3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAErD,OACO,IAAIg2B,QADNhyB,GAAkB,KAAXizB,EACgBhB,IAAY,IAADmB,EAAAC,EAMnC,IAAqC,KAAZ,QAArBD,EAAAL,GAAcE,UAAO,IAAAG,OAAA,EAArBA,EAAuBE,OAAgB,CACvC,MAAM7uC,EAAQsuC,GAAcE,GAAQxuC,MAC9B8uC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGzuC,GAC/C+uC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG1uC,GAKrD,OAHAub,EAAIiC,UAAUxd,EAAO8uC,EAAaC,QAElC3F,YAAW,IAAMoE,GAAQ,IAAO,EAEpC,CACA,GAAyB,QAAzBoB,EAAIN,GAAcE,UAAO,IAAAI,GAArBA,EAAuB1uB,MAEvB,YADAkpB,YAAW,IAAMoE,GAAQ,IAAO,GAIpC,MAAMwB,EAAcV,GAAcE,KAAYF,GAAcE,GAAQS,OAASX,GAAcE,GAAQK,OAC7F7uC,EAAQgvC,EACRV,GAAcE,GAAQxuC,MACtB,IAAIkvC,MAELF,IAAahvC,EAAMb,IAAMqqC,aAAyBgF,GACvDxuC,EAAMypC,iBACF,QACA,KACI,MAAMqF,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGzuC,GAC/C+uC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG1uC,GAErDub,EAAIiC,UAAUxd,EAAO8uC,EAAaC,GAC9BT,GAAcE,KACdF,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQtuB,OAAQ,GAElCstB,GAAQ,EAAK,GAEjB,CAAE2B,MAAM,IAEZnvC,EAAMypC,iBACF,SACA,KACQ6E,GAAcE,KACdF,GAAcE,GAAQtuB,OAAQ,GAElCstB,GAAQ,EAAM,GAElB,CAAE2B,MAAM,IAGPH,IAAaV,GAAcE,GAAU,CACtCxuC,MAAOA,EACP6uC,OAAO,EACP3uB,OAAO,EACP+uB,OAAO,GACV,EA3DkDzB,GAAWA,GAAQ,GA6D9E,CAOiB4B,CACT7zB,EACA,gBAAkBizB,EAClBC,EAAIC,EAEZ,EAuEaW,GAA6CrX,MACtDzc,EACAizB,EACAC,EAAIC,EACJY,EAAIC,SAzEwBvX,OAC5Bzc,EACAizB,EACAC,EACAC,EACAY,EACAC,IAGO,IAAIhC,QADNhyB,GAAkB,KAAXizB,EACgBhB,IAAY,IAADgC,EAAAC,EAEnC,IAAqC,KAAZ,QAArBD,EAAAlB,GAAcE,UAAO,IAAAgB,OAAA,EAArBA,EAAuBX,OAAgB,CACvC,MAAM7uC,EAAQsuC,GAAcE,GAAQxuC,MAC9B8uC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGzuC,GAC/C+uC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG1uC,GAC/C0vC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGtvC,GAC/C2vC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGvvC,GAIrD,OAFAub,EAAIiC,UAAUxd,EAAO8uC,EAAaC,EAAaW,EAAaC,QAC5DvG,YAAW,IAAMoE,GAAQ,IAAO,EAEpC,CACA,GAAyB,QAAzBiC,EAAInB,GAAcE,UAAO,IAAAiB,GAArBA,EAAuBvvB,MAEvB,YADAkpB,YAAW,IAAMoE,GAAQ,IAAO,GAIpC,MAAMwB,EAAcV,GAAcE,KAAYF,GAAcE,GAAQS,OAASX,GAAcE,GAAQK,OAC7F7uC,EAAQgvC,EACRV,GAAcE,GAAQxuC,MACtB,IAAIkvC,MAELF,IAAahvC,EAAMb,IAAMqqC,aAAyBgF,GACvDxuC,EAAMypC,iBACF,QACA,KACI,MAAMqF,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGzuC,GAC/C+uC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG1uC,GAC/C0vC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGtvC,GAC/C2vC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGvvC,GAErDub,EAAIiC,UAAUxd,EAAO8uC,EAAaC,EAAaW,EAAaC,GACxDrB,GAAcE,KACdF,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQtuB,OAAQ,GAElCstB,GAAQ,EAAK,GAEjB,CAAE2B,MAAM,IAEZnvC,EAAMypC,iBACF,SACA,KACQ6E,GAAcE,KACdF,GAAcE,GAAQtuB,OAAQ,GAElCstB,GAAQ,EAAM,GAElB,CAAE2B,MAAM,IAGPH,IAAaV,GAAcE,GAAU,CACtCxuC,MAAOA,EACP6uC,OAAO,EACP3uB,OAAO,EACP+uB,OAAO,GACV,EA1DkDzB,GAAWA,GAAQ,IAmE7DoC,CACTr0B,EACA,gBAAkBizB,EAClBC,EAAIC,EACJY,EAAIC,GAICM,GAAgB7X,MACzBphB,EACA43B,EACAsB,EAAYC,EACZC,EAAYC,EACZ5I,EACAryB,KAEA,MAAMuG,EAAM3E,EAAO4E,WAAW,MACxBotB,EAAe3rB,SAASC,cAAc,UAC5C0rB,EAAaztC,MAAQ60C,EACrBpH,EAAaxtC,OAAS60C,EACtB,MAAMC,EAAYtH,EAAaptB,WAAW,KAAM,CAAEG,oBAAoB,IAEtE,IAAKu0B,IAAc30B,EAAK,aASlB8zB,GAAkBa,EAAW1B,EAAQ,EAAG,EAAGwB,EAAIC,GAC5C,OAALj7B,QAAK,IAALA,KAAO5W,QACP8xC,EAAUhwC,UAAY8U,EAAM5W,MAC5B8xC,EAAUC,SAAS,EAAG,EAAGH,EAAIC,GAC7BC,EAAUrC,yBAA2B,wBAEnCwB,GAAkBa,EAAW1B,EAAQ,EAAG,EAAGwB,EAAIC,GACrDC,EAAUrC,yBAA2B,cAGrC,MAAMuC,EAAuBlC,GAAa,CAAE3yB,SAAQvG,EAAOqyB,gBAC3D9rB,EAAIiC,UAAUorB,EAAckH,EAAIC,GAChCK,GAAsB,EC7KbC,GAAiBr1B,IAkBvB,IAADggB,EAAAsV,EAAA,IAlByB,IAC3B/0B,EAAG,OACHg1B,EAAM,aACNC,GAAe,EAAK,MACpB1gB,EAAK,UACLjpB,EAAS,OACTmlC,EAAM,aACN/kC,EAAe,WAAU,YACzBogC,GAUHrsB,EACG,GAAIrM,GAAwBkkB,KAAK0d,GAAS,MAAO,CAC7Cp1C,MAAO,EACPs1C,WAAY,GAGhB,MAAMC,EAAmC,QAAd7pC,EACrByJ,GACAH,GACAwgC,EAA0B,QAAd9pC,EACZuJ,GACAH,GACA2gC,EAAoC,QAAd/pC,EACtBwJ,GACAH,GACA2gC,EAASt1B,EAAIuxB,YAAYyD,IACzB,MACFp1C,EAAK,sBACL21C,EAAqB,uBACrBC,GACAF,EACEG,EAAmBF,EAAwBC,EACjD,IAAIE,EAAoB,EACH,SAAjBhqC,IACAgqC,EAAoB,EAAmB,GAAd,EAAIjF,IAEjC,MAAMkF,EAAgC,SAAjBjqC,GAA4C,YAAjBA,GAA+C,aAAjBA,EACxE,QACA,EACN,IAAIwpC,EAAaO,EACbG,EAEmB,QAFRnW,EAAIwV,EACbI,EAAoBL,GACpBI,EAAUJ,UAAO,IAAAvV,IAAK,EAE5B,GAAkB,QAAdn0B,EAAqB,CAAC,IAADuqC,EAGrB,MAAO,CACHj2C,QACA61C,mBACAP,WAAYt1C,EAAQ,IAL0B,QAA3Bi2C,EAACV,EAAmBH,UAAO,IAAAa,IAAI,GAAKj2C,GAMvD01C,SACAM,cAER,CAEA,IAAIE,GAA8C,QAA3Bf,EAACI,EAAmBH,UAAO,IAAAD,IAAI,GAAKn1C,GACnC,aAAjB8L,EACG,EACAkT,KAAK6F,IACK,KAAR7kB,EACAgf,KAAK4F,IAAI,IAAQsnB,EAAalsC,EAAQ+1C,GAAgBD,IAI9DK,EAAsB,EACtB3hC,GAAYkjB,KAAK0d,IACjBE,EAA8B,aAAjBxpC,EACP+pC,EACAA,GAAqC,YAAjB/pC,EAA6B,KAAQ,KAC/DqqC,EAAsB,IAEjB1hC,GAAaijB,KAAK0d,IACvBE,EAA8B,aAAjBxpC,EAA8B+pC,EAAmB72B,KAAK4F,IAAIixB,EAA0B,IAAR71C,GACzFk2C,EAAmB,EAAIhK,GAElBl4B,GAAa0jB,KAAK0d,GACvBE,EAA8B,aAAjBxpC,EAA8B+pC,EAAmB72B,KAAK4F,IAAIixB,EAA0B,GAAR71C,GAEpFoU,GAAesjB,KAAK0d,GACzBE,EAAat1C,EAER2U,GAA6B+iB,KAAK0d,GACvCE,EAAgC,EAAnBO,EAERjhC,GAAuB8iB,KAAK0d,GACjCE,EAAgC,KAAnBO,GAA4BR,E9BhBJ,G8BgBmD,GAEnF/gC,GAAcojB,KAAK0d,GACxBE,EAA8B,aAAjBxpC,EAA8B+pC,EAAmB72B,KAAK4F,IAAIixB,EAA0B,IAAR71C,GAEpFuU,GAAcmjB,KAAK0d,GACxBE,EAAat2B,KAAK4F,IAAIixB,EAA0B,IAAR71C,IAChB,YAAjB8L,EAA6B,KAAU,GAEzC4I,GAAagjB,KAAK0d,IACvBE,EAAat1C,EACbk2C,EAAmB,GAGnBZ,EAA8B,aAAjBxpC,EAA8B+pC,EAAmB72B,KAAK4F,IAAIixB,EAA0B,IAAR71C,GAE7Fk2C,EAAoC,aAAjBpqC,EAA8B,EAAIoqC,EAErD,MAAME,EAzCY,EAyCQp2C,EAxCP,EA2CnB,OADI20B,GAAO7Y,QAAQC,KAAK,kBAAkB4Y,IAASygB,EAAQM,EA3CzC,EACC,EA0C2E,IAAKU,GAC5F,CACHp2C,QACA61C,mBACAP,WAA6B,aAAjBxpC,EACN9L,EAAQm2C,EACRb,EAAgC,EAAnBY,EACnBR,SACAM,cACH,EAYQK,GAAatW,IAkBnB,IAADuW,EAAA,IAlBqB,IACvBl2B,EAAG,SACHwwB,EAAQ,KACRD,EAAI,OACJyE,EAAM,OACNvE,EAAM,UACN0F,EAAS,aACTC,EAAY,WACZC,GAUH1W,EACG,MAAM,WACFuV,EAAU,OACVI,EAASt1B,EAAIuxB,YAAYyD,GAAO,YAChCY,EAAc,GACF,OAAZQ,QAAY,IAAZA,IAAgB,CAAC,GACf,UACF1pC,EAAY,CAAC,EAAC,UACdD,EAAY,IACH,OAAT0pC,QAAS,IAATA,IAAa,CAAC,GACZ,kBACFvpC,GACiB,QAApBspC,EAAGxpC,EAAUsoC,UAAO,IAAAkB,IAAI,CAAC,EAEpBI,EAAchB,EAAO11C,MAAQ6wC,EAC7B8F,EAAsBrB,EAAaA,EAAazE,EAAS6F,EACzDtlB,EAAmB,OAAVqlB,QAAU,IAAVA,IAAe5V,IAKvB,IALwB,IAC3BzgB,EAAG,OACHg1B,EAAM,eACNwB,EAAc,WACdC,GACHhW,EACGzgB,EAAIqxB,SAAS2D,EAAQyB,EAAYD,EAAe,EAG9CE,GAAkBJ,EAAcC,GAAuB,EACvDI,EAAiBJ,EAAsBX,EAC7C,IAAIgB,EAAgB,EAChBC,EAAuB,EAC3B,GAAiC,kBAAtBjqC,GAAkC6jC,GAAUhkC,EAAW,CAC9D,MAAM,yBAAEqqC,EAAwB,wBAAEC,GAA4B/2B,EAAIuxB,YAAYyD,GAG9E6B,EAAuBjqC,EAAoBkqC,EAE3C,MAAME,EAAqBD,EAA0BD,EACrDF,GAAiBI,EAA4C,EAAvBH,GAA4BG,CACtE,CACAh3B,EAAIzG,MAAM,EAAGq9B,GACb5lB,EAAO,CACHhR,MACAg1B,SACAyB,WAAYlG,EAAOE,EAASiG,EAAiBC,EAC7CH,gBAAiBhG,EAAWqG,GAAwBD,IAExD52B,EAAIzG,MAAM,EAAG,EAAIq9B,EAAc,EChOtBK,GAAe,SAACr2C,GACzB,MAAMs2C,EADqDl7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAErD,IAAI1J,OAAO,KAAK6C,SAAuBxC,eAAyBC,aAChE,IAAIN,OAAO,KAAK6C,QAAsBxC,iBAA2BC,YAEvE,OAAOhS,EACF2kB,MAAM2xB,GACNnkB,QAAOrG,GAAkB,MAATA,GAA2B,KAAVA,GAC1C,EAEayqB,GAAgBA,CACzBn3B,EACAzT,EACAipB,EACA4hB,EACAtL,KAEA,MAAMuL,EAA4B9hB,GAAkB7rB,EAAqBoiC,IACnE,SACFjiC,EAAQ,iBACRW,EAAmB6sC,EAA0B7sC,iBAAgB,kBAC7DN,EAAoBmtC,EAA0BntC,mBAC9CsrB,GACE,KACFvwB,EAAI,YACJiG,EAAW,WACXC,EAAU,gBACVC,EAAe,WACfiF,EAAapL,EAAI,gBACjBqL,EAAkB,EAAC,aACnBrF,GACAsB,EAEJ,IAAI+qC,EAAmBF,EAAenkB,cAYtC,IAAIskB,EAAmBH,EAAenkB,cAYtC,IAAIukB,EAAoBJ,EAAenkB,cAoBvC,IAAIwkB,EAAqBL,EAAenkB,cAqBxC,IAAIykB,EAAuBN,EAAenkB,cAS1C,MAAO,CACH0kB,gBA1EoBA,KACpBL,EAAmBF,EAAenkB,cAClCjT,EAAI/a,KAAOmyC,EAAe5jB,UAAUnjB,GAAYkM,QAAQ1S,EAAWyG,GAAiBwiB,SAAS,EAwE5E8kB,oBAtEOA,KACxB53B,EAAI/a,KAAOmyC,EACN5jB,UAAU8jB,EAAiBzkB,QAC3BtW,QAAQ+6B,EAAiB5kB,MACzBI,SAAS,EAmEd+kB,gBAVoB,WAAoB,IAAnBC,EAAS97B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACjC07B,EAAuBN,EAAenkB,cACtCjT,EAAI/a,KAAOmyC,EAAe76B,QAAQ1S,EAAWiuC,GAAWhlB,SAC5D,EAOqBilB,oBANOA,KACxB/3B,EAAI/a,KAAOmyC,EAAe76B,QAAQm7B,EAAqBhlB,MAAMI,SAAS,EAMtEklB,gBAhEoBA,KACpBT,EAAmBH,EAAenkB,cAClCjT,EAAI/a,KAAOmyC,EAAe5jB,UAAUroB,GAAYoR,QAAQ1S,EAAWuB,GAAiB0nB,SAAS,EA8D5EmlB,oBA5DOA,KACxBj4B,EAAI/a,KAAOmyC,EACN5jB,UAAU+jB,EAAiB1kB,QAC3BtW,QAAQg7B,EAAiB7kB,MACzBI,SAAS,EAyDdolB,iBArDqBA,KACrBV,EAAoBJ,EAAenkB,cACnCjT,EAAI/a,KAAOmyC,EAAe5jB,UAAUtoB,GAAaqR,QAAQ1S,EAAWW,GAAkBsoB,SAAS,EAmD7EqlB,qBAjDOA,KACzBn4B,EAAI/a,KAAOmyC,EACN5jB,UAAUgkB,EAAkB3kB,QAC5BtW,QAAQi7B,EAAkB9kB,MAC1BI,SAAS,EA8CdslB,kBAlCsB,WAAmB,IAAlBC,EAAIr8B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC3By7B,EAAqBL,EAAenkB,cACpCjT,EAAI/a,KAAOmyC,EAAe5jB,UAAUvoB,GAAcioB,UAAUmlB,EAAO,OAAS,IAAI97B,QAAQ1S,EAAWK,GAAmB4oB,SAC1H,EA+BuBwlB,sBA9BOA,KAC1Bt4B,EAAI/a,KAAOmyC,EACN5jB,UAAUikB,EAAmB5kB,QAC7BK,UAAUukB,EAAmBtnC,QAC7BoM,QAAQk7B,EAAmB/kB,MAC3BI,SAAS,EA2BdylB,qBAzCyB,WAA6B,IAA5B9H,EAAMz0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGw8B,EAAMx8B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC/CgE,EAAIzG,MAAMk3B,EAAQ+H,EACtB,EAwCIC,WAzBe,WAAkC,IAAjCC,EAAM18B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAG28B,EAAM38B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG08B,EACrC14B,EAAIzG,MAAMm/B,EAAQC,EACtB,EAwBIC,WA/CeA,KACf54B,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EA+ClCC,aAvBiB,WAAqB,IAApBC,EAAU/8B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC/BgE,EAAIzG,MAAM,EAAIw/B,EAAY,EAAIA,EAClC,EAsBC,EAOQC,GAAaA,CAACh5B,EAA+BuwB,EAAcC,EAAkB5wC,EAAeq5C,KACrG,MAAMC,GAAgBt5C,EAAQq5C,GAAc,EAC5Cj5B,EAAI2wB,YACJ3wB,EAAIm5B,IAAI5I,EAAO2I,EAAc1I,EAAW0I,EAAcA,EAAc,EAAG,EAAIt6B,KAAKM,IAAI,GACpFc,EAAIo5B,OACJp5B,EAAIlb,UAAY,EAChBkb,EAAI8yB,YAAc,UAClB9yB,EAAIgxB,QAAQ,EAmBHqI,GAAkB55B,IAsBxB,IAtByB,SAC5B65B,EAAQ,cAAEC,EAAa,SACvBC,EAAQ,oBAAEC,EAAmB,YAC7BC,EAAW,gBACXvvC,EAAe,WACfwvC,EAAU,MACVplB,EAAK,YACLqlB,EAAW,eACXC,EAAc,OACdpJ,GAaHhxB,EACG,MAAMq6B,EAAiC,IAApBN,EAASv9B,OACtB89B,EAAmBN,EAAsBF,EAAgBM,EAC/D,IAAIG,EAA2B7vC,EAC3B8vC,EAAiB,EAEjBF,GAAoB,IAEpBC,EAA6C,EAAlB7vC,EAEtB4vC,GAAoB,MAEzBC,EAA2B7vC,GAAmB,EACxC,EACkB,EAAlBA,EAED4vC,GAAoB,KAEzBC,EAA2B7vC,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,GAIN8vC,EAAiB,IACjBD,EAA2B7vC,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,IAENyvC,GAAgBnJ,EAAS,GAAKA,EAAS,KACvCuJ,EAA2B7vC,GAG/B,MAAM+vC,EAA2BT,GAAwBhJ,IAAWmJ,EAC9DnJ,GACMwJ,GAAkBL,EAAe,EAAIK,GACnCD,GAA4BR,EAASv9B,OAAS,GACtDk+B,EAA2BL,EAAa,GAAKP,EAAgBE,GAAuBD,EAASv9B,OAC7Fm+B,EAA2Bb,EAE3Bc,EAAgC,IAApBf,EAASr9B,QAA8B,EAAb09B,EAAiBO,EAA2BX,EAClF,SACA,eACAlvC,EAA8B,WAAdgwC,EAChBL,EACAG,EACAG,EAAkC,WAAdD,EACP,EAAbV,EAAiBO,EACjBE,EACAG,EAAgBX,EAChBh7B,KAAK6F,IAAI61B,EAAmBf,GAC5Be,EACAE,EAA4B,WAAdH,GACbH,EAA2BX,GAAiB,EAC7C,EACAkB,EAAU77B,KAAK4F,IACjBk1B,EACAE,EAAch7B,KAAK6F,IAAI+1B,EAAa,GAAKA,GAY7C,OATIjmB,GAAO7Y,QAAQC,KACf,mBAAmB4Y,IACnB8lB,EACAhwC,EACA,IACAmvC,EAAUe,EAAeD,EACzBhB,EAAUC,EACVkB,GAEG,CACHd,aACAtvC,gBACAiwC,oBACAC,gBAMAF,YAKAI,UACAC,eAA8B,WAAdL,EAAyBJ,EAAiB,EAC7D,EAaQU,GAAmBA,CAACC,EAAiBC,IACvCD,GAAW,EACZC,GAAU,EACN,GACkC,EAAlCj8B,KAAK4F,KAAe,EAAXo2B,EAAcC,GAC3BA,GAAU,GAC4B,EAAlCj8B,KAAK4F,IAAIo2B,GAAmB,EAAVC,GAClB,ECzPDC,GAAer7B,IAyBrB,IAzBsB,IACzBO,EACA0M,MAAOquB,EAAQ,UAAEC,EAAS,OAC1BvK,EAAM,iBACNwK,EAAmB,EACnB5wC,cAAe6wC,EAAc,OAC7BjmC,EAAM,YACN62B,EAAW,SACXqP,GAiBH17B,EACG,IAAKO,IAAQ+6B,EAAU,MAAO,CAC1BK,WAAY,EACZC,eAAgB,GAChBC,WAAY,EACZC,YAAY,EACZC,SAAU,EACVC,QAAS,GAEb,MAAMpE,EAA4B9hB,GAAkB7rB,EAAqBoiC,GACnEzhC,EAA8B,OAAd6wC,QAAc,IAAdA,IAAkB7D,EAA0BhtC,eAC5D,YACFqxC,EAAW,SACXnvC,EAAQ,UACRovC,GACAR,GACE,aACFzvC,EAAY,iBACZZ,EAAmBJ,EAAgBI,iBAAgB,iBACnDF,EAAmBF,EAAgBE,iBAAgB,UACnDU,GACAiB,EACEipB,EAAejpB,EAAShB,SAASowC,IACjC,kBACF/xC,EAAiB,mBACjBK,EAAkB,SAClBJ,EAAQ,gBACR8G,EAAkB/G,EAAiB,iBACnCQ,EAAmBitC,EAA0BjtC,iBAAgB,gBAC7DD,EAAkBktC,EAA0BltC,gBAAe,mBAC3DM,EAAkB,kBAClB+F,GACAglB,EACEomB,GhC8BsB,GgC9BT/xC,GACb,WACF4uC,EAAU,aAAEK,EAAY,gBACxBjB,EAAe,oBAAEE,EAAmB,kBACpCK,EAAiB,sBAAEE,EAAqB,iBACxCJ,EAAgB,qBAAEC,EAAoB,gBACtCH,EAAe,oBAAEC,EAAmB,gBACpCN,EAAe,oBAAEC,GACjBT,GAAcn3B,EAAKzT,EAAUipB,EAAckmB,EAAa5P,GAEtDiF,EAAqB,EAAI1mC,EAAgB,EAC/C,IAAIgxC,EAAiB,GACjBD,EAAa,EACbE,EAAa,EACbC,GAAa,EACjB,MAAMtG,OAA6B/4B,IAAd8+B,EAErB,IAAIa,EAAkC,OAAhBZ,QAAgB,IAAhBA,IAAoB,EAEtCa,GAAa,EACbC,EAAc,EAElB,MAAMC,EAbQjB,EAASjxB,WAAW,IAAIxX,OAAOa,GAA6B,KAAM,IAarDoS,MAAM7S,IAAoBqgB,QAAOtf,GAAkB,MAATA,GAA2B,KAAVA,IACtF,IAAK,IAAIygB,EAAM,EAAGA,EAAM8nB,EAAa//B,OAAQiY,IAAO,CAChD,MAAM+nB,EAA6B,IAAR/nB,EACrBgoB,EAAWF,EAAa9nB,GAG9B,GhC5HsB,WgC4HlBgoB,EAA6B,CAC7BL,EAAkB,EAElBT,GADsBzqC,EAAkB8/B,EACVM,EAE1BkL,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,GhCrBgB,WgCqBZA,EAA4B,CACjCL,EAAkB,EAElBT,GADsBxxC,EAAoB6mC,EACZM,EAE1BkL,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,GAAI,SAAM5kB,KAAK4kB,GAAW,CAC3BL,EAAkB,EAClBhE,EAAgBztC,GAChB,MAAM+xC,EAAgBn8B,EAAIuxB,YAAY2K,GAAUt8C,MAAQ6wC,EACxDsH,IACAqD,GAAce,EAAgBpL,EAE1BkL,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,GAAIpoC,GAAqBwjB,KAAK4kB,GAAW,CAC1CL,EAAkB,EAClB3D,IACA,MAAMiE,EAAgBn8B,EAAIuxB,YAAY2K,GAAUt8C,MAAQ6wC,EACxD0H,IACAiD,GAAce,EAAgBpL,EAE9BuK,GAAc,EACVW,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,GAAIhnC,GAAWoiB,KAAK4kB,GAAW,CAChC,MAAO5C,EAAU8C,EAAU5C,EAAW,IAAM0C,EAASpyB,WAAW,OAAQ,IAAIvE,MAAM,SAC5Eq0B,EAA2B,OAAbwC,GAGhBhB,WAAY7B,GACZuB,GAAa,CAAE96B,MAAK0M,MAAO4sB,EAAU0B,YAAWvK,SAAQpmC,gBAAe4wC,iBAAkB,EAAGhmC,SAAQkmC,WAAUrP,gBAGlHsM,IACA,MAAMqB,EAAsBD,EACvBj0B,MAAM,IACN/R,KAAIwhC,GAAUF,GAAe,CAAE90B,MAAKg1B,SAAQ1pC,YAAWI,aAAc,WAAY+kC,OAAQ,EAAG3E,gBAAeoJ,aAC3GnsC,QAAO,CAACC,EAAKC,IAAQD,EAAMC,GAAK,GACrCqvC,IAGA,MAAQmC,QAASD,EAAW,cAAED,GAAkBlB,GAAgB,CAC5DG,WACAC,oBAAqBA,EAAsBhJ,EAC3C6I,WACAC,gBACAG,YAAakC,EAAanL,EAC1BtmC,kBACAwvC,WAAY7uC,EAAmBjB,EAAW4mC,EAC1CmJ,cACAC,eAAgBpJ,EAChBA,OAA8B,aAArB7lC,GAAmC0uC,EAASr9B,OAAS,EAAK2C,KAAK6F,IAAI,EAAGgsB,EhC9E/D,IgC8E4F,IAE1GgK,EAA8B,IAApBjB,EAASv9B,OACnB2C,KAAK4F,IAAIo3B,EAAYrC,EAAgBnkC,IACrColC,EACAiB,EAAUhB,EACVe,EAAWf,EACXvF,EAAat2B,KAAK4F,IAAI+1B,EAAehB,GACrC8C,EAAgB1B,GAAiBkB,EAAiBJ,GAExDI,EAAkBL,EAClBJ,GAAclG,EAAamH,EAC3Bf,GAAc,EAEVW,IACAH,GAAa,EACbC,EAAcN,EACdJ,EAAiB/B,EAAS,GAElC,MAEK,GAAI7mC,GAAe6kB,KAAK4kB,GAAW,CAEpC,MAAMI,EAA6B9rC,EAC7B,EAAIA,EAAoB,EACxBugC,EACN/wB,EAAI3V,eAAoBiyC,EAA6B,GAAKZ,EAAYzoB,cAAcN,aAAhE,KAEpB,IAAI4pB,EAAiBL,EACjBC,EAAgB,EAMpB,KAA0B,KAAnBI,GAAuB,CAC1B,IAAIC,EAAgBD,EAAe,GAC/BE,EAAqBF,EAAe/rB,MAAM,GAC1CwlB,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAEhG2S,GAAyB+kB,KAAKklB,IAC9B/D,EAAWhuC,GACXurC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGk5C,EAAaruC,IAGR4H,GAAmBilB,KAAKklB,IAC7B/D,EAAWxuC,GACX+rC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGk5C,EAAa7uC,IAGRgK,GAAYqjB,KAAKklB,IACtB7E,IACA3B,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGg4C,KAGKtkC,GAAqBgkB,KAAKklB,IAAgC,QAAdlxC,GACjD0sC,IACAhC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGq4C,KAIAjC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAEpGu8C,GAAiBnG,EACjBuG,EAAiBE,CACrB,CAEA,MAAMhB,EAAU78B,KAAK4F,IAAIo3B,EAAYO,EAAgB/mC,IAC/ComC,EAAWC,EAGjBL,GAAce,EAFQxB,GAAiBkB,EAAiBJ,GAGxDI,EAAkBL,EAEdS,IACAF,EAAcN,EACdJ,EAAiBa,EAAS,IAE9Bl8B,EAAI3V,cAAgB,KACxB,MAEK,GAAIiJ,GAAqBgkB,KAAK4kB,IAA2B,QAAd5wC,EAAqB,CACjE0sC,IACA,MAAMmE,EAAgBn8B,EAAIuxB,YAAY2K,GAAUt8C,MAAQmxC,EACxDkH,IAEA,MAAMwD,EAAU78B,KAAK4F,IAAIo3B,EAAYO,EAAgB/mC,IAC/ComC,EAAWC,EAGjBL,GAAce,EAFQxB,GAAiBkB,EAAiBJ,GAGxDI,EAAkBL,EAEdS,IACAF,EAAcN,EACdJ,EAAiBa,EAAS,GAElC,KACK,CACD,MAAM,WAAEhH,GAAeJ,GAAe,CAAE90B,MAAKg1B,OAAQkH,EAAUjH,eAAc3pC,YAAWI,eAAc+kC,SAAQ3E,gBACxGqQ,EAAgBjH,EAAanE,EAC7B0K,EAAU78B,KAAK4F,IAAIo3B,EAAYO,EAAgB/mC,IAC/ComC,EAAWC,EAGjBL,GAAce,EAFQxB,GAAiBkB,EAAiBJ,GAGxDI,EAAkBL,GAEF,QAAXvmC,GAAgC,QAAXA,GAAoB,MAAMqiB,KAAK4kB,MAClB,IAAhC5nC,GAAagjB,KAAK4kB,KAErBZ,GAAc,EACVpnB,IAAQ8nB,EAAa//B,OAAS,IAAGs/B,GAAa,IAElDU,IACAF,EAAcN,EACdJ,EAAiBa,EAAS,IAE1BznC,GAAsB6iB,KAAK4kB,KAC3BH,EAAc,EACdF,EAAkB,EAE1B,CACJ,CAEA,MAAO,CACHT,aACAE,aACAC,aACAF,iBACAG,SAAUK,EACVJ,QAASM,EACTD,aACH,EAQQY,GAAcjd,IAkBpB,IAlBqB,IACxBzf,EAAG,KACH28B,EAAI,MACJ/8C,EACA6wC,OAAQmM,EAAU,OAClB3nC,EAAM,OACN4nC,EAAM,SACN1B,EAAQ,YACRrP,GAUHrM,EACG,MAAMqd,EAAY7F,GAAa0F,GAC/B,IAAII,EAAoB,EACpBC,EAAiB,EACjBC,EAAa,EAEjB,IAAK,IAAI/oB,EAAM,EAAGuc,EAASmM,EAAY1oB,EAAM4oB,EAAU7gC,OAAQiY,IAAO,CAClE,MAAMxH,EAAQowB,EAAU5oB,GAClB8mB,EAAY8B,EAAU5oB,EAAM,GAElC,GAAIxH,IAAU3Z,GAAuB,CACjC09B,EAAS,EACT,QACJ,CACK,GAAI/jB,IAAU1Z,GAAqB,CACpCy9B,EAASmM,EACT,QACJ,CACA,MAAM,WACFtB,EAAU,WACVF,EAAU,WACVG,EAAU,QACVE,EAAO,SACPD,EAAQ,eACRH,GACAP,GAAa,CAAE96B,MAAK0M,QAAOsuB,YAAWvK,SAAQwK,iBAAkBgC,EAAaxM,EAAQ0K,WAAUlmC,SAAQ62B,gBAQ3GmR,EAAazB,EAAW/K,EACxBsM,GAAqB3B,EAAa3K,IANrB,IAARvc,GAAaunB,EAAU,GAAyE,EAArE78B,KAAK6F,IhClRN,GgCkRoCqnB,EAAa2P,EAAUhL,GAAe,IAE5F,IAARvc,GAAangB,GAAiBujB,KAAK+jB,GhCnRH,EgCmRqDvP,EAAc2E,EAAS,IAKjHuM,GAAkB1B,GAAcC,QAA4Br/B,IAAd8+B,EAA0B,EAAI,EAChF,CACA,MAAMkC,EAAqBF,EAAiB,GAAKp9C,EAAQm9C,GAAqBC,EAAiB,EAO/F,MAAO,CACHF,YACAK,WAReN,EACF,QAAX5nC,EACIioC,EAAqB,IAAQpR,EAAc,EAAIoR,EAC/CA,EAAqB,KAAQpR,EAAc,EAAIoR,EACnDA,EAKL,EChZQE,GAAiB39B,IAkBvB,IAlBwB,IAC3BO,EAAG,OACHoR,EAAM,cACNisB,EAAa,oBACbC,EAAsB,EAAC,MACvB19C,EAAK,OACLqV,EAAM,SACNkmC,EAAQ,YACRrP,GAUHrsB,EACG,MAAM,SAAElT,EAAQ,UAAEovC,GAAcR,GAC1B,cAAE9wC,GAAkBkC,EAAShB,SAASowC,GACtC4B,EAAyG,GACzGC,EAAmBH,EAAct0C,QAAO,CAAC00C,EAAsBC,KAEjE,MAAMd,GAAcxrB,GAAU,IAAM,IAAMA,GAAU,IAC9CusB,EAAc/9C,EAAQg9C,EACtBE,EAAY7F,GAAayG,GAAM,GACrC,IAAIE,EAAiB,EACjBC,EAAqB,GACrBC,EAAmB,EACnBb,EAAa,EACbc,EAAmB,EAEvB,IAAK,IAAI7pB,EAAM,EAAGuc,EAASmM,EAAY1oB,EAAM4oB,EAAU7gC,OAAQiY,IAAO,CAClE,MAAMxH,EAAQowB,EAAU5oB,GAClB8mB,EAAY8B,EAAU5oB,EAAM,GAK9BxH,IAAU3Z,IACVgrC,GAAoB,EACpBtN,EAAS,GACF/jB,IAAU1Z,KACjB+qC,GAAoB,EACpBtN,EAASmM,GAEb,IAAI,eACAvB,EAAc,WACdD,EAAU,SACVI,EAAQ,QACRC,GACAX,GAAa,CAAE96B,MAAK0M,QAAOsuB,YAAWvK,SAAQwK,iBAAkBgC,EAAYhoC,SAAQ5K,gBAAe8wC,WAAUrP,gBAQjH,IAAIkS,EAAa5C,GAAc2C,EAAmB,EAAInB,EAAa,IAJ5C,IAAR1oB,GACRunB,EAAU,GAAyE,EAArE78B,KAAK6F,IjCkDC,GiClD6BqnB,EAAc2E,EAAQgL,GAAgB,IACnF1nC,GAAiBujB,KAAK+jB,GjCkDA,EiClDkDvP,EAAc,GAC3F,GAGN,GAAIgS,EAAmBE,EAAaL,EAAa,CAC7C,IAAIhB,EAAOkB,EAAS/rC,KAAK,IAAI0wB,OACzBub,EAAmB,IAAGpB,GAAc3pC,IACpC+qC,EAAmB,IAAGpB,EAAO5pC,GAAwB4pC,GACzDoB,EAAmB,EACnBR,EAAgBU,KAAK,CACjBtB,OACAzrB,gBAAiBE,EACjByrB,QAAQ,EACRqB,gBAAiBJ,IAGrB,IAAI,WACA1C,EAAU,SACVI,EAAQ,QACRC,GACAX,GAAa,CAAE96B,MAAK0M,QAAOsuB,YAAWvK,SAAQwK,iBAAkB,EAAGhmC,SAAQkmC,WAAUrP,gBAKzFgS,EADiB1C,IAFDK,EAAU,GAAyE,EAArE78B,KAAK6F,IjC2BZ,GiC3B0CqnB,EAAc2E,EAAQgL,GAAgB,IAChG1nC,GAAiBujB,KAAK+jB,GjC2BA,EiC3BkDvP,EAAc,IAG7FmR,EAAazB,EACbqC,EAAW,CAACnxB,GACZkxB,GAAkB,CACtB,MACIE,GAAoBE,EACpBf,EAAazB,EACbqC,EAASI,KAAKvxB,EAEtB,CAGA,IAAIiwB,EAAOkB,EAAS/rC,KAAK,IAAI0wB,OAW7B,OAVIub,EAAmB,IAAGpB,GAAc3pC,IACpC+qC,EAAmB,IAAGpB,EAAO5pC,GAAwB4pC,GACzDoB,EAAmB,EACnBR,EAAgBU,KAAK,CACjBtB,OACAzrB,gBAAiBE,EACjByrB,QAAQ,EACRqB,gBAAiBJ,IAGdL,EAAuBG,CAAc,GAC7C,IAAyB,OAAnBN,QAAmB,IAAnBA,IAAuB,GAEhC,MAAO,CAAEC,kBAAiBC,mBAAkB,EC1GnCW,GAAe1+B,IAkCrB,IAlCsB,IACzBO,EAAG,SACHnW,EAAQ,KACR0mC,EAAI,SAAEC,EAAQ,SACdgJ,EAAQ,oBAAEC,EAAmB,SAC7BH,EAAQ,cAAEC,EAAa,YACvBG,EAAW,gBACXvvC,EAAe,oBACfQ,EAAmB,aACnBE,EAAY,iBACZC,EAAgB,YAChBghC,EAAW,OACX2E,EAAM,UACNnlC,EAAS,WACT8yC,EAAU,YACVxE,EAAW,iBACXhvC,GAkBH6U,EACG,MAAM,kBAAE24B,EAAiB,sBAAEE,EAAqB,WAAEM,EAAU,WAAEH,GAAe2F,EAEvEC,EAA+C,aAArBzzC,GAAmC0uC,EAASr9B,OAAS,EAC/E2C,KAAK6F,IAAI,EAAGgsB,ElCuEU,IkCtEtB,GACA,WACFkJ,EAAU,cACVtvC,EAAa,kBACbiwC,EAAiB,QACjBG,EAAO,UACPJ,EAAS,eACTK,GACArB,GAAgB,CAChBG,WAAUC,sBACVH,WAAUC,cAAeA,EAAgB9I,EACzCiJ,cAAavvC,gBAAiBA,EAAkBsmC,EAChDkJ,WAAY9vC,EAAWiB,EACvB8uC,cACAC,eAAgBpJ,EAChBA,OAAQ4N,IAENC,EAAWhE,EAAoBf,EAAgB9I,EAErD,GAAwB,IAApB+I,EAASv9B,OAAc,MAAO,CAC9Bq+B,oBACAG,WAIJ,MAAM8D,EAAqB3E,EACrBh7B,KAAK6F,IAAI,EAAG80B,EAAgB9I,EAAS6J,GACrC,EAGAkE,EAAiB5E,EACjB2E,EACCF,GAAwC,WAAdhE,EACvBgE,EACA3D,EAEV,IAAI+D,EAAclO,EAClBqI,KACIgB,GAAe4E,KACf/F,EAAW+F,EAAgB,GAC3BC,EAAclO,EAAOiO,GAGP,WAAdnE,GACAoE,GAAe9E,EAEV2E,EAEME,EAAiBD,IACxBE,IAAgBlF,EAAgB9I,EAAS+N,EAAiBlE,GAAqB,EAAIkE,GAFnFC,IAAgBlF,EAAgB9I,EAAS6J,GAAqB,GAKlEmE,GAAep0C,EAAgB,EAGnC,IAAK,MAAM2qC,KAAUwE,EAAU,CAE3BpB,IACA,MAAM,MAAEx4C,EAAK,WAAEs1C,GAAeJ,GAAe,CAAE90B,MAAKg1B,SAAQ1pC,YAAWI,aAAc,WAAY+kC,OAAQ,EAAG3E,gBACtG4K,GAAkB92C,EAAQs1C,GAAc,EAC9CoD,IAEAF,EAAkBvtC,GAClBmV,EAAIqxB,SAAS2D,EAAQyJ,EAAc/H,EAAgBlG,EAAW3mC,EAAWc,GACzE2tC,IACAmG,GAAgBvJ,EAAa7qC,CACjC,CAMA,OALIuvC,GAAe4E,IACf5F,IAEJH,EAAWhI,EAAQ,GAEZ,CACH6J,oBACAG,UACH,EC9EQiE,GAAWj/B,IAwBjB,IAxBkB,IACrBO,EAAG,UACH88B,EAAS,SACTh1C,EAAQ,aAAED,EAAY,WACtBs1C,EAAa,EACb1M,OAAQmM,EAAU,OAAEpE,EAAS,EAAC,SAC9B2C,EAAQ,OACRlmC,EAAM,WACNohC,EAAU,MACV9hB,GAAQ,EAAK,YACbuX,GAcHrsB,EACG,MAAM,YACFi8B,EAAW,SACXnvC,EAAQ,UACRovC,GACAR,EACE3lB,EAAejpB,EAAShB,SAASowC,IACjC,kBACF/lC,EAAiB,aACjB/K,EAAeH,EAAgBG,aAAY,oBAC3CF,EAAsBD,EAAgBC,oBAAmB,iBACzDC,EAAmBF,EAAgBE,iBAAgB,iBACnDE,EAAmBJ,EAAgBI,iBAAgB,aACnDY,EAAY,UACZJ,EAAS,mBACTkB,EAAqB,CAAC,GACtBD,EACE8qC,EAA4B9hB,GAAkB7rB,EAAqBoiC,IACnE,mBACF9hC,EAAqBqtC,EAA0BrtC,mBAAkB,kBACjEJ,EAAiB,mBACjBK,EAAqBotC,EAA0BptC,mBAAkB,SACjEJ,EAAQ,gBACRM,EAAkBktC,EAA0BltC,gBAAe,gBAC3DwG,EAAkB/G,EAAiB,iBACnCQ,EAAmBitC,EAA0BjtC,iBAAgB,cAC7DC,EAAgBgtC,EAA0BhtC,cAAa,mBACvDE,EAAqB8sC,EAA0B9sC,mBAAkB,mBACjEE,EAAqB4sC,EAA0B5sC,mBAAkB,kBACjE+F,EAAiB,qBACjB7G,EAAuB0tC,EAA0B1tC,sBACjD6rB,EACE4oB,EAAajH,GAAcn3B,EAAKzT,EAAUipB,EAAckmB,EAAa5P,IACrE,sBACFwM,EAAqB,kBAAEF,EAAiB,oBACxCL,EAAmB,gBAAEF,EAAe,oBACpCD,EAAmB,gBAAED,EAAe,qBACpCQ,EAAoB,iBAAED,EAAgB,WACtCO,EAAU,aAAEK,EAAY,gBACxBd,EAAe,oBAAEC,EAAmB,qBACpCM,EAAoB,WAAEK,IACtBwF,EAEErN,GAAqB,EAAI1mC,EAAgB,EACzCmmC,GAAW3oC,EAAe2wC,EAChC,IAAIyC,GAAmB,EACnB0D,GAAuE,GACvEC,GAA+B,EAC/BC,GAAY/2C,EAKhB,IAAK,IAAIg3C,EAAW,EAAGrO,EAASmM,EAAYkC,EAAWhC,EAAU7gC,OAAQ6iC,IAAY,CACjF,MAAMpyB,EAAQowB,EAAUgC,GAExB,GAAIpyB,IAAU3Z,GAAuB,CACjC09B,EAAS,EACTzwB,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC,QACJ,CACK,GAAInsB,IAAU1Z,GAAqB,CACpCy9B,EAASmM,EACT58B,EAAIzG,MAAMk3B,EAAQ,GAClB,QACJ,CACA,MAAMsO,GnCbkB,GmCaYtO,EAC9BmL,EAAa/xC,EAAWk1C,EACxB/D,EAAY8B,EAAUgC,EAAW,GACjCE,EAAelC,EAAUgC,EAAW,GACpCG,EAAwB,CAC1Bj/B,MACAywB,SACApmC,gBACA4K,SACAkmC,WACArP,eAEEoT,GAAsB,CACxBl/B,MACAwwB,YACAC,SACA4F,cAEE2F,GAAetvB,EAAMnH,MAAM7S,IAAoBqgB,QAAOtf,GAAkB,MAATA,GAA2B,KAAVA,KAEhF,eACF4nC,GAAc,QACdI,GACAD,SAAU2D,GACV/D,WAAYgE,GAAe,WAC3B9D,IACAR,GAAa,CACbpuB,QAAOsuB,YAAWC,iBAAkBA,GAAmBxK,KAAWwO,IAIhEI,GAAsB,IAAbP,GACRrD,GAAU,GAAyE,EAArE78B,KAAK6F,InCtDK,GmCsDyBqnB,EAAa2P,GAAUhL,GAAe,IACnF18B,GAAiBujB,KAAK+jB,InCtDI,EmCsD8CvP,EAAc,GAC3F,EACN,IAAIwT,GAAeT,GAAYQ,GAC3BxD,GAAkBZ,GAGtB,IAAK,IAAIsE,EAAc,EAAGA,EAAcvD,GAAa//B,OAAQsjC,IAAe,CAAC,IAADC,GAAAC,GACxE,MAAMvD,EAAWF,GAAauD,GACxBG,EAA4C,QAAhCF,GAAGxD,GAAauD,EAAc,UAAE,IAAAC,MAAIxE,EAChD2E,EAA4C,QAA7BF,GAAGzD,GAAa8C,EAAW,UAAE,IAAAW,MAAIT,EAGtD,GAAItyB,IAAU3Z,IAAyB2Z,IAAU1Z,SAE5C,GnC1La,WmC0LTkpC,EACLyC,GAAiBV,KAAK,CAAE1N,KAAM+O,GAAc5sB,KAAM/hB,EAAiB6/B,cACnE8O,IAAgB3uC,EAAkBogC,GAClC8K,GAAkB,EAClB+C,GAA+B,OAG9B,GnC/EY,WmC+ER1C,EACLtD,KACAI,GACIh5B,EACAs/B,GACAz3C,EAAemC,EAAqB,EAAI8hC,EACxCliC,EACAoL,GAAiBC,GAAU62B,GAE/BwT,IAAgB11C,EAAoBmnC,GACpCwH,EAAqB9H,EAAQ+H,GAE7BqD,GAAkB,EAClB+C,GAA+B,OAG9B,GAAI,SAAMtnB,KAAK4kB,GAChBtD,KACAf,EAAgBztC,GAChB6rC,GAAW,IACJiJ,GACHlK,OAAQkH,EACR3L,KAAM+O,GAAe7O,EACrBD,SAAU3oC,GAA2B,QAAXoN,EACpBtL,EACuB,EAAvBA,KAEV21C,IAAgBt/B,EAAIuxB,YAAY2K,GAAUt8C,MAAQmxC,GAClDgH,IACAQ,EAAqB9H,EAAQ+H,GAE7BqD,GAAkB,EAClB+C,GAA+B,OAG9B,GAAI9qC,GAAqBwjB,KAAK4kB,GAC/BtD,KACAV,IACAjC,GAAW,IACJiJ,GACHlK,OAAQkH,EACR3L,KAAM+O,GAAe7O,EACrBD,SAAU3oC,EAAe0C,IAE7B+0C,IAAgBt/B,EAAIuxB,YAAY2K,GAAUt8C,MAAQmxC,GAClDoH,IACAI,EAAqB9H,EAAQ+H,GAE7B8G,IAAgBnC,EAChBtB,GAAkB,EAClB+C,GAA+B,OAG9B,GAAI1pC,GAAWoiB,KAAK4kB,GAAW,CAChC,MAAO5C,EAAU8C,EAAU5C,EAAW,IAAM0C,EAASpyB,WAAW,OAAQ,IAAIvE,MAAM,SAC5Eq0B,EAA2B,OAAbwC,GAEZhB,WAAY7B,GAAkBuB,GAAa,CAC/CpuB,MAAO4sB,EAAU0B,UAAW0E,EAC5BzE,iBAAkB,KACfgE,IAIP7G,IACA,MAAMqB,EAAsBD,EACvBj0B,MAAM,IACN/R,KAAIwhC,GAAUF,GAAe,CAAE90B,MAAKg1B,SAAQ1pC,YAAWI,aAAc,WAAY+kC,OAAQ,EAAG3E,gBAAeoJ,aAC3GnsC,QAAO,CAACC,EAAKC,IAAQD,EAAMC,GAAK,GACrCqvC,IAGA,MAAM,cACFiC,EACAE,QAASD,GACTnB,GAAgB,CAChBG,WACAC,sBACAH,WACAC,cAAeA,EAAgB9I,EAC/BiJ,YAAakC,EACbzxC,gBAAiBA,EAAkBsmC,EACnCkJ,WAAY9vC,EAAWiB,EACvB8uC,cACAC,eAAgBpJ,EAChBA,OAA8B,aAArB7lC,GAAmC0uC,EAASr9B,OAAS,EAAK2C,KAAK6F,IAAI,EAAGgsB,EnC5JnE,ImC4JgG,IAE1GgK,EAA8B,IAApBjB,EAASv9B,OACnB2C,KAAK4F,IAAIo3B,EAAYrC,EAAgBwF,GACrCvE,EACAgB,EAAWf,EACXgB,EAAUhB,EAEV4B,EAAgB1B,GAAiBkB,GAAiBJ,GAClDmE,EAAkBnE,EAAU,EAAIA,EAAUY,EAAgB,GAG5DP,WAAY+D,EACZpE,QAASqE,GACThF,GAAa,CACbpuB,MAAOgzB,EAAc1E,UAAW2E,EAChC1E,iBAAkBO,EAAW/K,KAC1BwO,IAEDc,EAAcD,EAA0BrP,EACxCuP,EAAiBrF,GAAiBa,EAAUuE,GAE5CE,EAAmBL,GADApE,EAAW,EAAIA,EAAWwE,EAAiB,GAEpE,IAAIE,EAAkB,EAClBC,EAA2B,EAG3BF,EAAmB,GAAKF,IAAiB,EAAIjU,GAAgB+T,GAC7DK,GAAmBD,EAA8C,EAA3BrhC,KAAK4F,IAAIu7B,EAAa,IAAU,EACtEI,EAA2BvhC,KAAK4F,IAAIu7B,EAAa,GAAKG,GAGtDA,EAAkBN,EAEtB,MAAMQ,EAAuBd,IACtB7E,EAAU,GAAK4B,EAAiBgD,IAAUA,GAASa,GACpDtB,GACNA,GAA+BuB,EAG/BzB,GAAS,CACL1+B,MACA/K,SACAkmC,WACA2B,UAAW7F,GAAaqC,GACxBzxC,aAAc2oC,GACd1oC,SAAUs4C,EACV3P,SACA+H,SACA2E,WAAY,EACZ9G,aACAvK,cACAvX,OAAO,IAIX,MAAMmc,EAAmB1wB,EAAIrb,UACvB07C,EAAqBrgC,EAAI8yB,YACzBwN,EAAqBtgC,EAAIpa,YACzB26C,EAAuBvgC,EAAIla,cAC3B06C,EAAuBxgC,EAAIna,cAC3B46C,EAAoBzgC,EAAIja,WAC1B6P,IACAoK,EAAIrb,UAAYiR,EAChBoK,EAAI8yB,YAAc,GAClB9yB,EAAIpa,YAAc,GAClBoa,EAAIla,cAAgB,EACpBka,EAAIna,cAAgB,EACpBma,EAAIja,WAAa,GAIrBo4C,GAAa,CACTn+B,MACAnW,WACA0mC,KAJyB+O,GAAejD,EAIZ7L,YAC5BgJ,WAAUC,sBACVH,WAAUC,gBACVG,YAAakC,EACbzxC,kBACAQ,sBACAE,eACAC,mBACA2lC,SACAnlC,YACA8yC,aACAxE,cACAhvC,mBACAkhC,gBAGJ9rB,EAAIrb,UAAY+rC,EAChB1wB,EAAI8yB,YAAcuN,EAClBrgC,EAAIpa,YAAc06C,EAClBtgC,EAAIla,cAAgBy6C,EACpBvgC,EAAIna,cAAgB26C,EACpBxgC,EAAIja,WAAa06C,EAEjBnB,IAAgB1gC,KAAK4F,IAAI+0B,EAAgB9I,EAAQ8J,GAAiB8B,EAAgBc,EAClFtB,GAAkBL,CACtB,MAEK,GAAI/oC,GAAe6kB,KAAK4kB,GAAW,CACpC,MAAMI,EAA6B9rC,EAC7B,EAAIA,EAAoB,EACxBugC,GACN/wB,EAAI3V,eAAoBiyC,EAA6B,GAAKZ,EAAYzoB,cAAcN,aAAhE,KAOpB,MAAM+tB,EAAqB1gC,EAAIuxB,YAAY2K,GAAUt8C,MAAQ6wC,EACvDgL,EAAU78B,KAAK4F,IAAIo3B,EAAY8E,EAAqB3B,GACpDvD,EAAWC,EAEjB6D,IADsB3E,GAAiBkB,GAAiBJ,GAIxD,IAAIc,EAAiBL,EACjByE,EAAkBrB,GACtB,KAA0B,KAAnB/C,GAAuB,CAC1B,IAAIC,EAAgBD,EAAe,GAC/BE,EAAqBF,EAAe/rB,MAAM,GAC1CwlB,EAAoB,EACxB,MAAM4K,EAA4B,IAC3B1B,GACH/I,UAAW3pC,EAAmB,GAAGs/B,KACjCkJ,OAAQwH,EACRjM,KAAMoQ,GAEV,GAAIpuC,GAAyB+kB,KAAKklB,GAC9B/D,EAAWhuC,GACXurC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGq2C,GAAW,IACJ2K,EACHrQ,KAAMoQ,EAAkBl2C,EACxB+lC,SAAUA,GAAW/lC,IAEzBquC,EAAaruC,QACV,GAAI4H,GAAmBilB,KAAKklB,GAAgB,CAC/C/D,EAAWxuC,GACX+rC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChG,MAAMihD,EAAgB7K,EAAoBh2B,EAAIuxB,YAAYiL,GAAe58C,MAAQqK,EAC3E2U,KAAKW,MAAMy2B,GAAqB,EAAI/rC,IAAuB,EAC3D,EACNgsC,GAAW,IACJ2K,EACHrQ,KAAMoQ,EAAkB12C,EAAqB42C,EAC7CrQ,SAAUA,GAAWvmC,IAEzB6uC,EAAa7uC,EACjB,MAAWgK,GAAYqjB,KAAKklB,IACxB7E,IACA3B,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGq2C,GAAW2K,GACXhJ,KACOtkC,GAAqBgkB,KAAKklB,IAAgC,QAAdlxC,GACnD0sC,IACAhC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGq2C,GAAW2K,GACX3I,MAEAjC,EAAoBh2B,EAAIuxB,YAAYgL,GAAgB38C,MAAQogB,EAAIuxB,YAAYkL,GAAoB78C,MAChGq2C,GAAW2K,IAEfD,GAAmB3K,EAAoBvF,EACvC8L,EAAiBE,CACrB,CAEA6C,GAAeqB,EACf9E,GAAkBL,EAClBoD,GAA+B,EAC/B5+B,EAAI3V,cAAgB,KACxB,MAEK,GAAIiJ,GAAqBgkB,KAAK4kB,IAA2B,QAAd5wC,EAAqB,CACjE,MAAM0pC,EAASkH,EACflE,IAEA,MAAM1B,EAAct2B,EAAIuxB,YAAYyD,GAAQp1C,MAAQmxC,GAAqBN,EACnEgL,EAAU78B,KAAK4F,IAAIo3B,EAAYtF,EAAcyI,GAC7CvD,EAAWC,EAGjB6D,IAFsB3E,GAAiBkB,GAAiBJ,GAGxDxF,GAAW,IAAKiJ,GAAqBlK,SAAQzE,KAAM+O,KACnDA,IAAgBhJ,EAEhB2B,IAEA4D,GAAkBL,EAClBoD,GAA+B,CACnC,KAEK,CACD,MAAM5J,EAASkH,EACT9F,EAAetB,GAAe,CAChC90B,MACAg1B,SACA1pC,YACAI,eACAupC,kBAA+B/4B,IAAjBwjC,EACdjP,SACA3E,gBAEEwK,EAAcF,EAAalB,WAAanE,GAAqBN,EAC7DgL,EAAU78B,KAAK4F,IAAIo3B,EAAYtF,EAAcyI,GAC7CvD,EAAWC,EAGjB6D,IAFsB3E,GAAiBkB,GAAiBJ,GAGxDxF,GAAW,IACJiJ,GACHlK,SACAzE,KAAM+O,GACNnJ,UAA6B,OAAlB3pC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAqB,GAAGs/B,KACnCsK,iBAEJkJ,IAAgBhJ,GAEA,QAAXrhC,GAAgC,QAAXA,GAAoB,MAAMqiB,KAAK0d,MACpB,IAA9B1gC,GAAagjB,KAAK0d,KAErBsK,IAAgBnC,GAEf1oC,GAAsB6iB,KAAK0d,KAAS6G,GAAkBL,GAC3DoD,GAA+B,CACnC,CACJ,CAGA3D,GAAmBkE,GAAgB1O,EAC/Blc,GAAO+b,GAAW,CAAEtwB,MAAKwwB,YAAUD,KAAMsO,GAAWj/C,MAAOw/C,GAAkB3O,EAAQA,WACzFoO,IAAaO,GAAkB3O,EAAS6K,GAAa6B,EAAakC,EACtE,CAEA,MAAO,CACHR,aACAF,oBACH,ECldQmC,GAAoBA,CAC7BlgD,EACAqU,EACA8F,KAEA,MAAM,UACFgmC,GAAY,EAAI,eAChBxoC,GAAiB,EAAI,eACrByoC,EAAiB,YACX,OAANjmC,QAAM,IAANA,IAAU,CAAC,EACTkmC,EAAsB,OAAJrgD,QAAI,IAAJA,IAAQ,GAGhC,IAAIsgD,EAAiB,GACjBC,EAA2B,QAAXlsC,EACdpE,GACAC,GACN,IAAK,MAAMkkC,KAAUiM,EAAiB,CAAC,IAADG,EAClCF,GAAuC,QAAzBE,EAAID,EAAcnM,UAAO,IAAAoM,IAAIpM,CAC/C,CAIA,MAAMqM,EAAmBH,EAuBnBI,GApByBP,EACzBM,EACGz7B,QAAQ,8BAA+B,GAAG/S,OAAiBC,MAC9DuuC,GAIDz7B,QAAQ,uBAAwB,YAChCA,QAAQ,KAAM,UACdA,QAAQ1S,GAA4B,YACpC0S,QAAQ,KAAM,UACdA,QAAQ,MAAO,UACfA,QAAQ,WAAO,UAEfA,QAAQ,kCAAwB27B,IAC7B,MAAMC,EAA4BzwC,GAAmBwwC,GAErD,OAAgC,OAAzBC,QAAyB,IAAzBA,IAA6BD,CAAC,IAKxCz3B,WAAW,IAAIxX,OpCvFW,gBoCuFiB,MAAMivC,GAAKA,EAAEz3B,WAAW,KAAM/W,IAAuB+W,WAAW,KAAM9W,MAEjH8W,WAAW,IAAIxX,OpCnDO,YoCmDiB,MAAMivC,GAAK,GAAG5uC,KAAe4uC,IAAI3uC,OAiBvE6uC,GAdsC,QAAXxsC,IAAuC,IAAnBsD,EAC/C+oC,EACAA,EACGx3B,WAAW,IAAIxX,OAAOiB,GAAoB,MAAMguC,IAAM,IAADG,EAClD,MAAMC,EAAsD,QAAvCD,EAAG54C,EAAkBy4C,GAAGP,UAAe,IAAAU,IAAI54C,EAAkBy4C,GAAG54C,SAErF,MAAO,GAAGgK,KAAegvC,IAAkB/uC,IAAe,KASjEkX,WAAW,IAAIxX,OAAOE,GAAmB,MAAM+uC,GAAK,GAAG5uC,KAAe4uC,IAAI3uC,OAC1EkX,WAAW,IAAIxX,OpCpEc,4GoCoEiB,MAAMivC,GAAK,GAAG5uC,KAAe4uC,IAAI3uC,OAC/EkX,WAAW,IAAIxX,OAAOuB,GAA0B,MAAM0tC,GAAK,GAAG5uC,KAAe4uC,IAAI3uC,OACjFkX,WAAW,IAAIxX,OpCrEQ,+CoCqEiB,MAAMivC,GAAK,GAAG5uC,KAAe4uC,IAAI3uC,OACzEkX,WAAW,IAAIxX,OpCrES,yBoCqEiB,MAAMivC,GAAK,GAAG5uC,KAAe4uC,IAAI3uC,OAQ/E,IAAIgvC,EAA8B,GAC9BC,EAAe,EACnB,IAAK,MAAM7M,KAAUyM,EACbzM,IAAWriC,IACU,IAAjBkvC,GAAoBD,EAA4B3D,KAAKjJ,GACzD6M,GAAgB,GACT7M,IAAWpiC,IAClBivC,GAAgB,EACK,IAAjBA,GAAoBD,EAA4B3D,KAAKjJ,IACtD4M,EAA4B3D,KAAKjJ,GAW5C,OARsB4M,EAA4B9vC,KAAK,IAClDgY,WAAW,GAAGhX,KAAgBF,KAAiB,GAAGA,KAAgBE,MAClEgX,WAAW,GAAGnX,KAAeE,KAAgB,GAAGA,KAAeF,MAC/DmX,WAAW,GAAG/W,KAAwBH,KAAiB,GAAGA,KAAgBG,MAC1E+W,WAAW,GAAGnX,KAAeK,KAAuB,GAAGA,KAAsBL,MAC7EmX,WAAW,GAAGjX,KAAeC,KAAiB,IAC9CgX,WAAW,GAAGnX,KAAeC,KAAiB,GAE/B,ECxIXkvC,GAA6BriC,IAUnC,IAVoC,OACvCxK,EAAM,UACN8sC,EAAS,aACTC,EAAY,aACZC,GAMHxiC,EACG,MAAMyiC,EAAgB,CAACjtC,EAAQgtC,EAAe,OAAS,GAAID,EAAe,OAAS,IAC9EjvB,QAAOtf,GAAmB,KAAVA,IAAc3B,KAAK,KAClCqwC,EAAc,CAACltC,EAAQgtC,EAAe,OAAS,GAAID,EAAe,OAAS,IAC5EjvB,QAAOtf,GAAmB,KAAVA,IAAc3B,KAAK,KAExC,IAAIvF,EAAWX,EAAeu2C,GAK9B,OAJIJ,GAAwB,QAAX9sC,GAAoBtJ,EAAew2C,KAChD51C,EAAWZ,EAAew2C,IAGvB,CACHA,cACA51C,WACA61C,SAAUz6C,EAAqBu6C,GAClC,EAGQG,GAAa5iB,IA6BnB,IAAD6iB,EAAA,IA7BqB,IACvBtiC,EAAG,QACHuiC,EAAO,SACPC,GAAW,EAAK,SAEhBj2C,EAAWX,EAAe3D,IAAG,UAC7Bw6C,EAAS,SACTL,EAAWz6C,EAAqB,YAAW,iBAC3C6P,EAAmB,SAAQ,OAC3BvC,EAAM,eACNsD,EAAc,OACdwC,GAkBH0kB,EACG,MAAM,iBACFijB,EAAgB,wBAChBC,EAAuB,YACvB7W,EAAc,GACR,OAAN/wB,QAAM,IAANA,IAAU,CAAC,EACf,IAAI6nC,EAAkC,OAAhBF,QAAgB,IAAhBA,IAAoB,EAC1C,IAAK1iC,IAAQuiC,EAAS,OAAOK,EAE7B,MAAMC,EAAoB/B,GAAkByB,EAAQ/f,OAAQvtB,EAAQ,CAAEsD,oBAChE,WACFuqC,EAAU,sBACVC,EAAqB,aACrBC,GDlEmB,SAACrrC,GAAsC,IAADsrC,EAAA,IAArBT,EAAQxmC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC5C8mC,EAAanrC,EAEbqrC,EAAe,GACnB,MAAME,EAAiB,IAAI5wC,OAAO,KAAKO,QAAkBC,QAAmBA,WAC5E,IAAIqwC,EACA/nC,EACJ,EAAG,CAAC,IAADgoC,EAAAC,EACCF,EAAqD,QAAlCC,EAAGF,EAAeI,KAAKR,UAAW,IAAAM,OAAA,EAA/BA,EAAkC,GACxDhoC,EAA0C,QAAlCioC,EAAGH,EAAeI,KAAKR,UAAW,IAAAO,OAAA,EAA/BA,EAAkC,GAEzCjoC,GAAY+nC,IACZH,EAAa/E,KAAK7iC,GAClB0nC,EAAaA,EAAWl9B,QAAQu9B,EAAqB,IAE7D,OAASA,GAAuB/nC,GAEhC,IAAI2nC,EAAwB,GAC5B,MACMQ,EAAgE,QAApCN,EADL,IAAI3wC,OAAOe,GAAyB,KACPiwC,KAAK3rC,UAAO,IAAAsrC,OAAA,EAAjCA,EAAoC,GAMzE,OALIM,GAAgCf,GAChCO,EAAwBQ,EAA6B/gB,OACrDsgB,EAAaA,EAAWl9B,QAAQ29B,EAA8B,KAC3DR,EAAwB,GAExB,CACHC,eACAF,aACAC,wBAER,CCqCQS,CAAYX,EAAmBL,GAE7BlF,GAA0C,QAApBgF,EAACU,EAAa/mC,cAAM,IAAAqmC,IAAI,IAAMS,EAAsB9mC,OAAS,EAAI,EAAI,GAC3FohC,EAAgByF,EAAaA,EAAWv9B,MAAM,MAAQ,IAEtD,KAAEtgB,EAAI,SAAEsG,GAAakqB,GAAclpB,EAAUu/B,GAGnD,KAAO8W,EAAkBr3C,EAAS0Q,QAAU2mC,GAAmB,GAAG,CAAC,IAADa,EAAAC,EAAAC,EAC9D,MAAMC,EAA0D,QAAX3uC,EAC/C0tC,GAA2BC,EAAkBD,EACzC52C,EAA6B,QACQ,QADP03C,EAC9B13C,EAAoByL,UAAiB,IAAAisC,IAAI13C,EAA4B,OACzE,CACE,EAAK,IACL,EAAK,IACL,EAAK,KAEPypB,EAAejqB,EAASq3C,IACxB,SACF/4C,EAAQ,WACRC,EAAU,UACVC,GACAyrB,GACE,SACF1tB,EACAF,UAAWi8C,EACXh8C,aAAci8C,GACd3uB,GAA6C,QAA1BuuB,EAACtB,EAASQ,UAAgB,IAAAc,IAAItB,EAASA,EAASnmC,OAAS,GAAI6vB,GAC9ElsC,EAAS4iD,GAAuB,QAAXvtC,EAAoB4uC,EAAiB,EAAI/X,EAAc+X,EAE5EnI,EAActpB,KACpBpS,EAAI/a,KAAOy2C,EACNxoB,UAA6B,IAC7B3W,QAAQ1S,GACR2pB,UAAUvuB,GACV6tB,UACL9S,EAAIixB,UAAY,OAChB,MAAMkK,EAAW,CACb5uC,SAAUkpB,GAAclpB,EAAUu/B,GAClC6P,UAAWiH,EACXlH,eAGJ,IAAIqI,EAAkF,GAGtF,MAAM7yB,EAAkBH,IACpBK,IACI,MAAM,gBAAEmsB,EAAe,iBAAEC,GAAqBJ,GAAe,CACzDp9B,MACAoR,SACAisB,gBACAC,sBACAroC,SAAQkmC,WACRv7C,QACAksC,gBAIJ,OAFAiY,EAAoBxG,IAEhBC,EAAmBzzC,EACZ,GAEf,KAKEi6C,EAAarR,GAAa,CAAE3yB,SAAQyiC,EAAW3W,gBAErD,KACK5a,GAFgE,QAAlDyyB,EAAGC,EAAqB,GAAGvG,EAAcphC,iBAAS,IAAA0nC,IAAIC,EAAqB,KAGtFhB,EAAkBr3C,EAAS0Q,OAAS,GAGrC,CACH01B,GAAY3xB,GAEZ,IAAInY,EAAei8C,EAAoBh6C,EAoDvC,GA3BA,IAvB8Bk5C,EAAaxvC,KAAImpC,IACpC,CACHA,OACAE,QAAQ,EACR3rB,gBAAiBH,IACbK,IACI,MAAM,iBAAEosB,GAAqBJ,GAAe,CACxCp9B,MACAoR,SACAisB,cAAe,CAACV,GAChB1nC,SAAQkmC,WACRv7C,QACAksC,gBAGJ,QAAI0R,EAAmB,EACZ,WASpBuG,GACLv9B,SAAQmZ,IAIH,IAJI,KACPgd,EAAI,OACJE,EAAM,gBACN3rB,GACHyO,EACG,MAAM8Q,EAASvf,EAAkB,KAC3B,UAAE4rB,EAAS,WAAEK,GAAeT,GAAY,CAAE18B,MAAK28B,OAAMlM,SAAQx7B,SAAQ4nC,SAAQ1B,WAAUv7C,QAAOksC,gBAEpG9rB,EAAIzG,MAAMk3B,EA5GP,GA6GHiO,GAAS,CACL1+B,MACA88B,YACArM,SAAQ+H,OAhHT,EAiHC1wC,WAAUD,eACVs1C,aACAhC,WACAlmC,SACA62B,gBAEJjkC,GAAgBiC,EAChBkW,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,IAIlCkK,EAAsB9mC,OAAS,EAAG,CAClC,MAAMgoC,EAAiBxuB,GAAc7pB,EAAe3D,IAAK6jC,GACnDoY,EAAqBD,EAAe14C,SAASq3C,IAC7C,SACF/4C,EAAQ,WACRC,GACAo6C,EACEC,EAAwB/xB,KAC9BpS,EAAI/a,KAAOk/C,EACN5nC,QAAQ1S,GACR2pB,UAAUywB,EAAeh/C,MACzB6tB,UACL,MAAMsxB,EAAiB,CACnB73C,SAAU03C,EACVtI,UAAWiH,EACXlH,YAAayI,GAiBX1T,EAf0B1f,IAC5BK,IACI,MAAM,iBAAEosB,GAAqBJ,GAAe,CACxCp9B,MACAoR,SACAisB,cAAe,CAAC0F,GAChB9tC,SAAQkmC,SAAUiJ,EAClBxkD,QACAksC,gBAGJ,QAAI0R,EAAmB,EACZ,IAGsB,IAEzCx9B,EAAIzG,MAAMk3B,EA9JP,GA+JH,MAAMqM,EAAY7F,GAAa8L,GAO/BrE,GAAS,CACL1+B,MACA88B,YACArM,SAAQ+H,OAzKT,EA0KC1wC,WAAUD,eACVszC,SAAUiJ,EACVnvC,SACA62B,gBAEJjkC,GAAgBiC,EAChBkW,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACpC,CACA,KACJ,CA/GI+J,GAAmB,EAgHvBoB,GACJ,CAEA,OAAOpB,CAAe,GC/QtBhjD,MAAOwwC,IACPzwC,GCOAC,MAAOykD,GACPxkD,OAAQykD,GAAU,uBAClBvkD,GAAsB,wBACtBE,GAAuB,wBACvBC,GAAuB,gBACvBK,GAAe,eACfD,GAAc,gBACdD,GAAe,eACfD,IACAT,EAES4kD,GAAwB9kC,IA8C9B,IA9C+B,OAClCpE,EAAM,cACNmpC,EAAa,iBACbC,EAAgB,YAChB3Y,EAAW,OACX72B,EAAM,cACNyB,EAAa,MACbhX,EAAK,YAAEglD,EAAW,eAClBliD,EAAc,SACduT,EAAQ,UACRF,EAAS,KACTG,EAAI,KACJT,EAAI,aACJovC,EAAY,QACZpiD,EAAO,OACP0U,EAAM,aAAE2tC,EAAY,MAAEC,EAAK,WAC3BviD,EAAU,WACVwiD,EAAU,cACVC,GA4BHtlC,EACG,MAAMO,EAAM3E,EAAO4E,WAAW,OAE1Blf,UAAWikD,EAAa,WACxBhkD,EACAN,KAAMukD,EACNpkD,KAAMqkD,EACNvkD,SAAUwkD,EACVvkD,KAAMwkD,EAAW,UACjBnkD,GACAsB,GACE,KACFhB,EAAI,KACJC,EAAI,WACJJ,EAAU,WACVC,EAAU,SACVC,GACAe,EAAuBC,EAAYC,GACjCxB,EAAYkkD,EAAc,GAAWD,EAErCK,EAAa,IAGbC,EAAmB,WAAT/vC,EACVgwC,EAAkBV,GAASD,EAC3BllD,EACA,SACA8lD,EAAiBD,EACjBE,GAAkBxkD,GAAaF,EAE/B2kD,EAAY,CAOdC,mCACIC,EACAC,GAGD,IAFCC,EAAgB9pC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACnB+pC,EAAqC/pC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAErC,MAAM8pC,EAAiC,OAAbH,QAAa,IAAbA,IAAiBtjD,GAEvC7B,KAAMulD,GACND,GACE,KACFzkD,EAAI,KACJC,EAAI,SACJF,GACAe,EAAuBC,EAAY0jD,EAAmBD,IAClDnmD,MAAOsmD,EAAYrmD,OAAQsmD,GAAgBP,EAC7CQ,EAAmB9kD,EAAW4kD,EAC9BG,EAAgBJ,EAAc,KAC7B/lD,GAA0BqB,GAAQ6kD,EACnC,EACAE,EAAqBD,EAAgBD,EACrCG,EAAgBN,EAAc,KAC7BlmD,GAAyByB,GAAQ4kD,EAClC,EACAI,EAAqBD,EAAgBH,EACrCK,EAAeR,EAAc,IAC7BE,EAAelmD,GAA0BmmD,EACzC,EAON,MAAO,CACHA,mBACAC,gBACAE,gBACAD,qBACAE,qBACAC,eACAC,aAZiBnlD,EAAO+kD,EAaxBK,aAZiBnlD,EAAOglD,EAaxBI,iBAZqBtlD,EAAgC,EAArBglD,EAahCO,kBAZsBvlD,GAAY4kD,EAAaC,GAAeL,EAAmBW,EAAeL,EAcxG,EAGAU,UAAWrqB,UACP,GAAKzc,EAAL,CAOA,GALAA,EAAIuyB,YAAc0S,EAAc,IAChCjlC,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,eAAetgB,QAAa,EAAG,SAC9CszC,GAAUhzB,EAAK,iCAAiC0kC,QAAmB,EAAG,GAC5E1kC,EAAI+mC,iBACArwC,GAAiB+tC,GAAuC,UAAnBjiD,EAA4B,CACjE,MAAQ5C,MAAOonD,EAAiBnnD,OAAQonD,GAAqBxC,EACvDpX,EAAeoX,EAAiBnX,YAEhCE,EAAkC,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcptB,WAAW,MACjDotB,GAAgBG,IAEhBH,EAAaztC,MAAQykD,GAAYvY,EACjCuB,EAAaxtC,OAASykD,GAAaxY,EACnC0B,EAAoBvrB,UAChBwiC,EACA,EAAG,EAAGuC,EAAiBC,EACvB,EAAG,EAAG5C,GAAYvY,EAAawY,GAAaxY,GAGhD0B,EAAoBoE,UAChB9F,EAAc5qC,EAA2BC,OAAOI,KAChDuqC,EAAc5qC,EAA2BC,OAAOK,KAChDsqC,EAAc5qC,EAA2BC,OAAOG,SAChDwqC,EAAc5qC,EAA2BC,OAAOG,SAAWJ,EAA2BC,OAAOW,UAGjG0rC,EAAoBoE,UAChB9F,EAAczrC,GACdyrC,EAAc1rC,GACd0rC,EAAcxrC,GACdwrC,EAAcvrC,IAElByf,EAAIiC,UACAorB,EACA,EAAG,EACHvB,EAAcuY,GAAWvY,EAAcwY,GACvC,EAAG,EACHxY,EAAcuY,GAAWvY,EAAcwY,IAGnD,CACAtkC,EAAIuyB,YAAc,CA5CF,CA4CG,EAGvB2U,YAAaA,KACT,IAAK1C,IAAkBxkC,EAAK,OAC5B,MAAQpgB,MAAOsmD,EAAYrmD,OAAQsmD,GAAgB3B,EAE/C2B,GAAe,GACnBnmC,EAAIiC,UACAuiC,EACA,EAAG,EACH0B,EAAYC,EACZra,EAAcvqC,EAAMuqC,EAActqC,EAClCsqC,EAAcxqC,EAAUwqC,EAAcxqC,GAAY4kD,EAAaC,GAClE,EAELgB,eACIC,IAEA,IAAK3C,IAAqBzkC,IAAQtJ,EAAe,OACjD,MAAQ9W,MAAOonD,EAAiBnnD,OAAQonD,GAAqBxC,EAE7D,GAAIwC,GAAoB,EAAG,OAC3B,GAAiB,aAAbG,GAA8C,UAAnB5kD,EAA4B,CACvD,IAAI6kD,EAAqB3B,EAAUC,mCAAmClB,GAE/C,SAAnBjiD,EACA6kD,EAAqB3B,EAAUC,mCAC3BlB,EACA,IAAKliD,EAAS7B,KAAM,QACpBwb,EACA,QAEsB,QAAnB1Z,IACP6kD,EAAqB3B,EAAUC,mCAC3BlB,EACAliD,OACA2Z,EACA,QAIR,MACImqC,cAAeiB,EAAyBf,cAAegB,EACvDd,aAAce,EACdd,aAAce,EAAwBd,aAAce,EACpDd,iBAAkBe,EAA4Bd,kBAAmBe,GACjEP,EAQJ,YAPArnC,EAAIiC,UACAwiC,EACA6C,EAAyBC,EACzBP,EAA4C,EAA1BM,EAA6BL,EAAmBO,EAClE1b,EAAc2b,EAAwB3b,EAAc4b,EACpD5b,EAAc6b,EAA4B7b,EAAc8b,EAGhE,CAEA,MAAM,KACFrmD,EAAI,KACJC,EAAI,SACJF,GACAe,EACAC,EACA,IAAKC,EAAStB,WAAW,GACzBuB,GAEJwd,EAAIiC,UACAwiC,EACA,EAAG,EACHuC,EAAiBC,EACjBnb,EAAcvqC,EAAMuqC,EAActqC,EAClCsqC,EAAcxqC,EAAUwqC,EAAcxqC,GAAY0lD,EAAkBC,GACvE,EAELY,cAAeprB,UACNzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GACFhzB,EACA,kBAAkB/K,KAAUY,EAAU0oB,oBACtC,IAAK,IAETve,EAAI+mC,iBAAgB,EAExBe,SAAUrrB,UAAyF,IAAlF,MAAEhjB,EAAK,cAAExD,GAAmEwpB,EACzF,MAAMsoB,EAAkC,SAAbhyC,EAAsBiP,GAAqBtlB,GAASqW,EAE1EiK,IACLA,EAAIzG,MAAMuyB,EAAaA,QD1RJrP,WAkBxB,IAlB+B,IAClCzc,EAAG,YACH8rB,EAAW,SACX/1B,EAAQ,KACRnV,EAAI,KACJoV,EAAI,cACJC,EAAgB,OAAM,MACtBwD,EAAK,WACLuuC,GAUHvoC,EAGOwoC,EAAsC,kBAATjyC,EAClB,KAATA,EAAc,EAAI,EACF,kBAATA,EAAoBA,EAAO,EACpColC,EALc,GAKW6M,EAJR,GAI8CA,EAAsB,GAGrF5N,EAAY,QACZ,CAAC,OAAQ,kBAAkBl1B,SAASpP,KAAWskC,EAAY,QAC/DA,EAA8B,SAAlBpkC,EACNokC,EACApkC,EACFgyC,EAAsB,KAAI5N,EAAY,UAEtCz5C,GAAsB,WAAdy5C,IACR4N,EAAsB,EACtB7M,EAAa,GAIjB,MAAM8M,EAAyB,WAAd7N,GACVjK,GAAcgL,GAAc,EACf,SAAdf,EACI,QAAUe,EACV,QAEV,IAAItnB,GAAS,GAEb,GAAI9T,GAAOpf,GAAqB,OAAbmV,EAAmB,CAClC,MAAMlM,EAAW,GACXs+C,EAAcxV,GAAa,CAAE3yB,SAAQvG,EAAOqyB,gBAClD9rB,EAAIixB,UAA0B,SAAdoJ,GAAsC,UAAdA,EAClCA,EACA,OACNr6B,EAAI/a,KAAO,QAAQ4E,sBACnB,MAAMiqB,EAAuB,WAAdumB,EACTr6B,EAAIuxB,YAAY3wC,GAAMhB,OAAS,EACjB,SAAdy6C,EArCW,GAuCP,GACVr6B,EAAIqxB,SAASzwC,EAAMsnD,EAAWp0B,EAnCjB,IAmC+C,GAAXjqB,GACjDmW,EAAIixB,UAAY,OAChBkX,GACJ,CAEA,aAAanW,QAAQoW,IAAI,IAAIzhC,MAAMshC,IAC9Bz0C,KAAIipB,UACD3I,GAAWu0B,GACX,IAAI/yB,EAA+B,CAC/B4yB,GAlDM,GAkDkBp0B,GA5CnB,KAgDT,aADMkf,GAAUhzB,EAAK,uBAAuBjK,WAAmBuf,SAClD0yB,EAAW1yB,EAAW,IAE1C,ECgNagzB,CAAgB,CAClBtoC,MACAjK,SAAUgyC,EACVnnD,KAAsB,kBAAToV,EAAoBA,EAAO,KACxCA,OACAC,gBACAwD,QACAqyB,cACAkc,WAAYvrB,SACsB,OAAvBsrB,EACD/V,QAAQC,gBACF6S,EACJ9kC,EACA,QACAyc,SAAcuW,GAAUhzB,EAAK,iBAAiBje,gBAAoBuzB,OAIlFtV,EAAI+mC,iBAAgB,EAExBwB,sBAAuB9rB,UACdzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,iCAAiC2kC,QAAoB,EAAG,KAC7E3kC,EAAI+mC,iBAAgB,EAGxByB,iBAAkB/rB,UACTzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkG,QAAQoW,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxC50C,KAAIipB,UACD,MAAM,KAAEvqB,EAAI,IAAED,EAAG,OAAEpS,EAAM,MAAED,GAAUoS,GAAkByB,EAAQ,GACzDg1C,EAAWzxC,EAAQmO,SAAS,GAAG1R,KAC/Bi1C,EAAW,sBAAsBj1C,IACjCk1C,EAAa,oBAAoBl1C,IACjC6hB,EAAa,CAACpjB,EAAMD,EAAKrS,EAAOC,GAItC,aAFMi0C,GAAkB9zB,EAAK,GAAG0oC,SAAgBznD,EAAY,QAAU,YAAaq0B,SAC7Ewe,GAAkB9zB,EAAK,GAAG0oC,gBAAwBpzB,GACpDmzB,SACM3U,GAAkB9zB,EAAK,GAAG2oC,gBAA0BrzB,GACnDwe,GAAkB9zB,EAAK,GAAG2oC,gBAA0BrzB,SACxD,MAGftV,EAAI+mC,iBAAgB,EAExB6B,eAAgBnsB,UACPzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBwI,GACFj5B,EACA,8BACA,EAAG,KACH,IAAK,GACLywB,EACAryB,GAEJuG,EAAI+mC,iBAAgB,EAKxB8B,mBAAoBpsB,UACXzc,IAELA,EAAIzG,MAAMuyB,EAAaA,GACvB9rB,EAAIuyB,YAAc2S,EAAc,UAC1BlS,GAAUhzB,EAAK,8BAA8BtgB,QAAa,EAAG,GACnEsgB,EAAIuyB,YAAc,EAClBvyB,EAAI+mC,iBAAgB,EAGxB+B,qBAAsBrsB,iBAAiC,IAA1BssB,EAAY/sC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChCgE,IAELA,EAAIzG,MAAMuyB,EAAaA,GACvB9rB,EAAIuyB,YAAc6S,EAAc,UAC1BpS,GACFhzB,EACA,8BAA8B0kC,QAzR2BsE,GAAxC3D,KA4RjB0D,IACA/oC,EAAIuyB,YAAc4S,EAAkB,UAC9BnS,GAAUhzB,EAAK,kCAAkC0kC,QAAmB,GAAI,MAElF1kC,EAAIuyB,YAAc,EAClBvyB,EAAI+mC,iBACR,EAIAkC,gBAAiBxsB,UACRzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,sBAAsBulC,QAAuB,EAAG,GACrEvlC,EAAI+mC,iBACE,EAEVmC,eAAgBzsB,UACRz7B,GAAcgf,GACdA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,qBAAqBwlC,QAAsB,EAAG,GACnExlC,EAAI+mC,kBAEJ/U,QAAQC,SAEN,EAEVkX,cAAe1sB,UACX,GAAI17B,GAAaif,EAAK,CAClB,IAAIopC,EAAiB,GAEjBA,EADAvE,GAASD,EACQ,oBAAoBllD,QAC9BuX,GAAU,CAAC,OAAQ,QAAS,OAAQ,UAAUkO,SAASzlB,GAC7C,+BAEA,uBAErBsgB,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAKopC,EApUF,GAAf,KAqUJppC,EAAI+mC,gBACR,GAEJsC,mBAAoB5sB,MAAO17B,EAAoBuoD,KACtCtpC,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GACFhzB,EACA,kCAAkC2kC,KAC5B2E,KACHvoD,EAAY,GAAK,YAClB,OACF,GAAI,KAERif,EAAI+mC,iBAAgB,EAKxBwC,iBAAkB9sB,UACTzc,IACLA,EAAIzG,MAAMuyB,EAAaA,GAClBwZ,GAA2B,gBAAhBZ,QAGN1R,GAAUhzB,EAAK,0BA7VI,GA6VmCqlC,SAFtDrS,GAAUhzB,EAAK,sCA3VI,GA2V+CqlC,GAI5ErlC,EAAI+mC,iBAAgB,EAExByC,eAAgB/sB,UACPzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,oBAAoBslC,EAAU,IAAI/vC,IAAS,SAAU,EAAG,GAC7EyK,EAAI+mC,iBAAgB,EAKxB0C,kBAAmBhtB,UACVzc,IACLA,EAAIzG,MAAMuyB,EAAaA,GACnB/qC,SAAiBiyC,GAAUhzB,EAAK,oBAAoBzK,QA9WjC,GAAf,KA+WRyK,EAAI+mC,iBAAgB,EAExB2C,qBAAsBjtB,UACbzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,uBAAuBzK,QAnXf,GAmXuC8vC,GACpErlC,EAAI+mC,iBAAgB,EAExB4C,gBAAiBltB,iBAAmC,IAA5BmtB,EAAU5tC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGjb,EAC5Bif,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,2BAA2BzK,IAAOq0C,EAAa,GAAK,iBAAkB,EAAG,KAC9F5pC,EAAI+mC,iBACR,EAIA8C,eAAgBptB,WACP17B,GAAaC,IAAegf,IAC7BA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EACF9kC,EACA,QACAyc,SACWuW,GAAUhzB,EAAK,iBAAiBje,aAAiB,EAAG,KAGnEie,EAAI+mC,iBACR,EAEJ+C,oBAAqBrtB,UACb5mB,IAAcnT,GAAgBsd,IAC9BA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EAAW9kC,EAAK,aAAayc,SAAcuW,GAAUhzB,EAAK,iBAAiBje,kBAAsB,IAAK,MAC5Gie,EAAI+mC,iBACR,EAEJgD,cAAettB,UACPgpB,GAAkBzlC,IAClBA,EAAIzG,MAAMuyB,EAAaA,SACjBiZ,EACF/kC,EACA,OACAyc,eAA0BuW,GACtBhzB,EACA,qBAAqBkyB,IAAa5vC,EAAa,aAAaqiD,IAAiB,SAC7EvjD,EAAYC,KAGpB2e,EAAI+mC,iBACR,EASJiD,qBAAsBvtB,UACbzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EACF9kC,EACA,eACAyc,SACWuW,GACHhzB,EAEE,iBAAIje,MACA0jD,EAAiB,MAAQ,SAC7B,YACCnjD,EAAa,aAAaqiD,IAAiB,IAC5C,OACFvjD,EAAYC,KAIxB2e,EAAI+mC,iBAAgB,EAExBkD,oBAAqBxtB,UACb17B,GAAaif,IACbA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EACF9kC,EACA,cACAyc,SAAoBuW,GAAUhzB,EAAK,iBAAiBkyB,mBAA6B,EAAG,KAExFlyB,EAAI+mC,iBACR,EAEJmD,4BAA6BztB,UACpBzc,IACLA,EAAIzG,MAAMuyB,EAAaA,GACnB/qC,SAAiB+jD,EACjB9kC,EACA,uBACAkyB,GAAcc,GAAUhzB,EAAK,iBAAiBkyB,yBAAkCyS,QAAoB,EAAG,KAE3G3kC,EAAI+mC,iBAAgB,EAExBoD,yBAA0B1tB,UACjBzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EACF9kC,EACA,mBACAyc,SAAoBuW,GAAUhzB,EAAK,iBAAiBkyB,qBAA8ByS,QAAoB,EAAG,KAE7G3kC,EAAI+mC,iBAAgB,EAExBqD,gBAAiB3tB,UACRzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EACF9kC,EACA,SACAyc,SACWuW,GAAUhzB,EAAK,iBAAiBje,UAAaO,EAAa,aAAaqiD,IAAiB,SAAU,EAAG,KAGpH3kC,EAAI+mC,iBAAgB,EAExBsD,0BAA2B5tB,UAClBzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EACF9kC,EACA,oBACAyc,SACWuW,GAAUhzB,EAAK,iBAAiBje,qBAAwBO,EAAa,aAAaqiD,IAAiB,SAAU,EAAG,KAG/H3kC,EAAI+mC,iBAAgB,EAGxBuD,kBAAmB7tB,UACVzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EAAW9kC,EAAK,WAAWyc,SAAqBuW,GAAUhzB,EAAK,iBAAiBuqC,gBAA2B,EAAG,KACpHvqC,EAAI+mC,iBAAgB,EAExByD,qBAAsB/tB,UACbzc,IACLA,EAAIzG,MAAMuyB,EAAaA,SACjBgZ,EAAW9kC,EAAK,eAAeyc,SAAcuW,GAAUhzB,EAAK,iBAAiBje,oBAAwB,EAAG,KAC9Gie,EAAI+mC,iBAAgB,GAI5B,OAAOrB,CAAS,EC1gBP+E,GAAWhuB,MACpBphB,EACA2E,EACA1gB,EACAorD,EACAC,EACAC,EACAnxC,EACAsB,KASA,MAAM,aAAE6pC,EAAY,OAAE3vC,EAAM,UAAEq4B,EAAS,MAAE5tC,EAAK,eAAE6Y,EAAc,YAAEuzB,GAAgB/wB,EAC1Ew1B,EAAOma,EAAQ5e,EACfjkC,EAAe8iD,EAAgB7e,EAC/BlsC,EAAQgrD,EAAS9e,EACjB+e,EAAoB,OAATvd,QAAS,IAATA,OAAS,EAATA,EAAWrtB,WAAW,MACvC,GAAID,GAAO6qC,GAAYvrD,EAAO,CAAC,IAADwrD,EAAAC,EAAAC,EAC1B,MAAM,YACFxkD,EAAW,UACXC,EAAS,UACT9B,EAAS,KACTM,EAAI,cACJI,EAAa,cACbC,EAAa,UACbiB,EAAS,YACTrC,EACAC,WAAY8mD,EAAiB,UAC7B7mD,EAAS,kBACTwR,EAAiB,UACjB7Q,EAAS,YACTG,EAAW,YACXgB,EAAW,UACXpB,EAAS,WACTiB,EAAU,YACVH,EAAW,cACXE,EAAa,cACbD,EAAa,QACbxB,GACA,CnDhIRY,KAAM,UACNN,UAAW,UACXiR,kBAAmB,UACnBhQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXF,WAAW,EACX7B,OAAQ,UACRL,QAAS,UmD4G8BoV,IAC7B,aAAE3S,EAAcC,UAAWmkD,GAA8C,QAA5BJ,EAAGlkD,EAAkB,OAAPvC,QAAO,IAAPA,IAAW,WAAG,IAAAymD,IAAI,CAAC,EAC9E3mD,EAAa8mD,EAEnBjrC,EAAIixB,UAAY,OAChB,IAAIka,EAAcA,OACdF,IACAE,EAAcxY,GAAa,CACvB3yB,MACAlb,YACAC,YACA+mC,cACA+G,YAAY,KAGpB,MAAMtmC,EAAWkpB,GAAc,KAC8B,QAAtDs1B,EAAC1+C,EAAgBpH,UAAqC,IAAA8lD,IAAI1+C,EAAgBC,SAASC,SACtFqJ,qBACDk2B,GACGsf,EAAah5B,GAAiB,CAChCK,cAAelmB,EAAStH,KACxButB,YAAajmB,EAAShB,SAAS,GAAG1B,SAClCyoB,cAAe/lB,EAAS4D,SAEtBgrC,EAAW,CACbQ,UAAW,EACXpvC,WACAmvC,YAAa0P,GAEXC,EAAsBvK,GACxBxhD,EACA2V,EACA,CAAE8rC,WAAW,EAAOxoC,iBAAgByoC,eAAgB,iBAIlDsK,EAA4B,QAAXr2C,EACjB,CAACo2C,GACDA,EAAoB9lC,MAAM,IAAIjT,OAAO,wEAA+B,MACpEi5C,EAAgCn5B,GAAiB,CACnDK,cAAelmB,EAAStH,KACxButB,YAAajmB,EAAShB,SAAS,GAAG1B,SAClCyoB,cAAe/lB,EAAS4D,SAEtBq7C,EAAcD,EAA8Bz4B,UAC5C24B,EAAcF,EACfhvC,SAAQtT,GAAOA,EAAMsD,EAASnB,kBAC9BgoB,SAAS,cACTI,UAAUjnB,EAASpB,YACnB2nB,UACL,IAAI44B,EAAY,EACZC,EAAa,EACjBL,EAAe9kC,SAAQ,CAACvd,EAAK+qB,KACzBhU,EAAI/a,KAAO+uB,EAAQ,IAAM,EAAIw3B,EAAcC,EAE3C,MAAMG,EAAa5rC,EAAIuxB,YAAYtoC,EAAI6gB,WAAW7W,GAAoB,KACtEy4C,EAAY9sC,KAAK4F,IAAIknC,EAAWE,EAAW7U,yBAC3C4U,EAAa/sC,KAAK4F,IAAImnC,EAAYC,EAAW9U,yBAAyB,GACvE,GAEH92B,EAAI/a,KAAOumD,EAEX,IAAItN,GAAkB,EACtB,MAgBMzN,GAhB0B1f,IAC5BK,IACI,MAAM,iBAAEosB,EAAgB,gBAAED,GAAoBH,GAAe,CACzDp9B,MACAoR,SACAisB,cAAe,CAACgO,GAChBp2C,SAAQkmC,WACRv7C,QACAksC,gBAGJ,QAAI0R,EAAmB,KACvBU,GAAkBX,EAAgB,GAAGW,iBAC9B,EAAI,IAGsB,IACnC1F,GAAS,EAEfx4B,EAAIzG,MAAMk3B,GAAQ+H,IAElB,MAAMnB,GAA4B9hB,GAAkB7rB,EAAqBoiC,GACnExhC,GAAsC,QAA/B0gD,EAAGz+C,EAAShB,SAAS,GAAGjB,eAAO,IAAA0gD,IAAI3T,GAA0B/sC,QACpEwyC,GAAY7F,GAAaoU,GACzBQ,GAAW3N,GAAkB,GAAKh6C,EAzMxB4nD,EACpB9rC,EACA+rC,EACAC,EACAzb,EACA0b,EACAzb,EACAkb,EACAC,KAKA,MAAMO,EAAUH,EAAgB,IAC1BI,EAAc,GAAGvtC,KAAKuC,MAAM+qC,EAAU,MACtCE,EAAMF,EAAU,GAEhBG,EAAeX,EAAYC,EAK3BhpC,EAAK4tB,EANS0b,EAMY,EAC1BrpC,EAAK4tB,GAAYmb,EAAaD,GAAa,EAEjD,IAAI9rD,EATgBqsD,EASKpsD,EAASwsD,EACd,MAAhBF,GAAuC,MAAhBA,IAAuBvsD,EAAQysD,EAAcxsD,EAVpDosD,GAiBpB,MAAMK,EAAK1tC,KAAK2B,KAAK3gB,GAAS,EAAI,EAAIC,GAAU,EAAI,GACpD,GAAIysD,EAAK,EAAG,CACR,MAEMC,EAAM,IAF8B,IAA9B3tC,KAAK4tC,KAAM5sD,EAAQ,EAAK0sD,GAAY1tC,KAAKM,GACnCktC,GAEZK,EAAK7tC,KAAKS,IAAIktC,EAAM,IAAM3tC,KAAKM,IAAMotC,EACrCI,EAAK9tC,KAAKS,IAAI+sC,EAAM,IAAMxtC,KAAKM,IAAMutC,EACrCE,EAAK/tC,KAAKQ,IAAIgtC,EAAM,IAAMxtC,KAAKM,IAAMutC,EAC3C,IAAIG,EAAUF,EACVpiD,EAAUqiD,EACM,MAAhBR,IAAuBS,EAAUD,EAAIriD,GAAWoiD,GAChC,MAAhBP,IAAuBS,GAAWF,EAAIpiD,GAAWqiD,GACjC,MAAhBR,IAAuBS,GAAWD,EAAIriD,EAAUoiD,GAEpD,MAAMG,EAAOlqC,EAAKiqC,EACZE,EAAOlqC,EAAKtY,EACZyiD,EAAOpqC,EAAKiqC,EACZI,EAAOpqC,EAAKtY,EASZuhD,EAAW7rC,EAAIitC,qBAAqBJ,EAAMC,EAAMC,EAAMC,GAG5D,OAFAhB,EAAcxlC,SAAQ/G,IAAA,IAAC,MAAE5c,EAAK,OAAEixB,GAAQrU,EAAA,OAAKosC,EAASqB,aAAat6B,WAAWkB,GAASjxB,EAAM,IAEtFgpD,CACX,CACgB,EA0INC,CACE9rC,EACA3a,EACAsuB,GAAaruB,GACbirC,EACA2N,GACAr2C,EACA6jD,EAAWC,QAEbzvC,EA4DN,GAxDA8D,EAAIrb,UAAoB,OAARknD,SAAQ,IAARA,MAAYlnD,EAC5B+5C,GAAS,CACL1+B,MACA88B,aACArM,UAAQ+H,UACR1wC,SAAUyoC,EAAM1oC,eAChBszC,WACAlmC,SACA62B,cACAuK,WAAY5W,IAAkD,IAAjD,IAAEzf,EAAG,OAAEg1B,EAAM,WAAEyB,EAAU,eAAED,GAAgB/W,EACpDzf,EAAIqxB,SAAS2D,EAAQyB,EAAYD,GAAkBoO,EAAet6C,GAAU,GAAG,IAUnFxD,GAAgBwmC,IAChBttB,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhCgS,EAAStxC,MAAMuyB,EAAaA,SACtBkH,GAAU6X,EAAU,eAAenrD,QAAa,EAAG,SACnDszC,GAAU6X,EAAU,8BAA8BnrD,QAAa,EAAG,GACxEmrD,EAASvY,yBAA2B4Y,EACpCL,EAAS9D,uBACHjT,GACF+W,EAAU,eAAe/jD,QACzBypC,EAAM1oC,EAAe6jD,EACrB9rD,EACA8rD,EAAYC,GAEhB3rC,EAAIsyB,yBAA2B,YAC/BtyB,EAAIiC,UAAUqrB,EAAW,EAAG,GAC5BttB,EAAIzG,MAAMk3B,GAAQ+H,IAClBx4B,EAAIsyB,yBAA2B,cAM/BoM,GAAS,CACL1+B,MACA88B,aACArM,UAAQ+H,UACR1wC,SAAUyoC,EAAM1oC,eAChBszC,WACAlmC,SACA62B,cACAuK,WAAYA,UAKhB9vC,EAAW,CACX,MAAM4mD,EAAoB3tC,GAAY,CAClCE,YAAarE,EACb2D,WAAYxY,EACZuY,SAAUtY,EACVqZ,cAAe,GACfC,aAAc,KAElBC,EAAI4B,aAAaurC,EAAmB,EAAG,EAC3C,CAKA,IAAIhF,GAAcA,OACd/jD,IACA+jD,GAAcxV,GAAa,CACvB3yB,MACA1J,EAAGxQ,EACHyQ,EAAG1Q,EACHD,YAAaA,EACbgtC,KAAM7sC,EACN+lC,cACA+G,YAAY,IAEhB7yB,EAAIsyB,yBAA2B,mBAC/BoM,GAAS,CACL1+B,MACA88B,aACArM,UAAQ+H,UACR1wC,SAAUyoC,EAAM1oC,eAChBszC,WACAlmC,SACA62B,cACAuK,WAAY1W,IAAkD,IAAjD,IAAE3f,EAAG,OAAEg1B,EAAM,WAAEyB,EAAU,eAAED,GAAgB7W,EACpD3f,EAAIqxB,SAAS2D,EAAQyB,EAAYD,GAAkBoO,EAAet6C,GAAU,GAAG,IAGvF0V,EAAIsyB,yBAA2B,eAI/BnuC,IACA6b,EAAIsyB,yBAA2B,mBAC/BoM,GAAS,CACL1+B,MACA88B,aACArM,UAAQ+H,UACR1wC,SAAUyoC,EAAM1oC,eAChBszC,WACAlmC,SACA62B,cACAuK,WAAY5V,IAAkD,IAAjD,IAAEzgB,EAAG,OAAEg1B,EAAM,WAAEyB,EAAU,eAAED,GAAgB/V,EACpDzgB,EAAIotC,SAAW,QACfptC,EAAIsxB,WACA0D,EACAyB,EAAavxC,EACbsxC,EAAiBtwC,GAAe0+C,EAAet6C,GAAU,GAC5D,KAIb0V,EAAIsyB,yBAA2B,cAC/BtyB,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhC,MAAMwU,GnD/VqB,CAC/BpoD,KAAM,UACNN,UAAW,UACXiR,kBAAmB,UACnBhQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXF,WAAW,EACX7B,OAAQ,UACRL,QAAS,QmD2UL2b,EAAIrb,UAAY0oD,GAAiB1oD,UACjCwjD,KACAgD,IACAnrC,EAAIotC,SAAW,QACfptC,EAAIsyB,yBAA2B,aACnC,GC5VEgb,GAAkC,CACpCplD,MAAO,EACPC,OAAQ,EACRC,MAAO,GAEEmlD,GAAsB9tC,IAgB5B,IAAD+tC,EAAAC,EAAA,IAhB8B,IAChCztC,EAAG,MACH1gB,EAAK,OACL2V,EAAM,aACNvJ,EAAY,KACZgnB,EAAI,eACJna,EAAc,YACduzB,GASHrsB,EACG,MAAM,cACFpX,EAAgB,OAAM,SACtBP,EAAQ,aACRD,EACAD,UAAWhI,GACXu1B,GACwC,QADrBq4B,EACa,QADbC,EACnBzlD,EAAyBiN,UAAO,IAAAw4C,OAAA,EAAhCA,EAAmC/6B,UAAK,IAAA86B,IAAIxlD,EAA8B,IAAU,OACpF8jC,GAEE4hB,EAAqBj4B,G7CmKO,CAClCxtB,IAAKyI,GACLpI,IAAKsI,I6CrK6DqE,GAAS62B,GACrEv/B,EAAW,IACVmhD,EACHhiD,aAA0B,OAAZA,QAAY,IAAZA,IAAgBgiD,EAAmBhiD,eAE/C,KAAEzG,GAASsH,EACXovC,EAAY2R,GAAQ56B,GACpB8C,EAAejpB,EAAShB,SAASowC,GACjCyP,EAAah5B,GAAiB,CAChCK,cAAextB,EACfutB,YAAa,GAAGgD,EAAa3rB,eAE3BsxC,EAAW,CACbQ,YACApvC,WACAmvC,YAAa0P,GAEjB,IAAIlN,EAAkB,EAEtBl+B,EAAI/a,KAAOmmD,EAAWt4B,UACtB9S,EAAIixB,UAAY,OAChB,MAAMiQ,EAAiBJ,GAAkBxhD,EAAO2V,EAAQ,CAAE8rC,WAAW,EAAOxoC,mBAiBtEk4B,EAhB0B1f,IAC5BK,IACI,MAAM,iBAAEosB,EAAgB,gBAAED,GAAoBH,GAAe,CACzDp9B,MACAoR,SACAisB,cAAe,CAAC6D,GAChBjsC,SAAQkmC,WACRv7C,QACAksC,gBAGJ,QAAI0R,EAAmB,KACvBU,EAAkBX,EAAgB,GAAGW,iBAC9B,EAAI,IAGsB,IAEzCl+B,EAAIzG,MAAMk3B,EADK,GAEf,MAAMhuC,EAASi8C,GAAS,CACpB1+B,MACA88B,UAAW7F,GAAaiK,GACxBzQ,SAAQ+H,OALG,EAMX1wC,SAA4B,SAAlBO,EAA2BP,EAAYA,EAAWo2C,EAAkBzN,EAC9E5oC,eACAszC,WACAlmC,SACA62B,cACAuK,WAAY5W,IAAkD,IAAjD,IAAEzf,EAAG,OAAEg1B,EAAM,WAAEyB,EAAU,eAAED,GAAgB/W,EACpDzf,EAAIqxB,SAAS2D,EAAQyB,EAAYD,EAAe,IAKxD,OAFAx2B,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,IACAp2C,EACHguC,SACH,EClGQkd,GAAYA,CACrB3tC,EACA1gB,EACAorD,EACAkD,EACA9hB,KAEA,MAAMyE,EAAOma,EAAQ5e,EACf0E,EAAWod,EAAY9hB,EAC7B,GAAI9rB,GAAO1gB,EAAO,CACd,MAAMuK,EAAW,KAAOiiC,EACxB9rB,EAAI/a,KAAO,GAAG4E,0BACdmW,EAAIixB,UAAY,OAEhB,MAAM4c,EAAkB,IAClBC,EAAY,GAAGxuD,IAAQimB,MAAM,IACnC,IAAI61B,EAAa,EAEjB0S,EAAUtnC,SAAQunC,IACd3S,GAAcp7B,EAAIuxB,YAAYwc,GAAOnuD,OAAmB,MAAVmuD,EAAgBF,EAAkB,EAAE,IAEtF,IAAIG,EAAUzd,EAAO6K,EAAa,EAElC0S,EAAUtnC,SAAQunC,IACd/tC,EAAIqxB,SACA0c,EACU,MAAVA,EAAgBC,EAAU,EAAIliB,EAAckiB,EAC5Cxd,EAAW3mC,GAEfmkD,GAAWhuC,EAAIuxB,YAAYwc,GAAOnuD,OAAmB,MAAVmuD,EAAgBF,EAAkB,EAAE,GAEvF,GAgDSI,GAAeA,CACxBjuC,EACA1gB,EACAorD,EACAkD,EACA9hB,KAEA,IAAK9rB,EAAK,OAEV,MAAMuwB,EAAOma,EAAQ5e,EACf0E,EAAWod,EAAY9hB,EAC7B9rB,EAAIzG,MAAM,EAAG,KACbyG,EAAI/a,KAAO,QAAQ,MAAQ6mC,kBAC3B,MAAMoiB,EAAiBrd,GAAwB7wB,EAAK1gB,EAAO,KAAOixC,EAAMC,EAAW,KACnFxwB,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC74B,EAAIzG,MAAM,EAAG,MACbyG,EAAI/a,KAAO,QAAQ,MAAQ6mC,kBAC3B+E,GAAwB7wB,EAAK,IAAK,IAAMkuC,EAAiB,EAAIpiB,EAAa0E,EAAW,MACrFxwB,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAIzBsV,GAAWA,CACpBnuC,EACA1gB,EACAorD,EACAkD,EACA9hB,KAEA,IAAK9rB,GAAgB,MAAT1gB,EAAe,OAE3B,MAAMixC,EAAOma,EAAQ5e,EACf0E,EAAWod,EAAY9hB,EACvBsiB,EAAY,MAAQtiB,EAC1B,GAAc,WAAVxsC,EACA0gB,EAAIixB,UAAY,QAChBjxB,EAAI/a,KAAO,QAAQ,GAAK6mC,aACxB9rB,EAAIqxB,SAAS/xC,EAAOixC,EAAO6d,EAAW5d,QAE1C,GAAc,MAAVlxC,EACA0gB,EAAIixB,UAAY,QAChBjxB,EAAI/a,KAAO,QAAQ,GAAK6mC,aACxB9rB,EAAIqxB,SAAS/xC,EAAOixC,EAAO6d,EAAW5d,OACnC,CACHxwB,EAAIixB,UAAY,OAChB,MAAMod,EAAgB,GAAG/uD,IAAQimB,MAAM,KAEvC,IAAI61B,EAAaiT,EAActlD,QAAO,CAACulD,EAAM5Q,EAAM1pB,KAC/ChU,EAAI/a,KAAU,GAAK6mC,EAAR,yBACX,IAAIyiB,EAAYD,EAAOtuC,EAAIuxB,YAAYmM,GAAM99C,MAO7C,OALIo0B,EAAQq6B,EAAcpyC,OAAS,IAC/B+D,EAAI/a,KAAU,GAAK6mC,EAAR,YACXyiB,GAAavuC,EAAIuxB,YAAY,KAAK3xC,OAG/B2uD,CAAS,GACjB,GAEH,GAAInT,EAAa,EAAG,CAChB,MAAMoT,EAAgB5vC,KAAK6F,IAAI2pC,EAAYhT,EAAY,GAEvDp7B,EAAIzG,MAAMi1C,EAAe,GACzBH,EAActlD,QAAO,CAACulD,EAAMG,EAAGz6B,EAAO06B,KAClC,MAAMC,EAAUD,EAAIA,EAAIzyC,OAAS,EAAI+X,GACrC,IAAI46B,EAAWN,EAWf,OAVAtuC,EAAI/a,KAAU,GAAK6mC,EAAR,yBACX8iB,GAAY5uC,EAAIuxB,YAAYod,GAAS/uD,MAAQ4uD,EAC7CxuC,EAAIqxB,SAASsd,EAASC,EAAWJ,EAAehe,GAE5Cxc,EAAQq6B,EAAcpyC,OAAS,IAC/B+D,EAAI/a,KAAO,QAAQ,GAAK6mC,aACxB8iB,GAAY5uC,EAAIuxB,YAAY,KAAK3xC,MAAQ4uD,EACzCxuC,EAAIqxB,SAAS,IAAKud,EAAWJ,EAAehe,IAGzCoe,CAAQ,GAChBre,EAAO6d,GACVpuC,EAAIzG,MAAM,EAAIi1C,EAAe,EACjC,CACJ,IC3GA3uD,OAAQswC,GACRvwC,MAAOwwC,IACPzwC,EAiBSkvD,GAAsBA,CAACtyB,EAAiBuyB,EAA+Bz8B,KAChF,MAAM,KACFxN,GACA+lB,MACE,gBACFgC,EAAe,iBACfmiB,EAAgB,oBAChBC,EAAmB,eACnBC,EAAc,iBACdC,EAAgB,gBAChBC,EAAe,cACfC,EAAa,kBACbC,EAAiB,wBACjBC,EAAuB,uBACvBC,EAAsB,eACtBC,EAAc,cACdC,EAAa,iBACbC,EAAgB,kBAChBC,EAAiB,cACjBC,EAAa,gBACbC,EAAe,YACfC,EAAW,iBACXC,GACAjB,GACE,OACF75C,EAAM,cACNyB,EAAa,eAAElU,EAAc,MAC7B9C,EAAK,KAAE6V,EAAI,OAAEC,EAAM,UAAEC,EAAS,QAAElT,EAAO,KACvC1B,EAAI,UAAE8U,EAAS,cAAED,EAAa,gBAC9BgD,EAAe,kBAAEC,EAAiB,cAAEF,EAAa,cAAED,EAAa,eAAEI,GAAc,OAChFjB,GAAM,YACNJ,GAAW,YACXD,GAAW,WACXhV,GAAU,cAAE4U,GAAa,eAAEC,GAAc,kBAAEE,GAAiB,iBAAED,GAAgB,cAAEM,GAAa,IAC7FG,GAAG,IAAEC,GAAG,QAAEd,GAAO,UACjBnB,GAAS,SACTE,GAAQ,UAAED,GAAS,KAAEE,GAAI,cAAEC,GAAa,MACxC2B,GAAK,SACLG,GAAQ,QAAEO,GAAO,QAAEN,GAAO,aAC1BK,GAAY,eACZJ,GAAc,mBAAEG,GAAkB,YAAEF,GAAW,iBAAEC,GAAgB,eACjEI,IACAsM,EAEEmrC,GAAkB7iB,iBAAwC,CAC5DztC,MAAO,CACHmB,KAAM,QACNy7B,MAAO,EACP2zB,MAAO,EACPC,WAAYA,IAAMle,QAAQC,WAE9Bp8B,UAAW,CACPhV,KAAM,YACNy7B,MAAO,EACP2zB,MAAO,EACPC,WAAYA,IAAMle,QAAQC,WAE9Bj6B,QAAS,CACLnX,KAAM,UACNy7B,MAAO,EACP2zB,MAAO,EACPC,WAAYA,IAAMle,QAAQC,WAE9B35B,QAAS,CACLzX,KAAM,UACNy7B,MAAO,EACP2zB,MAAO,EACPC,WAAYA,IAAMle,QAAQC,WAE9BpxC,KAAM,CACFA,KAAM,OACNy7B,MAAO,EACP2zB,MAAO,EACPC,WAAYA,IAAMle,QAAQC,WAE9B36B,YAAa,CACTzW,KAAM,cACNy7B,MAAO,EACP2zB,MAAO,EACPC,WAAYA,IAAMle,QAAQC,WAE9Bke,QAAS,CACLtvD,KAAM,UACNy7B,MAAO,EACP2zB,MAAO,EACPC,WAAYA,IAAMle,QAAQC,aAI5ByS,GAAgC,SAAlBxtC,GACd5U,GACI,QACA5C,EACJwX,GAEAM,GAA8B,OAAXD,SAAW,IAAXA,QAAW,EAAXA,GAAaC,iBAEhCgrC,GtCzKkB39B,IACF,WAAfA,EAAKnlB,OAAsBqlB,GAAaF,GsCwK9BurC,CAAYvrC,GACvBggC,GAAQjgC,GAASC,GACjB5N,GtClKgB4N,KACC,IAAhBA,EAAK5N,OsCiKGo5C,CAAUxrC,GACnByrC,GAAYvrC,GAAaF,GACzB+/B,GAAe9/B,GAAgBD,IAE/B,KAAEnkB,GAAO,IAAG,UAAEO,IAAcsB,EAC5BguD,MAAmB7vD,GAAO,IAAMO,IAChCuvD,GAAc,CAAC,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUrrC,SAASu/B,IACzF+L,GAAcxrC,GAAiBvlB,IAC/B,WACFgxD,GAAU,wBACVC,GAAuB,gCACvBC,GAA+B,sBAC/BC,GAAqB,sBACrBC,GAAqB,6BACrBC,IACAC,mBAAQ,IChLYvxC,KAkBrB,IAlBsB,YAEzBgxC,EAAW,cACXF,EAAa,gBACb73C,EAAe,kBACfC,EAAiB,eACjBC,EAAc,cACdJ,EAAa,cACbC,GAUHgH,EACG,MAAMwxC,EAAa,CAAEpuD,MAAO4tD,EAAc,UAAY,WAChDC,EAAaH,EACb,CACE3d,KAAM,EACNr8B,EAAG,EACH3Q,YAAa6qD,EAAc,UAAY,aACpCQ,GAELA,GAECC,EAAkBC,EAAqBC,EAAiBC,GAAoB34C,EAC7Ei4C,EAA2CO,EAC3C,IACME,EAAkB,CAAE76C,EAAG,EAAGq8B,KAAM,EAAGhtC,YAAayrD,GAAqB,CAAC,EAC1ExuD,MAAOsuD,GAET,CAAC,GAEAG,EAA0BC,EAA6BC,EAAyBC,GAA4B94C,EAC7Gi4C,EAAmDU,EACnD,IACME,EAA0B,CAAEj7C,EAAG,EAAGq8B,KAAM,EAAGhtC,YAAa6rD,GAA6B,CAAC,EAC1F5uD,MAAO0uD,GAET,CAAC,GAEAG,EAAgBC,EAAmBC,EAAeC,GAAkBp5C,EACrEq4C,EAAyCY,EACzC,IACME,EAAgB,CAAEr7C,EAAG,EAAGq8B,KAAM,EAAGhtC,YAAaisD,GAAmB,CAAC,EACtEhvD,MAAO8uD,GAET,CAAC,GAEAG,EAAgBC,EAAmBC,EAAeC,GAAkBz5C,EACrEq4C,EAAyCiB,EACzC,IACME,EAAgB,CAAEz7C,EAAG,EAAGq8B,KAAM,EAAGhtC,YAAaqsD,GAAmB,CAAC,EACtEpvD,MAAOkvD,GAET,CAAC,GAEAG,EAAuBC,EAA0BC,EAAsBC,GAAyBz5C,EAQvG,MAAO,CACH83C,aACAC,0BACAI,6BAVkDmB,EAChD,IACME,EAAuB,CAAE77C,EAAG,EAAGq8B,KAAM,EAAGhtC,YAAaysD,GAA0B,CAAC,EACpFxvD,MAAOsvD,GAET,CAAC,EAMHvB,kCACAC,wBACAC,wBACH,EDqGUwB,CAAa,CAChB9B,eACAC,eACAF,iBACA73C,kBACAC,oBACAC,kBACAJ,gBACAC,mBAEL,CACC+3C,GACAC,GACAF,GACA73C,EACAC,EACAC,GACAJ,EACAC,IAGE85C,GAAsBz8C,GAAU8sB,cAChC4vB,GAAwBl7C,GAAY9D,KAAI5S,GAAQA,EAAK4hC,SAAQ1wB,KAAgB,QAAXmD,EAAmB,SAAM,iBAC3F+sC,GAAkC,SAAlB9qC,IAA4B5U,MACzCuV,IAAOC,IAAQb,IAAUD,GAAQiF,QACpCq0C,GACArO,GAA4B,SAAblsC,GACfu6C,IAAa1L,GACA,OAAb7uC,IAAqBkB,IAErB,eACF01B,GAAc,iBACd8lB,GAAgB,aAChB9N,GAAe,SAAQ,SACvBnnB,GAAQ,YACRsO,IACAzZ,EACEqgC,GAAcn2B,IAA6B,IAAnBoQ,GAExBmY,GAAakM,mBAAQ,IAAMnf,GAAkBr8B,EAAQpM,IAAY,CAACoM,IAClEuvC,GAAgBiM,mBAAQ,IAAMnf,GAAkB,CAACp8B,GAAYnM,IAAe,CAACmM,IAGnFk4B,qBAAU,KACD+kB,KACL1C,GAAgB3kB,QAAQ3rC,MAAMuwD,OAAS,EACvCD,GAAgB3kB,QAAQ3rC,MAAMwwD,WAAazzB,UAAa,IAADk2B,EACnD,MAAM3yC,EAA4B,QAAzB2yC,EAAG1D,EAAe5jB,eAAO,IAAAsnB,OAAA,EAAtBA,EAAwB1yC,WAAW,MACzCukC,EAAgBuK,EAAiB1jB,QACjCoZ,EAAmBuK,EAAoB3jB,QAE7C,IAAKsG,GAAY3xB,KAASivC,EAAe5jB,QAAS,OAElD,MAAM2a,EAAoB,IAAKvlD,OAA4B8B,IAEvDxB,UAAWikD,EACXtkD,KAAMukD,EAAW,UACjBhkD,EAAS,SACTH,GACAklD,EAQE4M,EAAgBA,CAACt8C,EAAWC,EAAWs8C,EAAWn0C,IAC7C,IAAIszB,SAAQC,IACfpE,YAAW,KACP7tB,EAAIrb,UAAY+R,EAAgB5V,EAAWN,EAC3Cwf,EAAI40B,SAASt+B,EAAGC,EAAGs8C,EAAGn0C,GACtBuzB,GAAQ,EAAK,GACd,EAAE,IAGP6gB,EAAe7N,EAAc,GAAWD,QAGxC4N,EAAc,EAAG,EAAG9mB,GAAcsE,GAAatE,GAAcqE,IAEnE,MAAM,cACF0X,EAAa,eACbV,EAAc,YACdD,EAAW,UACXJ,EAAS,iBACT0B,EAAgB,sBAChBD,EAAqB,SACrBT,EAAQ,mBAERe,EAAkB,qBAClBC,EAAoB,gBAEpBG,EAAe,eACfC,EAAc,cACdC,EAAa,mBACbE,EAAkB,yBAClBc,EAAwB,iBACxBZ,EAAgB,eAChBC,EAAc,eACdZ,EAAc,oBAEdkB,EAAmB,kBACnBL,EAAiB,qBACjBC,EAAoB,gBACpBC,EAAe,eAEfE,EAAc,cACdE,EAAa,qBACbC,EAAoB,oBACpBC,EAAmB,4BACnBC,EAA2B,gBAC3BE,EAAe,0BACfC,EAAyB,kBACzBC,EAAiB,qBACjBE,EAAoB,mCAEpB7E,GACApB,GAAsB,CACtBlpC,OAAQ4zC,EAAe5jB,QACvBmZ,gBAAeC,mBACf3Y,eACA72B,SACAvV,QAAOglD,eACPhuC,gBACAlU,iBACAqT,aACAE,YAAUC,QACVT,OACAovC,gBACApiD,QAASyjD,EACT/uC,UAAQ2tC,gBAAcC,SACtBviD,cACAwiD,cACAC,mBAyBJ,GArBIN,GAAoBzkC,GAAKmnC,IACzB3C,GAAiBxkC,IAAQ/e,GAAWimD,UAClCJ,UACA0C,UACAgB,IAGDloD,KACIrB,UACK4nD,UACAC,UACAS,UAEAG,WAEJP,UACAM,UACAQ,KAIN3nD,KAAe2U,KAAWhW,EAAW,CAErC,GAAIujD,GAAiBxkC,GAAOwkC,EAAc3kD,OAAS,EAAG,CAClD,MAAQD,MAAO0B,EAAUzB,OAAQkzD,GAAcvO,GACzC,cACF6B,EAAa,cAAEE,EAAa,aAC5BE,EAAY,aACZC,EAAY,aAAEC,EAAY,iBAC1BC,EAAgB,kBAAEC,GAClBlB,EAAmCnB,SAGjCoO,EACF9mB,GAAc4a,EAAc5a,GAAc6a,EAC1C7a,GAAc8a,EAAkB9a,GAAc+a,GAGlDM,EAAe,YACfnnC,EAAIiC,UACAuiC,EACA6B,EAAeE,EACfjlD,EAA2B,EAAhB+kD,EAAmB0M,EAAYtM,EAC1C3a,GAAc4a,EAAc5a,GAAc6a,EAC1C7a,GAAc8a,EAAkB9a,GAAc+a,EAEtD,OAEMgC,UACAC,GAAqB,EAC/B,CAuBA,SApBMiB,UACAC,KAGF1nD,IAAe2U,IAAWhW,UACpBsnD,UAEAc,EAAmByJ,EAAc,gBACjCzJ,EAAmByJ,EAAcv9C,SACjC20C,IACF4I,SAAoB3I,KAGvBlpD,UACKmpD,UACAP,KAENiJ,SAAoBzI,IAGpBppD,EAAW,CACX,GAAIgW,SAEMgzC,SACH,GAAI3nD,GAAY,CAEnB,MAAMwjD,EAAmB5kD,EAA2BiB,SAASV,MACvDP,EAA2Be,iBAAiBR,MAElD,GAAI+iD,GAAiBxkC,GAAOwkC,EAAc3kD,OAAS,EAAG,CAClD,MAAM,aACF6mD,EAAY,aAAEC,EAAY,iBAC1BC,EAAgB,kBAAEC,GAClBlB,EACAnB,EACA,IAAK/jD,OAA4B8B,EAAS7B,KAAM,IAAKO,WAAW,GAChE6kD,SAGE8M,EACF9mB,GAAc4a,EAAc5a,GAAc6a,EAC1C7a,GAAc8a,EAAkB9a,GAAc+a,GAElDM,EAAe,WACnB,CACI2L,UACMzJ,EAAmByJ,EAAc,gBACjCzJ,EAAmByJ,EAAcv9C,UAErC20C,GACV,OACMrB,UACAgB,UACAX,IACF1E,GAAiBxkC,GAAKknC,UACpB8C,IAGF1nD,KAAe2U,UACT6xC,GAAqB,SACrBP,UACAc,GAAmB,EAAO,gBAC1BA,GAAmB,EAAO9zC,SAC1B40C,YAEArB,UACAS,UACAG,WAEJU,GACV,CAQA,GANIpI,UAAoB4G,EAAe,CACnC/lD,MAAO,aACJguD,MAIFvuD,IAAc2U,GAAQ,OACjBuxC,EAAiBxxC,UACjB2yC,GAAgB,GACtB,MAAM3F,EAAarR,GAAa,CAAE3yB,SAAQ6wC,GAAuB/kB,iBAC7DkW,SLnQcvlB,OAC9BphB,EACArE,EACAyC,EACAqyB,KAEA,MAAM9rB,EAAM3E,EAAO4E,WAAW,MAE9B,IAAKD,IAAQ2G,MAAMC,QAAQ5P,GAAU,aAE/Bs9B,GACFj5B,EACA,wBACGga,GAAoB,CAAC,IAAK,KAAM,IAAK,IAAKyW,GAC7CA,EACAryB,GAEJ,MAAMuqC,EAAarR,GAAa,CAAE3yB,SAAQvG,EAAOqyB,gBACjD9rB,EAAIixB,UAAY,QAChBjxB,EAAIzG,MAAM,IAAK,GACfyG,EAAI/a,KAAO,QAAQ,MAAQ6mC,sBAC3B9rB,EAAIqxB,SAAS,GAAGr6B,EAAQiF,SAAU,OAAS6vB,EAAa,KAAOA,GAC/D9rB,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC74B,EAAIixB,UAAY,OAChB+S,GAAY,EK2OwBgP,CAAmB/D,EAAe5jB,QAAgB,OAAPr0B,SAAO,IAAPA,MAAW,GAAI65C,GAAuB/kB,IACzGkY,GACJ,OAEM6D,UACAiC,IACD7yC,IAAW2tC,UAAoBkD,EAAS,CAAEruC,MAAOi3C,GAAYz6C,mBAC7DhV,SAAiBioD,UAChBD,SL1WgBxsB,WAoB3B,IApBkC,OACrCphB,EAAM,YACNywB,EAAW,KACX/pC,EAAI,WACJO,EAAU,OACV2U,EAAM,mBACNmB,EAAkB,YAClBF,EAAW,SACX+6C,EAAQ,UACRxQ,GAWH9iB,EAGG,GAFkB,OAANtkB,QAAM,IAANA,OAAM,EAANA,EAAQ4E,WAAW,MAE/B,CAEA,GAAI7H,EAAoB,CACpB,MAAMkd,EAA+ChzB,EAC/C,CAAC,IAAK,KAAM,IAAK,IACjB2U,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,UAEnBq9B,GACFj5B,EACA,2BAA2BtZ,IAAOkxD,EAAW,YAAc,YACxD59B,GAAoBC,EAAYwW,GACnCA,EACS,OAAT2W,QAAS,IAATA,KAAW78C,YAAc,IAAK68C,EAAW7P,KAAM,EAAGt8B,EAAG,EAAGC,EAAG,GAAMksC,EAEzE,CACA,GAAIvqC,EAAa,CACb,MAAMod,EAA+ChzB,EAC/C,CAAC,IAAK,KAAM,MAAO,IACnB2U,EACI,CAAC,IAAK,IAAK,MAAO,IAClB,CAAC,GAAI,IAAK,IAAK,UAEnBq9B,GACFj5B,EACA,wBAAwBtZ,IAAOkxD,EAAW,YAAc,YACrD59B,GAAoBC,EAAYwW,GACnCA,EACS,OAAT2W,QAAS,IAATA,KAAW78C,YAAc,IAAK68C,EAAW7P,KAAM,EAAGt8B,EAAG,EAAGC,EAAG,GAAMksC,EAEzE,CA/BgB,CA+BhB,EKqTcyQ,CAAmB,CACrB73C,OAAQ4zC,EAAe5jB,QACvBS,eACA/pC,KAAOyuD,KAAgBluD,GAAc,QAAU,QAC/C2wD,UAAWhO,EAAc,IAAMhkD,KAAeqB,GAC9C8V,sBAAoBF,eACpBjB,UAAQ3U,cACRmgD,UAAWsO,WAETzG,GAAmB,EAC5B,GACF,CACCoI,GACA5mB,GACAijB,EACAC,EACAC,EACAvvD,EACAuV,EACAyB,EACAlU,EACAqT,GACA6uC,GACAnvC,EACAS,GACAC,GACAF,GACAqC,GACAnB,GACA3U,GACA4V,GACA0sC,GACAC,GACA2L,GACAx5C,GACA65C,GACAE,GACAhM,GACAD,GACAviD,EACAoiD,GACA3C,GACA0O,GACA+B,KAIJ9kB,qBAAU,KAAO,IAADwlB,EACZ,IAAKT,GAAa,OAClB,MAAM1yC,EAAoC,QAAjCmzC,EAAG5D,EAAuBlkB,eAAO,IAAA8nB,OAAA,EAA9BA,EAAgClzC,WAAW,MAElD0xB,GAAY3xB,IACb1d,KACAqrD,GAAU3tC,EAAsB,OAAjB3I,SAAiB,IAAjBA,MAAqB,IAAK,KAAM,IAAKy0B,IACpD6hB,GAAU3tC,EAAqB,OAAhB5I,SAAgB,IAAhBA,MAAoB,IAAK,IAAO,IAAK00B,IACxD,GACD,CAAC4mB,GAAa5mB,GAAaxpC,GAAY+U,GAAmBD,GAAkBm4C,IAG/E5hB,qBAAU,KACD+kB,KACL1C,GAAgB3kB,QAAQxqC,KAAKovD,OAAS,EACtCD,GAAgB3kB,QAAQxqC,KAAKqvD,WAAazzB,UAAa,IAAD22B,EAAAC,EAClD,MAAMrzC,EAA2B,QAAxBozC,EAAGhE,EAAc/jB,eAAO,IAAA+nB,OAAA,EAArBA,EAAuBnzC,WAAW,MACxCqtB,EAAiC,QAAxB+lB,EAAGjE,EAAc/jB,eAAO,IAAAgoB,OAAA,EAArBA,EAAuB/lB,YAEpCqE,GAAY3xB,IAASstB,SAEpBmd,GACF2E,EAAc/jB,QACdrrB,EACAnf,EACW,QAAXoU,EAAmB,GAAK,GAAI,IAC5BY,KAAcnT,EACI,QAAXuS,EAAmB,IAAM,IACd,QAAXA,EAAmB,IAAM,ItChfhBwK,KAYzB,IAAD6zC,EAAAC,EAAA,IAZ2B,OAC7Bt+C,EAAM,MACNvV,EAAK,UACLiW,EAAS,cACTD,EAAa,KACbH,GAOHkK,EAEG,GAAsB,WAAlB/J,EACA,OAAOC,EAGX,MAAMivC,EAAe9/B,GAAgB,CAAEplB,UACjC+wD,EAAcxrC,GAAiBvlB,GAErC,IAAI8zD,EAAiB,UACN,QAAXv+C,IAAkBu+C,EAAiB,OACnC5O,GAA2B,QAAX3vC,IAAkBu+C,EAAiB,SAGvD,IAAIC,EAAkB,CAClB9uD,UAAW8rD,EAAc,UAAY,UACrC76C,kBAAmB66C,EAAc,UAAY,WAEjD,GAAsB,eAAlB/6C,EAAgC,CAAC,IAADg+C,EAAAC,EAChC,MAAMC,EAAkB,IAAKtvD,EAAmC,QAAjBovD,EAAC/9C,EAAUjR,cAAM,IAAAgvD,IAAI,WAAWp0D,OAK/E,OAJKgF,EAAyC,QAAvBqvD,EAACC,EAAgBlvD,cAAM,IAAAivD,IAAI,WAAWr0D,MAAM2F,OAC/D2uD,EAAgB3uD,KAAOuuD,GAGpB,IACAC,KACAG,EAEX,CAEA,IAAIC,EAAoBjP,EAClB,CACEzgD,YAAY,EACZW,UAAW,EACXguC,YAAa,QAEf,CAAC,EAEP,MAAMghB,EAAqB,WAATv+C,GAAmD,QAAlC+9C,EAA2B,QAA3BC,EAAGjvD,EAAmBiR,UAAK,IAAAg+C,OAAA,EAAxBA,EAA0Bj0D,aAAK,IAAAg0D,IAAS,CAAC,EACzES,EAAuB,SAAVr0D,EAAmB4E,EAAmB8B,UAAU9G,MAAQ,CAAC,EAG5E,MAAO,CACH2F,KAAMuuD,KACHC,KACAI,KACAC,KACAC,EACN,EsCqbWC,CAAiB,CAAE/+C,SAAQvV,QAAOiW,YAAWD,gBAAeH,SAC5D,CAAEqvC,gBAAc3vC,SAAQq4B,YAAW5tC,QAAO6Y,kBAAgBuzB,gBAC7D,EACJ,GACF,CACC4mB,GACA5mB,GACAj2B,GACAN,EACAN,EACAvV,EACA6Y,GACAqsC,GACA/jD,EACAuuD,EACAz5C,EACAD,IAIJi4B,qBAAU,KAAO,IAADsmB,EACZ,IAAKvB,GAAa,OAClB,MAAM1yC,EAA2B,QAAxBi0C,EAAGxE,EAAcpkB,eAAO,IAAA4oB,OAAA,EAArBA,EAAuBh0C,WAAW,MAE9C,IAAK0xB,GAAY3xB,KAASgiC,GAAc,OAExC,MAAMgC,EAAarR,GAAa,CAAE3yB,SAAQ6wC,GAAuB/kB,iBACjEmiB,GAAajuC,EAAK,MAAO,MAAQ,SAAU8rB,IAC3CqiB,GAASnuC,EAAKnI,GAAK,QAAS,SAAUi0B,IACjC70B,KACDg3C,GAAajuC,EAAK,MAAO,OAAQ,SAAU8rB,IAC3CqiB,GAASnuC,EAAKlI,GAAK,QAAS,SAAUg0B,KAE1CkY,GAAY,GACb,CAAC0O,GAAa5mB,GAAaj0B,GAAKC,GAAKb,GAAQq5C,GAAWO,GAAuBpB,EAAezN,KAGjGrU,qBAAU,KAAO,IAADumB,EACZ,IAAKxB,GAAa,OAClB,MAAM1yC,EAA4B,QAAzBk0C,EAAG1E,EAAenkB,eAAO,IAAA6oB,OAAA,EAAtBA,EAAwBj0C,WAAW,MAE1C0xB,GAAY3xB,IDvaAm0C,EACrBn0C,EACA1gB,EACAyb,KAUA,IAAKiF,EAAK,OAEV,MAAM,YAAE8rB,EAAW,WAAExpC,EAAU,OAAE2U,EAAM,WAAEm9C,EAAU,OAAEn/C,EAAM,YAAEu7C,EAAW,UAAE/N,GAAc1nC,EACxF,IAAIs5C,EAAU,KACV/pD,EAAU,EACVgqD,EAAU,EACdt0C,EAAI/a,KAAO,GAAGmvD,EAAa,OAAS,MAAM,GAAKtoB,0BAChC,QAAX72B,IACAo/C,EAAU,KACV/pD,GAAW,EACXgqD,GAAW,GAEf,MAAMC,EAAiB5hB,GAAa,CAChC3yB,MACAnd,MAAQ2tD,IAAgBluD,EAAc,UAAY,UAClDsD,YAAawuD,EACP5D,EAAc,UAAY,UAC1B,UACNj6C,EAAG,EACHD,EAAG,EACHs8B,KAAMwhB,IAAe9xD,EAAa,EAAI,EACtCwpC,iBACG2W,KACU,OAATA,QAAS,IAATA,KAAW78C,YAAc,CAAE0Q,EAAG,EAAGC,EAAG,EAAGq8B,KAAM,GAAM,CAAC,IAGxDtwC,EACAuuC,GAAwB7wB,EAAK1gB,EAAO+0D,GAAU,MAAQC,GAAWxoB,GAAc,QAAUxhC,GAAWwhC,GAC7F70B,EACPu6B,GAAyBxxB,EAAK1gB,EAAO+0D,GAAU,OAASC,GAAWxoB,GAAc,OAASxhC,GAAWwhC,GAErG0F,GAAyBxxB,EAAK1gB,EAAO+0D,GAAU,OAASC,GAAWxoB,GAAc,MAASxhC,GAAWwhC,GAEzGyoB,GAAgB,EC2XZJ,CACIn0C,EACApI,GACA,CACIk0B,eACA70B,UAAQ3U,cACR8xD,WAAY7D,KAAkBjuD,GAC9B2S,SACAu7C,eACA/N,UAAWsO,IAElB,GACF,CACC2B,GACA5mB,GACA72B,EACAgC,GACA3U,GACAkuD,GACAhB,EACA53C,GACAgtC,GACAF,GACA6L,GACAQ,KAIJpjB,qBAAU,KAAO,IAAD6mB,EACZ,IAAK9B,GAAa,OAClB,MAAM1yC,EAA+B,QAA5Bw0C,EAAGnF,EAAkBhkB,eAAO,IAAAmpB,OAAA,EAAzBA,EAA2Bv0C,WAAW,MAClD,IAAK0xB,GAAY3xB,GAAM,OAEvB,MAAM,UACFy0C,EAAS,iBACTC,GExmBoBj1C,KAoBzB,IAADk1C,EAAAC,EAAA,IApB2B,IAC7B50C,EAAG,YACH8rB,EAAW,MACXxsC,EAAK,OACL2V,EAAM,UACNolC,EAAS,eACTwa,EAAiB,EAAC,YAClBrE,EAAW,UACXpsD,EAAS,UACTq+C,GAWHhjC,EACG,MAAMi1C,EAAmB,WAAWp9B,KAAKh4B,GACzC,IAAKqyC,GAAY3xB,GAAM,MAAO,CAC1By0C,UAAW,EACXC,oBAGJ,MAAMH,EAAiB5hB,GAAa,CAChC3yB,MACAnd,MAAO2tD,EAAc,UAAY,UACjC5qD,YAAaxB,EACPosD,EAAc,UAAY,UAC1B,UACNl6C,EAAG,EACHC,EAAG,EACHq8B,KAAMxuC,EAAY,EAAI,EACtB0nC,iBACG2W,KACU,OAATA,QAAS,IAATA,KAAW78C,YAAc,CAAE0Q,EAAG,EAAGC,EAAG,EAAGq8B,KAAM,GAAM,CAAC,KAGtD,SAAE9qC,EAAQ,aAAED,EAAcD,UAAWhI,GAAUu1B,GACpB,QADuCw/B,EACpEnsD,EAAsByM,UAAO,IAAA0/C,IAAInsD,EAA2B,IAC5DsjC,GAEEv/B,EAAWkpB,GAAchlB,GAAiBwE,GAAS62B,IACnD,KAAE7mC,GAASsH,EACX20C,EAAiBJ,GAAkBxhD,EAAO2V,EAAQ,CAAE8rC,WAAW,EAAOxoC,gBAAgB,IAG5F,IAAI4iC,EAAW,CACXQ,UAAY+Y,EAAuB,EAAJ,EAC/BnoD,WACAmvC,YAAatpB,MAEb8rB,EAAkB,EAClB4W,EAA0B,IAC1Bt/B,EAAejpB,EAAShB,SAAS,GACrC,IAAK,IAAIowC,EAAY,EAAGA,EAAYpvC,EAAShB,SAAS0Q,OAAQ0/B,IAAa,CACvEnmB,EAAejpB,EAAShB,SAASowC,GACjC,MAAMyP,EAAah5B,GAAiB,CAChCK,cAAextB,EACfutB,YAAa,GAAGgD,EAAa3rB,aAC7ByoB,cAAeluB,EAAY,OAAS,KAExC,IAAI2wD,EAAmB,CACnBpZ,YACApvC,WACAmvC,YAAa0P,GAEb4J,EAAoB,EAsBxB,GArBAh1C,EAAI/a,KAAOmmD,EAAWt4B,UACtB9S,EAAIixB,UAAY,OAChB6jB,EAA0B/jC,IACtBK,IACI,MAAM,iBAAEosB,EAAgB,gBAAED,GAAoBH,GAAe,CACzDp9B,MACAoR,SACAisB,cAAe,CAAC6D,GAChBjsC,SAAQkmC,SAAU4Z,EAClBn1D,QACAksC,gBAGJ,QAAI0R,EAAmB,KACvBwX,EAAoBzX,EAAgB,GAAGW,iBAChC,EAAI,IAInBA,EAAkB8W,EAClB7Z,EAAW4Z,EACPD,GAA2B,IAAM,KACzC,CAGA,MAAMrkB,EAASqkB,EAA0B,IAEzC90C,EAAIzG,MAAMk3B,EADK,GAEf,MAAM4G,EAA4B9hB,GAAkB7rB,EAAqBoiC,GACnErpC,EAASi8C,GAAS,CACpB1+B,MACA88B,UAAW7F,GAAaiK,GACxBzQ,SAAQ+H,OANG,EAOX1wC,SAAwB,SAAduyC,EAAuBvyC,EAAYA,EAAWo2C,EAAkBzN,EAC1E5oC,aAAcA,GAAoC,QAAxB+sD,EAAIp/B,EAAalrB,eAAO,IAAAsqD,IAAIvd,EAA0B/sC,SAAWuqD,EAC3F1Z,WACAlmC,SACA62B,cACAuK,WAAY5W,IAAkD,IAAjD,IAAEzf,EAAG,OAAEg1B,EAAM,WAAEyB,EAAU,eAAED,GAAgB/W,EACpDzf,EAAIqxB,SAAS2D,EAAQyB,EAAYD,EAAe,IAMxD,OAHAx2B,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC0b,IAEO,CACHE,UAAWhyD,EAAOo8C,UAClB6V,mBACH,EFkfOO,CAAiB,CACjBj1C,MACA8rB,eACAxsC,MAAOyY,GACPy4C,eACAnW,UAAW,OACXplC,SACA7Q,UAA2B,SAAhBsgD,IAA0B6L,GACrC9N,UAAWsO,KAEf,GAAI94C,GAAgB,CAChB,MAAMi9C,GAAW5yD,MACXoyD,EAEAxiD,GAAQmG,IAAiBq8C,GAAsBpyD,GAE/Csc,KAAK4F,IAAIiwC,EAAY3oB,GAAc,OAAQ,QAAqB,QAAX72B,EAAmB,EAAI,GAD5EgC,GAAS,IAAM,GASjBi+C,GDrmBc,SAC1Bl1C,GAYE,IAXF0qC,EAAK1uC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACR4xC,EAAS5xC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QACZm5C,EAAen5C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAClBjB,EAICiB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CACA8vB,YAAa,EACbkF,QAAQ,GAGZ,IAAKhxB,EAAK,OAEV,MAAM,OAAEgxB,GAAS,EAAK,UAAEyR,EAAS,YAAE3W,GAAsB,OAAN/wB,QAAM,IAANA,IAAU,CAAC,EACxDw1B,EAAOma,EAAQ5e,EACf0E,EAAWod,EAAY9hB,EACvB+oB,EAAiBM,EAAkBrpB,EACnCkY,EAAarR,GAAa,CAC5B3yB,MACA8rB,iBACG2W,KACU,OAATA,QAAS,IAATA,KAAW78C,YAAc,CAAE0Q,EAAG,EAAGC,EAAG,EAAGq8B,KAAM,GAAM,CAAC,IAEtDwiB,EAAkB,IAAMtpB,EAC9B9rB,EAAI/a,KAAO,QAAQ,KAAO6mC,6BAE1B,IAAI55B,EAAOq+B,EACXvwB,EAAIqxB,SAAS,IAAKn/B,EAAMs+B,EAAWqkB,GAC/B7jB,GAAQhxB,EAAIsxB,WAAW,IAAKp/B,EAAMs+B,GACtCt+B,GAAQ8N,EAAIuxB,YAAY,KAAK3xC,MAAQ,EAAIksC,EAEzC9rB,EAAI/a,KAAO,QAAQ,MAAQ6mC,6BAC3B9rB,EAAIqxB,SAAS,KAAMn/B,EAAMs+B,EAAW4kB,EAAkBP,GAClD7jB,GAAQhxB,EAAIsxB,WAAW,KAAMp/B,EAAMs+B,EAAW4kB,GAClDljD,GAAQ8N,EAAIuxB,YAAY,MAAM3xC,MAE9BogB,EAAI/a,KAAO,QAAQ,MAAQ6mC,6BAC3B9rB,EAAIqxB,SAAS,WAAYn/B,EAAMs+B,EAAWqkB,GACtC7jB,GAAQhxB,EAAIsxB,WAAW,WAAYp/B,EAAMs+B,GAC7CwT,GACJ,CC0jB0BqR,CACVr1C,EACA9N,GATYmG,IAAiBq8C,GAAsBpyD,GAEjD,QADA,KAEgB+V,IAAiBq8C,GAAsBpyD,GAEvDsiD,IAAgB,GAAK,EADrB,EAQF,CACI9Y,eACA2W,UAAW,CACP5/C,MAAO2tD,GAAc,UAAY,aAC9BO,KAInB,IACD,CACC2B,GACA5mB,GACA7zB,GACAF,GACAs3C,EACAmB,GACAv7C,EACAs7C,GACAt5C,GACA2tC,GACAtiD,GACA+V,GACAqsC,GACAqM,KAIJpjB,qBAAU,KAAO,IAAD2nB,EACZ,IAAK5C,GAAa,OAElB,MAAM1yC,EAA8B,QAA3Bs1C,EAAGpG,EAAiB7jB,eAAO,IAAAiqB,OAAA,EAAxBA,EAA0Br1C,WAAW,MAEjD+vC,GAAgB3kB,QAAQ/yB,QAAQ23C,OAAS,EACzCD,GAAgB3kB,QAAQ/yB,QAAQ43C,WAAazzB,UAAa,IAAD84B,EACrD,IAAK5jB,GAAY3xB,GAAM,OAEvB,MAAMgmC,EAAoB,IAAKvlD,OAA4B8B,IAEvD7B,KAAMukD,EAAW,UACjBhkD,GACA+kD,EACEwP,EG/qBa/1C,KAoBxB,IAADg2C,EAAAb,EAAA,IApB0B,IAC5B50C,EAAG,MACH1gB,EAAK,OACL2V,EAAM,UACNolC,EAAS,eACTwa,EAAiB,EAAC,YAClBrE,EAAW,UACXpsD,EAAS,UACTq+C,EAAS,YACT3W,GAWHrsB,EACG,IAAKkyB,GAAY3xB,GAAM,OAEvB,MAAMu0C,EAAiB5hB,GAAa,CAChC3yB,MACAnd,MAAO2tD,EAAc,UAAY,UACjC5qD,YAAaxB,EACPosD,EAAc,UAAY,UAC1B,UACNj6C,EAAG,EACHD,EAAG,EACHs8B,KAAMxuC,EAAY,EAAI,EACtB0nC,iBACG2W,KACU,OAATA,QAAS,IAATA,KAAW78C,YAAc,CAAE0Q,EAAG,EAAGC,EAAG,EAAGq8B,KAAM,GAAM,CAAC,KAGtD,SAAE9qC,EAAQ,aAAED,EAAcD,UAAWhI,GAAUu1B,GACrB,QADwCsgC,EACpEltD,EAAqB0M,UAAO,IAAAwgD,IAAIltD,EAA0B,IAC1DujC,GAEEv/B,EAAWkpB,GAAcllB,GAAgB0E,GAAS62B,IAClD,KAAE7mC,GAASsH,EACX20C,EAAiBJ,GAAkBxhD,EAAO2V,EAAQ,CAAE8rC,WAAW,EAAOxoC,gBAAgB,IAG5F,IAAI4iC,EAAW,CACXQ,UAAW,EACXpvC,WACAmvC,YAAatpB,MAEb8rB,EAAkB,EAClB4W,EAA0B,IAC1Bt/B,EAAejpB,EAAShB,SAAS,GACrC,IAAK,IAAIowC,EAAY,EAAGA,EAAYpvC,EAAShB,SAAS0Q,OAAQ0/B,IAAa,CACvEnmB,EAAejpB,EAAShB,SAASowC,GACjC,MAAMyP,EAAah5B,GAAiB,CAChCK,cAAextB,EACfutB,YAAa,GAAGgD,EAAa3rB,aAC7ByoB,cAAeluB,EAAY,OAAS,KAExC,IAAI2wD,EAAmB,CACnBpZ,YACApvC,WACAmvC,YAAa0P,GAEb4J,EAAoB,EAsBxB,GArBAh1C,EAAI/a,KAAOmmD,EAAWt4B,UACtB9S,EAAIixB,UAAY,OAChB6jB,EAA0B/jC,IACtBK,IACI,MAAM,iBAAEosB,EAAgB,gBAAED,GAAoBH,GAAe,CACzDp9B,MACAoR,SACAisB,cAAe,CAAC6D,GAChBjsC,SAAQkmC,SAAU4Z,EAClBjpB,cACAlsC,UAGJ,QAAI49C,EAAmB,KACvBwX,EAAoBzX,EAAgB,GAAGW,iBAChC,EAAI,IAInBA,EAAkB8W,EAClB7Z,EAAW4Z,EACPD,GAA2B,IAAM,KACzC,CAGA,MAAMrkB,EAASqkB,EAA0B,IAEzC90C,EAAIzG,MAAMk3B,EADK,GAEf,MAAM4G,EAA4B9hB,GAAkB7rB,EAAqBoiC,GACnErpC,EAASi8C,GAAS,CACpB1+B,MACA88B,UAAW7F,GAAaiK,GACxBzQ,SAAQ+H,OANG,EAOX1wC,SAAwB,SAAduyC,EAAuBvyC,EAAYA,EAAWo2C,EAAkBzN,EAC1E5oC,aAAcA,GAAoC,QAAxB+sD,EAAIp/B,EAAalrB,eAAO,IAAAsqD,IAAIvd,EAA0B/sC,SAAWuqD,EAAiB/oB,EAC5GqP,WACAlmC,SACA62B,cACAuK,WAAY5W,IAAkD,IAAjD,IAAEzf,EAAG,OAAEg1B,EAAM,WAAEyB,EAAU,eAAED,GAAgB/W,EACpDzf,EAAIqxB,SAAS2D,EAAQyB,EAAYD,EAAe,IAMxD,OAHAx2B,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC0b,IAEO,CAEHrM,SAAwB,SAAd7N,EAAuBvyC,EAAYA,EAAWo2C,EAAkBzN,KACvEhuC,EACN,EH2jBgCizD,CAAgB,CACrC11C,IAA6B,QAA1Bu1C,EAAErG,EAAiB7jB,eAAO,IAAAkqB,OAAA,EAAxBA,EAA0Bt1C,WAAW,MAC1ChL,SACA3V,MAAOgZ,GACP+hC,UAAW,QACXwa,eAAgBjQ,IAAgB,EAAI,EACpCxgD,UAAWmsD,GACXC,eACA/N,UAAWsO,GACXjlB,iBAEE6pB,GAA+B,QAAX1gD,EAAmB,IAAM,KAAO62B,GACpD8pB,GAA4B,QAAX3gD,EAAmB,GAAK,IAAM62B,GAEF,IAAD+pB,EAA9C19C,IAAoB+2C,EAAiB7jB,cLjiBf5O,WAsB/B,IAtBsC,OACzCphB,EAAM,KACNtZ,EAAI,YACJ+pC,EAAW,WACXxpC,EAAU,OACV2U,EAAM,aACNoB,EAAY,YACZy9C,EAAW,SACX7C,EAAQ,UACRxQ,GAaHhiB,EACG,MAAMnL,GAAgDjd,GAAgB/V,EAChE,CAAC,IAAK,KAAM,IAAMwzD,EAAchqB,EAAa,IAC7C70B,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,UAEnBq9B,GACFj5B,EACA,6BAA6BtZ,IAAOkxD,EAAW,YAAc,YAC1D59B,GAAoBC,EAAYwW,GACnCA,EACS,OAAT2W,QAAS,IAATA,KAAW78C,YAAc,IAAK68C,EAAW7P,KAAM,EAAGt8B,EAAG,EAAGC,EAAG,GAAMksC,EACpE,EK+fiBsT,CAAuB,CACzB16C,OAAQ6zC,EAAiB7jB,QACzBrrB,MACA8rB,eACA/pC,KAAOyuD,KAAgBluD,GAAc,QAAU,QAC/C2wD,UAAWhO,EAAc,IAAMhkD,KAAeqB,GAC9C2U,UAAQ3U,cACRwzD,aAAwC,QAA3BD,EAAiB,OAAhBL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBtN,gBAAQ,IAAA2N,IAAIF,GAAoBA,EAC1DC,EACA,EACNv9C,gBACAoqC,UAAWsO,IAEnB,CACH,GACF,CACC2B,GACA5mB,GACAxzB,GACA42C,EACAC,EACAl6C,EACAoD,GACAF,GACAlB,GACA3U,GACAsiD,GACA4L,GACAjuD,EACAguD,GACAQ,KAIJpjB,qBAAU,KACD+kB,KAEL1C,GAAgB3kB,QAAQrzB,QAAQi4C,OAAS,EACzCD,GAAgB3kB,QAAQrzB,QAAQk4C,WAAazzB,UAAa,IAADu5B,EACrD,YLrpBev5B,WAQpB,IAR2B,IAC9Bzc,EAAG,QACHhI,EAAO,YACP8zB,GAKHrM,EACG,GAAKkS,GAAY3xB,GAAjB,CAEA,GAAIhI,IAAY5U,EAAY,OAAO4uC,QAAQC,UAC3CjyB,EAAIzG,MAAMuyB,EAAaA,SACjBkH,GAAUhzB,EAAK,mBAAmBhI,EAAQumB,oBAAqB,SAAU,UAC/Eve,EAAI+mC,gBALyB,CAMvB,EKsoBekP,CAAY,CACrBj2C,IAA6B,QAA1Bg2C,EAAEtG,EAAiBrkB,eAAO,IAAA2qB,OAAA,EAAxBA,EAA0B/1C,WAAW,MAC1CjI,WACA8zB,gBACF,EACL,GACF,CAAC4mB,GAAa5mB,GAAa9zB,GAAS03C,IAGvC/hB,qBAAU,KAAO,IAADuoB,EAAAC,EACZ,IAAKzD,GAAa,OAElB,MAAM1yC,EAA6B,QAA1Bk2C,EAAG/G,EAAgB9jB,eAAO,IAAA6qB,OAAA,EAAvBA,EAAyBj2C,WAAW,MAC1Cm2C,EAA+B,QAAxBD,EAAGvG,EAAcvkB,eAAO,IAAA8qB,OAAA,EAArBA,EAAuBl2C,WAAW,MAElD+vC,GAAgB3kB,QAAQ/zB,YAAY24C,OAAS,EAC7CD,GAAgB3kB,QAAQ/zB,YAAY44C,WAAazzB,UAC7C,IAAKkV,GAAY3xB,KAAS2xB,GAAYykB,GAAU,OAEhD,MAAM,iBAAE5+C,EAAgB,OAAEC,EAAM,UAAEnM,GAAyB,OAAXiM,SAAW,IAAXA,MAAe,CAAC,EAC1D8+C,EAAuB39C,EAAgB,GACvC49C,EAAmBD,EAAuB5+C,EAAS,EACnDsqC,EAAYsU,EACX7T,IAA0B,SAAdl3C,GAAqC,QAAX2J,GAAkC,WAAd3J,EAC3Dk3C,GACA+T,EAAkBlU,GAAW,CAC/BriC,MACAuiC,QAAS5qC,GACT6qC,YACAT,YACAvqC,mBACAvC,SACAsD,qBACGupC,GAA2B,CAC1B7sC,SACA+sC,gBACAC,gBACAF,cAEJU,UAAWkO,GACX51C,OAAQ,CACJ4nC,wBjD9lBsB,EiD+lBtBD,iBjD/lBsB,EiD+lByB4T,EAC/CxqB,uBFjrBWrP,WAsBxB,IAtB+B,IAClCzc,EAAG,YACH8rB,EAAW,YACXx0B,EAAW,UACXxB,EAAS,OACTb,EAAM,MACNvV,EAAK,KACLgzB,EAAI,UACJ49B,EAAS,UACT7N,EAAS,eACTlqC,GAYHonB,EACG,IAAKgS,GAAY3xB,GAAM,OAEvB,MAAMw2C,EAAsBl/C,EAAY2E,OAAS,EAC3Cw6C,EAAe3gD,IAAc9S,GAAoB,UAAT0vB,EACxCgkC,EAAsBp/C,GACrBm/C,EzClImB,SyCkIa,IACjCE,EAA4BH,EACjB,QAAXvhD,EACa,UAATyd,EACI,gBAAMgkC,iBACN,IAAIA,KACR,SAAIA,UACR,GACN,IAAKF,EAAqB,OAG1B,MAGMI,EAAkB,CAAE/zD,MAHDqiB,GAAgBxlB,KAAWolB,GAAgB,CAAEplB,WAAqB,UAATgzB,EAC5E,UACA,aACgD+vB,GAChDuB,EAAarR,GAAa,CAAE3yB,SAAQ42C,EAAiB9qB,iBACrD,iBAAE6S,EAAgB,OAAElO,GAAW8c,GAAoB,CACrDvtC,MACA/K,SACAyd,OACApzB,MAAOq3D,EACPjrD,aAAe4kD,OAAwBp0C,EAAZ,UAC3B3D,iBACAuzB,gBAEJkY,IAEA,IAAI15C,EAAqB,QAAX2K,GAAoB,EAAI,EAClC23C,EAAqB,QAAX33C,GAAoB,EAAI,EAEtC,GAAIwhD,EAAc,CACd,MAAM,KAAElmB,EAAI,SAAEC,GAAamO,EAAiB,SACtC7K,GACF9zB,EACA,uBAAuBlK,EAAUyoB,qBACjC95B,GAAS8rC,GAA6B,KAArB9rC,EAAMoyD,aAAuBpmB,EAASmc,GAAW9gB,IAClErnC,GAAS+rC,EAAgC,GAArB/rC,EAAMoyD,aAAqB/qB,EAAcxhC,EAAUwhC,IACvErnC,GAASqnC,EAAcrnC,EAAMoyD,eAC7BpyD,GAASqnC,EAAcrnC,EAAMoyD,cAErC,CAaI,EEmmBUC,CAAgB,CAClB92C,IAAKo2C,EACLtqB,eACA72B,SACAvV,QACA6Y,kBACA+3C,aACA7N,UAAWqO,GACXp+B,KAAOuvB,GAEDsU,GjD7mBoB,EiD6mB4B,SAAW,QAD3D,QAENzgD,UAAWy8C,GACXj7C,YAAak7C,IACf,CACL,GACF,CACCE,GACA5mB,GACAmW,GACAD,GACAzqC,GACAI,GACAe,EACAy2C,EACAl6C,EACAvV,EACA6Y,GACA+3C,GACA9N,GACAsO,GACAH,GACA4B,GACAC,GACA5C,IAIJjiB,qBAAU,KAAO,IAADopB,EACZ,IAAKrE,GAAa,OAClB,MAAM1yC,EAAqC,QAAlC+2C,EAAGzH,EAAwBjkB,eAAO,IAAA0rB,OAAA,EAA/BA,EAAiC92C,WAAW,MAExD,GAAK0xB,GAAY3xB,IACb1d,GAAY,CACZ,MAAM,OAAEmV,EAAM,UAAEnM,GAA2B,OAAboM,SAAa,IAAbA,MAAiB,CAAC,EAC1Cs/C,EAAsBr+C,EAAkB,GAExCopC,IAAYiV,IAAkC,QAAX/hD,GAAkC,WAAd3J,GAC7D+2C,GAAW,CACPriC,MACAuiC,QAASprC,GACTqrC,UAAU,EACVT,UAAWA,EACXx1C,UAAWw1C,EACLl2C,EACAC,GAAwBmJ,GAC9BwtC,UAAWmO,GACXxO,SAAUr6C,EACVyP,oBACAvC,SACAsD,kBACAwC,OAAQ,CACJ4nC,wBjD/pB+B,EiDgqB/BD,iBjDhqB+B,GiD+oBdsU,EAAsBv/C,EAAS,GAkBhDq0B,iBAGZ,IACD,CACC4mB,GACA5mB,GACAt0B,GACAvC,EACA3S,GACAgtD,EACAn4C,GACAO,GACAiB,EACAJ,GACAq4C,KAIJjjB,qBAAU,KAAO,IAADspB,EACZ,IAAKvE,GAAa,OAClB,MAAM1yC,EAA6B,QAA1Bi3C,EAAGpH,EAAgBxkB,eAAO,IAAA4rB,OAAA,EAAvBA,EAAyBh3C,WAAW,MAEhD+vC,GAAgB3kB,QAAQ8kB,QAAQF,OAAS,EACzCD,GAAgB3kB,QAAQ8kB,QAAQD,WAAazzB,UACpCkV,GAAY3xB,KACjBA,EAAIzG,MAAMuyB,GAAaA,UACjBgZ,GACF9kC,EACA,iBACAuqC,GAAevX,GAAUhzB,EAAK,iBAAiBuqC,sBAAiC,EAAG,KAEvFvqC,EAAI+mC,iBAAgB,CACvB,GACF,CAAC2L,GAAa5mB,GAAa+jB,EAAiB/K,GAAYjkD,IAE3D,MAAMq2D,GAAc/pB,iBAA+B,CAAC,GAC9CL,GAAWzY,uBAAYoI,UAKzB,MAAM,WAEFn6B,GAAa,EAAK,QAClBC,GACA40D,EACEC,EAAexqB,EAAgBvB,QAC/BgsB,EAAwB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcn3C,WAAW,MAErCq3C,EAAgB,SAClBC,EACAF,GAEE,IADFG,EAAkBx7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAIg2B,SAAiBC,IACxBpE,YAAW,KACP,GAAK0pB,EAAYlsB,SAAYgsB,EAEzB,IACIE,EAAYlsB,QAAQosB,QAAOxtC,IACvB,GAAKA,EACA,CACD,MAAMoR,EAAM/Q,IAAIC,gBAAgBN,GAChC,GAAKoR,EACA,CACD,MAAMq8B,EAAQ,IAAI/jB,MAClB+jB,EAAM9zD,IAAMy3B,EACZq8B,EAAMC,OAAS,KACXN,EAAUp1C,UAAUy1C,EAAO,EAAG,GAC9BptC,IAAIstC,gBAAgBv8B,GACpB4W,GAAQ,EAAK,EAEjBylB,EAAMG,QAAU,KACZvtC,IAAIstC,gBAAgBv8B,GACpB4W,GAAQ,EAAM,CAEtB,MAbUA,GAAQ,EActB,MAjBWA,GAAQ,EAiBnB,GAER,CAAE,MAAOvtB,GAEL2yC,EAAUp1C,UAAUs1C,EAAYlsB,QAAS,EAAG,GAC5C3vB,QAAQiJ,MAAMD,GACdutB,GAAQ,EACZ,MA5BoCA,GAAQ,EA6BhD,GACY,GAAbulB,EAAgB,GAE3B,EAEA,GAAIJ,GAAgBC,EAAW,CAAC,IAADS,EAAAC,EAAAC,EAC3BrmB,GAAY0lB,SACNrlB,QAAQoW,IAAItkD,OACbC,OAAOisD,GAAgB3kB,SACvB/F,MAAK,CAACnB,EAAG3e,IAAM2e,EAAE7H,MAAQ9W,EAAE8W,QAC3B9oB,KAAIiM,IAAkC,IAAjC,WAAEywC,EAAU,MAAED,EAAK,KAAEpvD,GAAM4e,EAC7B,OACe,IAAVwwC,GAAeiH,GAAY7rB,QAAQxqC,KAAUovD,IAC1CiH,GAAY7rB,QAAQxqC,IAExBq2D,GAAY7rB,QAAQxqC,GAAQovD,EAErBC,KAEJle,QAAQC,SAAS,KACxBgmB,OAAMvzC,IACNhJ,QAAQiJ,MAAMD,GAEd,MAAMlgB,EAAM,4BACZ6lC,KAAakE,MAAM/pC,GACnB6lC,KAAa1lB,MAAM,CACfngB,MACA8lC,QAAS9M,GAAS,4BAClB+M,YAAa/M,GAAS,iCACxB,IAGV,MAAMgnB,EAAgBuK,EAAiB1jB,QACvC,GAAImZ,GAAiB6S,EAAW,CAC5B,MAAM,KAAE91D,EAAI,KAAEC,EAAI,SAAEF,GAAae,EAAuBC,EAAYC,IAC5D3C,MAAOsmD,EAAYrmD,OAAQsmD,GAAgB3B,EAE/C2B,EAAc,GACdkR,EAAUp1C,UACNuiC,EACA,EAAG,EACH0B,EAAYC,EACZ5kD,EAAMC,EACNF,EAAUA,GAAY4kD,EAAaC,GAG/C,OAEMmR,EAAcrI,EAAgBoI,EAAW,SACzCC,EAAclI,EAAeiI,EAAW,SACxCC,EAAc3H,EAAmB0H,EAAW,SAC5CC,EAAc/H,EAAwB8H,EAAW,SACjDC,EAAchI,EAAyB+H,EAAW,SAClDC,EAAc1H,EAAeyH,EAAW,SACxCC,EAAcnI,EAAiBkI,EAAW,SAC1CC,EAAc7H,EAAe4H,EAAW,SACxCC,EAAc9H,EAAgB6H,EAAW,SACzCC,EAAcjI,EAAmBgI,EAAW,SAC5CC,EAAcpI,EAAkBmI,EAAW,SAC3CC,EAAc5H,EAAkB2H,EAAW,SAC3CC,EAAczH,EAAiBwH,EAAW,GAE7B,QAAnBS,EAAAhI,EAAYzkB,eAAO,IAAAysB,GAAnBA,EAAqBI,KAAKd,GACF,QAAxBW,EAAAhI,EAAiB1kB,eAAO,IAAA0sB,GAAkB,QAAlBC,EAAxBD,EAA0B93C,WAAW,aAAK,IAAA+3C,GAA1CA,EAA4C/1C,UACxCm1C,EACA,EACA,EACAA,EAAax3D,MACbw3D,EAAav3D,OACb,EACA,EACAuwC,GACAD,GAER,IACD,CACC3S,GACAuxB,EACAY,EACAT,EACAtiB,EACAuiB,EACAU,EACAC,EACAV,EACAC,EACAC,EACAC,EACAC,EACAP,EACAQ,EACAC,EACAE,EACAG,IAGJ,MAAO,CACHC,mBACAljB,YACH,E,aIpgCgC5R,mBAA2BC,IAC5D,MAAM,iBACFg9B,GACA,MACA,IAAK,IAADlsB,EACA,MAAMC,EAAc3kB,KAAKC,MAA0C,QAArCykB,EAAClQ,aAAaC,QAAQ,uBAAe,IAAAiQ,IAAI,MAEvE,OAAIC,GAAsC,kBAAhBA,IAA6BvlB,MAAMC,QAAQslB,GAAqBA,EACnF,CAAC,CACZ,CAAE,MAAOxnB,GAEL,OADAhJ,QAAQiJ,MAAM,gEAAiED,GACxE,CAAC,CACZ,CACH,EAVG,GAYJ,MAAO,CACH0zC,OAAQ,CACJD,iBAA8C,mBAArBA,GAAiCA,GAE9DE,mBAAoBA,CAAC7zD,EAAKlF,KACtB67B,GAAImR,IACA,MAAMgsB,EAAwB,IAAKhsB,EAAa8rB,OAAQ,CAAC5zD,GAAMlF,GAI/D,OAFAy8B,aAAa0B,QAAQ,eAAgBlW,KAAKilB,UAAU8rB,IAE7C,CACHF,OAAQE,EACX,GACH,EAENC,yBAA0BlsB,IACtBlR,GAAImR,IACA,MAAMgsB,EAAwD,oBAAzBjsB,EAC/BA,EAAqBC,EAAa8rB,QAClC,IAAK9rB,EAAa8rB,UAAW/rB,GAInC,OAFAtQ,aAAa0B,QAAQ,eAAgBlW,KAAKilB,UAAU8rB,IAE7C,CACHF,OAAQE,EACX,GACH,EAET,I,kDC3CL,MAAME,GAA4B1gC,aAAO2gC,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgFlCC,GAAiBj5C,IAEP,IAFQ,SAC3B+d,GACa/d,EACb,MACO4mB,EAASsyB,GAAcvkC,oBAAS,IAChCwkC,EAAWC,GAAczkC,oBAAS,IAClC0kC,EAAWC,GAAc3kC,oBAAS,IAClC4kC,EAAUC,GAAe7kC,mBAAyC,IACnE8kC,EAAoBF,EAAS/8C,OALjB,GAOlB,OAAOk9C,eAAAC,WAAA,CAAA1/C,SAAA,CACHy/C,eAACX,GAAyB,CACtBnyB,QAASA,EACTyH,MAAOtQ,EAAS,0BAChB67B,cAAe,CACXC,SAAUJ,GAAqBN,GAEnCW,OAAQ/7B,EAAS,sBACjBg8B,WAAYh8B,EAAS,0BACrB5I,SAAUA,IAAM+jC,GAAW,GAC3Bc,KAAMh9B,UACF,IACIo8B,GAAW,GAEX,MAAMa,QAA0B1nB,QAAQoW,IAAI4Q,EAASxlD,KAAIisB,IAAqB,IAApB,KAAEk6B,EAAI,KAAE94D,GAAM4+B,EACpE,OAAO,IAAIuS,SAAsC,CAACC,EAAS2nB,KACvD,MAAMz3B,EAAS,IAAI03B,WACnB13B,EAAOw1B,OAASh4B,IAAiB,IAAhB,OAAE4L,GAAQ5L,EACvB,IAAK4L,EAED,YADAquB,EAAO,sBAIX,MAAM,OAAEn3D,GAAW8oC,EACnB,GAAsB,kBAAX9oC,EAEP,YADAm3D,EAAO,sBAIX,IAAIE,EAAevyC,KAAKC,MAAM/kB,GAE1B4lB,GAAmByxC,KACnBA,EAAe3zC,GAAiB2zC,IAGpC,MAAMC,EAAkBxxC,GAA0BuxC,GAClD,IAAIE,EAA4C,KAahD,GAVIA,EAFAlB,EAEgBiB,EACV7sC,GAAyBsc,GAAWswB,GAAcj1C,MAAMpiB,OACxDq3D,EAGUC,EACVD,EACA3zC,GAAiBqjB,GAAWswB,GAAcj1C,OAG/Cm1C,EAED,YADAJ,EAAO,gCAGX,MAAM3vC,EAAO,IAAIgwC,KACb,CAAC,GAAG1yC,KAAKilB,UAAUwtB,MACnB,CAAEj4D,KAAM,qBAEZkwC,EAAQ,CAAEhoB,OAAMppB,QAAO,EAE3BshC,EAAO+3B,WAAWP,EAAK,GACzB,KAGAQ,EAAY,IAAIC,KACtBV,EAAkBlzC,SAAQia,IAAqB,IAApB,KAAExW,EAAI,KAAEppB,GAAM4/B,EACrC05B,EAAUR,KAAK94D,EAAMopB,EAAK,IAE9B,MAAMowC,QAAgBF,EAAUG,cAAc,CAC1Cv4D,KAAM,SAEVioB,GACI,qBACAqwC,EACA,mBAEJxB,GAAW,GACXF,GAAW,EACf,CAAE,MAAOj0C,GACLhJ,QAAQiJ,MAAMD,GACd2lB,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,yBAClB+M,YAAa/M,EAAS,+BAE1Bq7B,GAAW,EACf,GACFn/C,SAAA,CAEFy/C,eAAA,OAAKz1D,UAAU,aAAYgW,SAAA,CACvBxW,cAAA,SAAAwW,SAAO,yCACPxW,cAAA,OAAAwW,SACIxW,cAAA,UACIQ,UAAW8zB,GAAW,gBAAiBshC,EAAY,UAAY,IAC/DyB,QAASA,IAAMxB,GAAW9vD,IAAQA,IAAKyQ,SAEvCxW,cAACs3D,KAAkB,QAG3Bt3D,cAAA,SAAAwW,SAAO,qBAEXy/C,eAAA,OAAKz1D,UAAU,aAAYgW,SAAA,CACvBxW,cAAA,SACInB,KAAK,OACL04D,OAAO,mBACPC,UAAQ,EACRC,SAAUj2C,IACN,MAAMk2C,EAAgBl2C,EAAE6mB,OAAOsvB,MAE/B,GAAID,EAAe,CACf,MAAME,EAA+C,GAErD,IAAK,IAAI5mC,EAAM,EAAGA,GAAO0mC,EAAc3+C,OAAQiY,IAAO,CAClD,MAAM6mC,EAAaH,EAAcI,KAAK9mC,GAClC6mC,GAAYD,EAAa7c,KAAK,CAAE0b,KAAMoB,EAAYl6D,KAAMk6D,EAAWl6D,MAC3E,CAEAo4D,EAAY6B,EAChB,KAGR3B,eAAA,OAAKz1D,UAAU,WAAUgW,SAAA,CACpB8jB,EAAS,sCACTo7B,GAAa11D,cAAA,OAAKQ,UAAU,cAAagW,SACrC8jB,EAAS,wCAEb07B,GAAqBh2D,cAAA,OAAKQ,UAAU,UAASgW,SACzC8jB,EAAS,kCApIZ,SAuINt6B,cAAA,OAAKQ,UAAU,YAAWgW,SACrBs/C,EAASxlD,KAAIqtB,IAAe,IAAd,KAAEhgC,GAAMggC,EACnB,OAAOs4B,eAAA,OAAgBz1D,UAAU,aAAYgW,SAAA,CACzCxW,cAAA,OAAAwW,SAAM7Y,IACNqC,cAAA,OAAKQ,UAAU,cAAagW,SACxBxW,cAAC+3D,KAAa,CACV3B,SAAUV,EACV2B,QAASA,IAAMtB,GAAYiC,GAChBA,EAAQnoC,QAAOtf,GAASA,EAAM5S,OAASA,YAN7CA,EAUX,YAKtBqC,cAACi4D,KAAO,CAAChL,QAAS3yB,EAAS,0BAA0B9jB,SACjDxW,cAAC20B,GAAsB,CACnBn0B,UAAU,kBACV62D,QAASA,IAAM5B,GAAW,GAAMj/C,SAEhCxW,cAACk4D,KAAe,UAGzB,E,qDC1PA,MAAMC,WAAsB/hC,IAAMgiC,UACrCxgD,YAAYuX,GACRkpC,MAAMlpC,GACN7W,KAAKqgB,MAAQ,CAAE2/B,UAAU,EAC7B,CAEA,+BAAOC,CAAyB92C,GAG5B,OAFAjJ,QAAQiJ,MAAM,WAAYA,GAEnB,CAAE62C,UAAU,EACvB,CAEAE,kBAAkB/2C,EAAchJ,GAM5BggD,KAAwBh3C,EAAO,CAAEzE,KAAMvE,EAAKigD,gBAChD,CAEA5+C,SACI,OAAIxB,KAAKqgB,MAAM2/B,SAEJhgD,KAAK6W,MAAM0M,SAGfvjB,KAAK6W,MAAM3Y,QACtB,E,cCjCG,MAAMmiD,GAAyB,mBAChCC,GAAuBhkC,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmC1BC,GAAsBv8C,IAGP,IAHQ,SAChC/F,KACGkU,GACenO,EAClB,OAAO05C,eAAC2C,GAAoB,CAACp4D,UAAU,yBAAwBgW,SAAA,CAC1DA,EACDxW,cAAC+4D,eAAW,IAAKruC,MACE,E,4CC1C3B,MAAMsuC,GAAwBpkC,aAAOqkC,KAA0B;;;;;EAUlDC,GAAc38C,IAIP,IAJQ,iBACxB48C,EAAgB,UAChBC,KACG1uC,GACOnO,EACV,MAAM,UAAE/b,KAAc64D,GAA2B,OAATD,QAAS,IAATA,IAAa,CAAC,EAEtD,OAAOp5D,cAACs5D,KAAO,CAACH,iBAAkB,CAAC,sBAAuC,OAAhBA,QAAgB,IAAhBA,IAAoB,IAAIvqD,KAAK,QAAU8b,EAAIlU,SACjGxW,cAACg5D,GAAqB,CAACx4D,UAAW,CAAC,mBAA6B,OAATA,QAAS,IAATA,IAAa,IAAIoO,KAAK,QAAUyqD,KACjF,E,wBClBP,MAAME,GAA4B3kC,KAAO4kC,IAAI;;;;;;;;;;;;;;;EAyBvCC,GAAal9C,IAOP,IAPQ,KACvBm9C,EAAI,SACJljD,EAAQ,QACR6gD,EAAO,UACP+B,EAAS,aACTO,EAAY,eACZC,GACSr9C,EACT,MAAM,UAAE/b,EAAW62D,QAASwC,EAAa,UAAE9nC,KAAc+nC,GAAqC,OAAdF,QAAc,IAAdA,IAAkB,CAAC,EAEnG,OAAO55D,cAACi4D,KAAO,CAACrtB,MAAO,QAAU+uB,EAAYnjD,SACzCxW,cAACu5D,GAAyB,CACtB3nC,SAAU,KACNkoC,EACJzC,QAAS71C,IACE,OAAP61C,QAAO,IAAPA,OACa,OAAbwC,QAAa,IAAbA,KAAgBr4C,EAAE,EAEtBuQ,UAAWvQ,IACE,OAATuQ,QAAS,IAATA,KAAYvQ,GACE,UAAVA,EAAElgB,MACK,OAAP+1D,QAAO,IAAPA,OACJ,EAEJ72D,UAAW,CAAC,cAAwB,OAATA,QAAS,IAATA,IAAa,IAAIoO,KAAK,KAAK4H,SAEtDy/C,eAAAC,WAAA,CAAA1/C,SAAA,CACIxW,cAAC05D,EAAI,IAAKN,IAAc5iD,QAG1B,EAGDujD,GAA8BnlC,KAAOikC,GAA4B;;;;;;;;;;;;;;;;;;;;;EC9DjEmB,GAAkBC,IAAG;;;;;;;;;;;;;;;;;;;;;;;ECU5BC,GAA4BtlC,KAAOikC,GAAG;MACtCmB;EAmBAG,GAAkBA,CAAA59C,EAQF69C,KAA4C,IARQ,SACtE3C,EACAr7D,MAAOi+D,EAAW,WAClBC,EAAU,SACV9jD,EAAQ,OACR+jD,EAAM,UACN/5D,EAAS,OACTuI,GAAS,GACOwT,EAChB,MAAO0W,EAAOzB,GAAYN,oBAAU,GAC9BspC,EAAcvwB,iBAAuB,MACrC3Y,EAAegpC,EAAWvhD,OAMhC,OAJA0hD,8BAAoBL,GAAK,MACrBnnC,MAAOA,KAAA,IAAAynC,EAAA,OAAyB,QAAzBA,EAAMF,EAAYryB,eAAO,IAAAuyB,OAAA,EAAnBA,EAAqBznC,OAAO,MAGtCgjC,eAACiE,GAAyB,CAC7B15D,UAAW,CAAC,sDAAuDA,GAAWoO,KAAK,KAAK4H,SAAA,CAEvFA,GAAYxW,cAAA,SAAOQ,UAAU,yCAAwCgW,SAAEA,IACxExW,cAAA,OAAKo6D,IAAKI,EACNh6D,UAAU,6BACN4wB,GAAmB,CACnBI,WACAF,eACAG,UAAWA,KACP,MAAM4W,EAASiyB,EAAWrnC,GACtBoV,GACAovB,EAASpvB,EAAOjsC,MACpB,IAENoa,SAED8jD,EAAWhqD,KAAI,CAAAisB,EAAwCzL,KAAW,IAAlD,MAAE10B,EAAK,MAAE+yB,EAAK,MAAE9yB,EAAK,aAAEs9D,GAAcp9B,EAClD,MAAM,UAAE/7B,GAAmB,OAAL2uB,QAAK,IAALA,IAAS,CAAC,EAC1BwrC,EAAY5xD,EACZ3M,IAAUi+D,EACV,GAAGj+D,MAAY,GAAGi+D,IAExB,OAAOr6D,cAACi4D,KAAO,CAAahL,QAAS,QAAU0M,EAAYnjD,SACvDy/C,eAAA,YACQ9mC,EACJ3uB,UAAW,CACP,2BACAm6D,EAAY,mCAAqC,GACxC,OAATn6D,QAAS,IAATA,IAAa,GACbyyB,IAAUnC,EAAQ,sBAAwB,IAC5CliB,KAAK,KACPyoD,QAASA,IAAMI,EAASr7D,GAAOoa,SAAA,CAE/BxW,cAAA,QAAMQ,UAAW,qBAAoBm6D,EAAY,2BAA6B,IAAKnkD,SAC/ExW,cAAA,QAAMQ,UAAU,6BAEpBR,cAAA,QAAMQ,UAAU,QAAOgW,SAAEna,QAdZD,EAgBX,MAGjBm+D,IACuB,EAEnBK,GAAaC,qBAAWV,IC3FxBW,GAAalmC,KAAO4kC,IAAI;;;;;;EAQxBuB,GAAiBnmC,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;EAqB3BmC,GAAoBpmC,aAAOmmC,GAAe;;;;EAM1CE,GAAkB1+C,IAIc,IAJb,QAC5B8iC,EAAO,SACP7oC,KACGkU,GACgCnO,EACnC,OAAI8iC,EACOr/C,cAACs5D,KAAO,CAACja,QAASA,KAAa30B,EAAIlU,SAAGA,IAE1CxW,cAAAk2D,WAAA,CAAA1/C,SAAGA,GAAY,EAGb0kD,GAAmBtmC,KAAOC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;EA4BhCsmC,GAA0BvmC,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECpE3CuC,GAASC,IAAS;;;;EAKlBC,GAAqB1mC,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiC/B0C,GAA+B3mC,aAAOmlC,GAA4B;;;cAG1Dx9C,IAAA,IAAC,UAAEi/C,GAAWj/C,EAAA,OAAKi/C,EAAY,GAAKvB,IAAG,cAAcmB,yBAA6B;;;EAInFK,GAAgBA,KACzB,MAAMnhC,EAAWQ,MACX,QACFmO,EAAO,cACPC,GACAX,IAAWhM,IAAA,IAAC,QAAE0M,EAAO,cAAEC,GAAe3M,EAAA,MAAM,CAAE0M,UAASC,gBAAe,KACpE,aACFT,EAAY,WACZE,EAAU,YACVH,EAAW,kBACXE,EAAiB,mBACjBG,EAAkB,0BAClBC,GACAG,EAEJ,OAAOjpC,cAACu7D,GAA4B,CAAC/6D,UAAU,iBAAiBg7D,UAAW9yB,EAAkBlyB,SACzFxW,cAACs5D,KAAO,CACJoC,QAAS,CAAC,SACVvC,iBAAiB,yBACjB9Z,QAAS4W,eAACqF,GAAkB,CAAA9kD,SAAA,CACxBxW,cAAA,OAAAwW,SACIxW,cAAC27D,KAAQ,CACLC,QAASlzB,EACT+uB,SAAUj2C,GAAK0nB,EAAc,CAAER,kBAAmBlnB,EAAE6mB,OAAOuzB,UAAWplD,SACxE8jB,EAAS,sCAEft6B,cAAA,OAAAwW,SACIxW,cAAC27D,KAAQ,CACLC,QAAS9yB,EACT2uB,SAAUj2C,GAAK0nB,EAAc,CAAEJ,0BAA2BtnB,EAAE6mB,OAAOuzB,UAAWplD,SAChF8jB,EAAS,6CAEft6B,cAAA,OAAAwW,SACIxW,cAAC27D,KAAQ,CACLC,QAAS/yB,EACT4uB,SAAUj2C,GAAK0nB,EAAc,CAAEL,mBAAoBrnB,EAAE6mB,OAAOuzB,UAAWplD,SACzE8jB,EAAS,qCAEft6B,cAAA,OAAAwW,SACIxW,cAACi4D,KAAO,CAACrtB,MAAOtQ,EAAS,iCAAkCuhC,UAAU,OAAMrlD,SACvExW,cAAC27D,KAAQ,CACLC,QAASpzB,EACTivB,SAAUj2C,GAAK0nB,EAAc,CAAEV,YAAahnB,EAAE6mB,OAAOuzB,UAAWplD,SAClE8jB,EAAS,qCAGnB27B,eAAA,OAAAz/C,SAAA,CACIxW,cAAA,OAAKQ,UAAU,cAAagW,SAAE8jB,EAAS,qCACvCt6B,cAAC46D,GAAU,CACPp6D,UAAU,kBACVpE,MAAO,GAAGusC,EAAW,MAAMA,EAAW,KACtC2xB,WAAY7jD,GAAenG,KAAImsB,IAAA,IAAC,OAAE9/B,EAAM,MAAED,EAAK,MAAEL,EAAK,MAAEga,GAAOomB,EAAA,MAAM,CACjErgC,MAAO,GAAGM,KAASC,IACnBN,MAAOga,EAAQ,EACTrW,cAACs5D,KAAO,CACNH,iBAAiB,sBACjB0C,UAAU,OACVxc,QAASr/C,cAACg7D,GAAiB,CAAAxkD,SACtB8jB,EAAS,uCACO9jB,SAEpBna,IAEHA,EACT,IACDo7D,SAAUr7D,IACN,MAAM0/D,EAAkB1lD,GAAcha,GAElC0/D,GACA5yB,EAAc,CACVP,WAAYmzB,EAAgBxlD,aAC5BsyB,YAAakzB,EAAgBzlD,OAErC,OAIZ4/C,eAAA,OAAAz/C,SAAA,CACIxW,cAAA,OAAKQ,UAAU,cAAagW,SAAE8jB,EAAS,wCACvCt6B,cAAC46D,GAAU,CACPx+D,MAAOqsC,EACP6xB,WAAY5jD,GACZ+gD,SAAUr7D,IACN8sC,EAAc,CAAET,aAAcrsC,GAAQ,OAIlD4D,cAAA,OAAAwW,SACIxW,cAAA,SAAAwW,SAAQ8jB,EAAS,wBAEH9jB,SAEtBy/C,eAAA,OAAKz1D,UAAU,eAAcgW,SAAA,CACzBxW,cAAC+7D,KAAa,IACd/7D,cAAA,SAAAwW,SAAQ8jB,EAAS,gCAGE,E,cCpJnC,MAAM0hC,GAAkB,MACpB,IAAIC,GAAU,EACVC,EAAyB,GAE7B,MAAO,CACHC,OAAQ5iC,UACJ,GAAI0iC,EAAS,OAAOC,EACpB,MAAMxiC,QAAiBC,MACnB,8BACA,CACIC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAItB,IACI,MAAMwiC,QAAoB1iC,EAASI,OAInC,OAHAoiC,EAAaE,EACbH,GAAU,EAEHC,CACX,CAAE,MAAO16C,GACLhJ,QAAQiJ,MAAMD,EAClB,CACA,MAAO,EAAE,EAGpB,EA5BuB,GA6BX66C,GAAaA,KACtB,MAAOC,EAAKC,GAAUrrC,mBAAqB,KACpCsrC,EAASC,GAAcvrC,oBAAS,GAYvC,OAVAuZ,qBAAU,KACN,WACIgyB,GAAW,GACX,MAAMH,QAAYN,GAAgBG,SAElCM,GAAW,GACXF,EAAOD,EACV,EAND,EAMI,GACL,IAEgB,IAAfA,EAAIvjD,QAAiByjD,EACrBA,EAAgBx8D,cAAA,OAAAwW,SAAK,yBAClBxW,cAAA,OAAAwW,SACF8lD,EAAIhsD,KAAI,CAAAiM,EAAuBuU,KAAW,IAAjC,QAAE4rC,EAAO,QAAEtqD,GAASmK,EAC1B,OAAO05C,eAAA,OAAAz/C,SAAA,CACHxW,cAAA,KAAAwW,SAAIpE,IAAYpS,cAAA,SAChBA,cAAA,MAAAwW,SAEKkmD,EAAQpsD,KAAI,CAAAisB,EAAczL,KAAW,IAAxB,QAAEuuB,GAAS9iB,EACrB,OAAOv8B,cAAA,MAAAwW,SACF6oC,GADWvuB,EAEX,QAPA,GAAG1e,KAAW0e,IAUzB,MAd2B9wB,cAAA,OAAAwW,SAAK,iBAgBxC,E,OCjDH,MAAMmmD,GAAcA,IAChB38D,cAAA,OAAKQ,UAAU,cAAagW,SAC/BxW,cAAA,OAAKQ,UAAU,mBAAkBgW,SAC7BxW,cAAA,KAAGknB,KAAK,uCAAuCmhB,OAAO,SAASu0B,IAAI,aAAYpmD,SAC3ExW,cAAC68D,KAAY,UAMvBC,GAAmBloC,aAAOomC,GAAkB;;;;;EAO5C+B,GAAiCnoC,KAAOikC,GAAG;;;;;;;;;;;;;;;;;EAmBpCmE,GAAYA,KAAO,IAADlyB,EAC3B,MAAM,SACFxQ,EAAQ,aACRD,EAAY,oBACZD,EAAmB,eACnBF,GACAnC,IAAQxb,IAAA,IAAC,aACT8d,EAAY,SACZC,EAAQ,oBACRF,EAAmB,eACnBF,GACH3d,EAAA,MAAM,CACH8d,eACAC,WACAF,sBACAF,iBACH,KACK,SACFiI,EAAQ,YACRa,EAAW,cACXW,EAAa,QACbR,GACAT,GAAYu6B,uBAAW1gC,IAAA,IAAC,SACxB4F,EAAQ,YACRa,EAAW,cACXW,EAAa,QACbR,GACH5G,EAAA,MAAM,CACH4F,WACAa,cACAW,gBACAR,UACH,KAED,OAAO8yB,eAAA,OAAKz1D,UAAU,aAAYgW,SAAA,CAC9BxW,cAAA,OAAKS,IAAI,WAAWC,IAAK,yBAAyChE,MAAO,KACzEu5D,eAAA,OAAKz1D,UAAU,kBAAiBgW,SAAA,CAC5By/C,eAAA,OAAKz1D,UAAU,kBAAiBgW,SAAA,CAC5BxW,cAAA,MAAAwW,SAAI,kBACJxW,cAACk9D,KAAMC,MAAK,CAAC/gE,MAAOi+B,EAAanB,SAAU1J,KAAK,QAAQhvB,UAAU,kBAAiBgW,SAC9E5V,OAAOC,OAAOu5B,GACVvK,QAAO4M,IAAA,IAAC,OAAEpD,GAAQoD,EAAA,OAAKpD,CAAM,IAC7B/oB,KAAIitB,IAAyB,IAAxB,SAAErE,EAAQ,KAAEv7B,GAAM4/B,EACpB,OAAOv9B,cAACk9D,KAAME,OAAM,CAChBhhE,MAAO88B,EACPu+B,SAAUj2C,GAAK0Y,EAAe1Y,EAAE6mB,OAAOjsC,OAAOoa,SAE7C7Y,GAJqBu7B,EAKX,MAG3Bl5B,cAAA,QAAMQ,UAAU,aAAYgW,SACxBxW,cAAA,OAAK6V,GAAG,oBAAmBW,SACtB8jB,EAAS,sCAGlBt6B,cAACs5D,KAAO,CACJuC,UAAU,SACVxc,QAASr/C,cAAC88D,GAAgB,CAAAtmD,SACtBxW,cAACq8D,GAAU,MACK7lD,SAEpBy/C,eAAA,OAAKz1D,UAAU,UAASgW,SAAA,CAAC,IACU,QAA9Bs0B,EAACC,UAA6BD,EAAI,kBAI/CmrB,eAAA,OAAKz1D,UAAU,mBAAkBgW,SAAA,CAC7By/C,eAAA,QAAMz1D,UAAU,cAAagW,SAAA,CACxB8jB,EAAS,yBAAyB,KAAEt6B,cAAA,KACjCknB,KAAK,uCACLmhB,OAAO,SACPu0B,IAAI,aAAYpmD,SAEhBxW,cAAA,KAAAwW,SAAG,cACH,OAAMxW,cAACk5D,GAAW,CAClB7Z,QAAS4W,eAAC+E,GAAiB,CAACx6D,UAAU,aAAYgW,SAAA,CAC9CxW,cAAA,MAAAwW,SAAK8jB,EAAS,kCACd27B,eAAA,MAAAz/C,SAAA,CACIxW,cAAA,MAAAwW,SAAK8jB,EAAS,iCAAiCt6B,cAAA,KAAoBknB,KAAK,sCAAqC1Q,SAAC,+BAAxD,iBACtDxW,cAAA,MAAAwW,SAAK8jB,EAAS,mCACdt6B,cAAA,MAAAwW,SAAK8jB,EAAS,mCACdt6B,cAAA,MAAAwW,SAAK8jB,EAAS,mCACdt6B,cAAA,MAAAwW,SAAK8jB,EAAS,iCACVt6B,cAAA,KACIknB,KAAK,oCACLmhB,OAAO,SACPu0B,IAAI,aAAYpmD,SAAC,UAHd,oBAIPxW,cAAA,KACIknB,KAAK,sCACLmhB,OAAO,SACPu0B,IAAI,aAAYpmD,SAAC,YAHd,uBAKXxW,cAAA,MAAAwW,SAAK8jB,EAAS,8CAK9Bt6B,cAAA,QAAMQ,UAAU,mBAAkBgW,SAC7B8jB,EAAS,8BACNt6B,cAAA,KACIknB,KAAK,6FACLmhB,OAAO,SACPu0B,IAAI,aAAYpmD,SAACxW,cAAA,KAAAwW,SAAG,YAHjB,YAIPxW,cAAA,KACIknB,KAAK,mGACLmhB,OAAO,SACPu0B,IAAI,aAAYpmD,SAACxW,cAAA,KAAAwW,SAAG,cAHjB,YAIPxW,cAAA,KACIknB,KAAK,6CACLmhB,OAAO,SACPu0B,IAAI,aAAYpmD,SAACxW,cAAA,KAAAwW,SAAG,qBAHjB,YAIPxW,cAAA,KACIknB,KAAK,uCACLmhB,OAAO,SACPu0B,IAAI,aAAYpmD,SAACxW,cAAA,KAAAwW,SAAG,eAHjB,qBAQvBxW,cAAC+8D,GAA8B,CAACv8D,UAAU,cAAagW,SACnDxW,cAACy7D,GAAa,MAElBz7D,cAAC+8D,GAA8B,CAACv8D,UAAU,eAAcgW,SACpDxW,cAAC+5D,GAA2B,CACxBv5D,UAAW8zB,GAAW,uBAAwB6O,EAAU,iBAAmB,IAC3Ek0B,QAASA,IAAM1zB,IAAgBntB,SAE/By/C,eAAA,OAAKz1D,UAAU,eAAcgW,SAAA,CACzBxW,cAACq9D,KAAc,IACfr9D,cAAA,SAAAwW,SAAQ8jB,EAAS,wBACf0I,GAAeb,EAASppB,OAAS,GAAM/Y,cAAA,OAAKQ,UAAU,iBAAgBgW,SAAC,eAInF,EAGG8mD,GAAqBA,KAC9B,MAAMhjC,EAAWQ,KAEjB,OAAOm7B,eAAC+E,GAAiB,CAACx6D,UAAU,aAAYgW,SAAA,CAC5CxW,cAAA,MAAAwW,SAAK8jB,EAAS,+CACdt6B,cAAA,KAAAwW,SAAI8jB,EAAS,6CACbt6B,cAAA,MAAAwW,SAAK8jB,EAAS,gDACdt6B,cAAA,KAAAwW,SAAI8jB,EAAS,8CACbt6B,cAAA,MAAAwW,SAAK8jB,EAAS,+CACdt6B,cAAA,KAAAwW,SAAI8jB,EAAS,+CACG,EAGXijC,GAAuBA,IACzBv9D,cAACk5D,GAAW,CACfC,iBAAiB,qBACjB9Z,QAASr/C,cAACs9D,GAAkB,M,+BCnMpC,MAAME,GAAkB5oC,KAAOikC,GAAG;;EAG5B4E,GAAqB7oC,KAAOikC,GAAG;;;;;;;;;;;EAY/B6E,GAAkC9oC,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;EAuBrC8E,GAAmBphD,IAKP,IALQ,QAC7BqhD,EAAO,eACPhE,EAAc,IACdn5D,KACGiqB,GACYnO,EACf,MAAM,UAAE/b,GAA4B,OAAdo5D,QAAc,IAAdA,IAAkB,CAAC,EAEzC,OAAO3D,eAACyH,GAA+B,CAACl9D,UAAW,sBAAsBA,IAAYgW,SAAA,CACjFxW,cAAA,OAAKS,IAAKA,KAASiqB,IACnB1qB,cAAA,OAAKQ,UAAU,UAASgW,SAAEonD,MACI,EAGzBC,GAAuBA,KAChC,MAAOC,EAAWC,GAAiB7sC,oBAAS,GACtCoJ,EAAWQ,KAEjB,OAAOm7B,eAAAC,WAAA,CAAA1/C,SAAA,CACHxW,cAACg+D,KAAM,CACHC,OAAQ,KACR96B,QAAS26B,EACTphE,MAAO,MACPkuC,MAAOqrB,eAAA,OAAKz1D,UAAU,gBAAegW,SAAA,CAAE8jB,EAAS,sBAAsB,IAACt6B,cAACo9D,KAAM,CAC1E5tC,KAAK,QACL3wB,KAAK,UACLw4D,QAASA,KACL0G,GAAc,EAAM,EACtBvnD,SACJ8jB,EAAS,2BACX95B,UAAU,4BACV09D,QAASA,KACLH,GAAc,EAAM,EACtBvnD,SAEFy/C,eAACuH,GAAe,CAAAhnD,SAAA,CACZy/C,eAAA,KAAAz/C,SAAA,CACK8jB,EAAS,6BAA6Bt6B,cAAC+7D,KAAa,GAAK,SAAW,OAEzE/7D,cAAA,MAAAwW,SAAK8jB,EAAS,kCACbA,EAAS,kCACNt6B,cAAC86D,GAAU,CAAAtkD,SAAiB,KAAZ,YAChBxW,cAAC86D,GAAU,CAAAtkD,SAAkB,KAAb,aAChBxW,cAAC86D,GAAU,CAAAtkD,SAAe,UAAV,UAChBxW,cAAC86D,GAAU,CAAAtkD,SAA0B,YAArB,sBAEpBy/C,eAACwH,GAAkB,CAACj9D,UAAU,eAAcgW,SAAA,CACxCxW,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACLk9D,QAAStjC,EAAS,gCAEtBt6B,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACLk9D,QAAStjC,EAAS,oCAG1Bt6B,cAAA,MAAAwW,SAAK8jB,EAAS,kCACbA,EAAS,kCACNt6B,cAAC86D,GAAU,CAAAtkD,SAAiB,KAAZ,YAChBxW,cAAC86D,GAAU,CAAAtkD,SAAkB,KAAb,aAChBxW,cAAC86D,GAAU,CAAAtkD,SAAe,UAAV,UAChBxW,cAAC86D,GAAU,CAAAtkD,SAA0B,YAArB,sBAEpBy/C,eAACwH,GAAkB,CAACj9D,UAAU,eAAcgW,SAAA,CACxCxW,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACLk9D,QAAStjC,EAAS,gCAEtBt6B,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACLk9D,QAAStjC,EAAS,oCAG1Bt6B,cAAA,MAAAwW,SAAK8jB,EAAS,kCACbA,EAAS,kCACNt6B,cAAC86D,GAAU,CAAAtkD,SAAkB,KAAb,aAChBxW,cAAC86D,GAAU,CAAAtkD,SAAe,UAAV,UAChBxW,cAAC86D,GAAU,CAAAtkD,SAA0B,YAArB,sBAEpBy/C,eAACwH,GAAkB,CAACj9D,UAAU,eAAcgW,SAAA,CACxCxW,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACLk9D,QAAStjC,EAAS,gCAEtBt6B,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACLk9D,QAAStjC,EAAS,oCAG1Bt6B,cAAA,MAAAwW,SAAK8jB,EAAS,kCACbA,EAAS,kCACNt6B,cAAC86D,GAAU,CAAAtkD,SAAkB,MAAb,aAChBxW,cAAC86D,GAAU,CAAAtkD,SAAe,UAAV,UAChBxW,cAAC86D,GAAU,CAAAtkD,SAA0B,YAArB,sBAEpBy/C,eAACwH,GAAkB,CAACj9D,UAAU,eAAcgW,SAAA,CACxCxW,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACLk9D,QAAStjC,EAAS,gCAEtBt6B,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACLk9D,QAAStjC,EAAS,oCAG1Bt6B,cAAA,MAAAwW,SAAK8jB,EAAS,kCACbA,EAAS,kCACNt6B,cAAC86D,GAAU,CAAAtkD,SAAiB,MAAZ,YAChBxW,cAAC86D,GAAU,CAAAtkD,SAAkB,MAAb,aAChBxW,cAAC86D,GAAU,CAAAtkD,SAAe,UAAV,UAChBxW,cAAC86D,GAAU,CAAAtkD,SAA0B,YAArB,sBAEpBy/C,eAACwH,GAAkB,CAACj9D,UAAU,eAAcgW,SAAA,CACxCxW,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACLk9D,QAAStjC,EAAS,gCAEtBt6B,cAAC29D,GAAgB,CACb/D,eAAgB,CAAEp5D,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACLk9D,QAAStjC,EAAS,yCAKlC27B,eAACmH,KAAM,CACH58D,UAAU,yBACV3B,KAAK,UACLw4D,QAASA,KACL0G,GAAc,EAAK,EACrBvnD,SAAA,CAED8jB,EAAS,sBAAsB,IAACt6B,cAACm+D,KAAU,SAEjD,ECnMDC,GAAuBxpC,KAAOikC,GAA6B;;MAE3Dt8C,IAAA,IAAC,YAAE8hD,GAAa9hD,EAAA,OAAK8hD,EAAc,0CAA4C,6BAA6B;;;;;;EAO5GC,GAAoB1pC,KAAOikC,GAAG;;;EAIvB0F,GAAiBhiC,IAKqE,IALpE,QAC3B78B,EAAO,qBACP8O,EAAoB,yBACpBE,EAAwB,UACxBlO,GACyF+7B,EACzF,MAAMjC,EAAWQ,KAEjB,OAAOm7B,eAACmI,GAAoB,CACxB59D,UAAW,oBAA6B,OAATA,QAAS,IAATA,IAAa,KAC5C69D,eAAgB7vD,IAAwBE,GAA0B8H,SAAA,CAEjE9H,EACK1O,cAACs+D,GAAiB,CAAA9nD,SACf9H,EAAyB4B,KAAI3Q,GAASK,cAAA,OAEnCuW,MAAO,CAAEioD,gBAAiB7+D,EAAOhD,OAAW,IAAM+R,EAAyBqK,OAAlC,MADpCpZ,OAIX6O,EACIxO,cAACs+D,GAAiB,CAAC/nD,MAAO,CAAEioD,gBAAiBhwD,KAC7C,KACVxO,cAAA,SAAOQ,UAAU,yBAAwBgW,SAAE8jB,EAAS56B,OACjC,E,sDC5B3B,MAAQ/C,OAAQswC,GAAcvwC,MAAOwwC,IAAgBzwC,EAC/CgiE,GAA0B7pC,KAAOikC,GAAG;aAC7B3rB;cACCD;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BRyxB,GAAWniD,IAcV,IAdW,OACdoiD,EAAM,QACNC,EAAO,eACP/a,EAAc,aACdlO,EAAY,MACZt/B,EAAK,YACLuyB,EAAW,MACXlsC,EAAK,OACLC,GAMH4f,EACG,OAAO05C,eAAA,OAAKz1D,UAAU,oBAAmBgW,SAAA,CACrCy/C,eAAA,OAAKz1D,UAAU,cAAagW,SAAA,CACxBxW,cAACk7D,GAAgB,CAAC9E,SAAU//C,GAlBvB,EAkB0CghD,QAASA,KACpDsH,GAAQ,EACVnoD,SACExW,cAAC6+D,KAAc,MAEnB7+D,cAACk7D,GAAgB,CAAC9E,SAAU//C,GAAS,EAAIuyB,EAAayuB,QAASA,KAC3DuH,GAAS,EACXpoD,SACExW,cAAC8+D,KAAe,MAEpB9+D,cAACk7D,GAAgB,CAAC7D,QAASA,KACvBxT,GAAgB,EAClBrtC,SACExW,cAAC++D,KAAsB,MAE3B/+D,cAACk7D,GAAgB,CAAC7D,QAASA,KACvB1hB,GACKj6B,KAAK4F,IAAI,EAAG5kB,EAAQwwC,IAAe,GACnCxxB,KAAK4F,IAAI,EAAG3kB,EAASswC,IAAgB,EACtC,EACH,EACHz2B,SACExW,cAACg/D,KAAkB,SAG3B/I,eAAA,OAAKz1D,UAAU,eAAcgW,SAAA,CACxBH,GAAS4/C,eAAAC,WAAA,CAAA1/C,SAAA,CAAE,OACRH,EAAQ,EAAI,KAAKqF,KAAKW,MAAM,EAAIhG,EAAQ,IAAM,GAAQqF,KAAKW,MAAc,GAARhG,GAAc,MAC9E,QAAQ3Z,EAAM,SAAIC,EAAO,SAEhC,EAYGsiE,GAAWpE,sBAAkC,CAAAt+B,EAEvD69B,KAAS,IAF+C,YACvDxxB,GACHrM,EACG,MAAO2iC,EAAiBC,GAAsBjuC,oBAAS,IAChDkuC,EAAWC,GAAgBnuC,mBAAS,GACrCouC,EAAoBr1B,iBAA0B,MAC9C2iB,EAAc3iB,iBAAoC,OACjD5zB,EAAOkpD,GAAYruC,oBAAS,IAAM,EAAI0X,IAmB7C,OAjBA6xB,8BAAoBL,GAAK,MACrB3E,WAAY0J,EACZnK,KAAMwK,IAAiB,IAADC,EAAAC,EACO,QAAzBD,EAAAH,EAAkBn3B,eAAO,IAAAs3B,GAAkB,QAAlBC,EAAzBD,EAA2B1iD,WAAW,aAAK,IAAA2iD,GAA3CA,EAA6C3gD,UACzCygD,EACA,EACA,EACH,EAELG,QAASA,IAAMN,GAAaruC,GAAOA,EAAM,IACzC4uC,aAAcA,IAAMR,MAGxB30B,qBAAU,KAAO,IAADmqB,EACO,QAAnBA,EAAAhI,EAAYzkB,eAAO,IAAAysB,GAAnBA,EAAqB/Q,gBAAgB,GACtC,CAACjb,IAEG5oC,cAACu1D,KAAK,CACT74D,MAAO,GAAGwwC,GAAc,OACxB2yB,cAAc,wBACd18B,QAAS+7B,EACTY,aAAa,EACbpuC,SAAUA,IAAMytC,GAAmB,GACnClB,OAAQ,KAAKznD,SAEbxW,cAACy+D,GAAuB,CACpBj+D,UAAU,0BAAyBgW,SAEnCxW,cAAC+/D,KAAgB,CAAC3F,IAAKxN,EACnBoT,aAAc,EAAIp3B,EAClBq3B,iBAAkB,EAClBC,iBAAkB,EAClBC,SAAU,EAAIv3B,EACdw3B,SAtGC,EAuGDC,cAAejG,IACXmF,EAASnF,EAAIzhC,MAAMtiB,MAAM,EAC3BG,SAEDimB,IAAmB,OAAb6jC,GAAO7jC,EACV,OAAOw5B,eAAAC,WAAA,CAAA1/C,SAAA,CACHxW,cAAA,OACIQ,UAAU,wBAAuBgW,SAEjCxW,cAAC0+D,GAAQ,IACD4B,EACJjqD,MAAOA,EACPuyB,YAAaA,EACblsC,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,MAG/B5oC,cAACugE,KAAkB,CACfC,aAAa,wBACbC,aAAc,CAAEC,SAAUxzB,GAAazwB,UAAWwwB,GAAcrmC,WAAY,GAAI4P,SAEhFxW,cAAA,UACI6V,GAAG,kBACHukD,IAAKkF,EACL5iE,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,GAJdw2B,EAAY,QAO9B,OAIX,I,cC7KZ,MAAMuB,GAA8B/rC,aAAOgsC,KAAKC,KAAK;;;;;;;;;;EAW/CC,GAA+BlsC,aAAOgsC,KAAKC,KAAK;;;;;;;EAWzCE,GAAmBxkD,IAGP,IAHQ,SAC7Bk7C,KACG/sC,GACYnO,EACf,MAAM+d,EAAWQ,MACX,WACF6N,EAAU,cACVO,GACAX,GAAW00B,uBAAW1gC,IAAA,IACtB0M,SAAS,YAAET,EAAW,WAAEG,GAAY,cACpCO,GACH3M,EAAA,MAAM,CACHiM,cACAG,aACAO,gBACH,KAED,OAAO+sB,eAAC2K,KAAI,CAACvJ,QAAS71C,GAAKA,EAAEw/C,SAASzvC,qBAAuB7G,EAAIlU,SAAA,CAC7DxW,cAAC2gE,GAA2B,CAACvK,UAAQ,EAACiB,QAAS71C,GAAKA,EAAEw/C,SAASzvC,kBAAkB/a,SAC5E8jB,EAAS,qCAEb7jB,GAAenG,KAAImsB,IAAsC,IAArC,MAAE//B,EAAK,OAAEC,EAAM,MAAEN,EAAK,MAAEga,GAAOomB,EAChD,OAAOz8B,cAAC8gE,GAA4B,CAChCtgE,UAAWmoC,EAAW,KAAOjsC,GAASisC,EAAW,KAAOhsC,EAAS,iBAAmB,GACpF06D,QAASA,KACLnuB,EAAc,CACVP,WAAY,CAACjsC,EAAOC,GACpBisC,YAAavyB,IAET,OAARohD,QAAQ,IAARA,KAAW,CAAC/6D,EAAOC,GAAS0Z,EAAM,EACpCG,SAEDH,EAAQ,EACHrW,cAACs5D,KAAO,CACNH,iBAAiB,sBACjB0C,UAAU,OACVxc,QAASr/C,cAACg7D,GAAiB,CAAAxkD,SACtB8jB,EAAS,uCACO9jB,SAEpBna,IAEHA,GApBgC,GAAGK,KAASC,IAqBvB,MAEhC,E,2ECvEX,MAAMskE,GAAiCrsC,KAAOikC,GAAG;;;;;;;;;;;EAapCqI,GAAUA,IACZlhE,cAACmhE,KAAI,IAEhBD,GAAQE,SAAW,IACRphE,cAACihE,GAA8B,CAACzgE,UAAU,mBAAkBgW,SAC/DxW,cAACmhE,KAAI,CAAC3xC,KAAK,Y,cCenB,MAAM6xC,GAAgBA,CAACC,EAA+B//D,EAAgChD,KAClF,IAAKgD,EAAO,OAAO+/D,EACnB,MAAQ5kE,MAAO6kE,EAAW5kE,OAAQ6kE,EAAU,EAAEpuD,EAAI,EAAC,EAAEC,EAAI,EAAC,KAAEC,GAASguD,EAGrE,GAAa,OAAThuD,EAAe,CACf,MAAMmuD,EAAwB,GACxBC,EAAwB,IAAM,KAC5BhlE,MAAOsmD,EAAYrmD,OAAQsmD,GAAgB1hD,EAG7CogE,EADsB1e,EAAcD,GAAeye,EACjBC,EAAwB,EAC1DE,EAAQlmD,KAAK6F,KAAM,OAADnO,QAAC,IAADA,IAAK,GAAKuuD,EAAY3e,GACxC6e,EAAQnmD,KAAK6F,KAAM,OAADlO,QAAC,IAADA,IAAK,GAAKsuD,EAAY1e,GACxC6e,EAAWpmD,KAAK6F,KAAc,OAATggD,QAAS,IAATA,IAAa,GAAKI,EAAY3e,GAEzD,MAAO,CACH1vC,KAAM,IACNF,EAAGwuD,EAAQ5e,EAAa,IACxB3vC,EAAGwuD,EAAQ5e,EAAc,IACzBvmD,MAAOolE,EAAW9e,EAAa,IAC/BrmD,OAAQmlE,GAAiB,OAALvjE,QAAK,IAALA,IAAS,GAAK0kD,EAAc,IAChD1vC,OAAQhV,EAEhB,CAEA,GAAI6U,EAAI,EAAG,MAAO,IAAKkuD,EAAMluD,EAAG,GAChC,GAAIC,EAAI,EAAG,MAAO,IAAKiuD,EAAMjuD,EAAG,GAChC,MAAM,cAAE0uD,EAAa,aAAEpO,GAAiBpyD,EAClC7E,EAAiB,OAAT6kE,QAAS,IAATA,IAAa,EACrB5kE,EAAmB,OAAV6kE,QAAU,IAAVA,IAAc,EAEvBQ,EAAkF,KAA/DD,EAAgBpO,EAAeoO,EAAgBpO,GAElEsO,EADoBvmD,KAAK0F,IAAIzkB,EAASolE,EAAgBxjE,EAAQ7B,EAAQi3D,IAAiBqO,EAEvFrlE,EACAD,EAAQ6E,EAAMoyD,aACVp1D,EACAgD,EAAMwgE,cAGVG,EAAgBD,EAAa,IAC7BE,EAAmBD,EAAgB,EACnC,IACAD,EACAG,EAAkBF,EAAgB,EAClCxlE,EAAQwlE,EACRxlE,EACA2zC,EAAc6xB,EAAgB,GAC7B,IAAME,GAAmB,EACzBhvD,EAAI,EAAI,EAAIA,EACbk9B,EAAc4xB,EAAgB,GAE7B7uD,EAAI,EADL,EACaA,EAEnB,MAAO,IACAiuD,EACHluD,EAAGi9B,EACHh9B,EAAGi9B,EACH3zC,OAAQwlE,EACRzlE,MAAO0lE,EACP7uD,OAAQhV,EACX,EA6BQ8jE,GAAexH,sBAA0C,CAAAt+C,EAmBrD+lD,KAAkB,IAnBoC,MACnE13B,EAAK,gBACL4zB,EAAe,UACfh+D,EAAS,SACT+hE,EAAQ,kBACRC,EAAiB,sBACjBC,EAAwB,GAAE,sBAC1BC,EAAwB,GAAE,gBAC1BC,EAAe,SACfnsD,EAAQ,cACRosD,EAAa,gBACbC,EAAe,MACftkE,EAAK,eACLukE,EAAiBA,OAAS,eAC1BC,EAAiBA,OAAS,aAC1BC,EAAeA,OAAS,UACxBC,EAAYA,OAAS,kBACrBC,EAAoBA,OAAS,iBAC7BC,EAAmBA,QACR5mD,EACX,MAAM6mD,EAAgD,YAAtBZ,EAC1B,UACA,SACAloC,EAAWQ,KACXuoC,EAAep5B,iBAAc,OAE/Bq5B,EACAC,GACAryC,mBAAsD,cACnDsyC,EAAcC,GAAmBvyC,mBAAS,IAC1CwyC,EAAYC,GAAiBzyC,mBAA+BkyC,IAC5DQ,EAAWC,GAAgB3yC,mBAA+BkyC,IAC1DU,EAAgBC,GAAqB7yC,mBAASuxC,IAC9CjoC,EAAWiiC,GAAcvrC,oBAAS,IAClCzP,EAAOuiD,GAAY9yC,mBAAc,OACjC+yC,EAAYC,GAAiBhzC,oBAAS,IACtCizC,EAAgBC,GAAqBlzC,mBAASwxC,GAC/C2B,EAASp6B,iBAAgC,OACxCq3B,EAAMgD,GAAWpzC,mBAAS,CAC7BiX,QAAS06B,EACT0B,UAAW,QAGRC,EAAYC,GAAevzC,mBAAkC,MAAzB2xC,EAAgBvvD,OAEvD60B,QAASu8B,EACTH,UAAWI,GACXrD,EA2BEsD,EAAc36B,iBAAO,CACvB8F,OAAQ,GACRuxB,KAAM,OAEJuD,EAAS1zC,uBAAa2zC,IAMxB,GALArI,GAAW,GACXuH,EAAS,MACTlB,EAAeQ,GACfe,EAAOl8B,QAAU28B,EAEbA,EAAIpkE,MAAQkkE,EAAYz8B,QAAQ4H,QAAU60B,EAAYz8B,QAAQm5B,KAAM,CACpE,MAAMyD,EAAaC,EAAU78B,QAC7BwC,YAAW,KACP,GAAIo6B,IAAeC,EAAU78B,UAAYy8B,EAAYz8B,QAAQm5B,KAAM,OACnE,MAAM2D,EAAiB5D,GAAcuD,EAAYz8B,QAAQm5B,KAAMwD,EAAKvmE,GACpE+lE,EAAQ,CACJC,UAAWU,EACX98B,QAAS88B,IAEbR,GAAY,GACZG,EAAYz8B,QAAU,CAClB4H,OAAQ,GACRuxB,KAAM,KACT,GACF,IACP,MACI32B,YAAW,KACP25B,GAAQv+D,IACJ,MAAMk/D,EAAiB5D,GAAct7D,EAAIoiC,QAAS28B,EAAKvmE,GAEvD,MAAO,CACHgmE,UAAWU,EACX98B,QAAS88B,EACZ,IAELR,GAAY,EAAK,GAClB,IACP,GACD,CAACnB,EAAaR,EAAgBvkE,IAajCksC,qBAAU,KAAO,IAADy6B,EAAAC,EAAAC,EAAAC,EACZ,MAAM9jE,EAAQ8iE,EAAOl8B,QACrB,IAAKw8B,IAAkBhC,IAAoBphE,EAAO,OAElD,MAAQgS,OAAQhV,GAAUomE,EAG1BhC,EAAgBpsD,MAAM+uD,UAAY,WAClC,MAAMxoD,EAAM6lD,EAAgB5lD,WAAW,MACvC,IAAKD,GAAwB,kBAAVve,GAAsBA,GAAS,EAAG,OAErD,MAAM,cAAEwjE,EAAa,aAAEpO,GAAiBpyD,EAClCgkE,EAAQ5R,EAAepyD,EAAM7E,MAC7B8oE,EAAQzD,EAAgBxgE,EAAM5E,OAC9B8oE,EAA6B,QAArBP,EAAGP,EAAcrxD,YAAI,IAAA4xD,IAAI,KACjCQ,EAAav+C,OAAOw+C,iBAE1B7oD,EAAI64B,aAAa+vB,EAAY,EAAG,EAAGA,EAAY,EAAG,GAElD,IAeIE,EAfAC,EAAoBnqD,KAAKuC,OAA0B,QAApBknD,EAACR,EAAcjoE,aAAK,IAAAyoE,IAAI,IAAmB,OAAbM,EAAoBF,EAAQ5R,EAAe,MACxGmS,EAAYpqD,KAAK6F,IAAIoyC,EAAckS,GACnCE,EAAqBrqD,KAAKuC,MAAM4nD,EAAoBtnE,GACpDynE,EAAatqD,KAAK6F,IAAIwgD,EAAegE,GACrCE,EAAkBvqD,KAAK6F,IACvBoyC,EACAj4C,KAAKuC,OAAsB,QAAhBmnD,EAACT,EAAcvxD,SAAC,IAAAgyD,IAAI,IAAmB,OAAbK,EAAoBF,EAAQ5R,EAAe,OAEhFuS,EAAkBxqD,KAAK6F,IACvBwgD,EACArmD,KAAKuC,OAAsB,QAAhBonD,EAACV,EAActxD,SAAC,IAAAgyD,IAAI,IAAmB,OAAbI,EAAoBD,EAAQzD,EAAgB,OAGrF,GADAjlD,EAAIqpD,sBAAwB,SACxBL,GAAa,GAAKE,GAAc,GAApC,CAIA,GAEKC,EAAkBH,EAAanS,GAC5BuS,EAAkBF,EAAcjE,GAEjCkE,EAAkB,GAClBC,EAAkB,GAElBxqD,KAAK0F,KAAKykD,EAAoBC,GAAaA,GAAa,KACxDpqD,KAAK0F,KAAK2kD,EAAqBC,GAAcA,GAAc,IAChE,CAOwB,WALAznE,EAAQwjE,EAAgBpO,EAAe,QAAU,WAMnEmS,EAAYnS,EACZqS,EAAaF,EAAYvnE,EACzB0nE,EAAkB,EAClBC,GAAmBnE,EAAgBiE,GAAc,EACjDJ,EAAc,CACVtyD,KAAM,IACNC,OAAQhV,EACR5B,OAAQqpE,EAAajE,EAAgB,IACrCrlE,MAAOopE,EAAYnS,EAAe,IAClCvgD,EAAG,EACHC,EAAG6yD,EAAkBnE,EAAgB,OAGzC+D,EAAY/D,EAAgBxjE,EAC5BynE,EAAajE,EACbkE,GAAmBtS,EAAemS,GAAa,EAC/CI,EAAkB,EAClBN,EAAc,CACVtyD,KAAM,IACNC,OAAQhV,EACR5B,OAAQqpE,EAAajE,EAAgB,IACrCrlE,MAAOopE,EAAYnS,EAAe,IAClCvgD,EAAG6yD,EAAkBtS,EAAe,IACpCtgD,EAAG,GAGf,CAIA,GAAIkvD,EAAU,CAEY,WADAhkE,EAAQwjE,EAAgBpO,EAAe,QAAU,WAEnEmS,EAAYnS,EACZqS,EAAaF,EAAYvnE,IAEzBunE,EAAY/D,EAAgBxjE,EAC5BynE,EAAajE,GAEjBY,EAAgBjmE,MAAQopE,EACxBnD,EAAgBhmE,OAASqpE,EACzBlpD,EAAIiC,UACAxd,EACA,EACA,EACAoyD,EACAoO,EACA,EACA,EACA+D,EACAE,EAER,KAAO,CAAC,IAADI,EAAAC,EACH1D,EAAgBjmE,MAAkB,QAAb0pE,EAAIN,SAAS,IAAAM,IAAI,EACtCzD,EAAgBhmE,OAAoB,QAAd0pE,EAAIL,SAAU,IAAAK,IAAI,EACxCvpD,EAAIiC,UACAxd,EACA0kE,EACAC,EACAJ,EACAE,EACA,EACA,EACAF,EACAE,EAER,CACmB,YAAftC,IAA2C,OAAdI,QAAc,IAAdA,IAAkB,IAAI/qD,QAAU,GACxDxa,IAAUomE,EAAcpxD,QAC7ByvD,EAAa2B,EAAejB,EAAYO,GAExC2B,GACAtB,GAAQv+D,IAAG,IAAUA,EAAKoiC,QAASy9B,KA9FM,CA+F7C,GAED,CAACjB,EAAehC,EAAiBa,EAAcjB,IAElD93B,qBAAU,KACNy5B,GAAc,GACdI,GAAQv+D,IACJ,GAAsB,MAAlBs+D,EAAOl8B,SAAmBpiC,EAAIoiC,QAAS,CACvC,MAAMm+B,EAAWjF,GAAct7D,EAAIoiC,QAASk8B,EAAOl8B,QAAS5pC,GAC5D,MAAO,CACH4pC,QAASm+B,EACT/B,UAAW+B,EAEnB,CACA,OAAOvgE,CAAG,GACZ,GACH,CAACxH,IAEJ,MAAMymE,EAAY/6B,iBAAO,GACzBwwB,8BAAoB6H,GAAc,MAC9B9nC,UAAWA,IAAMA,EACjB+rC,SAAUA,IAAiC,kBAAnBzC,GAA+BA,EAAe/qD,OAAS,GAAoB,YAAf2qD,GAClD,kBAAnBS,GAA+BA,EAAeprD,OAAS,GAAoB,WAAf2qD,EAC3E8C,YAAaA,CAAC3nE,EAA4BkxC,EAAQ02B,KAC9C,MAAMC,EAA+B,YAAfhD,EAA2BI,EAAiBK,EAClED,GAAc,GACVwC,IAAkB32B,IAClB0sB,GAAW,GACXkH,EAAc9kE,GACdglE,EAAahlE,GACbkkE,EAAelkE,EAAMkxC,GACR,YAATlxC,EACAklE,EAAkBh0B,GACfq0B,EAAkBr0B,IAE7BwzB,EAAe,aACfkB,EAA8B,MAAlBgC,EAASnzD,MACrB0xD,EAAU78B,SAAW,EACrBy8B,EAAYz8B,QAAU,CAClB4H,SACAuxB,KAAMmF,GAEVhD,GAAgB19D,GAAOA,EAAM,GAAE,MAIvC,MAAMwgE,EAA2B,YAAf7C,IAA2C,OAAdI,QAAc,IAAdA,IAAkB,IAAI/qD,OAAS,GACvD,WAAf2qD,IAA0C,OAAdS,QAAc,IAAdA,IAAkB,IAAIprD,OAAS,EAC7D4tD,GAAiBhE,GAAmB4D,IAAa/rC,IAA0B,OAAbmqC,QAAa,IAAbA,OAAa,EAAbA,EAAejoE,SAAsB,OAAbioE,QAAa,IAAbA,OAAa,EAAbA,EAAehoE,QAC3G,OACIs5D,eAAA,OAAKz1D,UAAW,sBAAsBA,IAAYgW,SAAA,CAC9Cy/C,eAAA,OAAKz1D,UAAU,0BAAyBgW,SAAA,CACnCA,EACDy/C,eAAA,OAAKz1D,UAAU,oCAAmCgW,SAAA,CAC9Cy/C,eAAA,OAAKz1D,UAAU,gCAA+BgW,SAAA,CAC1Cy/C,eAAA,QAAMz1D,UAAU,cAAagW,SAAA,CACxBo0B,EAAM,IAAC5qC,cAACy5D,GAAU,CACfC,KAAMkN,KACNhN,eAAgB,CAAEp5D,UAAWmmE,GAAiB,GAAK,YACnDhN,aAAc,CACV1M,QAAS0Z,GACHrsC,EAAS,0BACTA,EAAS,8BAEnB+8B,QAASA,IAAOsP,IAAkBhE,GAhblE,SAA0BxqD,EAAkCmpD,GACnDA,GAASnpD,GACdA,EAAOo8C,QACFxtC,IACG,GAAa,OAATA,EAAe,CACf,MAAM8/C,EAAa1/C,OAAOC,IAAIC,gBAAgBN,GAExC+/C,EAAStoD,SAASC,cAAc,KACtCqoD,EAAO7/C,SAAW,mBAClB6/C,EAAO5/C,KAAOE,IAAIC,gBAAgBN,GAClC+/C,EAAOv8B,QAEPpjB,OAAOC,IAAIstC,gBAAgBmS,EAC/B,IAEJ,YACA,EAER,CA8ZsFE,CAAiBpE,EAAiBgC,QAGhG1O,eAACiH,KAAMC,MAAK,CACR38D,UAAU,+BACVi3D,SAAUj2C,IACN,MAAMplB,EAAQolB,EAAE6mB,OAAOjsC,MACvBynE,EAAaznE,KAEO,OAAd0nE,QAAc,IAAdA,IAAkB,IAAI/qD,OAAS,GAAe,YAAV3c,IACnB,OAAd+nE,QAAc,IAAdA,IAAkB,IAAIprD,OAAS,GAAe,WAAV3c,KAEzCunE,EAAcvnE,GACA,YAAVA,GACAmnE,EAAe,aACfR,EAAe,UAAWe,IAE1Bf,EAAe,SAAUoB,GAE7B1H,GAAW,GACf,EAEJrgE,MAAOwnE,EAAUptD,SAAA,CAEjBxW,cAACk9D,KAAME,OAAM,CAAChhE,MAAO,SAAUw/D,QAAuB,WAAdgI,EAAuBptD,SAC1D8jB,EAAS,yCAEdt6B,cAACi4D,KAAO,CACJ4D,UAAU,UACVjxB,MAAO5qC,cAAA,OAAKQ,UAAU,gBAAegW,SAChC8jB,EAAS,mCACP9jB,SAEPxW,cAACk9D,KAAME,OAAM,CAAChhE,MAAO,UAAWw/D,QAAuB,YAAdgI,EAAwBptD,SAC5D8jB,EAAS,kDAK1B27B,eAAA,OAAKz1D,UAAW,CAAC,mBAAkC,WAAdojE,EAAyB,GAAK,kBAAkBh1D,KAAK,KAAK4H,SAAA,CAC3FxW,cAACgnE,KAAK,CACFC,YAAa3sC,EAAS,6BACtBl+B,MAAO+nE,EACP1M,SArPGj2C,IACvB,MAAMuuB,EAASvuB,EAAE6mB,OAAOjsC,MAExBmnE,EAAe,aACf9G,GAAW,GACXkH,EAAc,UACdE,EAAa,UACbd,EAAe,SAAUhzB,GACzBq0B,EAAkBr0B,EAAO,EA8OLm3B,UAAW,IACXC,YAAU,GALH,OAOVnnE,cAAA,OAAKQ,UAAU,mBAAkBgW,SAC7B8jB,EAAS,iCAGlB27B,eAAA,OAAKz1D,UAAW,CAAC,mBAAkC,YAAdojE,EAA0B,GAAK,kBAAkBh1D,KAAK,KAAK4H,SAAA,CAC5FxW,cAACgnE,KAAK,CAAC5M,IAAKiJ,EACRxkE,KAAK,OACL04D,OAAO,UACPE,SAlUIj2C,IACxB,GAAIA,EAAE6mB,OAAOsvB,OAASn2C,EAAE6mB,OAAOsvB,MAAM5+C,OAAS,EAAG,CAC7C,MAAM8+C,EAAar2C,EAAE6mB,OAAOsvB,MAAM,GAC5ByP,EAAc,EAEpB,GAAIvP,EAAWroC,KAAqB,KAAd43C,EAAqB,KAAM,CAC7C3K,GAAW,GACX,MAAMx9B,EAAS,IAAI03B,WACnB13B,EAAO+L,iBAAiB,QAAQ,KACC,kBAAlB/L,EAAO1/B,SACdgkE,EAAe,aACfQ,EAAkB9kC,EAAO1/B,QACzBokE,EAAc,WACdE,EAAa,WACbd,EAAe,UAAW9jC,EAAO1/B,QACjCk9D,GAAW,GACf,IAEJx9B,EAAOooC,cAAcxP,EACzB,MACIqL,EAAkBkE,EAE1B,MAAOE,MAAMhtC,EAAS,mCAAmC,EA6SrC+8B,QAASA,KAAA,IAAAkQ,EAAA,OAA0B,QAA1BA,EAAMlE,EAAal7B,eAAO,IAAAo/B,OAAA,EAApBA,EAAsBC,SAAS,GAAG,IAErDxnE,cAAA,SACCs6B,EAAS,0CAIrBsoC,EACD3M,eAAA,OAAKz1D,UAAU,eAAeuxB,UAAWA,KAErCmyC,GAAc,EAAK,EACrB1tD,SAAA,CACGgkB,GAAax6B,cAACkhE,GAAQE,SAAQ,IAC7BmF,IAAa9kD,GAAUw0C,eAAA,OAAKz1D,UAAU,oBAAmBgW,SAAA,CACvDxW,cAACi4D,KAAO,CACJ4D,UAAU,OACV5O,QAASsV,EACHjoC,EAAS,yCACTA,EAAS,0CAA0C9jB,SAEzDxW,cAAA,OACIQ,UAAW8zB,GAAW,gCAAiCiuC,EAAW,gBAAkB,IACpFlL,QAASA,KACL6M,GAAc,GACdf,GAAkBZ,EAAS,EAC7B/rD,SAEFxW,cAACg/D,KAAkB,SAGzBuD,GAAYviE,cAACi4D,KAAO,CAAC4D,UAAU,OAAO5O,QAAS3yB,EAAS,gDAAgD9jB,SACtGxW,cAAA,OAAKQ,UAAU,uCAAuC62D,QAASA,KAC3D6M,GAAc,GACdI,GAAQv+D,IAAQ,IAAD0hE,EACX,MAAM,MAAE/qE,EAAK,EAAE0W,GAAmB,QAAhBq0D,EAAG1hE,EAAIw+D,iBAAS,IAAAkD,IAAI,CAAC,EAEvC,GAAqB,kBAAV/qE,GAAmC,kBAAN0W,EAAgB,OAAOrN,EAC/D,MAAM2hE,EAA0B,IACzB3hE,EAAIw+D,UACPnxD,GAAI,IAAM1W,GAAS,GAGvB,MAAO,CACHyrC,QAASu/B,EACTnD,UAAWmD,EACd,GACH,EACJlxD,SACExW,cAAC2nE,KAA2B,SAGlCpF,GAAYviE,cAACi4D,KAAO,CAAC4D,UAAU,OAAO5O,QAAS3yB,EAAS,kDAAkD9jB,SACxGxW,cAAA,OAAKQ,UAAU,uCAAuC62D,QAASA,KAC3D6M,GAAc,GACdI,GAAQv+D,IAAQ,IAAD6hE,EACX,MAAM,OAAEjrE,EAAM,EAAE0W,GAAmB,QAAhBu0D,EAAG7hE,EAAIw+D,iBAAS,IAAAqD,IAAI,CAAC,EAExC,GAAsB,kBAAXjrE,GAAoC,kBAAN0W,EAAgB,OAAOtN,EAChE,MAAM2hE,EAA0B,IACzB3hE,EAAIw+D,UACPlxD,GAAI,IAAM1W,GAAU,GAGxB,MAAO,CACHwrC,QAASu/B,EACTnD,UAAWmD,EACd,GACH,EACJlxD,SACExW,cAAC2nE,KAA2B,aAIrCpB,GAAa9kD,QAAyBzI,IAAhBsqD,IAA+BtjE,cAAC6nE,KAAK,CAC1DxgC,YAAa/M,EAAS,mCACtB/4B,MAAO,OAEXvB,cAAC8nE,KAAS,CACNpnE,IAAoB,YAAfgjE,EAA2BI,EAAiBK,EACjD/N,SAAUmM,EACV/hE,UAAW+hE,EAAW,eAAiB,GACvCwF,WAAYvJ,EACN,CACEA,mBAEF,CACEwJ,gBAAiB,8DAEzBC,cAAepD,EACfqD,aAAcA,KAKV,GAJAtD,EAAYz8B,QAAU,CAClB4H,OAAQ,GACRuxB,KAAM,MAELqB,EAKA,GACe,WAAfe,GAAsD,MAAZ,OAAdS,QAAc,IAAdA,IAAkB,KAC5B,YAAfT,GAAuD,MAAZ,OAAdI,QAAc,IAAdA,IAAkB,IACrD,CACE,MAAM,MAAEpnE,EAAK,OAAEC,GAAWgmE,EACpB7lD,EAAM6lD,EAAgB5lD,WAAW,MAEpC,OAAHD,QAAG,IAAHA,KAAK4xB,UAAU,EAAG,EAAGhyC,EAAOC,GACxBgoE,GAAe3B,EAAa2B,EAAejB,EAAYO,GAC3DnB,EAAeQ,GACf7G,GAAW,GACXuH,EAAS,kBACb,MACIT,OAAevqD,GACfiqD,SAlBAxG,GAAW,GACXuH,EAAS,uBACTf,SAkBgBjqD,IAAhBsqD,IACA7G,GAAW,GACXuH,EAAS,kBACb,EAEJ1C,KAAMoD,EACNyD,YAAaA,KACTjE,GAAc,EAAK,EAEvBzM,SAAUA,CAAC2Q,EAAeC,KACtB,MAAM9mE,EAAQ8iE,EAAOl8B,QACjBy8B,EAAYz8B,QAAQm5B,OACnBkD,EASDF,GAAQv+D,IACG,IACAA,EACHoiC,QAASk5B,GAAcgH,EAAiB9mE,EAAOhD,QAXvDkmE,GAAY,GACZH,GAAQv+D,IACG,IACAA,EACHoiC,QAASk5B,GAAc+G,EAAe7mE,EAAOhD,QAUzD,EAEJ+pE,WAAYA,CAAC/c,EAAGgd,KACP3D,EAAYz8B,QAAQm5B,MAAMgD,GAAQv+D,IAAG,IAAUA,EAAKw+D,UAAWgE,KAAe,EAEvFC,cAAc,EACdlF,YAAaA,GAvED,GAAGI,KAAcc,KAAchB,UA0EjD,ICloBRiF,GAAwB7zC,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0F3B6P,GAAkBnsD,IAKP,IALQ,OAC5B8c,EAAM,aACNsvC,EAAe,GAAE,SACjBlR,EAAWA,OAAQ,eACnBmR,GACcrsD,EACd,MAAOssD,EAAcC,GAAmB53C,mBAASy3C,GAC3CruC,EAAWQ,KAEXiuC,EAAsB1kD,KAAKilB,UAAUu/B,GAM3C,OALAp+B,qBAAU,KACNgtB,EAASoR,EAAa,GAEvB,CAACE,IAEG9S,eAACwS,GAAqB,CAACjoE,UAAW8zB,GAAW,sBAAuB+E,EAAS,iBAAmB,oBAAoB7iB,SAAA,CACvHxW,cAAA,OAAKQ,UAAU,QAAOgW,SAClBxW,cAAC27D,KAAQ,CACLC,QAASviC,EACTo+B,SAAUj2C,GAAKonD,EAAepnD,EAAE6mB,OAAOuzB,SAASplD,SAClD8jB,EAAS,yBAEft6B,cAAA,OAAKQ,UAAU,YAAWgW,SACrB,IAAIiN,MAAM,IAAInT,KAAI,CAACi7C,EAAGz6B,KACnB,MAAMk4C,EAAkB,GAAGl4C,EAAQ,IAEnC,MAAwB,MAApBk4C,EAAgChpE,cAACi4D,KAAO,CAExChL,QAAS5zB,EAASiB,EAAS,6BAA+B,KAAK9jB,SAE/DxW,cAAA,OAAKQ,UAAU,oBAAoB62D,QAASA,KACpCh+B,GAAQyvC,EAAgB,GAAG,EACjCtyD,SACExW,cAACC,IAAmB,OANpB,KAUDD,cAAA,OACHQ,UAAW,6BAA6BswB,EAAQ,KAAK+3C,EAAa5mD,SAAS+mD,GAAmB,iBAAmB,KACjH3R,QAASA,KACDh+B,GAAQyvC,GAAgB/iE,IACxB,IAAIkjE,EAAS,IAAIljE,GAKjB,OAHIkjE,EAAOhnD,SAAS+mD,GAAkBC,EAASA,EAAOp5C,QAAOtf,GAASA,IAAUy4D,IAC3EC,EAAOluB,KAAKiuB,GAEVC,CAAM,GACf,EACJzyD,SAEFxW,cAAA,OACIQ,UAAW,qCAAqCswB,EAAQ,IACxDva,MAAO,CAAE+uD,UAAW,UAAUr2D,GAAe6hB,8BAfpCk4C,EAiBX,QAGM,ECvJfE,GAAiB/5C,GACnBnvB,cAACm4D,GAAa,CAACt8B,SAAU77B,cAAAk2D,WAAA,IAAM1/C,SAClCxW,cAACmpE,KAAM,IAAKh6C,MAIPi6C,GAAkBx0C,KAAOikC,GAAG;;;;;;;;;;;;;;;EAiB5BwQ,GAAuBz0C,KAAOikC,GAAG;;;;;;;;;;;;;;EAuBjCyQ,GAAiB,CAC1BC,UATmC30C,KAAOikC,GAAG;;;;;;;EAU7C2Q,OAAQH,IC1CNI,GAAuB70C,aAAOwoC,KAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6C9BsM,GAAiB7O,sBAA8C,CAAAt+C,EAOzE69C,KAAS,IAPiE,UACzE5wB,EAAS,eACTC,EAAc,iBACd8lB,EAAgB,YAChB3mB,EAAW,UACXgjB,EAAS,gBACT/hB,GACHttB,EACG,MAAM+d,EAAWQ,MACX,YACF0N,GACAD,GAAW00B,uBAAW1gC,IAAA,IACtB0M,SAAS,YAAET,IACdjM,EAAA,MAAM,CACHiM,cACH,MACK,SAAEoB,GAAa+hB,IACjB,EACAC,EACA,CACI2D,mBACA9lB,iBACAnP,WACAsO,iBAGF,gBACFc,GACAkiB,EACEjiB,EAAYM,iBAAO,CACrB4B,gBAAiBiD,QAAQC,UACzBnD,iBAAiB,KAEd+9B,EAAeC,GAAkB14C,oBAAS,GAC3C4Y,EAAqB3Y,uBAAY,KACnCy4C,GAAe,EAAM,GACtB,KACG,OAAE/8B,EAAM,kBAAEG,GAAsBzD,GAAc,CAChDC,YACAC,iBACAC,kBACAC,YACAC,WACAC,kBACAC,uBAGE7iB,EAAYuI,IACVm6C,IACAngC,EACArC,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,sCAI1BsvC,GAAe,GACf/8B,EAAOrd,IACD,EAOV,OALAirC,8BAAoBL,GAAK,MACrBnzC,WACA+lB,wBAGAxD,EAAkB,KACfysB,eAAA,OAAKz1D,UAAU,wBAAuBgW,SAAA,CACzCxW,cAAA,OAAK6V,GAAG,wBACRogD,eAACwT,GAAoB,CAACjpE,UAAU,cAAcqV,GAAG,oBAAmBW,SAAA,CAChExW,cAACi4D,KAAO,CAAChL,QAASzkB,EAAcxoC,cAAAk2D,WAAA,CAAA1/C,SAAE,sBAAkB,KAAKA,SACrDxW,cAAA,OAAKQ,UAAU,eAAcgW,SACzBxW,cAAA,OAAKQ,UAAU,gBAAgB62D,QAASA,IAAMpwC,IAAWzQ,SACpDmzD,EACKrvC,EAAS,iCACTA,EAAS,+BAI3Bt6B,cAAC6pE,KAAQ,CACLzT,SAAUuT,EACVnpE,UAAU,uBACVq7D,UAAU,cACV5O,QAASjtD,cAAC+gE,GAAgB,CAACtJ,SAAUA,IAAM5kC,OAAmBrc,SAE9DxW,cAAA,OAAKQ,UAAU,gBAAgB62D,QAAS71C,GAAKA,EAAE+P,kBAAkB/a,SAC7DxW,cAAC8pE,KAAY,aAIvB,I,iECnIV,MAAMC,GAAwBn1C,KAAOikC,GAAG;MAClClkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2DAq1C,GAA2Bp1C,aAAOD,GAAuB;;;;;;;;;;;;;;;;;;EAyBzDs1C,GAAqB1tD,IAKA,IALC,KACxBS,EAAI,SACJxG,EAAQ,SACR4/C,EAAQ,SACR8T,GACiB3tD,EACjB,MAAO4tD,EAAkBC,GAAmBl5C,oBAAS,GASrD,OAAO+kC,eAAC+T,GAAwB,CAC5B5T,SAAUA,EACViB,QAAS71C,IAVkB6oD,MAWvB7oD,EAAE+P,kBAXqB84C,EAYDrtD,EAX1BstD,KAAKD,GACLD,GAAgB,GAChBz/B,YAAW,KACPy/B,GAAgB,EAAM,GACvB,IAO4B,EAC7B5zD,SAAA,CAED2zD,EACKnqE,cAAA,OAAKQ,UAAU,mBAAkBgW,SAC9B0zD,EACKjU,eAAAC,WAAA,CAAA1/C,SAAA,CAAE,aAAYxW,cAACuqE,KAAa,OAC5BvqE,cAACuqE,KAAa,MAEtB,KACL/zD,IACsB,EAIlBg0D,GAAyBlwC,GAAqC,CACvE,CACIj+B,MAAOi+B,EAAS,qCAChBl+B,MAAO,YACPquE,UAAWnlD,IAEf,CACIjpB,MAAOi+B,EAAS,iCAChBl+B,MAAO,QACPquE,UAAWzgD,KAiBN0gD,GAAc7P,sBAAW,CAAAt+B,EAMtB69B,KAA6C,IANtB,QACnCuQ,EAAO,cACPrpB,EAAa,oBACbspB,EAAmB,kBACnBC,EAAiB,QACjB3M,GACU3hC,EACV,MAAO4G,EAASsyB,GAAcvkC,oBAAS,IAChC45C,EAAMC,GAAW75C,mBAAqB,cACtC85C,EAAkBC,GAAuB/5C,mBAAiF,CAC7Hg6C,MAAO,CAAEvtE,KAAM,GAAIqf,KAAM,GAAIwI,WAAW,GACxC2lD,UAAW,CAAExtE,KAAM,GAAIqf,KAAM,GAAIwI,WAAW,MAE1C,YACFgjB,EAAW,WACXG,GACAJ,GAAW00B,uBAAWxgC,IAAA,IACtBwM,SAAS,YAAET,EAAW,WAAEG,IAC3BlM,EAAA,MAAM,CACH+L,cACAG,aACH,KACKrO,EAAWQ,KACXswC,EAAU,mBACVC,EAAal6C,uBAAY,KAC3B,MAAMkX,EAAS7pB,SAASktB,eAAe0/B,GACnC/iC,IACAA,EAAOpV,QACPoV,EAAOijC,SACX,GACD,IAUH7Q,8BAAoBL,GAAK,MACrBmR,YAAa,SAAC5pD,MAAqB7I,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,KAChB28C,GAAW,GAC1BwV,EAAoBT,GAAsBlwC,GACrChqB,KAAIitB,IAA2B,IAA1B,MAAEnhC,EAAK,UAAEquE,GAAWltC,EACtB,IACI,MAAM,UACF/X,EAAS,OACTjmB,GACAkrE,EAAU9oD,EAAM2/B,GAEpB,MAAO,CACHllD,QACAopB,YACA7nB,KAAMgpB,GAAkBhF,EAAKhkB,MAC7Bqf,KAAM,GAAGqH,KAAKilB,UAAU/pC,KAEhC,CAAE,MAAOiiB,GAGL,OAFAhJ,QAAQiJ,MAAMD,GAEP,CACHplB,QACAopB,WAAW,EACX7nB,KAAM,UACNqf,KAAM,GAEd,KAEHnX,QAA+E,CAACulD,EAAIztB,KAAwC,IAAtC,KAAE3gB,EAAI,UAAEwI,EAAS,MAAEppB,EAAK,KAAEuB,GAAMggC,EAGnH,OAFAytB,EAAKhvD,GAAS,CAAEuB,OAAMqf,OAAMwI,aAErB4lC,CAAI,GACZ,IAAK4f,IAEhB,MAGJvgC,qBAAU,KACNE,YAAW,KACHxH,GAAoB,cAAT2nC,GAAsBO,GAAY,GAClD,IAAI,GACR,CAACP,EAAMO,EAAYloC,IAEtB,MAAM,KACFnmB,EAAI,UACJwI,EAAS,KACT7nB,GACAqtE,EAAiBF,GACrB,OAAO7U,eAAAC,WAAA,CAAA1/C,SAAA,CACHxW,cAACu1D,KAAK,CACFpyB,QAASA,EACTyH,MAAOtQ,EAAS,6BAChB95B,UAAU,iBACVkxB,SAAUA,KACN+jC,GAAW,GACXyI,GAAS,EAEb5H,WAAYh8B,EAAS,0BACrB67B,cAAe,CACX5/C,MAAO,CAAEi1D,QAAS,SAEtB9uE,MAAO,IACP+uE,gBAAgB,EAAMj1D,SAEtBy/C,eAAC8T,GAAqB,CAAAvzD,SAAA,CAClBxW,cAAC46D,GAAU,CACPN,WAAYkQ,GAAsBlwC,GAClCm9B,SAAUqT,GAAQC,EAAQD,GAC1B1uE,MAAO0uE,IAEA,UAATA,GAAoBtlD,GAAcywC,eAAA,OAAKz1D,UAAU,gBAAegW,SAAA,CAC9DxW,cAAA,KAAAwW,SAAI8jB,EAAS,oCACbt6B,cAAA,SACCs6B,EAAS,yCAEd27B,eAAA,OAAKz1D,UAAW8zB,GAAW,0BAA2B,QAAQw2C,KAAQt0D,SAAA,CAClExW,cAACi7D,GAAe,CAAC5b,QAAUsrB,GAAoB,UAATG,EAAoB9qE,cAACs9D,GAAkB,SAAMtkD,EAAUxC,SACzFxW,cAAA,OAAAwW,SACIy/C,eAACthC,GAAsB,CACnByhC,SAAUuU,GAAoB,UAATG,EACrBzT,QAASA,KACL,MAAMtwC,EAAO,IAAIgwC,KAAK,CAAC/5C,GAAO,CAAEne,KAAM,qBACtCioB,GACIH,GAAkBhpB,GAClBopB,EACA,mBACH,EACHvQ,SAAA,CAEFxW,cAAA,OAAKQ,UAAU,OAAMgW,SAACxW,cAAC4mE,KAAgB,MACvC5mE,cAAA,OAAKQ,UAAU,QAAOgW,SACjB8jB,EAAS,sDAKhB,cAATwwC,GAAwB9qE,cAACi7D,GAAe,CACrC5b,QAAS75B,EACHxlB,cAACg7D,GAAiB,CAAAxkD,SACf8jB,EAAS,gDAEZthB,EAAUxC,SAEhBxW,cAAA,OAAAwW,SACIy/C,eAACgU,GAAkB,CACf7T,SAAU5wC,EACVxI,KAAMguD,EAAiBG,UAAUnuD,KACjCktD,UAAQ,EAAA1zD,SAAA,CAERxW,cAAA,OAAKQ,UAAU,OAAMgW,SAACxW,cAAC0rE,KAAY,MACnC1rE,cAAA,OAAKQ,UAAU,QAAOgW,SACjB8jB,EAAS,kDAKhB,cAATwwC,GAAwB9qE,cAAA,OAAAwW,SACrBy/C,eAACgU,GAAkB,CACf7T,SAAU5wC,EACVxI,KAAMmK,OAAOiR,SAASlR,KACtBgjD,UAAQ,EAAA1zD,SAAA,CAERxW,cAAA,OAAKQ,UAAU,OAAMgW,SAACxW,cAAC2rE,KAAY,MACnC3rE,cAAA,OAAKQ,UAAU,QAAOgW,SACjB8jB,EAAS,iDAItB27B,eAAA,OAAAz/C,SAAA,CACIxW,cAACi7D,GAAe,CAAC5b,QAASsrB,EAAU3qE,cAACs9D,GAAkB,SAAMtkD,EAAUxC,SACnExW,cAAA,OAAAwW,SACIy/C,eAACthC,GAAsB,CACnByhC,SAAUuU,EACVnqE,UAAU,wBACV62D,QAASwT,EAAkBr0D,SAAA,CAE3BxW,cAAA,OAAKQ,UAAU,OAAMgW,SAACxW,cAAC4rE,KAAiB,MACxC5rE,cAAA,OAAKQ,UAAU,QAAOgW,SACjB8jB,EAAS,kDAK1Bt6B,cAAC6pE,KAAQ,CAAC5c,QAASjtD,cAAC+gE,GAAgB,IAAIvqD,SACpCy/C,eAAA,OAAKz1D,UAAU,oBAAmBgW,SAAA,CAC7BmyB,EAAW,GAAG,SAAIA,EAAW,WAI/B,cAATmiC,IAAyBtlD,GAAcxlB,cAACgnE,KAAM6E,SAAQ,CACpDh2D,GAAIu1D,EACJ5qE,UAAU,mBACVgvB,KAAK,QACLpzB,MAAO4uE,EAAiBG,UAAUnuD,KAClC8uD,KAAM,YAKtB9rE,cAACi4D,KAAO,CAAChL,QAASzkB,EAAcxoC,cAAAk2D,WAAA,CAAA1/C,SAAE,sBAAkB,KAAKA,SACrDxW,cAAA,UAAQQ,UAAU,+BAA+B62D,QAASA,KACtDuT,IACAnV,GAAW,EAAK,EAClBj/C,SACG8jB,EAAS,2BAGlBt6B,cAAC6pE,KAAQ,CACL5c,QAASjtD,cAAC4gE,KAAI,CAACvJ,QAAS71C,GAAKA,EAAEw/C,SAASzvC,kBAAkB/a,SACrDg0D,GAAsBlwC,GAAUhqB,KAAI,CAAAszB,EAAuB9S,KAAW,IAAjC,UAAE25C,EAAS,MAAEpuE,GAAOunC,EACtD,OAAO5jC,cAAC4gE,KAAKC,KAAI,CACbxJ,QAASA,KACL,IACI,MAAM11C,EAAO+lB,GAAQ1M,WAAWrZ,MAC1B,OACFpiB,GACAkrE,EAAU9oD,EAAM2/B,GAzLzByqB,EAACpuE,EAAcquE,KAClC,MAAMjlD,EAAO,IAAIgwC,KAAK,CAACiV,GAAU,CAAEntE,KAAM,qBACzCioB,GACIH,GAAkBhpB,GAClBopB,EACA,mBACH,EAqLuBglD,CACIplD,GAAkBhF,EAAKhkB,MACvB,GAAG0mB,KAAKilB,UAAU/pC,KAE1B,CAAE,MAAOiiB,GACLhJ,QAAQiJ,MAAMD,GACd2lB,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,wBAClB+M,YAAa/M,EAAS,6BAE9B,GACF9jB,SAEDna,GArBkB,GAAGy0B,IAsBd,MAEZta,SAERxW,cAAC20B,GAAsB,CAACn0B,UAAU,iCAAgCgW,SAC9DxW,cAAC4mE,KAAgB,UAG1B,I,cCnYP,MAAMqF,GAAwBr3C,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;UAqB9BlkC;;;;;;;;EA0BGu3C,GAAcrR,sBAAwC,CAAAt+C,EAKhE69C,KAAS,IALwD,YAChE5xB,EAAW,SACXlO,EAAQ,SACR6xC,EAAQ,QACRjO,GACH3hD,EACG,MAAM6vD,EAAiB,uBACjBC,EAAW,gBACXjB,EAAU,kBACVkB,EAAgCriC,iBAAyB,MACzDsiC,EAA0BtiC,iBAAyB,OAClDuiC,EAAUC,GAAev7C,mBAAS,IAClC45C,EAAMC,GAAW75C,mBAAsC,YACvDiS,EAASsyB,GAAcvkC,oBAAS,IAChCsrC,EAASC,GAAcvrC,oBAAS,GACjCm6C,EAAal6C,uBAAY,KAC3B,MAAMkX,EAAS7pB,SAASktB,eAAe0/B,GACnC/iC,IACAA,EAAOpV,QACPoV,EAAOijC,SACX,GACD,IAEH7gC,qBAAU,KACNE,YAAW,KACHxH,GAASkoC,GAAY,GAC1B,IAAI,GACR,CAACA,EAAYloC,IAEhBs3B,8BAAoBL,GAAK,MACrBsS,cAAe5B,IACXC,EAAQD,GACRrV,GAAW,EAAK,MAIxB,MAAMkX,EAAUA,KACZF,GAAY1mE,GAAOA,EAAM,IACzB0vD,GAAW,GACXgH,GAAW,GACXyB,GAAS,EAEP0O,EAAcrzC,eAChBgN,GAEE,IADFsmC,EAAW/zD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEX,IACI,GAAIytB,EAAU,CACV,MACI5kB,KAAM6kB,EAAW,UACjBhhB,GACA8gB,GACAC,EACU,YAATukC,GAA+B,QAATA,OAAkB9xD,EAAY0uB,GAAQ1M,WAAWrZ,MAgB5E,GAbI6D,GACA2hB,KAAa1uB,KAAK,CACd2uB,QAAS9M,EAAS,kCAClB+M,YAAa/M,EAAS,wCAU1BuyC,GAAyC,WAA1BrmC,EAAYtzB,W7D7Gb8T,KAC9B,IACI,OAAOA,EAAKmV,WAAW,qDAC3B,CAAE,MAAO3a,GAEL,OADAhJ,QAAQiJ,MAAMD,IACP,CACX,G6DuGqEsrD,CAAkBtmC,EAAYngC,KAAM,CACzF,MAAM0mE,EAA4B,IAAKvmC,GACvC,IACI,MAAMwmC,OCjIDzzC,WACzB,MAAM0zC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAiB,6BAElC,MAAMC,EAAW,IAAIC,SAKrB,OAJAD,EAASD,OAAO,QAASG,GACzBF,EAASD,OAAO,OAAQ,OACxBC,EAASD,OAAO,QAASG,EAAQ5qD,QAAQ,sDAAuD,IAAIA,QAAQ,OAAQ,WAEvGiX,MAAM,gCAAiC,CAChD4zC,OAAQ,OACR3zC,QAASqzC,EACTzvE,KAAM4vE,EACNI,SAAU,UACZ,EDmH8CC,CAAcjnC,EAAYngC,KACtD,GAA6B,MAAzB2mE,EAAc5xD,OAEd,MADA2xD,EAAoB1mE,IAAM,kCACpB,IAAI0zB,MAAM,0BAA4BizC,EAAc5xD,QAE9D,MAAMsyD,QAAsDV,EAAclzC,OAE1EizC,EAAoB1mE,IAAMqnE,EAAkB1wD,KAAKgK,IACrD,CAAE,MAAOxF,GAELhJ,QAAQiJ,MAAM,gBAAiBD,GAC/B2lB,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,+BAClB+M,YAAa/M,EAAS,oCAE9B,CACA6xC,EAASY,EAAqB,CAC1BllC,kBAAkB,EAClB8lC,mBAA6B,QAAT7C,EACpB8C,UAAoB,QAAT9C,GAEnB,MACIqB,EAAS3lC,EAAa,CAClBqB,kBAAkB,EAClB8lC,mBAA6B,QAAT7C,EACpB8C,UAAoB,QAAT9C,GAGvB,CACJ,CAAE,MAAOtpD,GACLhJ,QAAQiJ,MAAM,gBAAiBD,GAC/B2lB,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,8BAClB+M,YAAa/M,EAAS,mCAE9B,CACJ,EACMuzC,EAAoB/X,IACtB,GAAIA,EACA,IAAK,IAAI9kC,EAAM,EAAGA,GAAO8kC,EAAS/8C,OAAQiY,IAAO,CAC7C,MAAM6mC,EAAa/B,EAASgC,KAAK9mC,GACjC,IAAK6mC,EAAY,SAEjB,MAAM54B,EAAS,IAAI03B,WACnB13B,EAAOw1B,OAASl4B,IAAiB,IAAhB,OAAE8L,GAAQ9L,EACvB,IAAK8L,EAAQ,OAEb,MAAM,OAAE9oC,GAAW8oC,EACG,kBAAX9oC,GACXqtE,EAAYrtE,EAAO,EAEvB0/B,EAAO+3B,WAAWa,GAClB,KACJ,CACH,EAECiW,EAAev0C,UACjB,IACI,MAAM8O,EAAS7pB,SAASktB,eAAe0/B,GACvC,GAAI/iC,EAAQ,CAAC,IAAD0lC,EACR,MAAM,MAAE3xE,GAAUisC,EACZvM,EAA8B,QAAfiyC,EAAG3xE,EAAMkjC,cAAM,IAAAyuC,IAAI,GACxC,IAAIC,EAAiB,GACrB,IACIA,EAAiB9rD,GAAYqC,mBAAmBuX,GACpD,CAAE,MAAOta,GAAI,CACb,IAAI+kB,EAAgD,KAGpD,GAAIzK,EAAgBK,WAAW,MAAQL,EAAgBmyC,SAAS,KAC5D1nC,EAAWzK,OAGV,GAAIkyC,EAAe7xC,WAAW,MAAQ6xC,EAAeC,SAAS,KAC/D1nC,EAAWliB,KAAKC,MAAM0pD,OAErB,CAAC,IAADE,EACD,MAAMC,EAAgBryC,EAAgBK,WAAW,iCAE3CL,EAEA,uDAAuDA,6BAC7D2gC,GAAW,GACX,MAAM/iC,QAAiBC,MAAMw0C,GAC7B,IAAKz0C,EAAS00C,GACV,MAAM,IAAIr0C,MAAM,oBAAoBL,EAASte,UAGjD,MAAMizD,QAAiD30C,EAASI,OAEhEyM,EAAqG,QAA7F2nC,EAAGG,EAAarxD,KAAKqnB,MAAK5H,IAAA,IAAC,KAAE9+B,GAAM8+B,EAAA,OAAK9+B,EAAK09B,gBAAkBS,EAAgBT,aAAa,WAAC,IAAA6yC,IAC9FG,EAAarxD,KAAKolB,MAAK,CAACnB,EAAG3e,KAAO,IAADgsD,EAAAC,EAChC,MAAMC,EAAmB,QAAdF,EAAGrtC,EAAEwtC,iBAAS,IAAAH,OAAA,EAAXA,EAAc,GACtBI,EAAmB,QAAdH,EAAGjsD,EAAEmsD,iBAAS,IAAAF,OAAA,EAAXA,EAAc,GAE5B,IAAKC,IAAUE,EAAO,OAAO,EAI7B,OADuBF,EAAMG,UAAY,IAAMD,EAAMC,UAAY,GAC7C,EAAUD,EAAMC,UAAYH,EAAMG,UAE/CD,EAAME,MAAQJ,EAAMI,KAAK,IACjC,EACX,OAEMhC,EAAYrmC,GAAU,EAChC,CACJ,CAAE,MAAO/kB,GACLhJ,QAAQiJ,MAAM,gBAAiBD,GAC/B2lB,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,8BAClB+M,YAAa/M,EAAS,mCAE9B,CAAC,QACGqyC,GACJ,GAGJ,OAAO1W,eAAAC,WAAA,CAAA1/C,SAAA,CACHxW,cAACu1D,KAAK,CACFpyB,QAASA,EACTyH,MAAgB,UAATkgC,EACDxwC,EAAS,6BACTA,EAAS,uBACf95B,UAAU,iBACVkxB,SAAUi7C,EACVtW,OAAQ/7B,EAAS,0BACjBu0C,eAAgBrS,EAChBsS,kBAAmB,CACfv4D,MAAO,CAAEi1D,QAAS,SAEtBC,gBAAgB,EAChBlV,KAAMuX,EAAat3D,SAEnBy/C,eAACgW,GAAqB,CAAAz1D,SAAA,CACR,UAATs0D,EACK7U,eAAA,OAAKz1D,UAAU,eAAcgW,SAAA,CAC1B8jB,EAAS,oCACVt6B,cAAA,SACCs6B,EAAS,oCACVt6B,cAAA,SACAA,cAAA,QAAMQ,UAAU,QAAOgW,SAAE8jB,EAAS,+CAEpC,KACNt6B,cAAA,OAAKQ,UAAU,yBAAwBgW,SACnCxW,cAACgnE,KAAM6E,SAAQ,CACXh2D,GAAIu1D,EACJ5qE,UAAU,mBACVgvB,KAAK,QACLy3C,YAAa3sC,EAAS,yBACtB87B,SAAUoG,EACVuS,aAAcjB,EACdhC,KAAM,GAPW,SAASU,OAUxB,UAAT1B,EACK7U,eAAA,OAAKz1D,UAAU,0BAAyBgW,SAAA,CACtCxW,cAAA,QAAMQ,UAAU,mBAAkBgW,SAAE8jB,EAAS,qCAC7C27B,eAACthC,GAAsB,CACnBn0B,UAAU,gBACV62D,QAASA,KACL,MAAMhvB,EAAS7pB,SAASktB,eAAe2gC,GACnChkC,GACAA,EAAOkC,OACX,EACF/zB,SAAA,CAEFxW,cAAA,SAAsCo6D,IAAKmS,EACvC1tE,KAAK,OACLgX,GAAIw2D,EACJ9U,OAAO,mBACP/2D,UAAU,sBACVi3D,SAAUA,KAAO,IAADuX,EACZ,MAAMlZ,EAA0C,QAAlCkZ,EAAGzC,EAAwBpkC,eAAO,IAAA6mC,OAAA,EAA/BA,EAAiCrX,MAElDkW,EAAiB/X,GACjB6W,GAAS,GATL,cAAcH,KAYzBlyC,EAAS,4BAEJ,QAATwwC,GAAkB7U,eAAAC,WAAA,CAAA1/C,SAAA,CACfxW,cAAA,QAAMQ,UAAU,mBAAkBgW,SAAE8jB,EAAS,qCAC7Ct6B,cAAC20B,GAAsB,CACnBn0B,UAAU,eACV62D,QAASA,KACLuV,EAAY72D,MACZ42D,GAAS,EACXn2D,SAED8jB,EAAS,8BAIpB,UAGdt6B,cAACi4D,KAAO,CACJhL,QAASzkB,EACHytB,eAAA,OAAKz1D,UAAU,SAAQgW,SAAA,CACrBxW,cAAA,OAAAwW,SAAK,sBACLy/C,eAAA,OAAAz/C,SAAA,CAAK,oBAAa8jB,EAAS,qCAE7B,KAAK9jB,SAEXxW,cAAA,UACIQ,UAAU,+BACV62D,QAASA,KACL0T,EAAQ,WACRtV,GAAW,EAAK,EAClBj/C,SAED8jB,EAAS,2BAGlBt6B,cAACi4D,KAAO,CAAChL,QAAS3yB,EAAS,yBAAyB9jB,SAChDy/C,eAACthC,GAAsB,CACnBn0B,UAAU,iCACV62D,QAASA,KACL,MAAMhvB,EAAS7pB,SAASktB,eAAe0gC,GACnC/jC,GACAA,EAAOkC,OACX,EACF/zB,SAAA,CAEFxW,cAAA,SAA6Co6D,IAAKkS,EAC9CztE,KAAK,OACLgX,GAAIu2D,EACJ7U,OAAO,mBACP/2D,UAAU,sBACVi3D,SAAUA,KAAO,IAADwX,EACZ,MAAMnZ,EAAgD,QAAxCmZ,EAAG3C,EAA8BnkC,eAAO,IAAA8mC,OAAA,EAArCA,EAAuCtX,MAExDkW,EAAiB/X,GACjB6W,GAAS,GATL,qBAAqBH,KAYjCxsE,cAACkvE,KAAc,WAGxB,IE9VMC,IFiW8Bv6C,aAAOgsC,KAAK;;;;;;;;;;;;;;;;EEjWvB,CAC5B,CACIvkE,MAAO,MACPD,MAAO,MACP+yB,MAAO,CACH3uB,UAAW,aACX+V,MAAO,CAAE64D,WAAY,UAG7B,CACI/yE,MAAO,MACPD,MAAO,MACP+yB,MAAO,CACH3uB,UAAW,aACX+V,MAAO,CAAE64D,WAAY,YAkBpBC,GAAmBzuE,OAAOC,OAAOqF,GAAWoK,KAAIisB,IAAA,IAAC,MAAEngC,EAAK,MAAEC,GAAOkgC,EAAA,MAAM,CAChFlgC,QACAD,QACH,IAOYkzE,GAAsB,CAC/B,CAAElzE,MAAO,SAAUC,MAAO2D,cAACC,IAAmB,QAC3CW,OAAOC,OAAOuF,GAAckK,KAAIitB,IAAA,IAAC,MAAEnhC,EAAK,MAAEC,GAAOkhC,EAAA,MAAM,CACtDlhC,QACAD,QACH,KAGQmzE,GAAqBA,IAAM1gE,GAAUyB,KAAIqtB,IAAA,IAAC,KAAEhgC,EAAI,QAAE+B,EAAO,qBAAE8O,EAAoB,yBAAEE,EAAwB,QAAEH,GAASovB,EAAA,MAAM,CACnIthC,MAAO2D,cAACu+D,GAAc,CAClB/vD,qBAAsBA,EACtBE,yBAA0BA,EAC1BhP,QAASA,IAEbtD,MAAOuB,EACP4Q,UACH,IA6BYihE,GAAiB,IAAI/rD,MAAM,KAAKnT,KAAI,CAACi7C,EAAGz6B,KAAK,CAAQz0B,MAAOy0B,EAAO10B,MAAO00B,MAE1E2+C,GAAoBtvE,EAAYmQ,KAAI+0B,IAAA,IAAC,MAAEjpC,GAAOipC,EAAA,MAAM,CAC7DhpC,MAAOD,IAAU8D,EACXF,cAACC,IAAmB,IACpBD,cAAA,OAAKS,IAAKrE,EAAOsE,IAAK,0CAAyDtE,EAAMi/B,sBAC3Fj/B,QACH,IAEYszE,GAA8B9uE,OACtCsN,Q7EmQ2F,CAC5FpF,WAAY,CACRzM,MAAO,IACP+8B,MAAO,GAEXrwB,OAAQ,CACJ1M,MAAO,IACP+8B,MAAO,GAEXpwB,MAAO,CACH3M,MAAO,IACP+8B,MAAO,GAEXnwB,UAAW,CACP5M,MAAO,IACP+8B,MAAO,GAEXlwB,QAAS,CACL7M,MAAO,IACP+8B,MAAO,K6ErRV9oB,KAAIw1B,IAA8B,IAA5BxkC,GAAK,MAAEjF,EAAK,MAAE+8B,IAAQ0M,EACzB,MAAO,CACHzpC,QACAD,MAAOkF,EACP83B,QACH,IAEJgJ,MAAK,CAACnB,EAAG3e,IAAM2e,EAAE7H,MAAQ9W,EAAE8W,QChFhC,MAAMu2C,GAA4B/6C,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8D/B+W,GAAarzD,IAGP,IAHQ,SACvBszD,EAAW,GAAE,OACbC,EAASA,QACAvzD,EACT,MAAM+d,EAAWQ,KAEXi1C,EAAkBj+B,IACpB,MAAMk+B,EAAcxxD,SAASktB,eAAemkC,GAC5C,GAAIG,EAAa,CACb,MAAM,MAAE5zE,GA5Gb,SAAwBisC,EAA6B4nC,GAExD,GAAKzxD,SAAiB0xD,UAKlB,OAJA7nC,EAAOpV,QACMzU,SAAiB0xD,UAAUC,cACpCzyE,KAAOuyE,EAEJ,CACH7zE,MAAOisC,EAAOjsC,MACdg0E,SAAU,GAIb,GAAI/nC,EAAOgoC,gBAA4C,IAA1BhoC,EAAOgoC,eAAsB,CAC3D,MAAMC,EAAWjoC,EAAOgoC,eAClBE,EAASloC,EAAOmoC,aAQtB,OAPAnoC,EAAOjsC,MAAQisC,EAAOjsC,MAAMgmB,UAAU,EAAGkuD,GACnCL,EACA5nC,EAAOjsC,MAAMgmB,UAAUmuD,EAAQloC,EAAOjsC,MAAM2c,QAClDsvB,EAAOgoC,eAAiBC,EAAWL,EAAQl3D,OAC3CsvB,EAAOmoC,aAAeF,EAAWL,EAAQl3D,OACzCsvB,EAAOpV,QAEA,CACH72B,MAAOisC,EAAOjsC,MACdg0E,SAAUE,EAAWL,EAAQl3D,OAErC,CAGI,OAFAsvB,EAAOjsC,OAAS6zE,EAET,CACH7zE,MAAOisC,EAAOjsC,MACdg0E,SAAU,EAGtB,CAyE8BK,CAAeT,EAAal+B,GAE9Cg+B,EAAO1zE,EAAO01C,EAClB,GAkBJ,OAAOmkB,eAAC0Z,GAAyB,CAAC/9C,UAAW,EAAGpxB,UAAU,wBAAuBgW,SAAA,CAC5ExW,cAAA,OAAK6V,GAAI,cAAerV,UAAU,cAAagW,SAI3C,CACG,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,UACFlG,KAAIC,GACKvQ,cAAA,UACH4xB,UAAW,EACXpxB,UAAU,UACV62D,QAASA,IAAM0Y,EAAex/D,GAAOiG,SACvCjG,GAJkBA,OAO5BvQ,cAAA,OAAKQ,UAAU,wBAAuBgW,SAClCxW,cAACk5D,GAAW,CACR7Z,QAAS4W,eAAC+E,GAAiB,CAAAxkD,SAAA,CACtB8jB,EAAS,kCACV27B,eAAA,MAAAz/C,SAAA,CACIxW,cAAA,MAAAwW,SAAK8jB,EAAS,2CACdt6B,cAAA,MAAAwW,SAAK8jB,EAAS,uDAaN,E,+CC5JhC,MAAMo2C,GAAqB7V,sBAAW,CAAAt+C,EAMf69C,KAA8C,IAN9B,SACnChE,EAAQ,MACRz2D,EAAK,SACLgxE,EAAQ,eACRC,EAAc,SACdC,GACiBt0D,EACjB,MAAM+d,EAAWQ,MACVg2C,EAAeC,GAAoB7/C,mBAASvxB,IAC5CqxE,EAAgBC,GAAqB//C,mBAAS,IAC9C6zC,EAAYmM,GAAiBhgD,oBAAU,GACxCigD,EAAoBlnC,iBAAO1C,KAAS0pC,EAAmB,MAAM9oC,QAwBnE,OAtBAsyB,8BAAoBL,GAAK,MACrBgX,SAAUC,IACN,GAAIA,EAAW,CACX,MAAM,MAAE1xE,EAAK,OAAEixB,EAAM,GAAE/a,GAAOw7D,GACxB,IAAE9vD,EAAG,IAAED,EAAG,MAAEjF,GAAUX,KAE5Bq1D,EAAiBpxE,GACjBsxE,EAAkB3vD,EAAI,EAAGC,EAAI,IAAKlF,EAA2B,IAArBqT,WAAWkB,OACnDsgD,EAAcr7D,EAClB,GAEJy7D,iBAAkBA,CAACz7D,EAAI+a,KACnB,MAAM,IAAErP,EAAG,IAAED,EAAG,MAAEjF,GAAUX,KAExB7F,IAAOkvD,GAAYkM,EAAkB3vD,EAAI,EAAGC,EAAI,IAAKlF,EAA2B,IAArBqT,WAAWkB,MAAiB,MAInG6Z,qBAAU,KACFs6B,EAAa,IAAiB,OAAd6L,QAAc,IAAdA,KAAiB7L,EAAY,GAAGiM,EAAiB,KAAM,GAC5E,CAACjM,EAAYiM,EAAgBJ,IAEzB3a,eAAA,OAAKz1D,UAAU,2BAA0BgW,SAAA,CAC5Cy/C,eAAA,OAAKz1D,UAAU,0BAAyBgW,SAAA,CACpCy/C,eAAA,OAAAz/C,SAAA,CACK8jB,EAAS,8CAA8C,KAAEt6B,cAACuxE,KAAW,CAClEn1E,MAAO40E,EACPxhD,KAAK,QACLlO,IAAK,IAAKC,IAAK,EACfk2C,SAAUr7D,GAAS+0E,EAAmC,kBAAV/0E,EAAqBu3B,SAASv3B,GAAc,OAALA,QAAK,IAALA,IAAS,QAGpG4D,cAACo9D,KAAM,CAAC58D,UAAU,oBAAoBgvB,KAAK,QAAQ4mC,SAAUA,EAAUiB,QAASA,IAAc,OAARwZ,QAAQ,IAARA,OAAQ,EAARA,EAAW9L,GAAYvuD,SACxG8jB,EAAS,qDAGlBt6B,cAACwxE,KAAY,CACTC,OAAQ,CACJC,QAAS,CACLC,OAAQ,CACJhyE,MAAO,UACP8T,WAAY,sBACZm+D,UAAW,QAEfp0E,KAAM,CACFq0E,QAAS,mCAIrBC,cAAc,EACdnyE,MAAOmxE,EACPrZ,SAAU93D,GAASoxE,EAAiBpxE,EAAMyzB,KAC1C2+C,iBAAkBpyE,IACdoxE,EAAiBpxE,EAAMyzB,KACf,OAARu9C,QAAQ,IAARA,KAAWhxE,EAAMyzB,IAAI,MAG3B,IAIJ4+C,GAAkBC,IACb,CACHC,UAAWD,EACXE,IAAKzhD,GAAiBuhD,KAQjBG,GAAqB71C,IAIP,IAAD81C,EAAAC,EAAA,IAHtB3hD,QAAS4hD,EAAkB7hD,GAAiBF,MAC5CgiD,MAAOC,EAAgB,IAAG,iBAC1BC,GACiBn2C,EACjB,MAAMjC,EAAWQ,KACX63C,EAAY1oC,iBAA8B,OACzCuoC,EAAOI,GAAY1hD,mBAASuhD,IAC5B9hD,EAASkiD,GAAc3hD,oBAAS,KAAO,IAAD4hD,EAAAC,EACzC,MAAMC,EAAgBviD,GAAa8hD,GAEnC,MAAO,CACHJ,IAAKI,EACLL,UAAWc,EACXC,iBAAsC,QAAtBH,EAAkB,QAAlBC,EAAEC,EAAc,UAAE,IAAAD,OAAA,EAAhBA,EAAkBl9D,UAAE,IAAAi9D,KAAK,EAC9C,IAGCI,EAAgB/hD,uBAAY,CAACtb,EAAY+a,IAAmBiiD,GAAW9sE,IACzE,MAAMotE,EAAgBptE,EAAImsE,UAAU5hE,KAAIC,GAASA,EAAMsF,KAAOA,EAAK,IAAKtF,EAAOqgB,UAAWrgB,IAE1F,MAAO,IAAKxK,KAAQisE,GAAemB,GAAgB,KACnD,IAEJ1oC,qBAAU,KACNmoC,EAASH,EAAc,GACxB,CAACA,IAEJhoC,qBAAU,KAAO,IAAD2oC,EAAAC,EACZ,MAAMC,EAAa7iD,GAAa8hD,GAEhCM,EAAW,CACPV,IAAKI,EACLL,UAAWoB,EACXL,iBAAmC,QAAnBG,EAAe,QAAfC,EAAEC,EAAW,UAAE,IAAAD,OAAA,EAAbA,EAAex9D,UAAE,IAAAu9D,KAAK,GAC1C,GACH,CAACb,IAEJ,MAAMgB,EAAmBtpC,kBAAO,GAsChC,OArCAQ,qBAAU,KACiD,IAAD+oC,EAAlD7iD,EAAQuhD,UAAU,IAAMqB,EAAiBprC,UACzCorC,EAAiBprC,SAAU,EACV,QAAjBqrC,EAAAb,EAAUxqC,eAAO,IAAAqrC,GAAjBA,EAAmBpC,SAASzgD,EAAQuhD,UAAU,IAClD,GACD,CAACvhD,EAAQuhD,YAEZznC,qBAAU,KACN,IAAIC,GAAW,EAUf,OATAC,YAAW,KACP,MAAM,UAAEunC,EAAS,iBAAEe,GAAqBtiD,EACxC,GAAI+Z,GAAYuoC,GAAoB,EAAG,CAAC,IAADQ,EACnC,MAAMC,EAAcxB,EAAU7tC,MAAK9zB,GAASA,EAAMsF,KAAOo9D,IAErDS,IAA8B,QAAjBD,EAAAd,EAAUxqC,eAAO,IAAAsrC,GAAjBA,EAAmBnC,iBAAiB2B,EAAkBS,EAAY9iD,QACvF,IACD,KAEI,KACH8Z,GAAW,CAAK,CACnB,GACF,CAAC/Z,IAGJ8Z,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACAgoC,EAAiB/hD,EAAQuhD,UAAWM,EACxC,GACD,KAEI,KACH9nC,GAAW,CAAK,CACnB,GACF,CAAC/Z,EAAS6hD,EAAOE,IAEbzc,eAAA,OAAKz1D,UAAW8zB,GAAWqkC,GAAwB,6BAA6BniD,SAAA,CACnFy/C,eAAA,OAAKz1D,UAAU,yBAAwBgW,SAAA,CACnCxW,cAAA,MAAAwW,SACK8jB,EAAS,iDAEd27B,eAACmH,KAAM,CACH5tC,KAAK,QACLhvB,UAAU,iBACV41D,UAAoC,QAA1Bic,EAAkB,QAAlBC,EAAC3hD,EAAQuhD,iBAAS,IAAAI,OAAA,EAAjBA,EAAmBv5D,cAAM,IAAAs5D,IAAI,KAhGjC,GAiGPhb,QAASA,KACLwb,GAAW9sE,IACP,MAAMotE,EAAgB,IACfptE,EAAImsE,UACP,CAAEthD,OAAQ,MAAOjxB,MAAO,UAAWkW,GAAI9P,EAAImsE,UAAUn5D,OAAS,IAChEqpB,MAAK,CAACnB,EAAG3e,IAAMqxD,OAAO1yC,EAAErQ,QAAU+iD,OAAOrxD,EAAEsO,UAE7C,MAAO,IACA7qB,KACAisE,GAAemB,GACrB,GACH,EACJ38D,SAAA,CACJ8jB,EAAS,6CAA6C,KAAG3J,EAAQuhD,UAAUn5D,OAAO,IA9GzE,GA8G0F,OACrG/Y,cAAC84D,GAAmB,CAAC0Z,MAAOA,EAAOhjD,KAAM,IAAKojD,SAAUA,EAASp8D,SAC7DxW,cAAA,MAAAwW,SAAK8jB,EAAS,6DAGtBt6B,cAAA,OAAKQ,UAAU,8BAA6BgW,SACxCxW,cAAC4zE,kBAAc,CACXl3E,MAAO,IACPm3E,cAAe,GACfC,SAvHO,GAwHPC,SAAU,EACVC,gBAAiB,MACjBrjD,QAASA,EAAQuhD,UACjB+B,gBAAiB/B,GAAaW,GAAW9sE,IAAG,IAAUA,KAAQisE,GAAeE,OAC7EgC,kBAAmBC,IAAc,IAADC,EAC5BvB,GAAW9sE,IAAG,IAAUA,EAAKktE,iBAAkBkB,EAAUt+D,OACxC,QAAjBu+D,EAAAzB,EAAUxqC,eAAO,IAAAisC,GAAjBA,EAAmBhD,SAAS+C,EAAU,EACzC39D,SAGDxW,cAAC0wE,GAAkB,CAACtW,IAAKuY,EACrBvc,SAAUzlC,EAAQuhD,UAAUn5D,QAAU,EACtC63D,eAAgBsC,EAChBrC,SAAUh7D,IACNg9D,GAAW9sE,IAAQ,IAADsuE,EACd,MAAMlB,EAAgBptE,EAAImsE,UAAUriD,QAAOtf,GAASA,EAAMsF,KAAOA,IAC3Dy+D,EAA8B,QAAxBD,EAAgB,OAAblB,QAAa,IAAbA,OAAa,EAAbA,EAAgB,GAAGt9D,UAAE,IAAAw+D,KAAK,EACK,IAADE,EAAzCD,EAAS,GAAK3jD,EAAQuhD,UAAUoC,KACf,QAAjBC,EAAA5B,EAAUxqC,eAAO,IAAAosC,GAAjBA,EAAmBnD,SAASzgD,EAAQuhD,UAAUoC,KAGlD,MAAO,IACAtC,GAAemB,GAClBF,iBAAkBqB,EACrB,GACH,UAKhB,ECnPGE,GAAqB5/C,KAAOikC,GAA8C;;MAEjFt8C,IAAA,IAAC,QAAEk4D,GAASl4D,EAAA,OAAKk4D,EAAU,8CAAgD,6CAA6C;;;;;;;MAOxHl4C,IAA6B,IAA5B,UAAEi/B,EAAS,QAAEiZ,GAASl4C,EACrB,OAAOi/B,EACD,mFAEIiZ,EAAU,+CAAiD,mBAE/D,EAAE;;;;EAOHC,GAAyB9/C,aAAO00C,GAAeC,UAAU;;;;;;;;;;EAWzDoL,GAAsB//C,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BhC+b,GAA4BhgD,aAAO00C,GAAeC,UAAU;;;;;;;;;EAU5DsL,GAAyBjgD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;gBC5CzC,MAAMic,GAAkBja,sBAAgD,CAAAt+C,EAM5E69C,KAAS,IANoE,UAC5E55D,EAAS,aACTmoE,EAAY,SACZoM,EAAQ,SACRC,EAAQ,SACRvd,GACHl7C,EACG,MAAM+d,EAAWQ,MAEb1nB,EAAG6hE,EACH5hE,EAAG6hE,EACHv1E,MAAOw1E,EACPz4E,MAAO04E,GACPL,GACG34E,EAAOorE,GAAYt2C,oBAAS,KAC/B,MAAMmkD,EAAS1M,EAAasM,GACtBK,EAAS3M,EAAauM,GACtBK,EAAa5M,EAAawM,GAC1BK,EAAa7M,EAAayM,GAEhC,MAAO,CACHhiE,EAAS,OAANiiE,QAAM,IAANA,IAAU,EACbhiE,EAAS,OAANiiE,QAAM,IAANA,IAAU,EACb54E,MAAiB,OAAV84E,QAAU,IAAVA,IAAc,EACrB71E,MAAO41E,EACV,KAEC,EACFniE,EAAC,EACDC,EAAC,MACD1T,EAAK,MACLjD,GACAN,EACEq5E,EAAaT,EAASI,GA8B5B,OA5BA3qC,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACA+sB,EAASr7D,EACb,GACD,KAEI,KACHsuC,GAAW,CAAK,CACnB,GAGF,CAACtuC,IAEJq+D,8BAAoBL,GAAK,MACrBoN,SAAUkO,IACN,MAAMC,EAAU/0E,OAAOyiB,KAAKqyD,GAE5B,IAAK,MAAMp0E,KAAOq0E,EACd,GAAID,EAAUp0E,KAA+BlF,EAAMkF,GAE/C,YADAkmE,GAASzhE,IAAG,IAAUA,KAAQ2vE,KAGtC,MAIDzf,eAAA,OAAKz1D,UAAWA,EAAUgW,SAAA,CAC7BxW,cAAA,MAAAwW,SAAK8jB,EAAS,4CACd27B,eAAA,OAAKz1D,UAAU,gBAAegW,SAAA,CAC1BxW,cAAC41E,KAAW,CAACC,KAAK,KACdpE,OAAQ,CACJqE,MAAO,CACHtX,gBAAiB,qBACjB9hE,MAAO,IACPC,OAAQ,IACRo5E,QAAS,SACT3F,SAAU,YAEd4F,MAAO,CACHxX,gBAAiB,oBACjByX,OAAQ,KAGhBC,KAAM,EAAGC,MAAO,EAChBC,KAAM,EAAGC,MAAO,EAChBjjE,EAAI,OAADA,QAAC,IAADA,IAAK,EACRC,EAAI,OAADA,QAAC,IAADA,IAAK,EACRokD,SAAUl7B,IAAA,IAAC,EAAEnpB,EAAC,EAAEC,GAAGkpB,EAAA,OAAKirC,GAASzhE,IAAG,IAAUA,EAAKqN,IAAGC,OAAK,IAC/D4iD,eAAA,OAAKz1D,UAAU,gBAAegW,SAAA,CACzB8jB,EAAS,0CAA0C,KAAEt6B,cAACuxE,KAAW,CAC9D/hD,KAAK,QACLpzB,MAAOgX,EACPqkD,SAAUr7D,GAASorE,GAASzhE,IAAG,IAAUA,EAAKqN,EAAoB,kBAAVhX,EAAqBA,EAAQu3B,SAAc,OAALv3B,QAAK,IAALA,IAAS,cAG/G65D,eAAA,OAAKz1D,UAAU,gBAAegW,SAAA,CACzB8jB,EAAS,0CAA0C,KAAEt6B,cAACuxE,KAAW,CAC9D/hD,KAAK,QACLpzB,MAAOiX,EACPokD,SAAUr7D,GAASorE,GAASzhE,IAAG,IAAUA,EAAKsN,EAAoB,kBAAVjX,EAAqBA,EAAQu3B,SAAc,OAALv3B,QAAK,IAALA,IAAS,cAG/G65D,eAAA,OAAKz1D,UAAU,gBAAegW,SAAA,CACzBi/D,EAAW,KAAEz1E,cAACkpE,GAAa,CACxB9sE,MAAOM,EACP6kB,IAAK,EACLD,IAAK,GACLm2C,SAAUr7D,IACe,kBAAVA,GACPorE,GAASzhE,IAAG,IAAUA,EAAKrJ,MAAON,KACtC,UAKhB4D,cAAA,MAAAwW,SAAK8jB,EAAS,yCACdt6B,cAACs2E,KAAa,CACVC,OAAQpgE,GACRxW,MAAOA,EACPoyE,iBAAkBpyE,GAAS6nE,GAASzhE,IAAG,IAAUA,EAAKpG,MAAOA,EAAMyzB,YAErE,ICnIGojD,GAAuB3b,sBAA0D,CAAAt+C,EAK3F69C,KAAS,IALmF,OAC3F/gC,EAAM,MACNj9B,EAAK,QACLi7D,EAAO,SACP3lC,GACHnV,EACG,MAAMk6D,EAAexsC,iBAAuB,OACrChX,EAAOzB,GAAYN,mBAAS,GAMnC,OAJAupC,8BAAoBL,GAAK,MACrBnnC,MAAOA,KAAA,IAAAyjD,EAAA,OAA0B,QAA1BA,EAAMD,EAAatuC,eAAO,IAAAuuC,OAAA,EAApBA,EAAsBzjD,OAAO,MAGvCjzB,cAAC40E,GAAyB,CAACxa,IAAKqc,KAC/BrlD,GAAmB,CACnBG,iBAAiB,EACjBD,aAAc7tB,EAAoBsV,OAClCyY,WACAC,UAAWA,KACHwB,GAAS,GAAGokC,EAAQ5zD,EAAoBwvB,GAAO,EAEvDvB,SAAUA,KACE,OAARA,QAAQ,IAARA,MAAY,IAElBlb,SAED/S,EAAoB6M,KAAI,CAACC,EAAOugB,KAC7B,MAAM,IAAExvB,EAAG,MAAEC,EAAK,MAAElF,GAAUkU,EAE9B,OAAOvQ,cAAC60E,GAAsB,CAC1Br0E,UAAW8zB,GACP,cACAl4B,EAAMoF,SAAWF,GAAO+3B,EAAS,cAAgB,GACjDpG,IAAUnC,EAAQ,sBAAwB,IAE9CumC,QAAS71C,IACLA,EAAE+P,kBACF8lC,EAAQ9mD,EAAM,EAChBiG,SAIFxW,cAAA,OACIQ,UAAU,iBACVE,IAAK,cAA6Ba,IAClCd,IAAKpE,KAhBuBiF,EAmBX,KAEL,I,cC9DhC,MAAMq1E,GAAyB/hD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuCnC+d,GAAuB,IACvBC,GAAgB,GAChBC,GAAc,GA0Bb,MAAMC,GAAmBlc,sBAAkD,CAAAt+C,EAK/E69C,KAAS,IALuE,aAC/E4c,EAAeH,GAAa,WAC5BI,EAAaH,GAAW,SACxBtgE,EAAQ,SACRihD,GACHl7C,EACG,MAAO26D,EAAenS,GAAch0C,MAC7BpxB,EAAOyxE,GAAYlgD,mBAAS,YAC5BshD,EAAOI,GAAY1hD,mBAAS+lD,IAC5BE,EAAeC,GAAoBlmD,mBAAS8lD,GAC7CK,EAAWptC,iBAAiC,CAAC,IAAK,IAAK,MACvDqtC,EAAWrtC,iBAAiC,CAAC,EAAG,EAAG,KAElDstC,GAAkBrmD,oBAAS,GAqClC,OAnCAuZ,qBAAU,KACN,IAAIC,GAAW,EAqBf,OApBIq6B,GAAYp6B,YAAW,KACvB,GAAID,EAAU,CACV,MAAM8sC,EAAY57D,GAAc42D,EAAO2E,GACjCM,EA7CtB,SAAkBrkD,GACd,MAAM7zB,EAAS,4CAA4C6gD,KAAKhtB,GAEhE,OAAQ7zB,EACF,CACEo0B,SAASp0B,EAAO,GAAI,IACpBo0B,SAASp0B,EAAO,GAAI,IACpBo0B,SAASp0B,EAAO,GAAI,KAEtB,CAAC,EAAG,EAAG,EACf,CAmCgCm4E,CAAS/3E,GAE3B03E,EAASlvC,QAAUsvC,EACnBH,EAASnvC,QAAUqvC,GAEfC,EAAU,KAAOJ,EAAS,IACvBI,EAAU,KAAOJ,EAAS,IAC1BI,EAAU,KAAOJ,EAAS,IACzB37D,KAAK0F,IAAIo2D,EAAU,GAAKF,EAAS,IAAMV,IACvCl7D,KAAK0F,IAAIo2D,EAAU,GAAKF,EAAS,IAAMV,IACvCl7D,KAAK0F,IAAIo2D,EAAU,GAAKF,EAAS,IAAMV,KAE3Cnf,EAASggB,EAAWD,EAAW,CAAChF,EAAO2E,GAE/C,IACD,IAEI,KACHzsC,GAAW,CAAK,CACnB,GACF,CAACq6B,EAAYplE,EAAO6yE,EAAO2E,IAE9B1c,8BAAoBL,GAAK,MACrBoN,SAAUjrC,IAA4B,IAA3B,MAAE58B,EAAK,MAAEg4E,EAAK,IAAEC,GAAKr7C,EACxB58B,GAAOyxE,EAASzxE,GAChBg4E,GAAOP,EAAiBO,GACxBC,GAAKhF,EAASgF,EAAI,MAIvB3hB,eAAC0gB,GAAsB,CAACn2E,UAAW8zB,GAAWqkC,GAAwB,kBAAkBniD,SAAA,CAC3FxW,cAAA,OAAKQ,UAAU,uBAAsBgW,SAChCA,IAELy/C,eAAA,OAAKz1D,UAAU,sBAAqBgW,SAAA,CAChCy/C,eAAA,MAAAz/C,SAAA,CAAI,gBAAiBxW,cAAC63E,KAAY,CAC9Br3E,UAAU,eACV62D,QAASA,KACL+f,EAAiBP,IACjBK,GAAe,OAGvBjhB,eAACkF,GAAuB,CAAC36D,UAAU,yBAAwBgW,SAAA,CACvDxW,cAAA,OAAKQ,UAAU,iBACfR,cAACuxE,KAAW,CACR/hD,KAAK,QACLjO,KAAM,GACND,IAAK,GACLm2C,SAAUr7D,IACNg7E,EAAkC,kBAAVh7E,EAAqBu3B,SAASv3B,GAAc,OAALA,QAAK,IAALA,IAAS,GACxE86E,GAAe,EAEnB96E,MAAO+6E,IAEXn3E,cAACkpE,GAAa,CACV3nD,KAAM,GACND,IAAK,GACLllB,MAAO+6E,EACP1f,SAAUr7D,IACNg7E,EAAiBh7E,GACjB86E,GAAe,IAGvBl3E,cAAA,OAAKQ,UAAU,sBAEnBy1D,eAAA,MAAAz/C,SAAA,CAAI,cAAexW,cAAC63E,KAAY,CAC5Br3E,UAAU,eACV62D,QAASA,KACLub,EAASkE,IACTI,GAAe,OAGvBl3E,cAAA,OAAKQ,UAAU,2BAA0BgW,SACrCxW,cAAC84D,GAAmB,CAChB0Z,MAAOA,EACPhjD,KAAM,IACNojD,SAAUJ,IACNI,EAASJ,GACT0E,GAAe,SAK9BK,GAAkBthB,eAAA,OAAKz1D,UAAU,uBAAsBgW,SAAA,CACpDxW,cAAA,MAAAwW,SAAI,gBACJxW,cAACwxE,KAAY,CACTC,OAAQ,CACJC,QAAS,CACLC,OAAQ,CACJhyE,MAAO,UACP8T,WAAY,sBACZm+D,UAAW,QAEfp0E,KAAM,CACFq0E,QAAS,mCAIrBC,cAAc,EACdnyE,MAAOA,EACP83D,SAAU93D,IACNyxE,EAASzxE,EAAMyzB,KACf8jD,GAAe,EAEnBnF,iBAAkBpyE,IACdyxE,EAASzxE,EAAMyzB,KACf8jD,GAAe,SAIN,I,OCvKtB,MAAMY,GAAkBjd,sBAAW,CAAAt+C,EAMtB69C,KAA2C,IANpB,UACvC2d,EAAS,YACTC,EAAW,aACXrP,EAAY,0BACZ7/B,EACA2uB,SAAUwgB,GACI17D,EACd,MAAM+d,EAAWQ,KACXo9C,EAAgBjuC,iBAAgC,OAC/ChX,EAAOzB,GAAYN,oBAAU,IAC7BinD,EAA2BC,GAAgClnD,oBAAS,IACpEryB,EAAMgb,GAAWqX,mBAAS8mD,IAC1B57E,EAAOorE,GAAYt2C,mBAASy3C,IAC5B0P,EAA0BC,GAAyBvnD,KACpD0mC,EAAWxtB,iBAAO1C,KAAS0wC,EAAqB,MAAM9vC,QACtDowC,EAA2BpnD,uBAAY,CAACR,EAASxuB,KACnDqlE,GAASzhE,IAAG,IAAUA,EAAK5D,gBAAeC,cAAesuB,GAAiBC,OAC1E0nD,GAA0B,GAC3B,CAACA,IACEG,EAAoBjwC,IAAW5P,GAASA,EAAMsQ,QAAQP,oBAEtDrgC,EAAWylD,mBAAQ,KAAM2qB,OPHGt8E,EOGmBm+B,EPHoB15B,OAAOC,OAAOsI,GAAiBmH,KAAImsB,IAAA,IAAC,MAAErgC,EAAK,SAAEiE,GAAUo8B,EAAA,MAAM,CACtIpgC,MAAOF,EAAWkE,GAClBjE,QACH,IAHqCD,KOG4B,GAAE,CAACm+B,IAEjEmQ,qBAAU,KACwB,IAA1B6tC,IACAz+D,EAAQ,UACR49C,EAAS,SAAUr7D,GACvB,GAED,CAACk8E,IAEJ,MAAMI,EAAiBzuC,iBAA2B,MAC5C0uC,EAAkB1uC,iBAA2B,MAC7C2uC,EAAsB3uC,iBAA4B,MAExDwwB,8BAAoBL,GAAK,MACrBoN,SAAUkO,IAAc,IAADmD,EAAAC,EAAAC,EACnBvR,GAASwR,IAAY,IAAUA,KAAiBtD,MAEhD,MAAM,UACF7zE,EAAS,UAAED,EAAS,YAAEI,EAAW,YAAEgB,EAAW,WAC9CH,EAAU,YAAEH,EAAW,cAAEE,EAAa,cAAED,EAAa,YACrDW,EAAW,UAAEC,GACbmyE,EACkB,QAAtBmD,EAAAH,EAAevwC,eAAO,IAAA0wC,GAAtBA,EAAwBrR,SAAS,CAC7Bp0D,EAAGxQ,EAAeyQ,EAAG1Q,EACrBjG,MAAOmG,EAAYlD,MAAO+C,IAEP,QAAvBo2E,EAAAH,EAAgBxwC,eAAO,IAAA2wC,GAAvBA,EAAyBtR,SAAS,CAC9Bp0D,EAAGpR,EAAaqR,EAAGrQ,EACnBtG,MAAOkF,EAAWjC,MAAOkC,IAEF,QAA3Bk3E,EAAAH,EAAoBzwC,eAAO,IAAA4wC,GAA3BA,EAA6BvR,SAAS,CAClCmQ,MAAOr0E,EACPs0E,IAAKr0E,GACP,MAGV,MAAM,UACF9B,EAAS,kBACTiR,EAAiB,WACjBzR,EAAU,UACVC,EAAS,YACTF,EAAW,cAAEoB,EAAa,cAAED,EAAa,UACzCkB,EAAS,YAAEC,EAAW,UAAEC,EAAS,QACjCpC,EAAO,KACPY,GACA3F,GACE,qBAAEoS,EAAoB,qBAAEG,GAAkC,OAATopE,QAAS,IAATA,IAAa,CAAC,EAC/DkB,EAAe,CACjBxlE,WAAYjF,EACZw5D,gBAAiBr5D,GAEfuqE,EAAyB,WAATr6E,EAChBs6E,EAA6B,eAATt6E,EACpBu6E,EAAyB,oCACzBC,EAAiBA,KACnBx/D,EAAQ,QACK,SAAThb,GAAiB44D,EAAS,OAAQr7D,EAAM,EAE1Ck9E,EAAuBA,KAAO,IAADC,EAC/B,MAAMx4E,EAAc3E,EAAMoF,OACY,QADN+3E,EAC1Bn4E,EAAmBhF,EAAMoF,eAAO,IAAA+3E,OAAA,EAAhCA,EAAkCn9E,MAClC,CAAC,EACPyd,EAAQ,cACR2tD,GAASzhE,IAAG,IAAUA,KAAQhF,MAC9B02D,EAAS,aAAc,IAAKr7D,KAAU2E,GAAc,EAElDy4E,EAAmBA,KACrB3/D,EAAQ,UACK,WAAThb,GAAmB44D,EAAS,SAAUr7D,EAAM,EAEpD,OAAO4D,cAAA,OAAKQ,UAAU,2CAA0CgW,SAC5Dy/C,eAAA,QAAMz1D,UAAU,oCAAmCgW,SAAA,CAC/CxW,cAAA,QAAMQ,UAAU,wBAAuBgW,SAAE8jB,EAAS,4BAClD27B,eAAA,QAAMz1D,UAAU,6BAA4BgW,SAAA,CACxCy/C,eAAA,OACIpgD,GAAIujE,EACJ54E,UAAU,+EACN4wB,GAAmB,CACnBI,WACAF,aAAc,EACdK,WAAYnQ,IACR,GAAc,IAAVyR,IAA0B,cAAVzR,EAAElgB,KAAiC,UAAVkgB,EAAElgB,KAA6B,OAAVkgB,EAAElgB,KAShE,OARAkgB,EAAEwQ,iBACFR,EAAS,GACT4mD,GAA6B,GAE7BztC,YAAW,KAAO,IAAD8uC,EACC,IAAVxmD,IAAkC,QAArBwmD,EAAAvB,EAAc/vC,eAAO,IAAAsxC,GAArBA,EAAuBxmD,QAAO,GAChD,MAEI,CACX,EAEJxB,YACkB,IAAVwB,GAAaomD,IACH,IAAVpmD,GAAaqmD,IACH,IAAVrmD,GAAaumD,GACrB,IACFhjE,SAAA,CAEFy/C,eAAA,SACIz1D,UAAW8zB,GACP,oBACS,SAATz1B,GAAmB,4BACT,IAAVo0B,GAAe,qBAEnBokC,QAASA,IAAMgiB,IAAiB7iE,SAAA,CAEhCy/C,eAAA,QAAMz1D,UAAW,cAAsB,SAAT3B,EAAkB,oBAAsB,IAAK2X,SAAA,CACvExW,cAAA,SAAO4xB,UAAW,EAAG/yB,KAAK,QAAQ2B,UAAU,kBAAkBpE,MAAM,SACpE4D,cAAA,QAAMQ,UAAU,uBAEpBR,cAAA,QAAMQ,UAAU,kBAAiBgW,SAC5B8jB,EAAS,yCAGlBt6B,cAAA,QAAMQ,UAAU,4BAChBR,cAAA,SACIQ,UAAW8zB,GACP,oBACA6kD,GAAqB,4BACX,IAAVlmD,GAAe,qBAEnBokC,QAASA,IAAMiiB,IAAuB9iE,SAEtCxW,cAACs5D,KAAO,CACJn2B,QAASg1C,EACTuB,gBAAiBtB,EACjB1c,QAAS,CAAC,QAAS,SACnBG,UAAU,aACV1C,iBAAiB,4BACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5CxW,cAACw2E,GAAoB,CAACpc,IAAK8d,EACvB7+C,OAAQ8/C,EACR/8E,MAAOA,EACPs1B,SAAUA,KAAO,IAAD4Z,EACZ8sC,GAA6B,GACkB,QAA/C9sC,EAAA9sB,SAASktB,eAAe0tC,UAAuB,IAAA9tC,GAA/CA,EAAiDrY,OAAO,EAE5DokC,QAAS96B,IAAc,IAADo9C,EAAA,IAAZ,IAAEr4E,GAAKi7B,EACb,MAAMx7B,EAAcO,EACS,QADNq4E,EACjBv4E,EAAmBE,UAAI,IAAAq4E,OAAA,EAAvBA,EAAyBv9E,MACzB,CAAC,EACPyd,EAAQ,cACR2tD,GAASzhE,IAAG,IAAUA,KAAQhF,MAC9B02D,EAAS,aAAc,IAAKr7D,KAAU2E,GAAc,MAGzDyV,SAEPy/C,eAAA,QAAMz1D,UAAU,0BAAyBgW,SAAA,CACrCy/C,eAAA,QAAMz1D,UAAW,cAAa24E,EAAoB,oBAAsB,IAAK3iE,SAAA,CACzExW,cAAA,SAAO4xB,UAAW,EAAG/yB,KAAK,QAAQ2B,UAAU,kBAAkBpE,MAAM,eACpE4D,cAAA,QAAMQ,UAAU,uBAEpBR,cAAA,QAAMQ,UAAU,kBAAiBgW,SAC5B8jB,EAAS,mDAK1Bt6B,cAAA,QAAMQ,UAAU,4BAChBR,cAAA,SACIQ,UAAW8zB,GACP,oBACA4kD,GAAiB,4BACP,IAAVjmD,GAAe,qBAEnBokC,QAASA,IAAMmiB,IAAmBhjE,SAElCy/C,eAAA,QAAAz/C,SAAA,CACIy/C,eAAA,QAAMz1D,UAAW,cAAa04E,EAAgB,oBAAsB,IAAK1iE,SAAA,CACrExW,cAAA,SAAO4xB,UAAW,EAAG/yB,KAAK,QAAQ2B,UAAU,kBAAkBpE,MAAM,WACpE4D,cAAA,QAAMQ,UAAU,uBAEpBR,cAAA,QAAMQ,UAAU,yCAAwCgW,SACnD8jB,EAAS,gDAK1B27B,eAAA,OAAKz1D,UAAU,eAAcgW,SAAA,CACzBxW,cAACs5D,KAAO,CACJoC,QAAS,CAAC,SACVvC,iBAAiB,mDACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5Cy/C,eAAA,OAAKz1D,UAAW,sBAAsBgW,SAAA,CAClCy/C,eAAA,OAAKz1D,UAAU,oBAAmBgW,SAAA,CAC9BxW,cAAA,MAAAwW,SACK8jB,EAAS,uCAEdt6B,cAACs2E,KAAa,CACVC,OAAQpgE,GACRxW,MAAO8B,EACPswE,iBAAkBpyE,IACdka,EAAQ,UACR2tD,GAASzhE,IAAG,IAAUA,EAAKtE,UAAW9B,EAAMyzB,QAC5CilD,GAA0B,OAItCr4E,cAAA,SACAi2D,eAAA,OAAKz1D,UAAU,oBAAmBgW,SAAA,CAC9BxW,cAAA,MAAAwW,SACK8jB,EAAS,uCAEdt6B,cAACs2E,KAAa,CACVC,OAAQpgE,GACRxW,MAAO+S,EACPq/D,iBAAkBpyE,IACdka,EAAQ,UACR2tD,GAASzhE,IAAG,IAAUA,EAAK2M,kBAAmB/S,EAAMyzB,QACpDilD,GAA0B,YAM9Cxc,UAAU,SAAQrlD,SAElBy/C,eAACue,GAAkB,CACfhZ,UAAWgd,EACX/D,QAASyE,EACT14E,UAAU,wCAAuCgW,SAAA,CAEhD8jB,EAAS,gCAAgC,IAACt6B,cAAC45E,KAAiB,QA3CxD,gBA8CZ9wC,GAA6B9oC,cAACs5D,KAAO,CAClCoC,QAAS,CAAC,SACVvC,iBAAiB,mDACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5Cy/C,eAAA,OAAKz1D,UAAW,sBAAsBgW,SAAA,CAClCxW,cAAA,MAAIQ,UAAU,sBAAqBgW,SAC/BxW,cAAC27D,KAAQ,CAACv/D,MAAO,aAAcw/D,QAAS16D,EAAWu2D,SAAUA,KACzD59C,EAAQ,UACR2tD,GAASzhE,IAAG,IAAUA,EAAK7E,WAAY6E,EAAI7E,cAC3Cm3E,GAA0B,EAC5B7hE,SACG8jB,EAAS,4CAGjBp5B,GAAalB,cAAC80E,GAAe,CAAC1a,IAAKse,EAChCl4E,UAAU,sBACVu0E,SAAU,CACNp1E,MAAO,cACPjD,MAAO,aACP0W,EAAG,gBACHC,EAAG,iBAEP2hE,SAAU,CACNnyE,WAAYy3B,EAAS,uCAEzBquC,aAAcvsE,EACdq7D,SAAUh7B,IAA6B,IAA5B,MAAE98B,EAAK,MAAEjD,EAAK,EAAE0W,EAAC,EAAEC,GAAGopB,EAC7B+qC,GAASzhE,IAAG,IACLA,EACHlD,WAAYnG,EACZgG,YAAa/C,EACbiD,cAAewQ,EACfzQ,cAAe0Q,MAEnBglE,GAA0B,SAK1Cxc,UAAU,SAAQrlD,SAElBy/C,eAACue,GAAkB,CACfhZ,UAAWgd,EACX/D,QAASyE,GAAiBh4E,EAC1BV,UAAU,yCAAwCgW,SAAA,CAEjD8jB,EAAS,iCAAiC,IAACt6B,cAAC45E,KAAiB,QA9C3B,iBAiD3C55E,cAACs5D,KAAO,CACJoC,QAAS,CAAC,SACVvC,iBAAiB,mDACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5Cy/C,eAAA,OAAKz1D,UAAW,sBAAsBgW,SAAA,CAClCxW,cAAA,MAAIQ,UAAU,sBAAqBgW,SAC/BxW,cAAC27D,KAAQ,CAACv/D,MAAO,WAAYw/D,QAAS36D,EAAYw2D,SAAUA,KACxD59C,EAAQ,UACR2tD,GAASzhE,IAAG,IAAUA,EAAK9E,YAAa8E,EAAI9E,eAC5Co3E,GAA0B,EAC5B7hE,SACG8jB,EAAS,6CAGjBr5B,GAAcjB,cAAC80E,GAAe,CAAC1a,IAAKue,EACjCn4E,UAAU,oBACVu0E,SAAU,CACNp1E,MAAO,YACPjD,MAAO,YACP0W,EAAG,cACHC,EAAG,eAEP2hE,SAAU,CACNpzE,UAAW04B,EAAS,4CAExBquC,aAAcvsE,EACdq7D,SAAUl6B,IAA6B,IAA5B,MAAE59B,EAAK,MAAEjD,EAAK,EAAE0W,EAAC,EAAEC,GAAGkqB,EAC7BiqC,GAASzhE,IAAG,IACLA,EACHnE,UAAWlF,EACXmF,UAAWlC,EACXqC,YAAaoR,EACbpQ,YAAaqQ,MAEjBglE,GAA0B,SAK1Cxc,UAAU,SAAQrlD,SAElBy/C,eAACue,GAAkB,CACfhZ,UAAWgd,EACX/D,QAASyE,GAAiBj4E,EAC1BT,UAAU,0CAAyCgW,SAAA,CAElD8jB,EAAS,kCAAkC,IAACt6B,cAAC45E,KAAiB,QA9C1D,kBAiDZ9wC,GAA6B9oC,cAACs5D,KAAO,CAClCoC,QAAS,CAAC,SACVvC,iBAAiB,mDACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5Cy/C,eAAA,OAAKz1D,UAAW,sBAAsBgW,SAAA,CAClCxW,cAAA,MAAIQ,UAAU,sBAAqBgW,SAC/BxW,cAAC27D,KAAQ,CAACv/D,MAAO,eAAgBw/D,QAAS56D,EAAay2D,SAAUA,KAC7D59C,EAAQ,UACR2tD,GAASzhE,IAAG,IAAUA,EAAK/E,aAAc+E,EAAI/E,gBAC7Cq3E,GAA0B,EAC5B7hE,SACG8jB,EAAS,8CAGjBt5B,GAAehB,cAAA,OAAKQ,UAAU,wBAAuBgW,SAClDxW,cAACoyE,GAAkB,CACfI,MAAOrwE,EACPwuB,QAASvuB,EACTswE,iBAAkB6F,WAKlC1c,UAAU,SAAQrlD,SAElBy/C,eAACue,GAAkB,CACfhZ,UAAWgd,EACX/D,QAASyE,GAAiBl4E,EAC1BR,UAAU,2CAA0CgW,SAAA,CAEnD8jB,EAAS,mCAAmC,IAACt6B,cAAC45E,KAAiB,QA9B7B,mBAiC1C9wC,GAA6B9oC,cAACs5D,KAAO,CAClCoC,QAAS,CAAC,SACVvC,iBAAiB,8CACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5Cy/C,eAACye,GAAsB,CAACrd,QAAS71C,GAAKA,EAAE+P,kBAAkB/a,SAAA,CACtDxW,cAAA,OAAKQ,UAAU,QAAOgW,SACjB8jB,EAAS,oCAEb91B,EAAY8L,KAAIqtB,IAA4B,IAA3B,IAAEr8B,EAAG,aAAEsC,GAAc+5B,EACnC,OAAO39B,cAAC20E,GAAmB,CACvBn0E,UAAW,CACP,iBACApE,EAAM+E,UAAYG,EAAM,cAAgB,GACxCsC,EAAe,GAAK,YACtBgL,KAAK,KACPyoD,QAASA,KACLmQ,GAASzhE,IAAG,IAAUA,EAAK5E,QAASG,MACpC+2E,GAA0B,EAC5B7hE,SAED5S,EACK5D,cAAA,OACEuW,MAAO3S,EAAeq1E,EAAe,CAAC,EACtCz4E,UAAU,gBACVE,IAAK,sCAAqDkD,QAC1DnD,IAAKa,IAEP20D,eAAAC,WAAA,CAAA1/C,SAAA,CACExW,cAACC,IAAmB,IAAG,IAAEq6B,EAAS,iDAnBbh5B,EAqBX,SAIlCu6D,UAAU,aAAYrlD,SAEtBxW,cAACw0E,GAAkB,CACfhZ,UAAWgd,EACX/D,QAASyE,GAAoC,kBAAZ/3E,GAAoC,SAAZA,EACzDX,UAAU,0CAAyCgW,SAElD8jB,EAAS,qCAzCyB,kBA4C3Ct6B,cAACs5D,KAAO,CACJoC,QAAS,CAAC,SACVvC,iBAAiB,2CACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5CxW,cAACspE,GAAeC,UAAS,CAAA/yD,SACpBnO,EAASiI,KAAIszB,IAAkC,IAA/BxnC,MAAOy9E,EAAS,MAAEx9E,GAAOunC,EACtC,OAAO5jC,cAACspE,GAAeE,OAAM,CACzBhpE,UAAWuB,IAAS83E,EAAY,cAAgB,GAChDxiB,QAASA,KACLmQ,GAASzhE,IAAG,IAAUA,EAAKhE,KAAM83E,MACjCxB,GAA0B,EAC5B7hE,SAEDna,GAP8Bw9E,EAQX,QAIpChe,UAAU,aAAYrlD,SAEtBxW,cAACw0E,GAAkB,CAAChZ,UAAWgd,EAAmBh4E,UAAU,uCAAsCgW,SAC7F8jB,EAAS,kCArBL,eAwBZwO,GAA6B9oC,cAACs5D,KAAO,CAClCoC,QAAS,CAAC,SACVvC,iBAAiB,mDACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5Cy/C,eAAA,OAAKz1D,UAAU,sBAAqBgW,SAAA,CAChCxW,cAAA,MAAIQ,UAAU,sBAAqBgW,SAC/BxW,cAAC27D,KAAQ,CAACv/D,MAAO,aAAcw/D,QAASv4D,EAAWo0D,SAAUA,KACzD59C,EAAQ,UACR2tD,GAASzhE,IAAG,IAAUA,EAAK1C,WAAY0C,EAAI1C,cAC3Cg1E,GAA0B,EAC5B7hE,SACG8jB,EAAS,4CAGjBj3B,GAAarD,cAAC+2E,GAAgB,CAAC3c,IAAKwe,EACjC5B,aAAc1zE,EACd2zE,WAAY1zE,EACZk0D,SAAUA,CAAClM,EAAGuuB,EAAE51C,KAAoB,IAAjB0zC,EAAKD,GAAMzzC,EAC1BsjC,GAASzhE,IAAG,IAAUA,EAAKzC,YAAaq0E,EAAOp0E,UAAWq0E,MAC1DS,GAA0B,EAC5B7hE,SAEFxW,cAAA,OAAKQ,UAAU,QAAOgW,SAAE8jB,EAAS,0CAI7CuhC,UAAU,aAAYrlD,SAEtBxW,cAACw0E,GAAkB,CACfhZ,UAAWgd,EACX/D,QAASyE,GAAiB71E,EAC1B7C,UAAU,yCAAwCgW,SAEjD8jB,EAAS,oCAjCyB,2BAuCrD,IC5gBGy/C,GAAiB9f,IAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECO3B+f,GAAmBplD,aAAOgmC,GAAW;GACxCmf;EAOUE,GAAa19D,IAGP,IAHQ,gBACvB29D,EAAe,iBACfC,GACS59D,EACT,MAAM,QACF0sB,GACAV,MACE,0BAAEO,GAA8BG,EAChCp6B,EAAYi/C,mBAAQ,IAAMyhB,KAC3B1/C,QAAOtf,GACGu4B,GAA+C,WAAlBv4B,EAAMhC,WAE9C,CAACu6B,KAGC,MACFtsC,EAAK,QACLmrC,GACAD,GAAQu1B,uBAAW1gC,IAAA,IAAC,KACpB5a,EAAI,QACJgmB,GACHpL,EAAA,MAAM,CACH//B,MAAOmlB,EAAKnlB,MACZmrC,UACH,KACKyyC,EAAcjpD,uBAAakpD,IAC7B1yC,GAAQoC,IACJ,MAAM,YACF31B,EAAW,WACXhV,EAAU,UACVuT,EAAS,OACTZ,EAAM,SACN8C,EAAQ,KACR/B,GACAi3B,EACEuwC,EAAY,GAAGD,IACfE,EAAqB,UAAdD,GAAuC,SAAdA,EAChCjlD,EAAqB,QAAXtjB,EACV,CACE,aAAc,aACd,YAAa,aAEf9D,GACAusE,EAAgC,UAAdF,EAClB,CAACjlD,EAAQ,eACK,SAAdilD,EAAuB,CAACjlD,EAAQ,cAAgBjhB,EAChDqmE,EAA6B,UAAdH,EACfvsE,GAAoBgE,GACpB8C,EAKN,OAHAslE,EAAiBM,GACbF,GAAML,EAAgBM,GAEnB,IACAzwC,EACHvtC,MAAO89E,EACPl7E,WAA0B,SAAdk7E,GAA+Bl7E,EAC3C2U,OAAsB,SAAdumE,EACR3nE,UAAyB,UAAd2nE,EACL96E,EACA+6E,EACI,GAAGD,IAAY56C,cACf/sB,EACVG,KAAoB,UAAdwnE,EACA,EACAxnE,EACNsB,YAAaomE,EACb3lE,SAAU4lE,EACb,GACH,GACH,CAAC9yC,EAASwyC,EAAkBD,IAE/B,OAAOl6E,cAACg6E,GAAgB,CAACx5E,UAAU,cAAcpE,MAAOI,EAAOi7D,SAAU2iB,EAAa9f,WAAYzrD,GAAa,ECpF7G6rE,GAA+B9lD,KAAOikC,GAAG;MACzCmB;EASO2gB,GAAgBp+D,IAMP,IANQ,SAC1Bk7C,EACAr7D,MAAOi+D,EAAW,WAClBC,EAAU,SACV9jD,EAAQ,UACRhW,GACY+b,EACZ,MAAO0W,EAAOzB,GAAYN,oBAAU,GAC9BI,EAAegpC,EAAWvhD,OAEhC,OAAOk9C,eAACykB,GAA4B,CAChCl6E,UAAW,CAAC,yDAA0DA,GAAWoO,KAAK,KAAK4H,SAAA,CAE1FA,GAAYxW,cAAA,SAAOQ,UAAU,yCAAwCgW,SAAEA,IACxExW,cAAA,OACIQ,UAAU,gCACN4wB,GAAmB,CACnBI,WACAF,eACAG,UAAWA,KACP,MAAM4W,EAASiyB,EAAWrnC,GAC1B,GAAIoV,EAAQ,CACR,MAAMsyB,IAAYl3C,MAAMC,QAAQ22C,IAAeA,EAAYp4C,SAAS,GAAGomB,EAAOjsC,SAC9Eq7D,EAASkD,EACHN,EAAYxqC,QAAOmpD,GAAgB,GAAG3wC,EAAOjsC,UAAY48E,IACzD,IAAI3e,EAAa,GAAGhyB,EAAOjsC,SACrC,KAENoa,SAED8jD,EAAWhqD,KAAI,CAACC,EAAOugB,KACpB,MAAM,MAAEz0B,EAAK,MAAED,EAAK,MAAE+yB,GAAU5e,EAC1BoqD,IAAYl3C,MAAMC,QAAQ22C,IAAeA,EAAYp4C,SAAS,GAAG7lB,KAEvE,OAAO65D,eAAA,YACC9mC,EACJ3uB,UAAW,CACP,2BACAm6D,EAAY,mCAAqC,GACjD1nC,IAAUnC,EAAQ,yBAA2B,IAC/CliB,KAAK,KACPyoD,QAASA,KACLI,EAASkD,EACHN,EAAYxqC,QAAOmpD,GAAgB,GAAG58E,MAAY48E,IAClD,IAAI3e,EAAa,GAAGj+D,KAAS,EACrCoa,SAAA,CAEFxW,cAAA,QAAMQ,UAAW,qBAAoBm6D,EAAY,2BAA6B,IAAKnkD,SAC/ExW,cAAA,QAAMQ,UAAU,6BAEpBR,cAAA,QAAMQ,UAAU,QAAOgW,SAAEna,MAhBVD,EAiBX,QAGW,EC7D7Bw+E,GAAqBhmD,aAAOytC,GAAa;;;;;;;;;;;;;;;;EAgClCwY,GAAuBhgB,sBAA0D,CAAAt+C,EAO3F69C,KAAS,IAPmF,gBAC3FoE,EAAe,SACfhoD,EAAQ,gBACRmsD,EAAe,eACfG,EAAc,UACdG,EAAS,aACTD,GACHzmD,EACG,MAAM+d,EAAWQ,MACX,WACFrnB,EAAU,eAAEI,EAAc,eAAEvU,EAAc,eAAEoU,EAAc,iBAAEE,EAAgB,cAAED,EAAa,WAC3FvU,EAAU,QACVC,EAAO,WACP0oC,EAAU,QACVJ,GACAD,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,WACFlO,EAAU,eAAEI,EAAc,eAAEvU,EAAc,eAAEoU,EAAc,iBAAEE,EAAgB,cAAED,EAAa,WAC3FvU,EAAU,QACVC,GACH,WACD0oC,EAAU,QACVJ,GACHpL,EAAA,MAAM,CACH9oB,aAAYI,iBAAgBvU,iBAAgBoU,iBAAgBE,mBAAkBD,gBAC9EvU,aACAC,UACA0oC,aACAJ,UACH,KACKmzC,EAAkB7wC,iBAAwB,MAE1C8wC,EAAyBjtB,mBAAQ,IAAM/lB,EAAW,qBAAqB,CAACA,IACxEizC,EAAmBltB,mBAAQ,IAAM/lB,EAAW,eAAe,CAACA,IAC5DkzC,EAAuBntB,mBAAQ,IAAM/lB,EAAW,mBAAmB,CAACA,IACpEmzC,EAAsB/pD,uBAAa/V,GAAoBusB,GAAQoC,IAC1D,IACAA,EACHp2B,cAAeyH,OAEnB,CAACusB,IACCwzC,EAAuBhqD,uBAAY,CAACs1C,EAAmC/C,EAAkC0X,KAC/F,OAAZpY,QAAY,IAAZA,KAAeyD,EAAU/C,GACrB+C,GAAU9+B,GACV6S,IAAI,IACGA,EACH3mC,eAAgB4yD,KAEpB2U,EACH,GACF,CAACpY,EAAcr7B,IAkBlB,OAhBA8yB,8BAAoBL,GAAK,MACrB5/B,UAAWA,KAAA,IAAA6gD,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgB3yC,eAAO,IAAAmzC,OAAA,EAAvBA,EAAyB9gD,mBAAW,IAAA6gD,IAAS,EAC9D9U,SAAUA,KAAA,IAAAgV,EAAAC,EAAA,OAAyC,QAAzCD,EAA6B,QAA7BC,EAAMV,EAAgB3yC,eAAO,IAAAqzC,OAAA,EAAvBA,EAAyBjV,kBAAU,IAAAgV,IAAS,EAC5D/T,SAAU/qC,IAAuE,IAAtE,WAAEhpB,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,GAAkB6oB,EAER,IAADg/C,EAIJC,EALjC,YAArB9nE,EAC8B,kBAAnBF,GAA+BG,IACf,QAAvB4nE,EAAAX,EAAgB3yC,eAAO,IAAAszC,GAAvBA,EAAyBjV,YAAY,UAAW9yD,EAAgBG,IAG1C,kBAAfJ,GAA2BI,IACX,QAAvB6nE,EAAAZ,EAAgB3yC,eAAO,IAAAuzC,GAAvBA,EAAyBlV,YAAY,SAAU/yD,EAAYI,GAEnE,MAID7T,cAAC46E,GAAkB,CACtBxgB,IAAK0gB,EACLlwC,MAAOtQ,EAAS,gCAChBkkC,gBAAiBA,EACjBgE,kBAAmB5uD,EACnB6uD,sBAAuB/uD,EACvBgvD,sBAAuBjvD,EACvBovD,gBAAiBhvD,EACjB8uD,gBAAiBA,EACjBJ,SAAU5uD,EACVovD,eAAgBA,CAAClkE,EAAMme,KACnB+9D,EAAuBl8E,GACV,YAATA,EAAoBo8E,EAAqBj+D,GACxCg+D,EAAiBh+D,EAAK,EAE/BgmD,aAAcmY,EACdlY,UAAWA,EACXH,eAAgBA,EAChBK,iBAAkB+X,EAClBhY,kBAAmB1zC,IACf2X,KAAa1lB,MAAM,CACf4lB,YAAa/M,EAAS,8BAA8B9K,GACpD4X,QAAS9M,EAAS,2BACpB,EAEN/7B,MAAOY,EAAuBC,EAAYC,EAASC,GAAgBd,gBACnEokE,cAAe,KAAKpsD,SAEnBA,GACgB,I,qBCrHzB,MAAMmlE,GAAyB/mD,KAAO4kC,IAAI;;EAGpCoiB,GAA8BhnD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqCxCgjB,GAAgCjnD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0FnCijB,GAAejhB,sBAA2C,CAAAt+C,EAOpE69C,KAAS,IAAD2hB,EAAA,IAP6D,gBACpEpZ,EAAe,aACfgG,EAAY,UACZ1F,EAAS,SACTxL,EAAQ,eACRqL,EAAc,aACdE,GACHzmD,EACG,MAAM+d,EAAWQ,MACX,WACFrnB,EAAU,eACVC,EAAc,iBACdE,EAAgB,eAChBtU,EAAc,WACdyoC,EAAU,cACVv0B,EAAa,WACbpU,EAAU,QACVuoC,GACAD,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,WACFlO,EAAU,eACVC,EAAc,iBACdE,EAAgB,eAChBtU,EAAc,cACdkU,EAAa,WACbpU,GACH,QACDuoC,EAAO,WACPI,GACHxL,EAAA,MAAM,CACH9oB,aACAC,iBACAE,mBACAtU,iBACAyoC,aACAv0B,gBACApU,aACAuoC,UACH,MACMq0C,EAAwBC,GAA6B/qD,oBAAS,IAC9DgrD,EAAuBC,GAA4BjrD,oBAAS,IAC5D7xB,EAAS+8E,GAAclrD,oBAAS,SAAY3zB,OAA4BorE,MACzE0T,EAAqBpyC,iBAAgC,MAErDqyC,EAAuBxuB,mBAAQ,IAAM/lB,EAAW,mBAAmB,CAACA,IACpEw0C,EAAsBprD,uBAAa3P,GAAWmmB,GAAQoC,IAGjD,IAAKA,EAAav2B,cAFPgO,EAAE6mB,OAAOuzB,aAG3B,CAACj0B,IAEL8C,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACA+sB,EAASp4D,EACb,GACD,KAEI,KACHqrC,GAAW,CAAK,CACnB,GAGF,CAACrrC,IAEJorC,qBAAU,KAENwxC,GAA0B,GAE1BtxC,YAAW,KACPwxC,GAAyB,EAAM,GAChC,IAAI,GACR,IAEH1hB,8BAAoBL,GAAK,MACrB5/B,UAAWA,KAAA,IAAAgiD,EAAAC,EAAA,OAA6C,QAA7CD,EAAgC,QAAhCC,EAAMJ,EAAmBl0C,eAAO,IAAAs0C,OAAA,EAA1BA,EAA4BjiD,mBAAW,IAAAgiD,IAAS,EACjEhV,SAAU/qC,IAAoF,IAAnF,WAAEhpB,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,KAAqB0yD,GAAU7pC,EACW,IAADigD,EAAnE,kBAAfjpE,GAAqD,kBAAnBC,IAAgCG,IAChD,QAA1B6oE,EAAAL,EAAmBl0C,eAAO,IAAAu0C,GAA1BA,EAA4BlV,SAAS,CAAE/zD,aAAYI,iBAAgBH,iBAAgBE,sBAEvF,IAAK,MAAMtS,KAAOglE,EACVA,EAAShlE,KAA8BjC,EAAQiC,IAC/C86E,GAAWr2E,IACA,IAAKA,KAAQugE,KAGhC,MAIR,MAAMqW,EAA6C,KAAnB,OAAVlpE,QAAU,IAAVA,IAAc,IAAIsF,SACW,KAAjB,QAA1BgjE,EAAAM,EAAmBl0C,eAAO,IAAA4zC,OAAA,EAA1BA,EAA4BxV,YACpC,OAAOtQ,eAAC2lB,GAA2B,CAACp7E,UAAU,gCAA+BgW,SAAA,CACzExW,cAACi4D,KAAO,CACJkB,iBAAiB,uBACjBvuB,MAAO5qC,cAAC27E,GAAsB,CAAAnlE,SACzB8jB,EAAS,qCACY9jB,SAE1BxW,cAAC27D,KAAQ,CACLn7D,UAAU,YACVi3D,SAAUr7D,GAASggF,GAAWr2E,IAAG,IAAUA,EAAKhI,UAAW3B,EAAMisC,OAAOuzB,YACxEA,QAASv8D,EAAQtB,UAAUyY,SAE1B8jB,EAAS,qCAGjBtkB,GAAY1F,KAAIitB,IAA8C,IAADq/C,EAAAC,EAAAC,EAAA,IAA5C,SAAEz8E,EAAQ,KAAExB,EAAI,QAAEoX,EAAO,WAAEC,GAAYqnB,EACrD,GAAa,aAAT1+B,IAAwBO,EAAY,OAAO,KAC/C,MAAM29E,IAAc9mE,EACdsvC,EAAWtvC,GAAW5W,EAAQ4W,GACpC,OAAOggD,eAACkF,GAAuB,CAC3B36D,UAAW,CACP,sBACA+kD,EAAW,GAAK,YAClB32C,KAAK,KAAK4H,SAAA,CAEZy/C,eAAA,OAAKz1D,UAAU,eAAcgW,SAAA,CACf,SAAT3X,GAAmBmB,cAACs5D,KAAO,CACxBn2B,QAAS64C,EACTgB,sBAAsB,EACtBthB,QAAS,CAAC,SACVge,gBAAiBuC,EACjB9iB,iBAAkB,CACd,yEACA6iB,EAAyB,iBAAmB,GAC5CE,EAAwB,gBAAkB,IAC5CttE,KAAK,KACPywC,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5Cy/C,eAAC4lB,GAA6B,CAC1Br7E,UAAW,CACP,sBACAm8E,EAAe,8BAAgC,IACjD/tE,KAAK,KAAK4H,SAAA,CAEZy/C,eAAA,MAAIz1D,UAAW,wBAAuBgT,EAAgB,GAAK,YAAagD,SAAA,CACpExW,cAAC27D,KAAQ,CACLC,QAASpoD,EACTikD,SAAUj2C,IACN+6D,EAAoB/6D,EAAE,EACxBhL,SACJ8jB,EAAS,mCACXt6B,cAAA,SACAA,cAAA,KAAAwW,SAAI8jB,EAAS,qCAEjBt6B,cAAA,OAAKQ,UAAW,sBAAqBgT,EAAgB,GAAK,yBAA0BgD,SAChFxW,cAAC66E,GAAoB,CACjBzgB,IAAKiiB,EACL1Z,gBAAiBA,EACjBG,eAAgBA,EAChBG,UAAWA,EACXD,aAAcA,EACdxE,gBAAiBn/D,EAAQzB,SAAS4Y,SAElCy/C,eAAA,OAAKz1D,UAAU,sBAAqBgW,SAAA,CAChCy/C,eAAA,OAAKz1D,UAAU,uCAAsCgW,SAAA,CACjDxW,cAAA,MAAAwW,SAAK8jB,EAAS,kCACdt6B,cAACs2E,KAAa,CACVC,OAAQpgE,GACRxW,MAAON,EAAQzB,SACfm0E,iBAAkBpyE,IACdy8E,GAAWr2E,IAAG,IAAUA,EAAKnI,SAAU+B,EAAMyzB,OAAO,QAI9DupD,GAAgB1mB,eAAA,OAAKz1D,UAAU,sCAAqCgW,SAAA,CAClExW,cAAA,MAAAwW,SAAK8jB,EAAS,iCACdt6B,cAAC46D,GAAU,CACPp6D,UAAU,yBACVi3D,SAAU6kB,EACVhiB,WAAYp+D,EAAsB,CAC9BI,IAAKg+B,EAAS,mCACd/9B,KAAM+9B,EAAS,oCACf99B,MAAO89B,EAAS,uCAEpBl+B,MAAOkD,mBAQnCu8D,UAAU,SAAQrlD,SAElBxW,cAAA,OACIQ,UAAU,qBACV+V,MAAO,CAAEioD,gBAAiBhrD,EAAgBnU,EAAQzB,SAAWN,GAA0BkZ,SAEvFxW,cAACi4D,KAAO,CAAChL,QAAS3yB,EAAS,2BAA2B9jB,SAClDxW,cAAA,OAAKQ,UAAU,qCAAoCgW,SAC9ChD,EACKC,EACIzT,cAAA,OACEQ,UAAU,2BACVE,IAA0B,WAArBkT,EACCH,EACAC,EACNjT,IAAI,eAEN,KACJT,cAACi9E,KAAmB,CAACz8E,UAAU,+BAKpDu8E,GAAa/8E,cAACi4D,KAAO,CAClBrtB,MAAO10B,GACmB,QADT0mE,EACXtiD,EAASpkB,UAAW,IAAA0mE,IACpB,KACNzjB,iBAAiB,uBAAsB3iD,SAEvCxW,cAAC27D,KAAQ,CACLC,QAASrW,EACTkS,SAAUj2C,GAAKvL,GAAWmmE,GAAWr2E,IAAG,IAAUA,EAAK,CAACkQ,GAAUuL,EAAE6mB,OAAOuzB,gBAGlFthC,EAASj6B,MAEdL,cAACuxE,KAAW,CACR/hD,KAAK,QACLjO,IAAK,EACLD,IAAK,IACLm2C,SAAUr7D,GAASggF,GAAWr2E,IAAG,IAAUA,EAAK,CAAClH,GAAwB,kBAAVzC,EAAqBA,EAAQ,QAC5FA,MAAoB,QAAfygF,EAAEx9E,EAAQR,UAAK,IAAAg+E,IAAI,MAE5B78E,cAACkpE,GAAa,CACV3nD,IAAK,EACLD,IAAK,IACL47D,KAAM,EACNzlB,SAAUr7D,GAASggF,GAAWr2E,IAAG,IAAUA,EAAK,CAAClH,GAAOzC,MACxDA,MAAoB,QAAf0gF,EAAEz9E,EAAQR,UAAK,IAAAi+E,IAAI,MAE5B98E,cAAA,OAAKQ,UAAU,qBA1HkB3B,EA2HX,MAEJ,I,kCCxXlC,MAAMs+E,GAAqBvoD,aAAO00C,GAAeC,UAAU;;;;EAKrD6T,GAA0BxoD,aAAOgmC,GAAW;;;;;;;;;;;EAmBrCyiB,GAAqBxiB,sBAAsD,CAAAt+C,EAIrF69C,KAAS,IAJ6E,OACrFrmD,EAAM,UACNq5C,EAAS,mBACTvkB,GACHtsB,EACG,MAAM+d,EAAWQ,MACX,MACFt+B,EAAK,UACLoW,EAAS,SACTC,EAAQ,KACRC,EAAI,cACJC,EAAa,WACbg1B,GACAL,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,MACFnlB,EAAK,UACLoW,EAAS,SACTC,EAAQ,KACRC,EAAI,cACJC,GACH,WACDg1B,GACHxL,EAAA,MAAM,CACH//B,QACAoW,YACAC,WACAC,OACAC,gBACAg1B,aACH,KACKu1C,E/ExDgB,iB+EwDiB,CAAE9gF,S/ExD7BA,M+EyDZ,MAAMmlD,EAAQjgC,GAAS,CAAEllB,UAEnB+gF,EAAiBzvB,mBAAQ,IAAM/lB,EAAW,aAAa,CAACA,IACxDy1C,EAAkB1vB,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1D01C,EAAa3vB,mBAAQ,IAAM/lB,EAAW,SAAS,CAACA,IAChD21C,EAAsB5vB,mBAAQ,IAAM/lB,EAAW,kBAAkB,CAACA,IAExE0yB,8BAAoBL,GAAK,MAAS,KAElC,MAAMujB,EAA4B,SAAb9qE,EACfzS,EAAYgtD,EACRzL,EAAQ,OAAS27B,EAAgB,iBAAmB,QACpD,MAEJl9E,EAAYyS,GACZ+qE,EAAmBtjD,EAASqjD,EAAat9E,UACzCw9E,EAAoBh1C,EACpBotB,eAAAC,WAAA,CAAA1/C,SAAA,CAAGonE,EAAiB,IAAC59E,cAAC45E,KAAiB,OACvCgE,EACAE,EAAe99E,cAACs5D,KAAO,CACzBoC,QAAS,CAAC,SACVvC,iBAAiB,8CACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5CxW,cAACm9E,GAAkB,CAAA3mE,SACd7V,EAAa2P,KAAImsB,IAAoC,IAAnC,aAAEn8B,EAAY,MAAElE,EAAK,KAAEmE,GAAMk8B,EAC5C,OAAOw5B,eAACqT,GAAeE,OAAM,CACzBhpE,UAAWpE,IAAUyW,EAAW,cAAgB,GAChDwkD,QAASA,IAAMkmB,EAAenhF,GAAOoa,SAAA,CAEpCjW,EAAO01D,eAAAC,WAAA,CAAA1/C,SAAA,CAAGjW,EAAK,UAAY,KAAM+5B,EAASh6B,KAJZlE,EAKX,QAIpCy/D,UAAU,cAAarlD,SAEvBxW,cAAA,QACIQ,UAAW,sBAAmC,SAAbqS,EAAsB,GAAK,YAAYg2B,EAAqB,GAAK,aAAaryB,SAE9GqnE,KApByB,oBAuB5BE,EAAmBl1C,EACnBi1C,EACAD,EACN,OAAQ9pE,EAiDF,KAhDuB,OAAvB4pE,EAAavhF,MACT4D,cAAC46D,GAAU,CAACp6D,UAAU,mBAAmBpE,MAAOwW,EAAW6kD,SAAU+lB,EAAiBljB,YbnBhEn+D,EamBgGm+B,EbnBzDv6B,EAASuQ,KAAI80B,IAAA,IAAC,MAAEhpC,EAAK,QAAEsD,GAAS0lC,EAAA,MAAM,CAC7G/oC,MAAOD,IAAU0D,EACXE,cAACC,IAAmB,IACpBD,cAACi4D,KAAO,CAAChL,QAAS9wD,EAAWuD,GAAS8W,SACpCxW,cAAA,OACIS,IAAKtE,EAAWuD,GAChBgB,IAAK,8CAA6DtE,EAAMi/B,wBAGpFj/B,QACH,KaS6Ioa,SAC7HunE,IAEH/9E,cAACo9E,GAAuB,CACtB58E,UAAU,sBACVpE,MAAO0W,EACP2kD,SAAUgmB,EACVnjB,WAAYkV,GACZzmE,QAAQ,EACRwxD,OAAQ1xB,GAAsBotB,eAAA,OAAKz1D,UAAU,uBAAsBgW,SAAA,CAC/DxW,cAACgnE,KAAK,CACFxmE,UAAU,oBACVpE,MAAuB,kBAAT0W,EAAoB,GAAKA,EACvCq0D,YAAU,EACV1P,SAAUgmB,EACVxW,YAAa3sC,EAAS,wCAE1Bt6B,cAAC46D,GAAU,CACPx+D,MAAO2W,EACP0kD,SAAUimB,EACVpjB,WAAY,CACR,CACIl+D,MAAO,OACPu9D,aAAc,CAAE1M,QAAS3yB,EAAS,mCAClCj+B,MAAO2D,cAACC,IAAmB,KAE/B,CACI7D,MAAO,OACPu9D,aAAc,CAAE1M,QAAS3yB,EAAS,mCAClCj+B,MAAO2D,cAACg+E,KAAiB,KAE7B,CACI5hF,MAAO,SACPu9D,aAAc,CAAE1M,QAAS3yB,EAAS,qCAClCj+B,MAAO2D,cAACi+E,KAAmB,KAE/B,CACI7hF,MAAO,QACPu9D,aAAc,CAAE1M,QAAS3yB,EAAS,oCAClCj+B,MAAO2D,cAACk+E,KAAkB,WAInC1nE,SAENunE,IbhEmB5hF,KakEtB,IChKDgiF,GAAmB,IAAI5iD,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MAChD6iD,GAAgBA,CACzBhiF,EACAkF,EACA+uE,EACAG,EACA6N,EACAC,KAEA,MAAMC,EAAeniF,EAAMgmB,UAAUiuD,EAAgBG,GAE/CgO,EAA4B,OADfpiF,EAAMo0E,KACkB6N,EAC3C,IAAII,EAAcF,EACdG,EAAe,EACnB,OAAQp9E,GACJ,IAAK,IAAKm9E,EAAc,IAAIF,KAAgBC,EAAa,GAAK,OAC1DE,EAAeF,EAAa,EAAI,EAChC,MACJ,IAAK,IAAKC,EAAc,IAAIF,KAAiB,MAC7C,IAAK,IAAKE,EAAc,IAAIF,MAAkB,MAC9C,IAAK,IAAKE,EAAc,IAAIF,OAAmBG,EAAe,EAAG,MACjE,IAAK,IAAKD,EAAc,KAAKF,MAAkBG,EAAe,EAMlEJ,EAJmBliF,EAAMgmB,UAAU,EAAGiuD,GAChC,GAAGoO,IACHriF,EAAMgmB,UAAUouD,EAAcp0E,EAAM2c,QAErBy3D,EAAekO,EAAa,EAGxCC,GAAqBpiE,IAM3B,IAN4B,GAC/B1G,EAAE,UACFgmD,GAIHt/C,EACG,GAAI1G,GAAMgmD,GAAa,EAAG,CAAC,IAAD+iB,EACtB,MAAMv2C,EAAS7pB,SAASwU,cAAc,IAAInd,KAEtCwyB,IAA8B,QAApBu2C,EAACv2C,EAAOmoC,oBAAY,IAAAoO,KAAK,IAAM,IACzCv2C,EAAOmoC,aAAe3U,EAE9B,ICtCE,SAAEgQ,IAAa7E,KAiBR6X,GAAehkB,sBAA0C,CAAAt+C,EASnE69C,KAAS,IAT2D,GACnEvkD,EAAE,YACF2yB,EAAW,aACXmgC,EAAY,aACZmW,EAAY,SACZrnB,EAAQ,UACR1lC,EAAS,UACTvxB,KACGkqB,GACNnO,EACG,MAAMwiE,EAAiB90C,iBAAO0+B,IACvBvsE,EAAOorE,GAAYt2C,mBAASy3C,IAC5BqW,EAAYC,GAAiB/tD,mBAAS,CAAErb,GAAI,GAAIgmD,WAAY,IAC7DqjB,EAAmB/tD,uBAAaguD,IAClC,MAAMrjD,EAA0C,kBAAjBqjD,EAA4BA,EAAeA,EAAa92C,OAAOjsC,MAC9F2iF,EAAe52C,QAAUrM,EACzB0rC,EAAS1rC,EAAgB,GAC1B,IAEH2O,qBAAU,KACNk0C,GAAmBK,EAAW,GAC/B,CAACA,IAEJv0C,qBAAU,KACNgtB,EAAS,CAAEpvB,OAAQ,CAAEjsC,UAAU,GAGhC,CAACA,IAEJ,MAAMgjF,EAAoB1J,IAClBA,IAAcqJ,EAAe52C,SAC7B+2C,EAAiBxJ,EACrB,EAOJ,OALAjb,8BAAoBL,GAAK,MACrBoN,SAAU4X,EACVC,aAAcA,IAAMxpE,EAAM,CAAEA,KAAI2xD,SAAU4X,GAAsB,SAG7Dp/E,cAAC6rE,GAAQ,CACZh2D,GAAIA,EACJypE,aAAa,MACbztD,QAASA,IAAMhc,IAAkB,OAAZipE,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAEjpE,KAAI2xD,SAAU4X,KACpDjY,YAAU,EACVoY,YAAY,EACZ/+E,UAAW,iBAAiBqV,WAAYrV,IACxCpE,MAAOA,EACP21B,UAAWoZ,IAAO,IAADq0C,EAAAC,EAEb,GADS,OAAT1tD,QAAS,IAATA,KAAYoZ,IACP3C,EAAa,OAClB,MAAM,QAAEk3C,EAAO,IAAEp+E,EAAG,QAAEq+E,GAAYx0C,EAC5BklC,EAAgD,QAAlCmP,EAAGr0C,EAAGy0C,cAAcvP,sBAAc,IAAAmP,KAAK,EACrDhP,EAA4C,QAAhCiP,EAAGt0C,EAAGy0C,cAAcpP,oBAAY,IAAAiP,KAAK,GAClDC,GAAWC,IAAY9pE,GAAM26D,IAAiBH,GAAkB8N,GAAiBziD,IAAIp6B,KACtF6pC,EAAGnZ,iBACHosD,GACIjzC,EAAGy0C,cAAcxjF,MAAOkF,EACxB+uE,EAAgBG,GAChB,GACA,CAACqP,EAAYhkB,KACTqjB,EAAiBW,GACjBZ,EAAc,CAAEppE,KAAIgmD,aAAY,IAG5C,EAEJpE,SAAUynB,KACNx0D,GACN,ICzEOo1D,GAAgBjlB,sBAA4C,CAAAt+C,EAQtE69C,KAAS,IAR8D,GACtEvkD,EAAE,aACF8yD,EAAY,aACZmW,EAAY,SACZrnB,EAAQ,UACR1lC,EAAS,UACTvxB,KACGkqB,GACNnO,EACG,MAAM,QAAE0sB,GAAYV,MACd,YAAEC,GAAgBS,EAClB81C,EAAiB90C,iBAAO0+B,IACvBvsE,EAAOorE,GAAYt2C,mBAASy3C,IAC5BqW,EAAYC,GAAiB/tD,mBAAS,CAAErb,GAAI,GAAIgmD,WAAY,IAC7DqjB,EAAmB/tD,uBAAaguD,IAClC,MAAMrjD,EAA0C,kBAAjBqjD,EAA4BA,EAAeA,EAAa92C,OAAOjsC,MAC9F2iF,EAAe52C,QAAUrM,EACzB0rC,EAAS1rC,EAAgB,GAC1B,IAEH2O,qBAAU,KACNk0C,GAAmBK,EAAW,GAC/B,CAACA,IAEJv0C,qBAAU,KACNgtB,EAAS,CAAEpvB,OAAQ,CAAEjsC,UAAU,GAGhC,CAACA,IAEJ,MAAMgjF,EAAoB1J,IAClBA,IAAct5E,GACd8iF,EAAiBxJ,EACrB,EAMJ,OAJAjb,8BAAoBL,GAAK,MACrBoN,SAAU4X,MAGPp/E,cAACgnE,KAAK,CACTnxD,GAAIA,EACJypE,aAAa,MACbztD,QAASA,IAAMhc,IAAkB,OAAZipE,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAEjpE,KAAI2xD,SAAU4X,KACpDjY,YAAU,EACV3mE,UAAW,GAAGqV,WAAYrV,IAC1BpE,MAAOA,EACP21B,UAAWoZ,IAAO,IAADq0C,EAAAC,EAEb,GADS,OAAT1tD,QAAS,IAATA,KAAYoZ,IACP3C,EAAa,OAClB,MAAM,QAAEk3C,EAAO,IAAEp+E,EAAG,QAAEq+E,GAAYx0C,EAC5BklC,EAAgD,QAAlCmP,EAAGr0C,EAAGy0C,cAAcvP,sBAAc,IAAAmP,KAAK,EACrDhP,EAA4C,QAAhCiP,EAAGt0C,EAAGy0C,cAAcpP,oBAAY,IAAAiP,KAAK,GAClDC,GAAWC,IAAY9pE,GAAM26D,IAAiBH,GAAkB8N,GAAiBziD,IAAIp6B,KACtF6pC,EAAGnZ,iBACHosD,GACIjzC,EAAGy0C,cAAcxjF,MAAOkF,EACxB+uE,EAAgBG,GAChB,GACA,CAACqP,EAAYhkB,KACTqjB,EAAiBW,GACjBZ,EAAc,CAAEppE,KAAIgmD,aAAY,IAG5C,EAEJpE,SAAUtsB,GAAM+zC,EAAiB/zC,EAAG9C,OAAOjsC,UACvCsuB,GACN,IC5EOq1D,GAAmBllB,sBAAkD,CAAAt+C,EAE/E69C,KAAS,IAFuE,aAC/E0kB,GACHviE,EACG,MAAMwrB,EAAaL,IAAQ/O,GAASA,EAAMoP,aACpCi4C,EAAiB/1C,iBAAwB,MAEzCg2C,EAAenyB,mBAAQ,IAAM/lB,EAAW,cAAU/uB,EAAW,aAAa,CAAC+uB,IAgBjF,OAdA0C,qBAAU,KAAO,IAADy1C,EACZ,MAAMvN,EAAkC,QAAzBuN,EAAGF,EAAe73C,eAAO,IAAA+3C,OAAA,EAAtBA,EAAwBb,eAEtC1M,IAAuB,OAAZmM,QAAY,IAAZA,KAAenM,GAAU,GAGzC,IAEHlY,8BAAoBL,GAAK,MACrBoN,SAAWprE,IAAW,IAAD+jF,EACK,QAAtBA,EAAAH,EAAe73C,eAAO,IAAAg4C,GAAtBA,EAAwB3Y,SAASprE,EAAM,MAIxC4D,cAAC6+E,GAAY,CAACzkB,IAAK4lB,EACtBnqE,GAAG,SACH2yB,aAAW,EACXmgC,aAAcjhC,GAAQ1M,WAAWrZ,KAAKlN,OACtCgjD,SAAUwoB,EACVnB,aAAcA,EACdsB,SAAU,CACNC,QAAS,IAEf,IC/BAC,GAAsB1rD,KAAOikC,GAAG;;;;;;EASzB0nB,GAAqBh1B,IAC9B,MAAMjxB,EAAWQ,MACX,mBACF5lB,EAAkB,eAClBH,EAAc,YACdC,EAAW,iBACXC,EAAgB,aAChBE,EAAY,QACZwyB,GACAD,GAAQu1B,uBAAW1gD,IAAA,IAAC,KACpBoF,EAAI,QACJgmB,GACHprB,EAAA,MAAM,CACHvH,YAAa2M,EAAK3M,YAClBE,mBAAoByM,EAAKzM,mBACzBH,eAAgB4M,EAAK5M,eACrBE,iBAAkB0M,EAAK1M,iBACvBE,aAAcwM,EAAKxM,aACnBwyB,UACH,KAMK64C,EAAuBrvD,uBAAa3P,GAA2BmmB,GAAQoC,IAEzE,IAAI02C,EAoBJ,OAhBQA,EALUj/D,EAAE6mB,OAAOuzB,QAInBzmD,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBF,gBAAgB,GAGb,IAAKg1B,KAAgB02C,EAAa,KACzC,CAAC94C,EAASxyB,IACRurE,EAAyBvvD,uBAAa3P,GAA2BmmB,GAAQoC,IAE3E,IAAI02C,EAoBJ,OAhBQA,EALUj/D,EAAE6mB,OAAOuzB,QAInBzmD,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBA,kBAAkB,GAGf,IAAK80B,KAAgB02C,EAAa,KACzC,CAAC94C,EAASxyB,IACRwrE,EAA2BxvD,uBAAa3P,GAA2BmmB,GAAQoC,IAE7E,IAAI02C,EAoBJ,OAhBQA,EALUj/D,EAAE6mB,OAAOuzB,QAInBzmD,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVA,aAAa,EACbE,oBAAoB,GAGX,CACjBA,oBAAoB,GAGjB,IAAK60B,KAAgB02C,EAAa,KACzC,CAAC94C,EAASxyB,IACRyrE,EAAoBzvD,uBAAa3P,GAA2BmmB,GAAQoC,IAEtE,IAAI02C,EAoBJ,OAhBQA,EALUj/D,EAAE6mB,OAAOuzB,QAInBzmD,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVE,oBAAoB,EACpBF,aAAa,GAGJ,CACjBA,aAAa,GAGV,IAAK+0B,KAAgB02C,EAAa,KACzC,CAAC94C,EAASxyB,IACR0rE,EAAqB1vD,uBAAa3P,GAA2BmmB,GAAQoC,IACvE,MAAM2rC,EAAYl0D,EAAE6mB,OAAOuzB,SACrB,mBACF1mD,EAAkB,eAClBH,EAAc,iBACdE,EAAgB,YAChBD,GACA+0B,EAIJ,IAAI+2C,GAAyB,EACzBC,GAAqB,EACrBC,GAAuB,EACvBC,GAAkB,EAiBtB,OAfIvL,GACAqL,EAAqBhsE,EACrBksE,GAAkBF,GAA6B/rE,EAC/C8rE,GAA0BG,IAAmBF,GAA8B7rE,EAC3E8rE,IAAwBF,GAA0BC,GAAsBC,IAElE/rE,IAEN8rE,EAAqBhsE,EACrBisE,GAAuBD,GAA6B9rE,EAEpDgsE,EAAkBjsE,EAClB8rE,GAAyBG,GAA0B/rE,GAGhD,IACA60B,EACH50B,aAAcugE,EACdxgE,mBAAoB4rE,EACpB/rE,eAAgBgsE,EAChB9rE,iBAAkB+rE,EAClBhsE,YAAaisE,EAChB,KACD,CAACt5C,IAEL,OAAOsuB,eAACqqB,GAAmB,CAAC9/E,UAAU,iBAAgBgW,SAAA,CAClDxW,cAACi4D,KAAO,CAACkB,iBAAiB,uBAAuBlM,QAAS3yB,EAAS,wBAAwB9jB,SACvFxW,cAAC27D,KAAQ,CACLn7D,UAAU,eACVi3D,SAAUopB,EACVjlB,QAASzmD,EACTyc,SAAU,EAAEpb,SAEX8jB,EAAS,0BAGlBt6B,cAAC27D,KAAQ,CACLn7D,UAAU,YACVi3D,SAAU+oB,EACV5kB,QAAS7mD,EACT6c,SAAU,EAAEpb,SAEX8jB,EAAS,6BAEdt6B,cAAC27D,KAAQ,CACLn7D,UAAU,gBACVi3D,SAAUipB,EACV9kB,QAAS3mD,EACT2c,SAAU,EAAEpb,SAEX8jB,EAAS,iCAGdt6B,cAAC27D,KAAQ,CACLn7D,UAAU,cACVi3D,SAAUmpB,EACVhlB,QAAS5mD,EACT4c,SAAU,EAAEpb,SAEX8jB,EAAS,4BAEdt6B,cAAC27D,KAAQ,CACLn7D,UAAU,iBACVi3D,SAAUkpB,EACV/kB,QAAS1mD,EACT0c,SAAU,EAAEpb,SAEX8jB,EAAS,iCAEI,E,cC3NnB,MAAM4mD,GAA+BtsD,aAAO00C,GAAeC,UAAU;;;;;;;;;;;;;;;;MAgBtEwQ;EAGOoH,GAA6BvsD,KAAOikC,GAAG;;;;;;EAQvCuoB,GAAgCxsD,KAAOikC,GAAG;;;;;;EAQ1CwoB,GAAyBzsD,aAAOgmC,GAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECzBlD0mB,GAA6B1sD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;EA2BhC0oB,GAAmB1mB,sBAAkD,CAAAt+C,EAI/E69C,KAAS,IAJuE,UAC/EhN,EAAS,mBACTvkB,EAAkB,aAClBi2C,GACHviE,EACG,MAAM+d,EAAWQ,MACX,QACFhmB,EAAO,OACP/C,EAAM,WACNg2B,GACAL,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,QAAE7M,EAAO,OAAE/C,GAAQ,WACzBg2B,GACHxL,EAAA,MAAM,CACHznB,UACA/C,SACAg2B,aACH,KACKy5C,EAAmBv3C,iBAAyB,MAC5Cw3C,EAAkBx3C,iBAAyB,MAC3Cy3C,EAAcz3C,iBAAyB,MACvC03C,EAAc13C,iBAAyB,MAEvC23C,EAAiB7vE,GAAUjE,GAAaiE,GACxCjE,GAAaiE,GACbjE,GAAa/I,IAEb88E,EAAY/zB,mBAAQ,IAAM/lB,EAAW,OAAO3rC,GAA0B,kBAAVA,EAAqBA,EAAMkjC,OAASljC,KAAQ,CAAC2rC,IACzG+5C,EAAYh0B,mBAAQ,IAAM/lB,EAAW,OAAO3rC,GAA0B,kBAAVA,EAAqBA,EAAMkjC,OAASljC,KAAQ,CAAC2rC,IACzGg6C,EAAiBj0B,mBAAQ,IAAM/lB,EAAW,gBAAY/uB,EAAW,aAAa,CAAC+uB,IAC/Ei6C,EAAkBl0B,mBAAQ,IAAM/lB,EAAW,YAAY,CAACA,IACxDk6C,EAAgBn0B,mBAAQ,IAAM/lB,EAAW,eAAW/uB,EAAW,aAAa,CAAC+uB,IAWnF,OATA0yB,8BAAoBL,GAAK,MACrBoN,SAAU/qC,IAAsC,IAADylD,EAAAC,EAAAC,EAAAC,EAAA,IAApC,SAAExtE,EAAQ,QAAEO,EAAO,IAAET,EAAG,IAAEC,GAAK6nB,EACnB,kBAAR9nB,IAAqC,QAAnButE,EAAAR,EAAYv5C,eAAO,IAAA+5C,GAAnBA,EAAqB1a,SAAS7yD,IACxC,kBAARC,IAAqC,QAAnButE,EAAAR,EAAYx5C,eAAO,IAAAg6C,GAAnBA,EAAqB3a,SAAS5yD,IACnC,kBAAbC,IAA+C,QAAxButE,EAAAZ,EAAiBr5C,eAAO,IAAAi6C,GAAxBA,EAA0B5a,SAAS3yD,IAC9C,kBAAZO,IAA6C,QAAvBitE,EAAAZ,EAAgBt5C,eAAO,IAAAk6C,GAAvBA,EAAyB7a,SAASpyD,GAAQ,MAI5E6gD,eAACqrB,GAA0B,CAAC9gF,UAAU,oBAAmBgW,SAAA,EAC1D42C,GAAavkB,IAAuBotB,eAAAC,WAAA,CAAA1/C,SAAA,CAClCxW,cAAC8/E,GAAa,CAAC1lB,IAAKsnB,EAChB7rE,GAAG,MACHysE,YAAahoD,EAAS,mBACtBquC,aAAcjhC,GAAQ1M,WAAWrZ,KAAKhN,IACtC8iD,SAAUoqB,EACV/C,aAAcA,IAElB9+E,cAAC8/E,GAAa,CAAC1lB,IAAKunB,EAChB9rE,GAAG,MACHysE,YAAahoD,EAAS,mBACtBquC,aAAcjhC,GAAQ1M,WAAWrZ,KAAK/M,IACtC6iD,SAAUqqB,EACVhD,aAAcA,OAGtB9+E,cAAC8/E,GAAa,CAAC1lB,IAAKonB,EAChB3rE,GAAG,WACHysE,YAAarsB,eAACkrB,GAA0B,CAAC3gF,UAAU,0BAAyBgW,SAAA,CACxExW,cAAA,OAAKQ,UAAU,cAAagW,SAAE8jB,EAAS,0BACvCt6B,cAACy5D,GAAU,CACPpC,QAASA,KAAA,IAAAkrB,EAAA,OAA8B,QAA9BA,EAAMf,EAAiBr5C,eAAO,IAAAo6C,OAAA,EAAxBA,EAA0B/a,SzEtFlD,GAAGh1C,GAAgB,aAAc,KyEsF2C,EACnEknC,KAAMme,KACNle,aAAc,CAAE1M,QAAS3yB,EAAS,gCAG1CquC,aAAcjhC,GAAQ1M,WAAWrZ,KAAK9M,SACtC4iD,SAAUsqB,EACVjD,aAAcA,IAElB9+E,cAAC8/E,GAAa,CAAC1lB,IAAKqnB,EAChB5rE,GAAG,UACHysE,YAAarsB,eAACkrB,GAA0B,CAAC3gF,UAAU,0BAAyBgW,SAAA,CACxExW,cAAA,OAAKQ,UAAU,cAAagW,SAAE8jB,EAAS,2BACvCt6B,cAAC6pE,KAAQ,CACLrpE,UAAU,uBACVq7D,UAAU,UACV2mB,OAAK,EACLv1B,QAASjtD,cAAC4gE,KAAI,CAACvJ,QAAS71C,GAAKA,EAAEw/C,SAASzvC,kBAAkB/a,SACrDorE,EAActxE,KAAI,CAAC5S,EAAMozB,IACf9wB,cAAC4gE,KAAKC,KAAI,CACbxJ,QAASA,KAAO,IAADorB,EACY,QAAvBA,EAAAhB,EAAgBt5C,eAAO,IAAAs6C,GAAvBA,EAAyBjb,SAAS9pE,EAAK,EACzC8Y,SAED9Y,GALkB,GAAGozB,SAQ1Bta,SAERxW,cAAA,OAAAwW,SACAxW,cAACy5D,GAAU,CACXpC,QAASA,OACLqC,KAAMgpB,cAKlB/Z,aAAcjhC,GAAQ1M,WAAWrZ,KAAKvM,QACtCqiD,SAAUwqB,EACVnD,aAAcA,IAElB9+E,cAACugF,GAAiB,IAClBvgF,cAAC46D,GAAU,CACPp6D,UAAU,iCACVpE,MAAO0Y,EACP2iD,SAAUuqB,EACV1nB,WAAYmV,GAAkBj5D,SAE9BxW,cAAA,QAAAwW,SAAO8jB,EAAS,6BAEK,IClJ3BqoD,GAAwB/tD,aAAOgmC,GAAW;;;;;;;EAyBnCgoB,GAAkB/nB,sBAAgD,CAAAt+C,EAM5E69C,KAAS,IANoE,0BAC5EtxB,EAAyB,gBACzB65B,EAAe,eACfG,EAAc,UACdG,EAAS,aACTD,GACHzmD,EACG,MAAM+d,EAAWQ,MACX,QACFz7B,EAAO,UACPkT,EAAS,QACTuB,EAAO,WACP1U,EAAU,OACV2U,EAAM,IACN1N,EAAG,QAAE8M,EAAO,QAAEH,EAAO,UAAEE,EAAS,OAAED,EAAM,WACxC80B,EAAU,QACVJ,GACAD,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,QACFtiB,EAAO,UACPkT,EAAS,QACTuB,EAAO,WACP1U,EAAU,OACV2U,EAAM,IACN1N,EAAG,QAAE8M,EAAO,QAAEH,EAAO,UAAEE,EAAS,OAAED,GACrC,WACD80B,EAAU,QACVJ,GACHpL,EAAA,MAAM,CACHl9B,UACAkT,YACAuB,UACA1U,aACA2U,SACA1N,MAAK8M,UAASH,UAASE,YAAWD,SAClC80B,aACAJ,UACH,KACKmzC,EAAkB7wC,iBAAwB,MAE1C44C,EAAgB/0B,mBAAQ,IAAM/lB,EAAW,YAAY,CAACA,IACtD+6C,EAAmB3xD,uBAAa4xD,GAA4Bp7C,GAAQoC,IAC/D,IACAA,EACHh2B,OAAQgvE,EACR3jF,YAAY2jF,GAAyBh5C,EAAY3qC,gBAErD,CAACuoC,IACCq7C,EAAYl1B,mBAAQ,IAAM/lB,EAAW,QAAQ,CAACA,IAC9Ck7C,EAAgBn1B,mBAAQ,IAAM/lB,EAAW,YAAY,CAACA,IACtDm7C,EAAe/xD,uBAAa/V,GAAoBusB,GAAQoC,IACnD,IACAA,EACH92B,OAAQmI,OAEZ,CAACusB,IACCw7C,EAAkBr1B,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1Dq7C,EAAkBt1B,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1Ds7C,EAAkBlyD,uBAAY,CAACs1C,EAAmC/C,EAAkC0X,KAC1F,OAAZpY,QAAY,IAAZA,KAAeyD,EAAU/C,GACrB+C,GAAU9+B,GACV6S,IAAI,IACGA,EACHrnC,QAASszD,KAEb2U,EACH,GACF,CAACpY,EAAcr7B,IAiBlB,OAfA8yB,8BAAoBL,GAAK,MACrB5/B,UAAWA,KAAA,IAAA6gD,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgB3yC,eAAO,IAAAmzC,OAAA,EAAvBA,EAAyB9gD,mBAAW,IAAA6gD,IAAS,EAC9D7T,SAAU/qC,IAA2C,IAA1C,IAAEp2B,EAAG,QAAE8M,EAAO,QAAEH,EAAO,UAAEE,GAAWupB,EAEM,IAAD8+C,EAIJC,EAL1B,YAAdtoE,EACuB,kBAAZF,GAAwBG,IACR,QAAvBooE,EAAAT,EAAgB3yC,eAAO,IAAAozC,GAAvBA,EAAyB/U,YAAY,UAAWxzD,EAASG,IAG1C,kBAAR9M,GAAoB8M,IACJ,QAAvBqoE,EAAAV,EAAgB3yC,eAAO,IAAAqzC,GAAvBA,EAAyBhV,YAAY,SAAUngE,EAAK8M,GAE5D,MAIDnT,cAACqiE,GAAY,CAChBjI,IAAK0gB,EACLlwC,MAAOtQ,EAAS,wBAChBkoC,kBAAmBtvD,EACnBwvD,sBAAuBr8D,EACvBo8D,sBAAuBzvD,EACvB6vD,gBAAiB1vD,EACjBovD,SAAUtvD,EACV0vD,gBAAiBA,EACjBI,eAAgBA,CAAClkE,EAAMme,KACnBmmE,EAAgBtkF,GACH,YAATA,EAAoBokF,EAAcjmE,GACjCgmE,EAAUhmE,EAAK,EAExBgmD,aAAcqgB,EACdpgB,UAAWA,EACXH,eAAgBA,EAChBK,iBAAkB+f,EAClBhgB,kBAAmB1zC,IACf2X,KAAa1lB,MAAM,CACf4lB,YAAa/M,EAAS,8BAA8B9K,GACpD4X,QAAS9M,EAAS,2BACpB,EAEN/7B,MAAOY,EAAuBC,EAAYC,GAASd,MACnDqkE,cAAe95B,EACT9oC,cAAC2iF,GAAqB,CACpBniF,UAAU,uCACVpE,MAAOmW,EACPklD,SAAU2rB,EACV9oB,WAAYgV,GAAoB94D,SAEhCxW,cAAA,QAAMQ,UAAU,cAAagW,SAAE8jB,EAAS,8BAE1C,KACL9jB,SAEDxW,cAAC0oE,GAAe,CACZrvC,QAAmB,IAAXtlB,EACR40D,aAAc70D,EACd2jD,SAAUorB,EACVja,eAAgBka,GAJE,QAAQz+D,KAAKilB,UAAUx1B,OAMlC,ICtJbwvE,GAA2B1uD,KAAOikC,GAAG;;;;;;;;;;;;;EAcrC0qB,GAAmB3uD,KAAO4kC,IAAI;;EAQvBgqB,GAAoB3oB,sBAAoD,CAAAt+C,EAElF69C,KAAS,IAF0E,aAClF0kB,GACHviE,EACG,MAAM+d,EAAWQ,MACX,KACFn9B,EAAI,OACJoU,EAAM,WACNg2B,GACAL,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,KACFhkB,EAAI,OACJoU,GACH,WACDg2B,GACHxL,EAAA,MAAM,CACH5+B,OACAoU,SACAg2B,aACH,KACK07C,EAAex5C,iBAAyB,MACxCy5C,EAAgBz5C,iBAAyB,MAEzC05C,EAAc71B,mBAAQ,IAAM/lB,EAAW,UAAU,CAACA,IAClD67C,EAAa91B,mBAAQ,IAAM/lB,EAAW,YAAQ/uB,EAAW,aAAa,CAAC+uB,IAS7E,OAPA0yB,8BAAoBL,GAAK,MACrBoN,SAAU/qC,IAAsB,IAADonD,EAAAC,EAAA,IAApB,KAAEnmF,EAAI,MAAE+W,GAAO+nB,EACF,kBAAT9+B,IAAuC,QAApBkmF,EAAAJ,EAAat7C,eAAO,IAAA07C,GAApBA,EAAsBrc,SAAS7pE,IACxC,kBAAV+W,IAAyC,QAArBovE,EAAAJ,EAAcv7C,eAAO,IAAA27C,GAArBA,EAAuBtc,SAAS9yD,GAAM,MAItEuhD,eAACqtB,GAAwB,CAAC9iF,UAAU,gBAAegW,SAAA,CACtDxW,cAAC8/E,GAAa,CAAC1lB,IAAKqpB,EAChB5tE,GAAG,OACH8yD,aAAchrE,EACd2kF,YAAatiF,cAACi4D,KAAO,CAACrtB,MAAOtQ,EAAS,sBAAsB9jB,SACxDxW,cAACujF,GAAgB,CAAClsB,QAASA,KACvBrjC,UAAU+vD,UAAUC,UAAUr9D,GAAkBhpB,GAAM,EACxD6Y,SACG8jB,EAAS,wBAGlBm9B,SAAUmsB,EACV9E,aAAcA,IAElB9+E,cAAC8/E,GAAa,CAAC1lB,IAAKspB,EAChB7tE,GAAG,SACH8yD,aAAcjhC,GAAQ1M,WAAWrZ,KAAKjN,MACtC4tE,YAAarsB,eAACkrB,GAA0B,CAAC3gF,UAAU,0BAAyBgW,SAAA,CACxExW,cAAA,OAAKQ,UAAU,cAAagW,SACvB8jB,EAAS,wBAEdt6B,cAACy5D,GAAU,CACPpC,QAASA,KAAA,IAAA4sB,EAAA,OAA2B,QAA3BA,EAAMP,EAAcv7C,eAAO,IAAA87C,OAAA,EAArBA,EAAuBzc,S3E9E9Bz1D,IACjBygB,GAAgB,6BAA8B,GAC/C,KACY,QAAXzgB,EAAmB,KAAO,MAE3BygB,GAAgB,wCAAyC,GACzDA,GAAgB,aAAc,G2EwE2B0xD,CAAYnyE,GAAQ,EACnE2nD,KAAMme,KACNle,aAAc,CAAE1M,QAAS3yB,EAAS,gCAG1Cm9B,SAAUksB,EACV7E,aAAcA,MAEK,ICzEzBqF,GAAwBtpB,sBAA4D,CAAAt+C,EAKvF69C,KAAS,IAL+E,UACvFvrD,EAAS,cACTmF,EAAa,SACbyjD,EAAQ,SACR/lC,GACHnV,EACG,MAAM+d,EAAWQ,KACXspD,EAA4Bn6C,iBAAyB,SAAlBj2B,EAA2B,QAAUA,GACxEqwE,EAAWp6C,iBAAyB,OACnChX,EAAOzB,GAAYN,mBAAS,GAMnC,OAJAupC,8BAAoBL,GAAK,MACrBnnC,MAAOA,KAAA,IAAAqxD,EAAA,OAAsB,QAAtBA,EAAMD,EAASl8C,eAAO,IAAAm8C,OAAA,EAAhBA,EAAkBrxD,OAAO,MAGnCgjC,eAACirB,GAA4B,CAChC1gF,UAAU,2BACN4wB,GAAmB,CACnBG,iBAAiB,EACjBD,aAAcziB,EAAUkK,OACxByY,WACAC,UAAWA,KACHwB,GAAS,GAAGwkC,EAAS5oD,EAAUokB,GAAO72B,MAAM,EAEpDs1B,aACFlb,SAAA,CAEFxW,cAAC27D,KAAQ,CAACvB,IAAKiqB,EACX7jF,UAAU,sBACVo7D,QAA2B,SAAlB5nD,EACTyjD,SAAUj2C,IACNi2C,EAASj2C,EAAE6mB,OAAOuzB,QAAU,OAASwoB,EAA0Bj8C,QAAQ,EACzE3xB,SACJ8jB,EAAS,sBACXt6B,cAAC46D,GAAU,CACPp6D,UAAU,cACVpE,MAAO4X,EACPyjD,SAAUA,EACV6C,WAAYzrD,MAEW,IAG7B01E,GAAoC3vD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmC9C2rB,GAA+B5vD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqDlC4rB,GAAqB5pB,sBAAsD,CAAAt+B,EAIrF69B,KAAS,IAJ6E,mBACrFvxB,EAAkB,0BAClBC,EAAyB,aACzBg2C,GACHviD,EACG,MAAMjC,EAAWQ,MACX,WACF17B,EAAU,cACV4U,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,QAChByzB,EAAO,WACPI,GACAL,GAAQu1B,uBAAWxgC,IAAA,IACnB9a,MAAM,WACFviB,EAAU,cACV4U,EAAa,kBACbG,EAAiB,iBACjBD,GACH,QACDyzB,EAAO,WACPI,GACHtL,EAAA,MAAM,CACHr9B,aACA4U,gBACAG,oBACAD,mBACAyzB,UACAI,aACH,KACK0uC,EAAexsC,iBAAuB,MACtCy6C,EAA2Bz6C,iBAAiC,MAC5D06C,EAAyB16C,iBAAwB,OAChD26C,EAAeC,GAAkB3zD,oBAAS,IAC1C4zD,EAAsBC,GAAkC7zD,oBAAS,GAClEkzD,EAA4Bn6C,iBAAyB,SAAlBj2B,EAA2B,QAAUA,GAwBxEgxE,EAAmBl3B,mBAAQ,IAAM/lB,EAAW,qBAAqB,CAACA,IAClEk9C,EAAoBn3B,mBAAQ,IAAM/lB,EAAW,sBAAsB,CAACA,IACpEm9C,EAAuBp3B,mBAAQ,IAAM/lB,EAAW,sBAAkB/uB,EAAW,aAAa,CAAC+uB,IAE3Fl5B,EAAYi/C,mBAAQ,IAAMyhB,KAC3B1/C,QAAOtf,GACGu4B,GAA+C,WAAlBv4B,EAAMhC,WAE9C,CAACu6B,IAGL2xB,8BAAoBL,GAAK,MACrBoN,SAAUjqC,IAAyB,IAAD4nD,EAAA,IAAvB,eAAElxE,GAAgBspB,EACrBtpB,IAA8C,QAA9BkxE,EAAAR,EAAuBx8C,eAAO,IAAAg9C,GAA9BA,EAAgC3d,SAASvzD,GAAe,MAIpF,MAAMmxE,EAAuB/2E,GAAa2F,GAC1C,OAAOiiD,eAACuuB,GAA4B,CAChChkF,UAAU,iBAAgBgW,SAAA,CAE1By/C,eAAA,OAAKz1D,UAAU,6BAA4BgW,SAAA,CACvCxW,cAAA,OAAKQ,UAAU,oBAAmBgW,SAC9BxW,cAAC27D,KAAQ,CACLlE,SA/CUj2C,GAAWmmB,GAAQoC,IACzC,MAAMs7C,EAAqB7jE,EAAE6mB,OAAOuzB,QAOpC,MAAO,IACA7xB,EAEH3qC,WAAYimF,EACZtxE,QAAQsxE,GAA6Bt7C,EAAYh2B,OACpD,IAmCW6nD,QAASx8D,EAAWoX,SACtB8jB,EAAS,4BAEduO,GAAsB7oC,cAACs5D,KAAO,CAC3Bn2B,QAAS2hD,EACTpL,gBAAiBqL,EACjBrpB,QAAS,CAAC,QAAS,SACnBG,UAAU,SACV1C,iBAAiB,gCACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5CxW,cAACmkF,GAAqB,CAAC/pB,IAAKsqB,EACxB71E,UAAWA,EACXmF,cAAeA,EACf0d,SAAUA,KAAO,IAADglD,EACZqO,GAA+B,GACX,QAApBrO,EAAAD,EAAatuC,eAAO,IAAAuuC,GAApBA,EAAsBzjD,OAAO,EAEjCwkC,SAlDOr7D,IACvB,MAAM0/B,EAAkB,GAAG1/B,IAEH,SAApB0/B,IAA4BsoD,EAA0Bj8C,QAAUrM,GACpE6L,GAAQoC,IACG,IAAKA,EAAa/1B,cAAe8nB,KAC1C,MA8CatlB,SAEPy/C,eAACsuB,GAAiC,CAACnqB,IAAKqc,EACpCj2E,UAAU,uBACVoxB,SAAU,EACVG,UAAWvQ,IACP,GAAc,cAAVA,EAAElgB,KAAiC,UAAVkgB,EAAElgB,KAA6B,OAAVkgB,EAAElgB,IAOhD,OANAyjF,GAA+B,GAE/Bp6C,YAAW,KAAO,IAAD26C,EACmB,QAAhCA,EAAAZ,EAAyBv8C,eAAO,IAAAm9C,GAAhCA,EAAkCryD,OAAO,GAC1C,MAEI,CACX,EACFzc,SAAA,CAEFy/C,eAAA,QAAMz1D,UAAU,uBAAsBgW,SAAA,CAAE8jB,EAAS,4BAA4B,IAACt6B,cAAC45E,KAAiB,OAC/FwL,EACKplF,cAACu+D,GAAc,CAAC/9D,UAAU,+BAAgC4kF,IAC1DplF,cAACu+D,GAAc,CAAC/9D,UAAU,4BAA4Bd,QAAQ,0BAG1EN,GAAcypC,GACT7oC,cAAC27D,KAAQ,CAAClE,SAAUj2C,GAAKqjE,EAAerjE,EAAE6mB,OAAOuzB,SAAUA,QAASgpB,EAAcpuE,SAChF8jB,EAAS,iCAGrBl7B,GAAc62D,eAAAC,WAAA,CAAA1/C,SAAA,CACXxW,cAAA,OAAAwW,SACIxW,cAACgnE,KAAK,CACFsb,YAAatiF,cAAA,QAAAwW,SACR8jB,EAAS,qBACNt6B,cAAA,QAAwBQ,UAAU,aAAYgW,SACzC8jB,EAAS,2BADJ,iBAKlBl+B,MAAO+X,EACPsjD,SAAUj2C,IACNyjE,EAAkBzjE,GACdojE,GAAeI,EAAiBxjE,EAAE,MAIlDxhB,cAAA,OAAAwW,SACIxW,cAACgnE,KAAK,CACFsb,YAAatiF,cAAA,QAAAwW,SACR8jB,EAAS,qBACNt6B,cAAA,QAAsBQ,UAAU,YAAWgW,SACtC8jB,EAAS,0BADJ,gBAKlBl+B,MAAO8X,EACPujD,SAAUj2C,IACFojE,GAAeK,EAAkBzjE,GACrCwjE,EAAiBxjE,EAAE,MAI/BxhB,cAAA,OAAKQ,UAAU,aAAYgW,SAGvBxW,cAAC6+E,GAAY,CAACzkB,IAAKuqB,EACf9uE,GAAG,kBACH2yB,aAAW,EACXmgC,aAAcjhC,GAAQ1M,WAAWrZ,KAAK1N,eACtCwjD,SAAUytB,EACVpG,aAAcA,EACdsB,SAAU,CACNC,QAAS,YAKE,ICjU7BkF,GAAmC3wD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwCtC2sB,GAAyB3qB,sBAA8D,CAAAt+C,EAEjG69C,KAAS,IAFyF,aACjG0kB,GACHviE,EACG,MAAM+d,EAAWQ,MACX,MACFt+B,EAAK,SACLqW,EAAQ,OACRd,EAAM,eACNsD,EAAc,iBACdf,EAAgB,QAChBqzB,EAAO,WACPI,GACAL,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,MACFnlB,EAAK,SACLqW,EAAQ,OACRd,EAAM,eACNsD,EAAc,YACdhB,GACH,QACDszB,EAAO,WACPI,GACHxL,EAAA,MAAM,CACH//B,QACAqW,WACAd,SACAsD,iBACAf,iBAA6B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaC,iBAC/BqzB,UACAI,aACH,KACK09C,EAAkC,QAAX1zE,EAAmB,SAAM,IAChD2zE,EAAsBz7C,iBAAyB,MAC/C07C,EAAoB73B,mBAAQ,IACvB/lB,EACH,eACA3rC,GAC4B,kBAAVA,EAAqB,GAAKA,EAAMimB,MAAM,aAC/C/R,KAAIC,GAAS,GAAGA,IAAQ+uB,SACxBzP,QAAOtf,GAA0B,kBAAVA,GAAsBA,EAAMwI,OAAS,KAErE,aAEL,CAACgvB,IACE69C,EAAuBz0D,uBAAa3P,GAAWmmB,GAAQoC,IAClD,IAAKA,EAAa10B,eAAgBmM,EAAE6mB,OAAOuzB,aAClD,CAACj0B,IAaL8yB,8BAAoBL,GAAK,MACrBoN,SAAU/qC,IAAsB,IAADopD,EAAA,IAApB,YAAEzxE,GAAaqoB,EAClBroB,IAAwC,QAA3ByxE,EAAAH,EAAoBv9C,eAAO,IAAA09C,GAA3BA,EAA6Bre,SAASpzD,EAAYxF,KAAK62E,IAAsB,MAItG,MAAMK,EAAyB,SAAbjzE,EACZgP,GAAa,CAAErlB,UACX,2BACA,sBAC4B,OAAhC4D,EAAYyS,GAAUzW,MAClB,sBACA,2BACJ2pF,EAAmB,QAAXh0E,EACd,OAAOkkD,eAACsvB,GAAgC,CAAC/kF,UAAW,+BAA+BuR,IAASyE,SAAA,CACxFxW,cAAC8/E,GAAa,CAAC1lB,IAAKsrB,EAChBpD,YAAahoD,EAASwrD,GACtBjwE,GAAG,eACH8yD,aAAcjhC,GAAQ1M,WAAWrZ,KAAKvN,YAAYxF,KAAK62E,GACvDhuB,SAAUkuB,EACV7G,aAAcA,IAEjBiH,GAAS/lF,cAACi4D,KAAO,CACdhL,QAAS3yB,EAAS,iCAClB6+B,iBAAiB,uBAAsB3iD,SAEvCxW,cAAC27D,KAAQ,CACLn7D,UAAU,qBACVi3D,SAAUmuB,EACVhqB,QAASvmD,EAAemB,SAEvB8jB,EAAS,mCAGlBt6B,cAAC46D,GAAU,CAACp6D,UAAU,iBAAiBpE,MAAO,GAAGkY,IAC7CmjD,SAAUr7D,GA/CgBA,KAC9BurC,GAAQoC,IACG,IACAA,EACH11B,YAAa,IACN01B,EAAY11B,YACfC,iBAAkBlY,MAG5B,EAsCqB4pF,CAAyB5pF,GAC5Ck+D,WAAYoV,GAA4Bl5D,SAExCy/C,eAAA,QAAAz/C,SAAA,CACK8jB,EAAS,wBAAwB,IAACt6B,cAACk5D,GAAW,CAC3C7Z,QAASr/C,cAACg7D,GAAiB,CAAAxkD,SAAE8jB,EAAS,mCAIlDt6B,cAAC69D,GAAoB,MACU,IC/IjCooB,GAAmCrxD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkD7CqtB,GAAkB,CACpB,CAAE9yD,IAAK,UAAW+yD,IAAK,CAAC,IAAK,IAAK,MAClC,CAAE/yD,IAAK,UAAW+yD,IAAK,CAAC,EAAG,EAAG,IAC9B,CAAE/yD,IAAK,UAAW+yD,IAAK,CAAC,IAAK,EAAG,IAChC,CAAE/yD,IAAK,UAAW+yD,IAAK,CAAC,IAAK,IAAK,IAClC,CAAE/yD,IAAK,UAAW+yD,IAAK,CAAC,EAAG,IAAK,IAChC,CAAE/yD,IAAK,UAAW+yD,IAAK,CAAC,EAAG,IAAK,MAChC,CAAE/yD,IAAK,UAAW+yD,IAAK,CAAC,EAAG,EAAG,MAC9B,CAAE/yD,IAAK,UAAW+yD,IAAK,CAAC,IAAK,EAAG,OAM9BC,GAAoB7pE,IAGA,IAHC,MACvBngB,EAAQ,GAAE,SACVq7D,GACgBl7C,EAChB,MAAO8pE,EAAaC,GAAkBp1D,mBAAS90B,IACxCmqF,EAAeC,GAAoBt1D,oBAAS,KACxC,CACHkC,IAAKF,GAAckB,KAAKh4B,GAASA,EAAQ,UACzC+pF,IAAKhzD,GAAU/2B,GAAO,OA2B9B,OAvBAquC,qBAAU,KACN,MAAMuT,EAAiBqoC,EAAYlqD,WAAW,KAAOkqD,EAAc,IAAIA,IAEnEnzD,GAAckB,KAAK4pB,KACnBsoC,EAAetoC,GACfwoC,EAAiB,CACbpzD,IAAK4qB,EACLmoC,IAAKhzD,GAAU6qB,GAAgB,KAE3B,OAARyZ,QAAQ,IAARA,KAAWzZ,GACf,GAGD,CAACqoC,IAEJ57C,qBAAU,KACN67C,EAAelqF,GACfoqF,EAAiB,CACbpzD,IAAKF,GAAckB,KAAKh4B,GAASA,EAAQ,UACzC+pF,IAAKhzD,GAAU/2B,GAAO,IACxB,GACH,CAACA,IAEG65D,eAACgwB,GAAgC,CAAAzvE,SAAA,CACpCxW,cAAA,OAAKQ,UAAU,aAAYgW,SACtB0vE,GAAgB51E,KAAIisB,IAAmB,IAAlB,IAAEnJ,EAAG,IAAE+yD,GAAK5pD,EAE9B,MAAMkqD,GAAqB,IAATN,EAAI,GAAoB,IAATA,EAAI,GAAoB,IAATA,EAAI,IAAY,KAAQ,IAClE,UACA,UAEN,OAAOnmF,cAAA,OAAeQ,UAAU,cAAcoqC,MAAOxX,EAAK7c,MAAO,CAAEioD,gBAAiBprC,GAAOikC,QAASA,IAAc,OAARI,QAAQ,IAARA,OAAQ,EAARA,EAAWrkC,GAAK5c,SACrH+vE,EAAcnzD,IAAIsM,gBAAkBtM,GAAOpzB,cAAA,OACxCQ,UAAU,aACV+V,MAAO,CACHioD,gBAAiBioB,MAJZrzD,EAOX,MAGd6iC,eAAA,OAAKz1D,UAAU,cAAagW,SAAA,CACxBxW,cAAA,OAAKQ,UAAU,2BAA2B+V,MAAO,CAAEioD,gBAAiB+nB,EAAcnzD,OAClFpzB,cAACgnE,KAAK,CACFx3C,KAAK,QACLpzB,MAAOiqF,EACP5uB,SAAUj2C,IACN8kE,EAAe9kE,EAAE6mB,OAAOjsC,MAAM,SAIX,EAGjCsqF,GAA2B9xD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BrC8tB,GAAwB/xD,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuDlC+tB,GAAmB,CACrBpxE,gBAAiB,CACbqxE,QAAS,kBACTC,aAAc,cACdzmF,SAAU,yCAEdoV,kBAAmB,CACfoxE,QAAS,oBACTC,aAAc,gBACdzmF,SAAU,2CAEdiV,cAAe,CACXuxE,QAAS,gBACTC,kBAAc9tE,EACd3Y,SAAU,uCAEdkV,cAAe,CACXsxE,QAAS,gBACTC,kBAAc9tE,EACd3Y,SAAU,uCAEdqV,eAAgB,CACZmxE,QAAS,iBACTC,kBAAc9tE,EACd3Y,SAAU,yCAGL0mF,GAAkBA,KAC3B,MAAMzsD,EAAWQ,MACX,OACF/oB,EAAM,YACNsC,EAAW,gBACXmB,EAAe,eACfE,EAAc,cACdlB,EAAa,kBACbiB,EAAiB,QACjBkyB,EAAO,cACPryB,EAAa,cACbC,GACAmyB,GAAQu1B,uBAAWxgC,IAAA,IACnB9a,MAAM,OACF5P,EAAM,YACNsC,EAAW,gBACXmB,EAAe,eACfE,EAAc,cACdlB,EAAa,kBACbiB,EAAiB,cACjBH,EAAa,cACbC,GACH,QACDoyB,GACHlL,EAAA,MAAM,CACH1qB,SACAsC,cACAmB,kBACAE,iBACAlB,gBACAiB,oBACAkyB,UACAryB,gBACAC,gBACH,KAEKyxE,EAAY,CACd,CACIvuE,KAAMmuE,GAAiBpxE,gBACvBpZ,MAAOoZ,EACPyxE,WAAY5yE,GAEhB,CACIoE,KAAMmuE,GAAiBnxE,kBACvBrZ,MAAOqZ,EACPwxE,WAAYzyE,GAEhB,CACIiE,KAAMmuE,GAAiBtxE,cACvBlZ,MAAOkZ,GAEX,CACImD,KAAMmuE,GAAiBrxE,cACvBnZ,MAAOmZ,GAEX,CACIkD,KAAMmuE,GAAiBlxE,eACvBtZ,MAAOsZ,IAGf,OAAO1V,cAACs5D,KAAO,CACXoC,QAAS,CAAC,SACVG,UAAU,aAEV1C,iBAAiB,mDACjB9Z,QAASr/C,cAAA,OAAKQ,UAAU,yBAAwBgW,SAC5CxW,cAAC2mF,GAAqB,CAACnmF,UAAU,sBAAqBgW,SACjDwwE,EAAU12E,KAAIitB,IAAkC,IAAjC,KAAE9kB,EAAI,MAAErc,EAAK,WAAE6qF,GAAY1pD,EACvC,MAAM,QAAEspD,EAAO,SAAExmF,EAAQ,aAAEymF,GAAiBruE,GACrCyuE,EAAQzlF,EAAWP,EAAWimF,GAAU/qF,GACzC,OAAEmY,EAAM,UAAEnM,GAAwB,OAAV6+E,QAAU,IAAVA,IAAc,CAAC,EAE7C,OAAOhxB,eAAA,OAAmBz1D,UAAU,gBAAegW,SAAA,CAC/Cy/C,eAAA,MAAIz1D,UAAW,wBAAuB0mF,EAAS,GAAK,YAAa1wE,SAAA,CAC7DxW,cAAA,QAAAwW,SACK8jB,EAASj6B,KAEdL,cAAC27D,KAAQ,CACLC,QAASsrB,EACTzvB,SAAUj2C,IACNmmB,GAAQoC,IACJ,MAAMq9C,EAAa5lE,EAAE6mB,OAAOuzB,QAE5B,MAAO,IACA7xB,EACH,CAAC88C,GAAU,CAACO,KAAehrF,EAAMkxB,MAAM,IAC1C,GACH,EACJ9W,SACJ8jB,EAAS,sCAEd4sD,GAAUjxB,eAAA,OAAKz1D,UAAU,uBAAsBgW,SAAA,CACrB,kBAAdpO,GAAqC,QAAX2J,GAAqB/R,cAAAk2D,WAAA,CAAA1/C,SACpDy/C,eAAA,MAAIz1D,UAAU,oBAAmBgW,SAAA,CAC7BxW,cAAA,QAAMQ,UAAU,QAAOgW,SAAE8jB,EAAS,uCAClCt6B,cAAC46D,GAAU,CACPp6D,UAAU,qBACVpE,MAAOgM,EACPkyD,WAAY,CACR,CAAEj+D,MAAO2D,cAACC,IAAmB,IAAK7D,MAAO,QACzC,CAAEC,MAAOi+B,EAAS,4CAA6Cl+B,MAAO,UACtE,CAAEC,MAAOi+B,EAAS,4CAA6Cl+B,MAAO,WAE1Eq7D,SAAUr7D,IACNurC,GAAQoC,IACJ,MAAMs9C,EAAWP,EAAe,IAAK/8C,EAAY+8C,SAAkB9tE,EACnE,OAAKquE,GAAaP,GAElBO,EAASj/E,UAA6B,kBAAVhM,EAAqBA,EAAQ,OAClD,IACA2tC,EACH,CAAC+8C,GAAeO,IALmBt9C,CAMtC,GACH,SAKC,kBAAXx1B,GAAuBvU,cAAAk2D,WAAA,CAAA1/C,SAC3By/C,eAAA,MAAIz1D,UAAU,cAAagW,SAAA,CACvBxW,cAAA,QAAMQ,UAAU,QAAOgW,SAAE8jB,EAAS,uCAClCt6B,cAAC46D,GAAU,CACPp6D,UAAU,qBACVpE,MAAOmY,EACP+lD,WAAY,CACR,CAAEj+D,MAAO2D,cAACC,IAAmB,IAAK7D,MAAO,GACzC,CAAEC,MAAO,KAAMD,MAAO,GACtB,CAAEC,MAAO,KAAMD,MAAO,GACtB,CAAEC,MAAO,KAAMD,MAAO,IAE1Bq7D,SAAUr7D,IACNurC,GAAQoC,IACJ,MAAMs9C,EAAWP,EAAe,IAAK/8C,EAAY+8C,SAAkB9tE,EACnE,OAAKquE,GAAaP,GAElBO,EAAS9yE,OAA0B,kBAAVnY,EAAqBA,EAAQ,EAC/C,IACA2tC,EACH,CAAC+8C,GAAeO,IALmBt9C,CAMtC,GACH,SAKlB/pC,cAAA,MAAAwW,SACIxW,cAAC27D,KAAQ,CACLn7D,UAAU,kBACVo7D,QAAS16D,EACTu2D,SAAUj2C,IACNmmB,GAAQoC,IACJ,MAAMu9C,EAAc9lE,EAAE6mB,OAAOuzB,QAE7B,MAAO,IACA7xB,EACH,CAAC88C,GAAU,IAAIzqF,EAAMkxB,MAAM,EAAG,GAAIg6D,EAAalrF,EAAM,IACxD,GACH,EACJoa,SAEFxW,cAAA,QAAMQ,UAAU,QAAOgW,SAAE8jB,EAAS,uCAGzCp5B,GAAalB,cAAComF,GAAiB,CAC5BhqF,MAAO+qF,EACP1vB,SAAU8vB,GAAe5/C,GAAQoC,IACtB,IACAA,EACH,CAAC88C,GAAU,IAAIzqF,EAAMkxB,MAAM,EAAG,GAAIi6D,SAI9CvnF,cAAA,MAAAwW,SAAK8jB,EAAS,kCACdt6B,cAACs2E,KAAa,CACVC,OAAQpgE,GACRxW,MAAgB,OAAT8B,QAAS,IAATA,IAAa,GACpBswE,iBAAkBpyE,IACdgoC,GAAQoC,IACG,IACAA,EACH,CAAC88C,GAAU,CAACzqF,EAAM,GAAIuD,EAAMyzB,OAAQh3B,EAAMkxB,MAAM,EAAG,OAEzD,SA9GDu5D,EAkHX,QAGXrwE,SAEPy/C,eAACywB,GAAwB,CAAClmF,UAAU,qBAAoBgW,SAAA,CACpDxW,cAAA,OAAKQ,UAAU,kBAAiBgW,SAC3BwwE,EAAU12E,KAAIqtB,IAAkC,IAAjC,KAAEllB,EAAI,MAAErc,EAAK,WAAE6qF,GAAYtpD,EACvC,MAAM,QAAEkpD,GAAYpuE,GACbyuE,EAAQzlF,EAAWP,EAAWimF,GAAU/qF,GACzC,OAAEmY,EAAM,UAAEnM,GAAwB,OAAV6+E,QAAU,IAAVA,IAAc,CAAC,EAE7C,OAAOjnF,cAAA,OACHQ,UAAU,6BACV+V,MAAO,CACH9C,WAAYyzE,EAAS,UAAY,qBACjCvnF,MAAoC,KAAnB,OAAT8B,QAAS,IAATA,IAAa,IAAIsX,QAAiBmuE,EAAqBzlF,EAAZ,UACnD+lF,WAAaN,GAAUhmF,EAAa,WAAWimF,IAAW,OAC1D/+E,UAAY8+E,GAAwB,WAAd9+E,EAA0B,SAAW,UAC7DoO,SAEAjC,GAAU2yE,EAAUjxB,eAAA,OAAAz/C,SAAA,CAAK,IAAEjC,KAAgB,QAThCsyE,EAUX,MAGd7mF,cAAA,QAAMQ,UAAU,mBAAkBgW,SAAE8jB,EAAS,8CAE3C,E,OCrZP,MAAMmtD,GAAiB5sB,sBAA8C,CAAAt+C,EAMzD+lD,KAAkB,IANwC,cACzEhhB,EAAa,iBACbC,EAAgB,aAChByhB,EAAY,UACZC,EAAS,eACTH,GACavmD,EACb,MAAM+d,EAAWQ,MACX,OACF/oB,EAAM,MACNvV,EAAK,KAAE6V,EAAI,OAAEC,EAAM,QAAEjT,EAAO,cAC5BmT,EAAa,UAAEC,EAAS,WACxBrT,EAAU,OACV2U,EAAM,UACNpB,EAAS,WACTo1B,EAAU,QACVJ,GACAD,GAAQu1B,uBAAW1gC,IAAA,IACnB5a,MAAM,OACF5P,EAAM,MACNvV,EAAK,KAAE6V,EAAI,OAAEC,EAAM,QAAEjT,EAAO,cAC5BmT,EAAa,UAAEC,EAAS,WACxBrT,EAAU,OACV2U,EAAM,UACNpB,GACH,WACDo1B,EAAU,QACVJ,GACHpL,EAAA,MAAM,CACHxqB,SACAvV,QAAO6V,OAAMC,SAAQjT,UACrBmT,gBAAeC,YACfrT,aACA2U,SACApB,YACAo1B,aACAJ,UACH,MACK,QAAEsB,GAAYV,MACd,mBAAEM,EAAkB,0BAAEC,GAA8BG,EAEpDy+C,EAAiBz9C,iBAA2B,MAE5CmjB,EAAYvrC,GAAa,CAAErlB,WAC1BmrF,EAAuBC,GAA4B12D,mBAAS,GAC7D22D,EAAiB/5B,mBAAQ,KAAMg6B,O1BtEP3rF,E0BsEyB,CACnD8B,OAAQq8B,EAAS,2BACjBx3B,KAAMw3B,EAAS,yBACf73B,SAAU63B,EAAS,8B1BxEhB/zB,EAAYpK,GAAYmU,KAAIiM,IAAA,IAAC,MAAE5c,EAAK,KAAEhC,EAAI,MAAEtB,GAAOkgB,EAAA,MAAM,CAC5DlgB,MAAgB,WAATsB,EAAoBqC,cAACC,IAAmB,IAAM5D,EACrDD,MAAOuB,EACPwxB,MAAO,CACH5Y,MAAO,CACH5W,QACAyvE,WAAY,SAGvB,IAV6BjzE,K0B0E5B,GAAE,CAACm+B,IAECytD,EAAqB99C,iBAA2B,MAChD+9C,EAAkB/9C,iBAAyB,MAC3Cg+C,EAAyBh+C,iBAA6B,MACtDi+C,EAAwBj+C,iBAA8B,MACtDk+C,EAAsBl+C,iBAA4B,MAClDm+C,EAA4Bn+C,iBAAkC,MAC9Do+C,EAAsBp+C,iBAA4B,OAEjDq+C,EAAcC,GAAmBr3D,mBAGrC,CACCrb,GAAI,GACJ2xD,SAAUA,SAkBRghB,EAAa16B,mBAAQ,IAAM/lB,EAAW,SAAS,CAACA,IAChD0gD,EAAiB36B,mBAAQ,IAAM/lB,EAAW,WAAW,CAACA,IACtD2gD,EAAgBv3D,uBAAa9xB,GAAyBsoC,GAAQ6S,IAAI,IAAUA,EAAMn7C,eAAa,CAACsoC,IAChGghD,EAAkB76B,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1D6gD,EAAkBz3D,uBAAY,CAACtyB,EAAqBzC,KACtDurC,GAAQoC,IACG,IACAA,EACHv3B,cAAe3T,EACf4T,UAAWrW,KAEjB,GACH,CAACurC,IAEEkhD,EAAgB/6B,mBAAQ,I1BhFFg7B,EAAC/2E,EAAgB5V,EAAoC0sC,IAAgCppC,EAChH6Q,KAAIszB,IAAA,IAAC,KAAEjmC,EAAI,QAAE+B,EAAO,WAAEE,GAAYgkC,EAAA,MAAM,CACrCvnC,MAAOsB,IAAS6B,EACVQ,cAACC,IAAmB,IACpBD,cAACi4D,KAAO,CAAChL,QAAS9wD,EAAWuD,GAAS8W,SACpCxW,cAAA,OACIS,IAAKtE,EAAWuD,GAChBgB,IAAK,yCAAwDqR,KAAUpU,EAAK09B,wBAGxFj/B,MAAOuB,EACPiC,aACH,IACAiwB,QAAOqU,IAAA,IAAC,WAAEtkC,GAAYskC,EAAA,OAAoB,IAAftkC,GAAwBA,IAAeipC,CAAkB,I0BmEjDigD,CAAiB/2E,EAAQuoB,EAAUuO,IAAqB,CAAC92B,EAAQuoB,EAAUuO,IAyC/G,OAvCA4B,qBAAU,KAAO,IAADs+C,EACU,QAAtBA,EAAArB,EAAev/C,eAAO,IAAA4gD,GAAtBA,EAAwBvhB,SAAS,CAAEzlE,KAAM0Q,EAAU1Q,MAAO,GAC3D,CAAC0Q,IAEJg4B,qBAAU,KAAO,IAADu+C,EACW,QAAvBA,EAAAhB,EAAgB7/C,eAAO,IAAA6gD,GAAvBA,EAAyBxhB,SAASnoE,EAAQ,GAC3C,CAACA,IAEJo7D,8BAAoB6H,GAAc,MAC9B9nC,UAAWA,KAAA,IAAAyuD,EAAAC,EAAAC,EAAAC,EAAA,OAA8C,QAAxCH,EAA2B,QAA3BC,EAACnB,EAAmB5/C,eAAO,IAAA+gD,OAAA,EAA1BA,EAA4B1uD,mBAAW,IAAAyuD,MACb,QADsBE,EACnC,QADmCC,EAC1DpB,EAAgB7/C,eAAO,IAAAihD,OAAA,EAAvBA,EAAyB5uD,mBAAW,IAAA2uD,IAAU,EACtDE,cAAe1nE,IAAS,IAAD2nE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnBhC,GAAyB52D,GAAOA,EAAM,IACtC,MAAM,KACFrzB,EAAI,IACJ0I,EAAG,QAAE8M,EAAO,QAAEH,EAAO,UAAEE,EAAS,WAChCO,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,EAAgB,QAC5DvU,EAAO,MACPqV,EAAK,eACLT,EAAc,YACdG,EAAW,OACXK,EAAM,IACNE,EAAG,IAAEC,EAAG,QACRQ,EAAO,SAAEP,GACT8M,EAEsB,QAA1B2nE,EAAAvB,EAAmB5/C,eAAO,IAAAmhD,GAA1BA,EAA4B9hB,SAAS,CAAEnhE,MAAK8M,UAASH,UAASE,cACvC,QAAvBq2E,EAAAvB,EAAgB7/C,eAAO,IAAAohD,GAAvBA,EAAyB/hB,SAAS,IAC3BnoE,EACHoU,aAAYI,iBAAgBH,iBAAgBE,qBAElB,QAA9B41E,EAAAvB,EAAuB9/C,eAAO,IAAAqhD,GAA9BA,EAAgChiB,SAAS,CAAE7pE,OAAM+W,UACpB,QAA7B+0E,EAAAvB,EAAsB//C,eAAO,IAAAshD,GAA7BA,EAA+BjiB,SAAS,CAAEvzD,mBACf,QAA3By1E,EAAAvB,EAAoBhgD,eAAO,IAAAuhD,GAA3BA,EAA6BliB,SAAS/yD,GACL,QAAjCk1E,EAAAvB,EAA0BjgD,eAAO,IAAAwhD,GAAjCA,EAAmCniB,SAAS,CAAEpzD,gBACnB,QAA3Bw1E,EAAAvB,EAAoBlgD,eAAO,IAAAyhD,GAA3BA,EAA6BpiB,SAAS,CAAE7yD,MAAKC,MAAKQ,UAASP,YAAW,MAIvEohD,eAAA,OACHz1D,UAAW,CAAC,kBAA8B,QAAXuR,EAAmB,YAAc,aAAanD,KAAK,KAAK4H,SAAA,CAEvFxW,cAACg9D,GAAS,IACVh9D,cAAA,SACAA,cAAC28D,GAAW,IAEZ1G,eAAA,OAAKz1D,UAAU,qBAAoBgW,SAAA,CAC/BxW,cAACqhF,GAAsB,CAAC7gF,UAAU,eAAepE,MAAO2V,EAAQ0lD,SA9ElDoyB,IAClBliD,GAAQoC,IAAgB,IAAD+/C,EAAAC,EAAAC,EAAAC,EAAAC,EACnB,MACMC,EAAoBr1D,GAAiBiV,EADxB,GAAG8/C,MAGhB,KAAElsF,EAAI,MAAE+W,EAAK,OAAED,EAAM,YAAEL,EAAW,SAAES,EAAQ,QAAEO,EAAO,eAAEnB,GAAmBk2E,EAOhF,OAN8B,QAA9BL,EAAA7B,EAAuB9/C,eAAO,IAAA2hD,GAA9BA,EAAgCtiB,SAAS,CAAE7pE,OAAM+W,UACtB,QAA3Bq1E,EAAA5B,EAAoBhgD,eAAO,IAAA4hD,GAA3BA,EAA6BviB,SAAS/yD,GACT,QAA7Bu1E,EAAA9B,EAAsB//C,eAAO,IAAA6hD,GAA7BA,EAA+BxiB,SAAS,CAAEvzD,mBACT,QAAjCg2E,EAAA7B,EAA0BjgD,eAAO,IAAA8hD,GAAjCA,EAAmCziB,SAAS,CAAEpzD,gBACnB,QAA3B81E,EAAA7B,EAAoBlgD,eAAO,IAAA+hD,GAA3BA,EAA6B1iB,SAAS,CAAEpyD,UAASP,aAE1Cs1E,CAAiB,GAC1B,EAiE0F7vB,WAAY6U,GAAiB34D,SACjHxW,cAAA,QAAAwW,SAAO8jB,EAAS,0BAEpBt6B,cAAC46D,GAAU,CAACp6D,UAAU,aAAapE,MAAOiW,EAAMolD,SAAU+wB,EAAYluB,WAAYutB,EAAerxE,SAC7FxW,cAAA,QAAAwW,SAAO8jB,EAAS,wBAEnBwO,GAA6B9oC,cAAC26E,GAAa,CACxCn6E,UAAU,kBACVpE,MAAOkW,EACPmlD,SAAUgxB,EACVnuB,WAAY+U,GAAiB74D,SAE7BxW,cAAA,QAAAwW,SAAO8jB,EAAS,6BAIvBuO,GAAsBotB,eAAA,OAAKz1D,UAAU,oBAAmBgW,SAAA,CACrDy/C,eAAA,SAAOz1D,UAAU,yCAAwCgW,SAAA,CACpD8jB,EAAS,sBAAsB,IAACt6B,cAACk5D,GAAW,CACzC7Z,QAASr/C,cAACg7D,GAAiB,CAAAxkD,SAAE8jB,EAAS,+BAG9Ct6B,cAAC87E,GAAY,CAAC1hB,IAAK4tB,EACfrf,aAActpE,EACdsjE,gBAAiBphB,EACjBkW,SAAUixB,EACVzlB,UAAWA,EACXD,aAAcA,EACdF,eAAgBA,OAIxB9iE,cAACi6E,GAAU,CACPC,gBAAiB9lE,IAAW,IAAAg2E,EAAA,OAAqC,QAArCA,EAAIhC,EAA0BjgD,eAAO,IAAAiiD,OAAA,EAAjCA,EAAmC5iB,SAAS,CAAEpzD,eAAc,EAC5F+lE,iBAAkBtlE,IAAQ,IAAAw1E,EAAA,OAA+B,QAA/BA,EAAIhC,EAAoBlgD,eAAO,IAAAkiD,OAAA,EAA3BA,EAA6B7iB,SAAS,CAAE3yD,YAAW,IAGrFohD,eAACmrB,GAA6B,CAAC5gF,UAAU,sBAAqBgW,SAAA,CAC1DxW,cAACwjF,GAAiB,CAACppB,IAAK6tB,EACpBnJ,aAAcyJ,IAElBvoF,cAAC83E,GAAe,CAA6B1d,IAAKstB,EAC9C3P,UAAW1pE,GAAa7R,GACxBw7E,YAAaxlE,EACbm2D,aAAcl2D,EACdq2B,0BAA2BA,EAC3B2uB,SAAUmxB,GALQjB,GAOtB3nF,cAACq9E,GAAkB,CACftpE,OAAQA,EACRq5C,UAAWA,EACXvkB,mBAAoBA,OAG5BotB,eAAA,OAAKz1D,UAAU,YAAWgW,SAAA,CACtBy/C,eAAA,OAAKz1D,UAAU,kBAAiBgW,SAAA,CAC5BxW,cAAC46D,GAAU,CACPp6D,UAAU,mCACVpE,MAAOuW,EACP8kD,SAAUkxB,EACVruB,WAAYuuB,EAAcryE,SAE1BxW,cAAA,QAAAwW,SAAO8jB,EAAS,8BAGlBl7B,GAAcypC,IACT7oC,cAACykF,GAAkB,CAACrqB,IAAK8tB,EACxBr/C,mBAAoBA,EACpBC,0BAA2BA,EAC3Bg2C,aAAcyJ,IAGtBvoF,cAACwlF,GAAsB,CAACprB,IAAKguB,EAA2BtJ,aAAcyJ,IAEtEtyB,eAAA,OAAAz/C,SAAA,CACIy/C,eAAA,OAAKz1D,UAAU,4BAA2BgW,SAAA,CACtCxW,cAACopE,GAAe,CAAC5oE,UAAU,mBAAkBgW,SACxC8jB,EAAS,wBAEbuO,EAAqB7oC,cAAC+mF,GAAe,IAAM/mF,cAAA,UAC5CA,cAAC4vE,GAAU,CACPC,SAAUyY,EAAazyE,GACvBi6D,OAAQwY,EAAa9gB,cAG7BxnE,cAAC+/E,GAAgB,CAAC3lB,IAAK+tB,EAAqBrJ,aAAcyJ,OAG9DvoF,cAACuhF,GAAgB,CAACnnB,IAAKiuB,EACnBj7B,UAAWA,EACXvkB,mBAAoBA,EACpBi2C,aAAcyJ,OAGtBvoF,cAAA,OAAKQ,UAAU,mBAAkBgW,SAC7BxW,cAAC4iF,GAAe,CAACxoB,IAAK2tB,EAClBplB,gBAAiBrhB,EACjBxY,0BAA2BA,EAC3Bg6B,eAAgBA,EAChBG,UAAWA,EACXD,aAAcA,WAIxB,I,cCrSV,MAGIrmE,OAAQykD,GACR1kD,MAAOykD,GAAS,WAChBlkD,IACAR,EACE6tF,GANoB,GAMenpC,GACnCopC,GAAkB31D,KAAOikC,GAAG;;;;;;;;;cAPR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAAA;;;;;0BADH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmNV2xB,GAAYjuE,IAUP,IAADkuE,EAAAC,EAAAC,EAAAC,EAAA,IAVS,MACtB95D,EAAK,KACLnP,EAAI,OACJ0X,EAAM,SACNiB,EAAQ,YACRuwD,EAAW,SACXla,EAAQ,SACRma,EAAQ,MAERv0E,GACQgG,EACR,MAAOwuE,EAAeC,GAAoB95D,oBAAkB,IACtD,IACF7qB,EAAG,QACH8M,EAAO,QACPH,EAAO,OACPC,EAAM,UACNC,EAAS,IACTyB,EAAG,UACHhC,EAAS,WACTc,EAAU,eACVI,EAAc,eACdH,EAAc,cACdC,EAAa,iBACbC,EAAgB,eAChBtU,EAAc,SACduT,EAAQ,IACR+B,EAAG,OACH7C,EAAM,MACNvV,EAAK,cACLgX,EAAa,OACbO,EAAM,WACN3U,EAAU,QACV0U,EAAO,KACPnW,EAAI,QACJ0B,EAAO,cACP2U,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,MAChBQ,EAAK,KACL5B,EAAI,UACJF,EAAS,YACTwB,GACAuN,EACEspE,EAAqBtkE,GAAkBhpB,GACvCutF,EAA0C,SAAlBl3E,EACxB5U,EACI,QACA5C,EACJwX,EACAm3E,EAAkC,YAAdj4E,EACnB7M,EAEG2M,EADA,kCAEJ3M,EACA+kF,EAA+C,YAArBx3E,EACzBH,EAEGC,EADA,gCAEJD,EACA43E,GAAsC,SAAbx4E,EAAsBiP,GAAqBtlB,GAASqW,EAC7EgyC,GAAgD,OAA3BwmC,GACrBz4E,EACAy4E,GACAj+B,GAAYvrC,GAAaF,GACzB+/B,GAAe9/B,GAAgBD,GAC/Bm9B,GAAkC,SAAlB9qC,GAA4B5U,KACzCuV,GAAOC,GAAQb,GAAUD,EAAQiF,QACpCq0C,GACAk+B,GAAoBl3E,EAAYxF,KAAK,OACrC28E,GAAmBpsF,EAAuBC,EAAYC,IACtD,eACFX,GAAc,cACdD,IACA8sF,GAEJ,OAAOt1B,eAACs0B,GAAe,CACnB/pF,UAAW8zB,GACP,WACA+E,EAAS,SAAW,GACpBvI,EAAQ,IAAM,EAAI,oBAAsB,IAE5CumC,QAASA,IAAMsZ,EAAShvD,GACxBpL,MAAOA,EAAMC,SAAA,CAEby/C,eAAA,OACIz1D,UAAU,YAAWgW,SAAA,CAErBxW,cAAA,OAAKQ,UAAU,uBACX+V,MAAO,CACHioD,gBAAoC,QAArBisB,EAAEp8E,GAAa7R,UAAM,IAAAiuF,OAAA,EAAnBA,EAAqBj8E,qBACtCw5D,gBAAoC,QAArB0iB,EAAEr8E,GAAa7R,UAAM,IAAAkuF,OAAA,EAAnBA,EAAqB/7E,wBAG9C3O,cAAA,OAAKQ,UAAU,0BACX+V,MAAO,CACHioD,gBAAoD,QAArCmsB,EAAEt8E,GAAa68E,UAAsB,IAAAP,OAAA,EAAnCA,EAAqCn8E,qBACtDw5D,gBAAoD,QAArC4iB,EAAEv8E,GAAa68E,UAAsB,IAAAN,OAAA,EAAnCA,EAAqCj8E,wBAG9DsnD,eAAA,KACIz1D,UAAU,qBACV0mB,KAAMikE,EACN9iD,OAAO,SACPu0B,IAAI,aACJvF,QAAS71C,GAAKA,EAAEwQ,iBAChBzb,MAAO,CACH7Z,MAAO+B,GAAgB6rF,GACvB3tF,OAAQ+B,GAAiB4rF,GACzBv7E,KAAMqyC,GAAaD,IAAa,EAAI,EAAImpC,GACxCt7E,MAAOmyC,GAAY1iD,IAAiB,EAAI6rF,GACxC9rB,gBAAiBlhE,GACnBkZ,SAAA,CAEDhD,GAAiBxT,cAACwrF,GAAY,CAC3BhrF,UAAU,iBACVirF,QAASL,EACTztF,KAAMstF,EAAqB,gBAC3B3uF,IAAKqX,EACL2tD,KAAMztD,EACN03E,iBAAkBpsF,EAAuBC,EAAY,IAC9CC,EACHtB,UAA8B,QAAnBuB,MAGnBU,cAACwrF,GAAY,CACThrF,UAAU,iBACVirF,QAASN,EACTxtF,KAAMstF,EACN3uF,IAAK2W,EACLquD,KAAMnuD,EACNo4E,iBAAkBA,QAGzBx3E,GAAU,IAAI0P,MAAM,IAAInT,KAAI,CAACi7C,EAAGz6B,IACf,IAAVA,EAAoB,KACjB9wB,cAAA,OACHQ,UAAW8zB,GACP,iDAAiDxD,EAAQ,IACzDhd,EAAQmO,SAAS,GAAG6O,EAAQ,KAAO,iBAAmB,IAC1Dva,MAAO,CAAE+uD,UAAW,UAAUr2D,GAAe6hB,qBAAyB5hB,GAAe4hB,UAJxE,QAAQA,OAO5B1xB,GAAcY,cAAA,OAAKQ,UAAU,4BAA2BgW,SAAErC,IAC1D/U,GAAcY,cAAA,OAAKQ,UAAU,2BAA0BgW,SAAEtC,OAE9D+hD,eAAA,OAAKz1D,UAAU,sBAAqBgW,SAAA,CAChCxW,cAAA,OAAKQ,UAAU,qBAAoBgW,SAC9By0E,IAELh1B,eAAA,OAAKz1D,UAAU,sBAAqBgW,SAAA,CAC/BkrC,IAA8B,SAAd/uC,EACX,KACA3S,cAAA,OAAKQ,UAAU,iBACbE,IAAK,yCAAwDqR,KAAUY,EAAU0oB,oBACjF56B,IAAI,SAEX2T,EAAY2E,OAAS,GAAK/Y,cAAA,OAAKQ,UAAU,WAAUgW,SAAE80E,KAC1B,OAA3BD,IAAmCrrF,cAAA,OAAKQ,UAAU,aAChDuT,GAAU8wC,KAAuB/kD,GAAsC,SAA3BurF,IAAsCrrF,cAAA,OACjFQ,UAAU,YACVE,IAAK,8CAA6DmkD,GAAmBxpB,oBACrF56B,IAAI,UAELsT,IAAW2tC,IAA2C,OAA3B2pC,IAAoCrrF,cAAA,QAC9DQ,UAAW8zB,GAAW,wBAAyBg3D,GAAkBjwD,cAAcpZ,SAAS,SAAW,QAAU,IAAIzL,SAEhG,kBAAT1D,EACFA,EACS,KAATA,EACI,IAAIA,KACJ,QAGlBmjD,eAAA,OAAKz1D,UAAU,qBAAoBgW,SAAA,CAC9BsoC,IAAgB9+C,cAAA,OAAAwW,SACZ7B,IAEJmqC,GAAe9+C,cAAA,OAAAwW,SAAK,cAAsBxW,cAAA,OAAAwW,SAAK,SAC/CsoC,IAAgB9+C,cAAA,OAAAwW,SACZzC,EAAS,QAAQD,EAAQiF,SAAWnE,IAExCF,GAAS1U,cAAA,OAAKQ,UAAU,SAAQgW,SAAE9B,UAG3C1U,cAAA,OAAKQ,UAAW8zB,GAAW,cAAey2D,EAAgB,gBAAkB,IAAK1zB,QAAS71C,GAAKA,EAAE+P,kBAAkB/a,SAC/Gy/C,eAAA,OAAKz1D,UAAU,mBAAkBgW,SAAA,CAC7BxW,cAACi4D,KAAO,CAAC4D,UAAU,OAAOjxB,MAAOtQ,EAAS,oCAAoC9jB,SAC1ExW,cAAC0rE,KAAY,CAAClrE,UAAU,iCAAiC62D,QAASA,IAAMwzB,EAAYlpE,OAKxF3hB,cAAC0rF,KAAU,CACP7vB,UAAU,OACVjxB,MAAOtQ,EAAS,+BAChBo/C,gBAAiBt+D,GAAU4vE,EAAiB5vE,GAC5CuwE,UAAWA,IAAMb,EAASnpE,EAAK9L,IAC/BwgD,OAAQ/7B,EAAS,uCACjBg8B,WAAYh8B,EAAS,sCAAsC9jB,SAE3DxW,cAACi4D,KAAO,CAAC4D,UAAU,OAAOjxB,MAAOtQ,EAAS,iCAAiC9jB,SACvExW,cAAC+3D,KAAa,CAACv3D,UAAU,2CAK3B,EAGhBorF,GAAyBA,CAC3B5oC,EACAC,EACAsoC,EACAM,EACAvvF,KACE,IAADigC,EACD,MAAM,SACFn+B,EAAQ,KACRE,EAAI,MACJC,EAAK,cACLE,EAAa,UACbE,GACA4sF,GACE,MACF7uF,EAAK,OACLC,EAAM,EACNyW,EAAC,EACDC,GAGU,QAFbkpB,EAAIjgC,EACC,IAAKuvF,EAAUnvF,MAAO,IAAKC,OAAQ,IAAKyW,EAAG,EAAGC,EAAG,GACjDw4E,SAAQ,IAAAtvD,IAAK,CAAC,EAUduvD,EAAe9oC,IAAoB,OAALtmD,QAAK,IAALA,IAAS,GAAK,KAC5CqvF,EAAgB9oC,IAAsB,OAANtmD,QAAM,IAANA,IAAU,GAAK,KAE/CqvF,EANgB5tF,EAAWksF,IAMiBwB,GAAgB,EAAI,EAAIA,GAS1E,MAAO,CACH/8E,KAHiC,OAADsE,QAAC,IAADA,IAAK,GAAK,KAA1B4vC,EAAiC+oC,EAIjDh9E,MALiC,OAADoE,QAAC,IAADA,IAAK,GAAK,KAAzB4vC,EAAgCgpC,EAMjDtvF,MAToBsmD,EAAagpC,EAUjCrvF,OAAQL,EATa2mD,GATF7kD,EAAWG,EAAQ+rF,IAMUyB,GAAiB,EAAI,EAAIA,SAYxC/yE,EACjCssD,UAAW,gBAzBMlnE,IAAaK,EAC5B,GACC0iD,GAAY1iD,GAAiB,EAAIxB,IAwBfqtF,sBAvBJ3rF,EAAYL,GAyBRgsF,QAExB,EAYCkB,GAAe/uD,IAQA,IARC,QAClBgvD,EAAO,KACP9tF,EACA2jE,KAAMuqB,EAAQ,UACdrrF,EAAS,IACTlE,EAAG,iBACHivF,EAAgB,MAChBh1E,GACWkmB,EACX,MAAOwvD,EAAcC,GAAmBh7D,mBAAS,iCAC3Ci7D,EAAWliD,iBAAyB,OACnCmiD,EAAiBC,GAAsBn7D,oBAAS,SAAAo7D,EAAAC,EAAAC,EAAAC,EAAA,OAAMb,GAC3B,QADiDU,EAC/D,QAD+DC,EAC/EJ,EAAShkD,eAAO,IAAAokD,OAAA,EAAhBA,EAAkB54B,oBAAY,IAAA24B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCN,EAAShkD,eAAO,IAAAskD,OAAA,EAAhBA,EAAkB1qB,qBAAa,IAAAyqB,IAAI,EACnCjB,EACAM,EACAvvF,EACH,IAiCD,OAhCAmuC,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACAwhD,EAAgBT,EACpB,GACD,KAEI,KACH/gD,GAAW,CAAK,CACnB,GACF,CAAC+gD,IAEJhhD,qBAAU,KACN,IAAIC,GAAW,EAaf,OAZAC,YAAW,KACQ,IAAD+hD,EAAAC,EAAAC,EAAAC,EAAVniD,GACA2hD,EAAmBT,GACe,QADOc,EACrB,QADqBC,EACrCR,EAAShkD,eAAO,IAAAwkD,OAAA,EAAhBA,EAAkBh5B,oBAAY,IAAA+4B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCV,EAAShkD,eAAO,IAAA0kD,OAAA,EAAhBA,EAAkB9qB,qBAAa,IAAA6qB,IAAI,EACnCrB,EACAM,EACAvvF,GAER,GACD,KAEI,KACHouC,GAAW,CAAK,CACnB,GACF,CAACmhD,EAAUN,EAAkBjvF,IAEzB0D,cAAA,OAAKo6D,IAAK+xB,EACb3rF,UAAW8zB,GAAW,WAAY9zB,GAClCE,IAAKurF,EACLxrF,IAAK9C,EACL4Y,MAAO,IACA61E,KACA71E,GAEPsuD,OAAQA,KAAO,IAADioB,EAAAC,EAAAC,EAAAC,EACVZ,EAAmBT,GACe,QADOkB,EACrB,QADqBC,EACrCZ,EAAShkD,eAAO,IAAA4kD,OAAA,EAAhBA,EAAkBp5B,oBAAY,IAAAm5B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCd,EAAShkD,eAAO,IAAA8kD,OAAA,EAAhBA,EAAkBlrB,qBAAa,IAAAirB,IAAI,EACnCzB,EACAM,EACAvvF,GACF,GAER,E,wBCjjBN,MAAM4wF,GAAwBt4D,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0ClCs0B,GAAe5wE,IAI6B,IAJ5B,KAClBS,EAAI,MACJ8T,EAAK,MACLva,GACwCgG,EACxC,MAAM,SACFqmB,EAAQ,SACRtI,EAAQ,KACR8yD,EAAI,SACJtC,EAAQ,WACRuC,EAAU,YACVxC,EAAW,SACXla,GACA3zD,EAEJ,OAAOhd,cAACwqF,GAAS,CACb15D,MAAOA,EACPnP,KAAMyrE,EAAKt8D,GACXuI,OAAQ+zD,EAAKt8D,GAAOjb,KAAO+sB,EAC3BtI,SAAUA,EACVuwD,YAAaA,EACbla,SAAUA,EACV0c,WAAYA,EACZvC,SAAUA,EACVv0E,MAAOA,GACT,EAYO+2E,GAAkB/wD,IAKP,IALQ,SAC5BjC,EAAQ,SACRq2C,EAAQ,WACR0c,EAAU,gBACVE,GACchxD,EACd,MAAM,SACFqG,EAAQ,gBACRC,EAAe,WACfsC,EAAU,cACVU,EAAa,YACbvC,GACAZ,GAAYu6B,uBAAWxgC,IAAA,IAAC,SACxBmG,EAAQ,gBACRC,EAAe,WACfsC,EAAU,cACVU,EAAa,YACbvC,GACH7G,EAAA,MAAM,CACHmG,WACAC,kBACAsC,aACAU,gBACAvC,cACH,MACMkqD,EAAaC,GAAkBv8D,mBAAS,GAEzCw8D,EAAqB73E,IACvBsvB,EAAWtvB,GACX43E,GAAez8D,GAAOA,EAAM,GAAE,EAwBlC,OArBAyZ,qBAAU,KACN,IAAIC,GAAW,EAef,OAdAC,YAAW,KACP,GAAID,GAAY8iD,EAAc,EAAG,CAC7B,MAAM,SAAE5qD,EAAQ,SAAET,EAAQ,YAAE8C,GAAgBvC,GAAY1H,WAClD8M,EAAW3F,EAASkC,MAAK1iB,GAAQA,EAAK9L,KAAO+sB,IACnD,GAAIkF,EACA6oC,EAAS7oC,OACN,CAEH,MAAM9I,EAAY,CAAEnpB,GAAIC,iBAAWC,MACnCkvB,EAAY,CAACjG,GAAYA,EAAUrhC,KACvC,CACJ,IACD,KAEI,KACH+sC,GAAW,CAAK,CACnB,GACF,CAACimC,EAAU6c,IAEPv3B,eAACi3B,GAAqB,CACzB32E,MAAO,CACHyxD,gBAAiB,0DACnBxxD,SAAA,CAEFxW,cAAA,OAAKQ,UAAU,iBAAgBgW,SAC3BxW,cAAC2tF,KAAS,CAAAn3E,SACL+mB,IAAA,IAAC,OAAE5gC,EAAM,MAAED,GAAO6gC,EAAA,OACfv9B,cAAC4tF,KAAI,CACDptF,UAAU,OACV7D,OAAQA,EACRkxF,UAAWhrD,EAAgB9pB,OAC3B+0E,SDvIE,GCwIFC,SAAU,CACNX,KAAMvqD,EACNvI,WACAsI,WACAioD,YAAahlD,EACb8qC,SAAUA,EACV0c,WAAYA,EACZvC,SAAU4C,GAEdM,cAAe,EACftxF,MAAOA,EAAM8Z,SAEZ22E,IACE,MAIS,IAA3BtqD,EAAgB9pB,QAAgBk9C,eAAA,OAAKz1D,UAAU,UAASgW,SAAA,CACrDxW,cAAA,OAAAwW,SAAM8jB,EAAS,2CACft6B,cAAA,OAAKQ,UAAU,eAAe62D,QAAS/zB,EAAY9sB,SAC9C8jB,EAAS,iDAGlBt6B,cAACo9D,KAAM,CACH58D,UAAU,WACV62D,QAASk2B,EAAgB/2E,SAExB8jB,EAAS,gCAEM,E,wBCnK5B,MAAM,MAAE2zD,IAAUC,KACZC,GAAqBv5D,KAAOikC,GAAG;;;;EAK/Bu1B,GAAax5D,aAAOkmC,GAAW;;;;;;;;;;;;;;;;;;;;;;;EAwB/BuzB,GAAsBz5D,aAAO2gC,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAsCvB64B;;;;;;EAWZE,GAAe/xE,IAGA,IAHC,KAClBS,EAAI,SACJxG,GACW+F,EACX,MAAO4tD,EAAkBC,GAAmBl5C,oBAAS,GASrD,OAAO+kC,eAACm4B,GAAU,CACd/2B,QAAS71C,IATkB6oD,MAUvB7oD,EAAE+P,kBAVqB84C,EAWDrtD,EAV1BstD,KAAKD,GACLD,GAAgB,GAChBz/B,YAAW,KACPy/B,GAAgB,EAAM,GACvB,IAM4B,EAC7B5zD,SAAA,CAED2zD,EAAmBnqE,cAAA,OAAKQ,UAAU,mBAAkBgW,SAACxW,cAACuqE,KAAa,MAAY,KAC/E/zD,IACQ,EAKJ+3E,GAAgBhyD,IAEP,IAFQ,SAC1BjC,GACYiC,EACZ,MAAO4G,EAASsyB,GAAcvkC,oBAAS,GAEvC,OAAO+kC,eAAAC,WAAA,CAAA1/C,SAAA,CACHxW,cAACmuF,GAAkB,CAAC3tF,UAAU,wBAAwB62D,QAASA,IAAM5B,GAAW,GAAMj/C,SACjF8jB,EAAS,0CAEdt6B,cAACquF,GAAmB,CAChBlrD,QAASA,EACTzR,SAAUA,IAAM+jC,GAAW,GAC3BU,cAAe,CACX5/C,MAAO,CACHi1D,QAAS,SAGjBlV,WAAYh8B,EAAS,wCAAwC9jB,SAE7Dy/C,eAAA,OAAKz1D,UAAU,yBAAwBgW,SAAA,CACnCy/C,eAAA,OAAAz/C,SAAA,CACK8jB,EAAS,uCACVt6B,cAAA,SACCs6B,EAAS,0CAEdt6B,cAAA,OACIQ,UAAU,kBAAiBgW,SAE3BxW,cAAA,KACIknB,KAAM6jB,qFACN1C,OAAO,SACPu0B,IAAI,aACJ31C,UAAQ,EAAAzQ,SAERxW,cAACo9D,KAAM,CAAA5mD,SAAE8jB,EAAS,yCAG1Bt6B,cAACkuF,KAAQ,CAACM,OAAK,EAAAh4E,SACXxW,cAACiuF,GAAK,CAEFQ,OAAQzuF,cAAA,OAAAwW,SACH8jB,EAAS,yCACP9jB,SAEPy/C,eAAA,SAAOz1D,UAAU,mBAAkBgW,SAAA,CAC/By/C,eAAA,MAAAz/C,SAAA,CACIxW,cAAA,MAAAwW,SAAIxW,cAAA,KAAAwW,SAAI8jB,EAAS,2CACjBt6B,cAAA,MAAAwW,SAAIxW,cAAA,KAAAwW,SAAI8jB,EAAS,8CAEpB,CACG,CACIc,MAAO,SACPh/B,MAAO4D,cAAA,OAAAwW,SACF,CACG,MACA,OACFlG,KAAIlU,GACK4D,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,QAItC,CACIg/B,MAAO,QACPszD,SAAU,eACVtyF,MAAO4D,cAAA,OAAAwW,SACF3H,GACIyB,KAAImsB,IAAA,IAAC,KAAE9+B,GAAM8+B,EAAA,OAAKz8B,cAACsuF,GAAY,CAAYtxE,KAAMrf,EAAK6Y,SAAE7Y,GAAnBA,EAAuC,OAGzF,CACIy9B,MAAO,YACPh/B,MAAO4D,cAAA,OAAAwW,SACF/W,EACIowB,QAAO0N,IAAA,IAAC,SAAE19B,GAAU09B,EAAA,OAAK19B,CAAQ,IACjCyQ,KAAIqtB,IAAA,IAAC,KAAEhgC,GAAMggC,EAAA,OAAK39B,cAACsuF,GAAY,CAAYtxE,KAAMrf,EAAK6Y,SAAE7Y,GAAnBA,EAAuC,OAGzF,CACIy9B,MAAO,kBACPh/B,MAAO4D,cAAA,OAAAwW,SACFzW,EACI8vB,QAAO+T,IAAA,IAAC,SAAE/jC,GAAU+jC,EAAA,OAAK/jC,CAAQ,IACjCyQ,KAAI4zB,IAAA,IAAC,MAAE9nC,GAAO8nC,EAAA,OAAKlkC,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,EAA0C,OAG7F,CACIg/B,MAAO,UACPh/B,MAAO4D,cAAA,OAAAwW,SACFrW,EACI0vB,QAAOuV,IAAA,IAAC,SAAEvlC,GAAUulC,EAAA,OAAKvlC,CAAQ,IACjCyQ,KAAI+0B,IAAA,IAAC,MAAEjpC,GAAOipC,EAAA,OAAKrlC,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,EAA0C,OAG7F,CACIg/B,MAAO,OACPh/B,MAAO4D,cAAA,OAAAwW,SACFjQ,IACIspB,QAAOiW,IAAA,IAAC,SAAEjmC,GAAUimC,EAAA,OAAKjmC,CAAQ,IACjCyQ,KAAI01B,IAAA,IAAC,KAAEroC,GAAMqoC,EAAA,OAAKhmC,cAACsuF,GAAY,CAAYtxE,KAAMrf,EAAK6Y,SAAE7Y,GAAnBA,EAAuC,OAGzF,CACIy9B,MAAO,cACPh/B,MAAO65D,eAAA,OAAAz/C,SAAA,CACF5V,OAAOC,OAAOqF,GACVoK,KAAI+1B,IAAA,IAAC,MAAEjqC,GAAOiqC,EAAA,OAAKrmC,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,EAA0C,IACrF4D,cAAA,OAAAwW,SAAM8jB,EAAS,+CAGvB,CACIc,MAAO,aACPh/B,MAAO4D,cAAA,OAAAwW,SACF5V,OAAOC,OAAOuF,GACVkK,KAAIq+E,IAAA,IAAC,MAAEvyF,GAAOuyF,EAAA,OAAK3uF,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,EAA0C,OAG7F,CACIg/B,MAAO,YACPh/B,MAAO4D,cAAA,OAAAwW,SACF,CACG,SACA,QACFlG,KAAIlU,GACK4D,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,QAItC,CACIg/B,MAAO,iBACPh/B,MAAO4D,cAAA,OAAAwW,SACF,CACG,OACA,SACA,SACFlG,KAAIlU,GACK4D,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,QAItC,CACIg/B,MAAO,iBACPh/B,MAAO4D,cAAA,OAAAwW,SACF7V,EACIkvB,QAAO++D,IAAA,IAAC,SAAE/uF,GAAU+uF,EAAA,OAAK/uF,CAAQ,IACjCyQ,KAAIu+E,IAAA,IAAC,MAAEzyF,GAAOyyF,EAAA,OAAK7uF,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,EAA0C,OAG7F,CACIg/B,MAAO,kBACPh/B,MAAO4D,cAAA,OAAAwW,SACFta,IACIoU,KAAIw+E,IAAA,IAAC,MAAE1yF,GAAO0yF,EAAA,OAAK9uF,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,EAA0C,OAG7F,CACIg/B,MAAO,gBACPh/B,MAAO4D,cAAA,OAAAwW,SACF5V,OAAOyiB,KAAKxa,GACRyH,KAAIlU,GAAS4D,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,QAG7C,CACIg/B,MAAO,kBACPh/B,MAAO4D,cAAA,OAAAwW,SACF,CACG,aACA,UACFlG,KAAIlU,GACK4D,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,QAItC,CACIg/B,MAAO,oBACPh/B,MAAO4D,cAAA,OAAAwW,SACHxW,cAACsuF,GAAY,CAACtxE,KAAM,QAAQxG,SAAC,aAGrC,CACI4kB,MAAO,sBACPh/B,MAAO4D,cAAA,OAAAwW,SACF5V,OAAOyiB,KAAKjiB,GACRkP,KAAIlU,GAAS4D,cAACsuF,GAAY,CAAatxE,KAAM5gB,EAAMoa,SAAEpa,GAArBA,QAG7C,CACIg/B,MAAO,uBACPh/B,MAAO4D,cAAA,OAAAwW,SACFhS,EACIqrB,QAAOk/D,IAAA,IAAC,SAAElvF,GAAUkvF,EAAA,OAAKlvF,CAAQ,IACjCyQ,KAAI0+E,IAAA,IAAC,IAAE1tF,GAAK0tF,EAAA,OAAKhvF,cAACsuF,GAAY,CAAWtxE,KAAM1b,EAAIkV,SAAElV,GAAjBA,EAAoC,QAGvFgP,KAAI2+E,IAIC,IAJA,MACH7zD,EAAK,SACLszD,EAAQ,MACRtyF,GACH6yF,EACG,OAAOh5B,eAAA,MAAAz/C,SAAA,CACHy/C,eAAA,MAAAz/C,SAAA,CACIxW,cAACouF,GAAU,CAAA53E,SAAE4kB,IACZszD,GAAYz4B,eAAAC,WAAA,CAAA1/C,SAAA,CAAExW,cAAA,SAAMA,cAACouF,GAAU,CAAA53E,SAAEk4E,UAEtC1uF,cAAA,MAAAwW,SAAKpa,MALOg/B,EAMX,QArKT,0BA6KrB,E,cC9TP,MAAM8zD,GCAkC,WAA6C,IAA5CC,EAAar2E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFhB,KAG9Bs2E,EAAiBD,EAErB,MAAO,CACHr7D,MAAOA,KACH,MAAMv0B,EAASmc,KAAKkX,SAEpB,OAAIw8D,EAAiB7vF,GACjB6vF,GAAkBD,GACX,IAEPC,EAAiBD,GACV,EACX,EAGZ,CDhB6BE,GACvBC,GAAyB16D,KAAOikC,GAAG;;;;EAKnC02B,GAA0B36D,aAAOopC,KAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiEjCwxB,GAAmB30B,sBAAW,CAAAt+C,EAMtB69C,KAAkD,IAN3B,SACxC9/B,EAAQ,gBACRo/C,EAAe,SACf/I,EAAQ,WACR0c,EAAU,gBACVE,GACehxE,EACf,MAAMkzE,EAAe,iBACfC,EAAgBzlD,iBAAyB,OACzC,SACF9H,EAAQ,iBACRsB,EAAgB,kBAChBP,EAAiB,YACjB8B,EAAW,YACXC,EAAW,kBACX7B,EAAiB,YACjBS,EAAW,qBACXC,EAAoB,SACpBsC,EAAQ,cACRzC,EAAa,QACbR,GACAT,GAAYu6B,uBAAW1gC,IAAA,IAAC,SACxB4F,EAAQ,iBACRsB,EAAgB,kBAChBP,EAAiB,YACjB8B,EAAW,YACXC,EAAW,kBACX7B,EAAiB,YACjBS,EAAW,qBACXC,EAAoB,SACpBsC,EAAQ,cACRzC,EAAa,QACbR,GACH5G,EAAA,MAAM,CACH4F,WACAsB,mBACAP,oBACA8B,cACAC,cACA7B,oBACAS,cACAC,uBACAsC,WACAzC,gBACAR,UACH,KACKsF,EAAeF,IAAW5P,GAASA,EAAMsQ,QAAQR,gBAChD+jC,EAAUC,GAAev7C,mBAAS,IAClCy+D,EAAaC,GAAkB1+D,oBAAS,IACxC2+D,EAAYC,GAAiB5+D,oBAAS,GACvC6+D,EAAiBxoD,MAAU/lB,IAC7B4hB,EAAkB,CAAEvkC,KAAM,OAAQzC,MAAOolB,EAAE6mB,OAAOjsC,OAAQ,GAC3D,KAEG4zF,EAAa7+D,uBAAaxP,IAC5BgvD,EAAShvD,GACTqjB,EAAYrjB,EAAK9L,GAAG,GACrB,CAAC86D,EAAU3rC,IAiCd,OA/BAyF,qBAAU,KACFvH,IACAytC,EAASztC,GACT8B,EAAY9B,EAAkBrtB,IAC9BiuB,IACJ,GACD,CAAC6sC,EAAUztC,EAAmB8B,EAAalB,IAE9C2G,qBAAU,KACN5R,aAAa0B,QAAQ,wBAAyB4I,EAAQuJ,YACtDgtC,EAAgBv2C,EAAQ,GACzB,CAACu2C,EAAiBv2C,IAErBsH,qBAAU,KACN,MAAMwlD,EAAQvtD,GAAYwtD,WACtBv3D,GAASA,EAAMoK,oBACfotD,IACQA,GACA1jB,GAAYz7C,GAAOA,EAAM,GAC7B,IAIR,MAAO,KACHi/D,GAAO,CACV,GACF,IAGHx1B,8BAAoBL,GAAK,MAAS,IAAG,IAE9Bp6D,cAACsvF,GAAsB,CAAA94E,SAC1BxW,cAACuvF,GAAuB,CACpB3kD,MAAOqrB,eAAA,OAAKz1D,UAAU,+BAA8BgW,SAAA,CAChDxW,cAACowF,GAAkB,CAAC5vF,UAAU,mCAAmC85B,SAAUA,EAAS9jB,SAC/E2rB,EAASppB,SAEdk9C,eAAA,OAAKz1D,UAAU,2BAA0BgW,SAAA,CACrCxW,cAAA,OACIQ,UAAU,iBAAgBgW,SAE1BxW,cAACuuF,GAAa,CAACj0D,SAAUA,MAE7Bt6B,cAAC6pE,KAAQ,CACL5c,QAASjtD,cAAC4gE,KAAI,CAAApqD,SACT,CACG,CACIpa,MAAO6lC,GAAgBvqB,MAAMpW,IAC7BjF,MAAOi+B,EAAS,oCAEpB,CACIl+B,MAAO6lC,GAAgBtkC,KAAK2D,IAC5BjF,MAAOi+B,EAAS,mCAEpB,CACIl+B,MAAO6lC,GAAgBttB,IAAIrT,IAC3BjF,MAAOi+B,EAAS,kCAEpB,CACIl+B,MAAO6lC,GAAgBrtB,IAAItT,IAC3BjF,MAAOi+B,EAAS,kCAEpB,CACIl+B,MAAO6lC,GAAgBhK,IAAI32B,IAC3BjF,MAAOi+B,EAAS,sCAEtBhqB,KAAImsB,IAAuB,IAAtB,MAAErgC,EAAK,MAAEC,GAAOogC,EACnB,OAAOz8B,cAAC4gE,KAAKC,KAAI,CAAaxJ,QAASA,IAAMjxB,EAAShqC,GAAOoa,SACxDna,GADkBD,EAEX,MAEZoa,SAERxW,cAAA,OACIQ,UAAU,iBAAgBgW,SAE1BxW,cAAC0iF,KAAqB,QAU9B1iF,cAACi4D,KAAO,CAACrtB,MAAOtQ,EAAS,0CAA0C9jB,SAC/DxW,cAAA,OACIQ,UAAU,iBACV62D,QAAS99B,UACL,IAAI82D,GAAgB,EAMpB,GALAP,GAAc,GACVZ,GAAqBp7D,UACrBu8D,EAAgBlpE,OAAOmpE,QAAQh2D,EAAS,gCAGxC+1D,EACA,IACI,MAAM,MACF5uE,EACArlB,MAAOm0F,G9E1ErBpuD,KAC1B,MAAMquD,EAAsB,GACtBC,EAAYx1D,GAAqBliB,OACvC,IAAI0I,EAAQ,GAEZ,IAAK,IAAIuP,EAAM,EAAGA,EAAMmR,EAASppB,OAAQiY,IAAO,CAC5C,MAAM0/D,EAAQA,CAACpvF,EAAelF,KAC1B,MAAM00B,EAAQ0K,GAAoBl6B,GAEb,kBAAVwvB,IACc,kBAAV10B,IAAoBu0F,EAAS7/D,GAAS10B,GAC5B,kBAAVA,IAAoBu0F,EAAS7/D,GAAS,GAAG10B,KAC/B,mBAAVA,IAAqBu0F,EAAS7/D,GAAS,GAAG10B,KACxC,MAATA,IAAeu0F,EAAS7/D,GAAS,IACzC,EAGE6/D,EAAWltE,MAAMgtE,GAAWngF,KAAI,IAAM,MACtC,IACFjK,EAAG,QACH8M,EAAO,UACPZ,EAAS,OACTU,EAAM,UACNC,EAAS,IACTyB,EAAG,UACHhC,EAAS,WACTc,EAAU,eACVI,EAAc,cACdF,EAAa,iBACbC,EAAgB,eAChBtU,EAAc,SACduT,EAAQ,QACRuC,EAAO,IACPR,EAAG,OACHH,EAAM,YACNJ,EAAW,gBACXmB,EAAe,aACfG,EAAY,OACZrD,EAAM,KACND,EAAI,OACJN,EAAM,MACNvV,EAAK,eACL6Y,EAAc,cACd7B,EAAa,mBACb0B,EAAkB,eAClBH,EAAc,aACdI,EAAY,iBACZF,EAAgB,OAChBlB,EAAM,WACN3U,EAAU,YACV4V,EAAW,QACXlB,EAAO,KACPnW,EAAI,UACJ8U,EAAS,cACTD,EAAa,QACbnT,EAAO,eACPqW,EAAc,SACdb,EAAQ,eACRZ,EAAc,cACdD,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,cAChBM,EAAa,kBACbiB,EAAiB,MACjBf,EAAK,KACL5B,EAAI,cACJC,GAAa,cACbuC,GAAa,QACbR,GAAO,UACPlC,GAAS,YACTwB,GAAW,cACXmB,IACA4sB,EAASnR,GACP4/D,GAAyBvsE,KAAKilB,UAAU3zB,GAE9C+6E,EAAM,SAAU3+E,GAChB2+E,EAAM,QAASl0F,GACfk0F,EAAM,OAAQ/yF,GACd+yF,EAAM,YAAa/9E,GACnB+9E,EAAM,OAAQ,GAAG59E,KACjB49E,EAAM,kBAAmB99E,IACzB89E,EAAM,WAAYrqF,GAClBqqF,EAAM,eAAgBt8E,GAAYxF,KAAK,MACvC8hF,EAAM,SAAUj8E,GAChBi8E,EAAM,SAAUh8E,GAChBg8E,EAAM,MAAO/7E,GACb+7E,EAAM,MAAO97E,GACb87E,EAAM,WAAY77E,GAClB67E,EAAM,UAAW57E,IACjB47E,EAAM,YAAat7E,GACnBs7E,EAAM,cAAetxF,GACrBsxF,EAAM,kBAAmBz8E,GACzBy8E,EAAM,qBAAsBx8E,GAC5Bw8E,EAAM,sBAAuBv8E,GAC7Bu8E,EAAM,UAAiB,OAAN38E,QAAM,IAANA,SAAUiF,GAC3B03E,EAAM,wBAAyB58E,EAAQmO,SAAS,MAChDyuE,EAAM,mBAAoB58E,EAAQmO,SAAS,MAC3CyuE,EAAM,yBAA0B58E,EAAQmO,SAAS,MACjDyuE,EAAM,oBAAqB58E,EAAQmO,SAAS,MAC5CyuE,EAAM,qBAAsB58E,EAAQmO,SAAS,MAC7CyuE,EAAM,2BAA4B58E,EAAQmO,SAAS,MACnDyuE,EAAM,sBAAuB58E,EAAQmO,SAAS,MAC9CyuE,EAAM,4BAA6B58E,EAAQmO,SAAS,MACpDyuE,EAAM,mBAAoB37E,GAC1B27E,EAAM,gBAAiB17E,GACvB07E,EAAM,qBAAsBz7E,GAC5By7E,EAAM,wBAAyBx7E,GAC/Bw7E,EAAM,iBAAkBv7E,GACxBu7E,EAAM,OAAQr+E,GACdq+E,EAAM,aAAcn+E,GACpBm+E,EAAM,cAAep+E,EAAO1D,KAAK,MACjC8hF,EAAM,mBAAoBv9E,EAAQC,GAClCs9E,EAAM,mBAAoBv9E,EAAQE,GAClCq9E,EAAM,uBAAwBv9E,EAAQzW,OACtCg0F,EAAM,wBAAyBv9E,EAAQxW,QACvC+zF,EAAM,oBAAqBz9E,GAC3By9E,EAAM,YAA6B,kBAAT59E,GAAqBA,GAAQ,GAAKA,GAAQ,GAAK,SAAW,QACpF49E,EAAM,iBAAkB39E,IACxB29E,EAAM,iBAAkB79E,GACxB69E,EAAM,iBAAkBrxF,EAAQ7B,MAChCkzF,EAAM,qBAAsBrxF,EAAQ5B,UACpCizF,EAAM,iBAAkBrxF,EAAQ3B,MAChCgzF,EAAM,iBAAkBrxF,EAAQ1B,MAChC+yF,EAAM,sBAAuBrxF,EAAQzB,UACrC8yF,EAAM,uBAAwBrxF,EAAQxB,WACtC6yF,EAAM,wBAAyBrxF,EAAQvB,YACvC4yF,EAAM,sBAAuBrxF,EAAQtB,WACrC2yF,EAAM,iBAAkBl9E,GACxBk9E,EAAM,kBAAmBj9E,GACzBi9E,EAAM,2BAA4B/8E,GAClC+8E,EAAM,kBAAmBpxF,GACzBoxF,EAAM,0BAA2B78E,EAAeT,GAChDs9E,EAAM,0BAA2B78E,EAAeR,GAChDq9E,EAAM,8BAA+B78E,EAAenX,OACpDg0F,EAAM,+BAAgC78E,EAAelX,QACrD+zF,EAAM,eAAgB18E,GACtB08E,EAAM,gBAAiBr8E,EAAYC,kBACnCo8E,EAAM,sBAAuBr7E,GAC7Bq7E,EAAM,kBAAmBl+E,GACzBk+E,EAAM,oBAAqBj+E,EAAU1Q,MACrC2uF,EAAM,0BAA2Bj+E,EAAUhR,WAC3CivF,EAAM,mCAAoCj+E,EAAUC,mBACpDg+E,EAAM,4BAA6Bj+E,EAAU/P,aAC7CguF,EAAM,+BAAgCj+E,EAAU9P,eAChD+tF,EAAM,+BAAgCj+E,EAAU7P,eAChD8tF,EAAM,2BAA4Bj+E,EAAU5P,YAC5C6tF,EAAM,0BAA2Bj+E,EAAUvR,WAC3CwvF,EAAM,0BAA2Bj+E,EAAU5Q,WAC3C6uF,EAAM,0BAA2Bj+E,EAAU7Q,WAC3C8uF,EAAM,6BAA8Bj+E,EAAUzP,aAC9C0tF,EAAM,6BAA8Bj+E,EAAUzQ,aAC9C0uF,EAAM,2BAA4Bj+E,EAAUxR,YAC5CyvF,EAAM,8BAA+Bj+E,EAAUtQ,eAC/CuuF,EAAM,8BAA+Bj+E,EAAUrQ,eAC/CsuF,EAAM,4BAA6Bj+E,EAAUzR,aAC7C0vF,EAAM,4BAA6Bj+E,EAAUnP,aAC7CotF,EAAM,0BAA2Bj+E,EAAUlP,WAC3CmtF,EAAM,0BAA2Bj+E,EAAUpP,WAC3CqtF,EAAM,sBAAuBj+E,EAAUjR,QACvCkvF,EAAM,uBAAwBj+E,EAAUtR,SACxCuvF,EAAM,yBAA0Bp7E,GAAc,IAC9Co7E,EAAM,0BAA2Bp7E,GAAc,IAC/Co7E,EAAM,0BAA2Bp7E,GAAc,IAC/Co7E,EAAM,4BAA6Bp7E,GAAc,IACjDo7E,EAAM,yBAA0Bn7E,GAAc,IAC9Cm7E,EAAM,0BAA2Bn7E,GAAc,IAC/Cm7E,EAAM,0BAA2Bn7E,GAAc,IAC/Cm7E,EAAM,4BAA6Bn7E,GAAc,IACjDm7E,EAAM,2BAA4Bl7E,EAAgB,IAClDk7E,EAAM,4BAA6Bl7E,EAAgB,IACnDk7E,EAAM,4BAA6Bl7E,EAAgB,IACnDk7E,EAAM,8BAA+Bl7E,EAAgB,IACrDk7E,EAAM,wBAAyBr8E,EAAYE,QAC3Cm8E,EAAM,4BAA6Br8E,EAAYjM,WAC/CsoF,EAAM,oCAAqCj7E,EAAkB,IAC7Di7E,EAAM,qCAAsCj7E,EAAkB,IAC9Di7E,EAAM,qCAAsCj7E,EAAkB,IAC9Di7E,EAAM,uCAAwCj7E,EAAkB,IAChEi7E,EAAM,iCAAkCl8E,EAAcD,QACtDm8E,EAAM,qCAAsCl8E,EAAcpM,WAC1DsoF,EAAM,0BAA2Bh7E,EAAe,IAChDg7E,EAAM,2BAA4Bh7E,EAAe,IACjDg7E,EAAM,2BAA4Bh7E,EAAe,IACjDg7E,EAAM,6BAA8Bh7E,EAAe,IACnDg7E,EAAM,uBAAmD,OAA3BE,GAAkC,GAAKA,KAEnD,YAAd19E,GAA4BM,GAAsC,YAArBI,KAC7C6N,EAAQ,gBAGZ+uE,EAAUz1C,KAAK41C,EAASrgF,IAAIqrB,IAAkB/sB,KAAK,KACvD,CAEA,MAAO,CACHxS,MAAO,CACH6+B,GAAqBrsB,KAAK,KAC1B4hF,EAAU5hF,KAAK,OACjBA,KAAK,MACP6S,QACH,E8E5HuCovE,CAAcnuD,GAAY1H,WAAWmH,UAEzC,GAAI1gB,EAAO,CACP,IAAIqvE,EAAe,GACfC,EAAmB,GACvB,GACS,iBADDtvE,EAEAqvE,EAAex2D,EAAS,qCACxBy2D,EAAmBz2D,EAAS,0CAKhCw2D,GAAgBC,IAChB5pD,KAAa1lB,MAAM,CACf2lB,QAAS0pD,EACTzpD,YAAa0pD,GAGzB,CACA,OAAQtoD,GACJ,IAAK,OAAQ,CACT,MAAMuoD,EAAiBC,KAAKC,KAAKX,EAAS,CAAE1xF,KAAM,WAClDoyF,KAAKE,UAAUH,EAAgB,GAAGtuD,GAAY1H,WAAWiI,iBACzD,KACJ,CACA,QACInc,GACI4b,GAAY1H,WAAWiI,SACvB,IAAI8zB,KAAK,CAACw5B,GAAU,CAAE1xF,KAAM,aAC5B,YAIZ4kC,EAAiB,WACrB,CAAE,MAAOjiB,GAAI,CAEjBsuE,GAAc,EAAM,EACtBt5E,SAEDq5E,EAAa7vF,cAACoxF,KAAe,IAAMpxF,cAAC4mE,KAAgB,QAG7D5mE,cAACi4D,KAAO,CAAwBhL,QAAS3yB,EAAS,wCAAwC9jB,SACtFy/C,eAAA,OACIz1D,UAAU,iBACV62D,QAASA,KACL,MAAMhvB,EAAS7pB,SAASktB,eAAe+jD,GACnCpnD,IAAWsnD,GACXtnD,EAAOkC,OACX,EACF/zB,SAAA,CAEFxW,cAAA,SAAkCo6D,IAAKs1B,EACnC7wF,KAAK,OACLgX,GAAI45E,EACJl4B,OAAQ,CACJ,OACA,2BACA,qEACF3oD,KAAK,KACPpO,UAAU,sBACVi3D,SAAUl+B,UAAc,IAAD83D,EACnB,MAAMv7B,EAAgC,QAAxBu7B,EAAG3B,EAAcvnD,eAAO,IAAAkpD,OAAA,EAArBA,EAAuB15B,OAClC,YAAE30B,GAAgBN,GAAY1H,WAC9Bs2D,EAAgBA,KAClB7kB,GAAYz7C,GAAOA,EAAM,IACzB4+D,GAAe,GACfzoD,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,4BAClB+M,YAAa/M,EAAS,iCACxB,EAEN,IAAIi3D,GAAa,EAKjB,GAHIvuD,IACAuuD,EAAapqE,OAAOmpE,QAAQh2D,EAAS,oCAErCi3D,GAAcz7B,GAAYA,EAAS,GAAI,CACvC85B,GAAe,GACf,IACI,MAAMn5B,QAAaX,EAAS,GAAG07B,cACzBC,EAAW37B,EAAS,GAAGn4D,KAAK+kB,QAAQ,YAAa,IAIjDgvE,EAAWT,KAAKC,KAAKz6B,EAAM,CAAEk7B,SAAU,QACvCC,EAAUX,KAAK3wB,MAAMuxB,cACvBH,EAASI,OAAOJ,EAASK,WAAW,IACpC,CAAEtD,OAAQ,EAAGtc,KAAK,IAEhBhsC,EAAe/J,GAAcw1D,GAE/BzrD,EAAaptB,OAAS,GACtBksB,EAAYkB,EAAcA,EAAa,GAAGtwB,IAC1CguB,EAAY4tD,GACZhlB,GAAYz7C,GAAOA,EAAM,IACzB2/C,EAASxqC,EAAa,IACtBypD,GAAe,IAEf0B,GAER,CAAE,MAAO9vE,GACLhJ,QAAQiJ,MAAMD,GACd8vE,GACJ,CACJ,MACI7kB,GAAYz7C,GAAOA,EAAM,IACzB4+D,GAAe,EACnB,GAxDI,UAAUpjB,KA2DrBmjB,EAAc3vF,cAACoxF,KAAe,IAAMpxF,cAACkvE,KAAc,QArE9C,GAAGygB,KAwEjB3vF,cAAA,OACIQ,UAAU,8BACV62D,QAASA,IAAM1zB,GAAc,GAAOntB,SAEpCxW,cAAC+3D,KAAa,SAGtB/3D,cAAA,OAAKQ,UAAU,sBAAqBgW,SAChCxW,cAACgnE,KAAK,CACFxmE,UAAU,sBACVymE,YAAa3sC,EAAS,0CACtBm9B,SAAUs4B,EACVhhB,aAAcvtD,GAAK4hB,EAAkB,CAAEvkC,KAAM,OAAQzC,MAAOolB,EAAEo+D,cAAcxjF,QAC5E+qE,YAAU,GALF,UAAUqF,UAS9BrpC,QAASA,EACT6uD,cAAc,EACdC,MAAM,EACNxmB,gBAAgB,EAChB3L,aAAa,EACboyB,UAAWA,IAAM,KACjBh0B,QAASA,IAAMv6B,GAAc,GAC7BjnC,MAAO,IAAI8Z,SAEXxW,cAACstF,GAAe,CACZhzD,SAAUA,EACVq2C,SAAUqf,EACV3C,WAAYA,EACZE,gBAAiBA,OAGJ,IAGvB4E,GAA2Bv9D,KAAOikC,GAAG;;;;EAQrCu3B,GAAqB7yD,IAIA,IAJC,SACxBjD,EAAQ,SACR9jB,KACGkU,GACc6S,EACjB,MAAM,YACFyF,EAAW,SACXb,GACAO,GAAYu6B,uBAAWt/B,IAAA,IAAC,YACxBqF,EAAW,SACXb,GACHxE,EAAA,MAAM,CACHqF,cACAb,WACH,KAiBD,OAfAsI,qBAAU,KACN,IAAIS,EAAiBC,IACjBA,EAAGnZ,iBACIsI,EAAS,kCAOpB,OAJI0I,GAAeb,EAASppB,OAAS,GACjCoO,OAAO6jB,iBAAiB,eAAgBE,GAGrC,KACH/jB,OAAO8jB,oBAAoB,eAAgBC,EAAc,CAC5D,GACF,CAAC/I,EAASppB,OAAQiqB,EAAa1I,IAE3B27B,eAACk8B,GAAwB,IAAKznE,EAAIlU,SAAA,CACpCA,EAAWwsB,GAAeb,EAASppB,OAAS,GAAM/Y,cAAA,QAAMQ,UAAU,iBAAgBgW,SAAC,YAC7D,E,cExbxB,MAAM47E,GAAiCx9D,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAyE9ClkC;;;;;EAOG09D,GAAuBz9D,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkCjCy5B,GAA2B19D,KAAOikC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0ErC05B,GAAmB39D,KAAOikC,GAAG;;;;;;;;;;;;;;;;EAkB7B25B,GAAa59D,KAAOikC,GAAG;;;;;;;;;;;;EAcvB45B,GAAa79D,KAAO4kC,IAAI;;EAIxBk5B,GAAgB99D,aAAOsmC,GAAiB;;;EAKxCy3B,GAAiB/9D,aAAO89D,GAAc;;;EAKtCE,GAAch+D,aAAO89D,GAAc;;;wDCpLhDG,qBAAU,CACNC,WAAY,KAEhB,MAAMC,GAAqB,CACvBC,OAAQ,CAAC,SAAU,aACnBC,OAAQ,CAAC,SAAU,aACnBC,MAAO,CAAC,SAAU,aAClBC,KAAM,CAAC,SAAU,aACjBC,SAAU,CAAC,SAAU,eAGjBz2F,OAAQswC,GAAcvwC,MAAOwwC,IAAgBzwC,EAqlBtC42F,OAplBf,WAAgB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACX,MAAM,YACFprD,EAAW,SACXqrD,EAAQ,YACRjrD,GACAL,GAAW00B,uBAAW1gD,IAAA,IAAG0sB,SAAS,YAAET,EAAW,kBAAEE,EAAiB,YAAEE,IAAersB,EAAA,MAAM,CACzFs3E,SAAUnrD,EACVF,cACAI,cACH,MAEGnO,aAAcq5D,EACdt5D,UAAWu5D,EAAiB,SAC5Bz5D,EAAQ,gBACRI,EAAe,aACfL,EACAM,SAAUq5D,EAAY,oBACtBn5D,GACA9C,GAAQklC,uBAAW1gC,IAAA,IAAC,aACpB9B,EAAY,UACZD,EAAS,SACTF,EAAQ,gBACRI,EAAe,aACfL,EAAY,SACZM,EAAQ,oBACRE,GACH0B,EAAA,MAAM,CACH9B,eACAD,YACAF,WACAI,kBACAL,eACAM,WACAE,sBACH,MACM4O,EAAgBwqD,GAAmB/iE,oBAAS,IAC5CzP,EAAOuiD,GAAY9yC,mBAAS,KAC5BwyC,EAAYC,GAAiBzyC,mBAA+B,WAC5DgjE,EAAgBC,GAAqBjjE,oBAAS,GAE/CkjE,EAAenqD,iBAA0B,MACzC4hB,EAAmB5hB,iBAA0B,MAC7C6hB,EAAsB7hB,iBAA0B,MAChDP,EAAkBO,iBAA0B,MAC5C4iB,EAAmB5iB,iBAA0B,MAC7C8hB,EAAiB9hB,iBAA0B,MAC3CwiB,EAAoBxiB,iBAA0B,MAC9CoiB,EAAyBpiB,iBAA0B,MACnDmiB,EAA0BniB,iBAA0B,MACpDyiB,EAAgBziB,iBAA0B,MAC1CgiB,EAAkBhiB,iBAA0B,MAC5CiiB,EAAgBjiB,iBAA0B,MAC1CsiB,EAAgBtiB,iBAA0B,MAC1CqiB,EAAiBriB,iBAA0B,MAC3CkiB,EAAoBliB,iBAA0B,MAC9C+hB,EAAmB/hB,iBAA0B,MAC7CuiB,EAAmBviB,iBAA0B,MAC7C0iB,EAAkB1iB,iBAA0B,MAC5C2iB,EAAc3iB,iBAAoB,OACjC2hB,GAAa16B,mBAAS,CACzB26B,mBACAC,sBACApiB,kBACAqiB,iBACAU,oBACAJ,yBACAD,0BACAM,gBACAT,kBACAC,gBACAK,gBACAD,iBACAH,oBACAH,mBACAQ,mBACAG,kBACAC,cACAC,qBAGEwnC,EAAoBpqD,iBAA0B,MAC9CqqD,EAAiBrqD,iBAAuB,MACxCsqD,EAAiBtqD,iBAAuB,OAEvCslB,EAAkBilC,GAAuBtjE,mBAAS,GAEzDuZ,qBAAU,KACNupD,GAAc,GACf,CAACA,IACJvpD,qBAAU,KACF/P,GAAiBG,GAAqB,GAC3C,CAACH,EAAiBG,IAErB4P,qBAAU,KACY,CACd,cACA,iBACA,iBAGMnnB,SAAQmxE,IAAc,IAADC,EAAAC,EAC3Bn2E,SAAShhB,KAAK+Y,MAAMq+E,YAAYH,EAA0C,QAAjCC,EAAoB,QAApBC,EAAEt6D,EAAa9jB,aAAK,IAAAo+E,OAAA,EAAlBA,EAAqBF,UAAU,IAAAC,IAAI,GAAU,GAC1F,GACH,CAACr6D,IAEJoQ,qBAAU,KAAO,IAADoqD,EACZ,MAAM/3E,EAA6B,QAA1B+3E,EAAGnrD,EAAgBvB,eAAO,IAAA0sD,OAAA,EAAvBA,EAAyB93E,WAAW,MAC1C4qB,EAAUD,GAAQ1M,WAAW2M,QAC/B7qB,IACAA,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC74B,EAAIqpD,sBAAwB,OAC5B13B,GAAY3xB,KAGa,IAAzBg3E,GAAgCgB,KAAQC,KAAK,CAC7C7N,OAAQ,CACJ8N,SAAU,CACN,cACA,sBACA,aACA,yBACA,kBACA,oBACA,yBACA,SACA,yBACA,mBACA,uBAEJC,KAAM,CAAC,mBAEX57D,OAAQA,KACJ,MAAM67D,E/ElGWC,MAC7B,IACI,MAAMC,EAAmBv8D,aAAaC,QAAQ,gBACxCu8D,EAA0Bx8D,aAAaC,QAAQ,aAC/Cw8D,EAAgBD,EAChB5wE,GAAgBJ,KAAKC,MAAM+wE,IAC3B,KAEAE,EAAe,IAAInpD,gBAAgBjlB,OAAOiR,SAASiU,QAAS/tB,IAAI,QACtE,GAAIi3E,EAAa,CAAC,IAADC,EAAAC,EASb,MAAQ9zE,KAAM6kB,GAAgBF,GAAWivD,GACnC5zE,EAAO8C,GAAgB+hB,IACvB,UAAEtzB,EAAS,iBAAEU,GAAqB+N,EACxC,GAAkB,WAAdzO,GAA+C,WAArBU,EAC1B,OAAO0yB,GAAWivD,GAAa5zE,KAGnC,MAAM+zE,EAAe,IAAK/zE,GAI1B,MAHkB,YAAdzO,IAAyBwiF,EAAa1iF,QAAgC,QAAzBwiF,EAAgB,OAAbF,QAAa,IAAbA,OAAa,EAAbA,EAAetiF,eAAO,IAAAwiF,IAAI,IACrD,YAArB5hF,IAAgC8hF,EAAahiF,eAA8C,QAAhC+hF,EAAgB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAe5hF,sBAAc,IAAA+hF,IAAI,IAE5FC,CACX,CAAO,OAAsB,OAAlBJ,GAA+CvqD,WAArBqqD,EAC1BE,EAEJ1/E,IACX,CAAE,MAAO4L,GAEL,OADAhJ,QAAQiJ,MAAMD,GACP5L,IACX,G+E6DkCu/E,GAEtBxtD,EAAQutD,GACRxyD,GAAY1H,WAAWiK,YAAY,CAACiwD,GAAgBA,EAAcr/E,IAClEo+E,GAAgB,EAAM,EAE1B0B,aAAap/D,EAAYq/D,GACrBp9E,QAAQiJ,MAAM,mBAAoB8U,EAAYq/D,GAC9CzuD,KAAa1lB,MAAM,CACf2lB,QAASrM,KAAc,uBAAuBxE,IAEtD,EACAs/D,SAAUA,KACN7xB,EAASjpC,KAAc,4BACvBk5D,GAAgB,EAAM,GAE5B,GACH,CAACH,IAEJ,MACIgC,aAAcC,GClNIx5E,KAMP,IANQ,qBACvBu3E,EAAoB,SACpBkC,EAAQ,aACRC,EAAY,eACZC,EAAc,WACdC,GACS55E,EACT,MAAM,KACFxa,EAAI,OACJgQ,GACA21B,GAAQu1B,uBAAWtkC,IAAK,CACxB5mB,OAAQ4mB,EAAMhX,KAAK5P,OACnBhQ,KAAM42B,EAAMhX,KAAKlP,UAAU1Q,WAExB+zF,EAAcM,GAAmBllE,mBAAS,IAE3CmlE,EAAWpsD,kBAAO,GAClBqsD,EAAcrsD,iBAAO,GAmC3B,OAlCAQ,qBAAU,MAEU,QAAX14B,GAA6B,QAAThQ,KACG,IAArBs0F,EAASluD,SACTmuD,EAAYnuD,SAAW,IACE,IAAzB2rD,IAEHwC,EAAYnuD,SAAW,EACvBiuD,EAAgB,iCAChBH,IAEAnB,KAAQC,KAAK,CACT7N,OAAQ,CACJ8N,SAAU,CACN,2BACA,oBACA,kBACA,yBAEJC,KAAM,CAAC,uBAEX57D,OAAQA,KACJg9D,EAASluD,SAAU,EACnB6tD,GAAU,EAEdH,SAAUA,KACNQ,EAASluD,SAAU,EACnBguD,GAAY,EAEhBR,aAAcO,IAEtB,GACD,CAACnkF,EAAQhQ,EAAM+xF,EAAsBkC,EAAUC,EAAcC,EAAgBC,IAEzE,CACHL,eACH,ED6JGS,CAAW,CACXzC,uBACAmC,aAAcA,KAAO,IAADO,EAChBvC,GAAgB,GAChB,MAAMn3E,EAA6B,QAA1B05E,EAAG9sD,EAAgBvB,eAAO,IAAAquD,OAAA,EAAvBA,EAAyBz5E,WAAW,MAC5CD,IACAA,EAAI64B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC74B,EAAIqpD,sBAAwB,OAC5B13B,GAAY3xB,GAChB,EAEJk5E,SAAUA,KACN/B,GAAgB,EAAM,EAE1BkC,WAAYA,KACRnyB,EAASjpC,KAAc,4BACvBk5D,GAAgB,EAAM,EAE1BiC,eAAgBA,CAAC3/D,EAAYq/D,KACzBp9E,QAAQiJ,MAAM,mBAAoB8U,EAAYq/D,GAC9CzuD,KAAa1lB,MAAM,CACf2lB,QAASrM,KAAc,uBAAuBxE,IAChD,KAIHiT,EAAWitD,IAAcvlE,oBAAS,GAEzCuZ,qBAAU,KACN,MAAMisD,EAAoBl4E,SAAShhB,KAAKgtC,UAEpCqpD,EAAU6C,EAAkBh8E,IAAI,wBAC/Bg8E,EAAkB5uE,OAAO,uBAAuB,GACtD,CAAC+rE,IAEJ,MAAM8C,GAAkBxlE,uBAAY,SAAC/V,GAA0C,IAADw5C,EAAb97C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAC1C0vB,GAEA,QAAnBosB,EAAAhI,EAAYzkB,eAAO,IAAAysB,GAAnBA,EAAqBa,YAAW1vD,GAAyB,mBAAXqV,EAAuBA,GAAUrV,GACnF,GAAG,CAACyiC,IAEEouD,GAAoB3sD,kBAAO,GAC3B4sD,GAAer4E,SAASktB,eAAe,qBAC7CjB,qBAAU,KACFosD,IAAgBv8D,IAA0C,IAA9Bs8D,GAAkBzuD,UAAgD,IAA3BswB,SACnEm+B,GAAkBzuD,SAAU,EAE5BswB,KAAY,CACRq+B,IAAK,kGACLC,aAAc,CACVt+B,OACAA,OACAA,KAA2B,CACvBu+B,YAAa,SACbC,YAAY,IACbC,SAASL,GAAc,CACtBM,UAAW78D,EAAS,kCACpB88D,UAAW98D,EAAS,qCACpB+8D,gBAAiB/8D,EAAS,2CAC1Bg9D,iBAAiB,EACjBC,WAAW,EACXC,aAAcl9D,EAAS,wCACvBm9D,mBAAoBn9D,EAAS,8CAC7Bo9D,yBAA0Bp9D,EAAS,2CACnCq9D,4BAA6Br9D,EAAS,kDACtCs9D,kBAAmBt9D,EAAS,uCAC5Bu9D,kBAAmBv9D,EAAS,uCAC5Bw9D,gBAAiBx9D,EAAS,yCAC1By9D,mBAAoBz9D,EAAS,2CAcrC09D,iBAAkB,EAElBC,wBAAyB,CAAC,qBAE1BC,yBAA0B,GAC1BC,yBAA0B,IAElC,GACD,CAAC79D,EAAUu8D,KAEd,MAAMuB,GAAejnE,uBAAY,CAC7BqV,EACA3uB,KAKE,IAADwgF,EACD,MAAM,UACFzqB,EAAS,iBACT/lC,EAAgB,mBAChB8lC,GACM,OAAN91D,QAAM,IAANA,IAAU,CAAC,GAET,QAAE8vB,EAAO,KAAEhmB,GAAS+lB,GAAQ1M,WAC5B5X,EAAiBuqD,EACjB,IAAKnnC,EAAa3wB,GAAI8L,EAAK9L,IAC3B2wB,EAEFonC,GACAlrC,GAAY1H,WAAWuI,QAAQngB,GAEnCukB,EAAQvkB,EAAgBykB,GACxB2sD,GAAoBxjE,GAAOA,EAAM,IACb,QAApBqnE,EAAAjE,EAAajsD,eAAO,IAAAkwD,GAApBA,EAAsBhP,cAAcjmE,GAEpCyP,IAAc,GACf,IAEGylE,GAAannE,uBAAYoI,eAC3BmK,GAEE,IAAD60D,EADSz/E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAES0vB,IAEd,OAAL9E,QAAK,IAALA,KAAO1R,iBACe,QAAtBumE,EAAAhE,EAAepsD,eAAO,IAAAowD,GAAtBA,EAAwB7rB,cAAc,WAC1C,GAAG,CAAClkC,IAEEgwD,GAAYrnE,uBAAY,SAC1BuS,GAEE,IAAD+0D,EADS3/E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAES0vB,IAEd,OAAL9E,QAAK,IAALA,KAAO1R,iBACe,QAAtBymE,EAAAlE,EAAepsD,eAAO,IAAAswD,GAAtBA,EAAwB/rB,cAAc,SAC1C,GAAG,CAAClkC,IAEEkwD,GAAavnE,uBAAY,SAC3BuS,GAGE,IAADi1D,EAAA,IADD37E,EAAWlE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEX,KAHUF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAGS0vB,EAGnB,GADK,OAAL9E,QAAK,IAALA,KAAO1R,iBACY,WAAf0xC,GAA+C,QAAxBi1B,EAAIvE,EAAajsD,eAAO,IAAAwwD,GAApBA,EAAsBn+D,YACjDrT,OAAOmgD,MAAMhtC,EAAS,4CAI1B,IAAK,IAADs+D,EACA,MAAMryD,EAAe,OAAJvpB,QAAI,IAAJA,IAAQ0qB,GAAQ1M,WAAWrZ,KAEtB,QAAtBi3E,EAAAtE,EAAensD,eAAO,IAAAywD,GAAtBA,EAAwBrtB,YAAYhlC,EACxC,CAAE,MAAO/kB,GACLhJ,QAAQiJ,MAAMD,GACd2lB,KAAa1lB,MAAM,CACf2lB,QAAS9M,EAAS,wBAClB+M,YAAa/M,EAAS,6BAE9B,CACJ,GAAG,CAACkO,EAAalO,EAAUopC,IAErBm1B,GAAmB1nE,uBAAaxP,IAClC,MAAM,GAAE9L,KAAOijF,GAAmBn3E,EAElC+2E,QAAW1/E,GAAW,EAAO8/E,EAAe,GAC7C,CAACJ,KAEEK,GAAqB5nE,uBAAY,SAACuS,GAAgE,IAADs1D,EAAblgF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KACnE0vB,IAEd,OAAL9E,QAAK,IAALA,KAAO1R,iBACkB,QAAzBgnE,EAAA3E,EAAkBlsD,eAAO,IAAA6wD,GAAzBA,EAA2B/xE,WAC/B,GAAG,CAACuhB,IAEEywD,GAAmBnrC,mBAAQ,KACtB,CACHmlC,OAASvvD,GAA2C40D,GAAW50D,GAAO,GACtEwvD,MAAQxvD,GAA2C80D,GAAU90D,GAAO,GACpEsvD,OAAStvD,GAA2Cg1D,GAAWh1D,GAAO,GACtEyvD,KAAMA,IAAMwD,IAAgB,GAAM,GAClCvD,SAAW1vD,GAA2Cq1D,GAAmBr1D,GAAO,MAErF,CAACq1D,GAAoBL,GAAYJ,GAAYE,GAAW7B,KAErDuC,GAAqB/nE,uBAAY,KACnCslE,IAAW,GACXnvB,MAAMhtC,EAAS,mCAAmC,GACnD,CAACA,IAEE6+D,GAAmBhoE,uBAAamyC,IACA,IAAD81B,EAAb,cAAhB91B,IACAmzB,IAAW,GACQ,QAAnB2C,EAAAxsC,EAAYzkB,eAAO,IAAAixD,GAAnBA,EAAqBz5B,WAEzB60B,GAAoBxjE,GAAOA,EAAM,GAAE,GACpC,IAEGqoE,GAAiEloE,uBAAY,CAACo6B,EAAGmY,KACnF8wB,GAAoBxjE,GAAOA,EAAM,IACjC2yC,EAAcD,EAAW,GAC1B,IAEG41B,GAAmBnoE,uBAAY,KACjCqjE,GAAoBxjE,GAAOA,EAAM,IACjCylE,IAAW,EAAK,GACjB,IAEG8C,GAAoBpoE,uBAAa/0B,IACnC+3F,EAAkB/3F,EAAM,GACzB,IAEGo+B,GAAYu5D,GAAqBtqD,EACvC,OACIzpC,cAACw5F,WAAO,CAACC,OAAQ1G,GAAoB2G,SAAUT,GAAiBziF,SAC5Dy/C,eAAA,OAAKpgD,GAAG,MAEJ8jF,OAAQA,OACRn5F,UAAW,YAAY65B,EAAanB,oBAAoBg7D,EAAiB,UAAY,WACrF39E,MAAO,CACHyxD,gBAAiB,sGAGjBrrE,OAAQk3B,KAAmB,yBAA2B,QAElD,gBAAoBoZ,GAAerE,EAAlB,KACjB,eAAmBsE,GAActE,EAAjB,KAChB,iBAAkB,GAAGA,KAE3BpyB,SAAA,CAEDu/E,GAAgB/1F,cAAA,QAAM48D,IAAI,aAAa/9D,KAAK,WAAWqoB,KAAM6uE,IAC9D9/B,eAAA,OACIz1D,UAAW,gBACX+V,MAAO,CACHyxD,gBAAiB,0DACnBxxD,SAAA,CAEDgkB,IAAax6B,cAACuyF,GAAgB,CAAC/xF,UAAU,cAAagW,SAClDiL,EAAM1I,OAAS,EACV/Y,cAACyyF,GAAU,CAAAj8E,SACRiL,IAEwB,QADhB6xE,EACXj5D,EAAalB,sBAAc,IAAAm6D,IAAI,KAGzCr9B,eAAA,OAAKz1D,UAAW,uBAAsBgpC,EAAY,iBAAmB,iBAAkBhzB,SAAA,CACnFy/C,eAACm8B,GAA8B,CAAC5xF,UAAU,oBAAmBgW,SAAA,CACzDy/C,eAAA,OAAKz1D,UAAU,WAAUgW,SAAA,CACrBxW,cAAC0qE,GAAW,CAACtQ,IAAKk6B,EACd3pB,QAASnhC,EACT8X,cAAeuK,EAAiB1jB,QAChCyiC,oBAAqB8tB,GACrB7tB,kBAAmBA,KAAA,IAAA+uB,EAAA,OAA+B,QAA/BA,EAAMvF,EAAkBlsD,eAAO,IAAAyxD,OAAA,EAAzBA,EAA2B3yE,UAAU,EAC9Di3C,QAASrrC,KAEb7yB,cAAA,UACAA,cAACksE,GAAW,CAAC9R,IAAKm6B,EACdpoB,SAAUisB,GACVl6B,QAASrrC,GACT2V,YAAaA,EACblO,SAAUA,OAGlBt6B,cAACw1D,GAAc,CAACl7B,SAAUA,IAC1Bt6B,cAAC0pE,GAAc,CAACtP,IAAKi6B,EACjBzoC,UAAWA,EACX2D,iBAAkBA,EAClB/lB,UAAWA,EACXC,eAAgBA,EAChBb,YAAaA,EACbiB,gBAAiBqvD,KAEpB1vD,GAAaxpC,cAAA,OAAK6V,GAAG,sBAAsBrV,UAAU,wBAAuBgW,SACzEy/C,eAAA,QAAAz/C,SAAA,CACK8jB,EAAS,qCAAqCt6B,cAAA,SAC9Cs6B,EAAS,sCAAsC,IAACt6B,cAACu9D,GAAoB,YAGlFtH,eAACo8B,GAAoB,CAAC7xF,UAAU,yBAAwBgW,SAAA,CACpDxW,cAACi4D,KAAO,CAACrtB,MAAOtQ,EAAS,wBAAwB9jB,SAC7CxW,cAAC4yF,GAAW,CACRpyF,UAAU,eACV62D,QAASA,KAGL,GAFgBlwC,OAAOmpE,QAAQh2D,EAAS,yBAE3B,CAAC,IAADu/D,EACT,MAAM,QAAElyD,EAAO,KAAEhmB,GAAS+lB,GAAQ1M,WAC5B8+D,EAAc,CAAEjkF,GAAI8L,EAAK9L,MAAO1D,MAChC4nF,EAA4C,QAAhBp4E,EAAK5P,OACjC+nF,EACAhlE,GAAiBglE,EAAa,OAEpCnyD,EAAQoyD,GAA2B,GACnCvF,GAAoBxjE,GAAOA,EAAM,IACb,QAApB6oE,EAAAzF,EAAajsD,eAAO,IAAA0xD,GAApBA,EAAsBxQ,cAAc0Q,EACxC,GACFvjF,SAEFxW,cAACg6F,KAAa,QAGtBh6F,cAACi4D,KAAO,CAACrtB,MAAOqrB,eAAA,OAAKz1D,UAAU,SAAQgW,SAAA,CAClC8jB,EAAS,0BACTkO,EAAcytB,eAAAC,WAAA,CAAA1/C,SAAA,CAAExW,cAAA,SAAM,uBAAkB,QACtCwW,SACHxW,cAAC2yF,GAAc,CAACnyF,UAAU,kBAAkB62D,QAASA,IAAMs/B,KAAkBngF,SACzExW,cAAC6+D,KAAc,QAMvB7+D,cAAA,UAEI6V,GAAG,iBACHukD,IAAKvN,EACLnwD,MAAOwwC,GACPvwC,OAAQswC,KAJiC,QAApCsmD,EAAoB,QAApBC,EAAC5mC,EAAYzkB,eAAO,IAAAqrD,OAAA,EAAnBA,EAAqB5zB,sBAAc,IAAA2zB,IAAI,GAAK,IAMtDt9B,eAACq8B,GAAwB,CAAC9xF,UAAU,oBAAmBgW,SAAA,CACnDxW,cAAA,UAEI6V,GAAG,gBACHukD,IAAK1wB,EACLhtC,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,IAJkB,QAApC6qD,EAAoB,QAApBC,EAAC9mC,EAAYzkB,eAAO,IAAAurD,OAAA,EAAnBA,EAAqB9zB,sBAAc,IAAA6zB,IAAI,GAAK,IAOtDzzF,cAAA,OAAK6V,GAAG,sBAAsBokF,cAAez4E,GAAKA,EAAEwQ,mBAGpDhyB,cAAA,UAAQ6V,GAAG,cAEPukD,IAAKrO,EACLrvD,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,GAHkB,QAGN+qD,EAHV,QAGUC,EAH7BhnC,EAAYzkB,eAAO,IAAAyrD,OAAA,EAAnBA,EAAqBh0B,sBAAc,IAAA+zB,IAAI,GAKjD3zF,cAAA,UAAQ6V,GAAG,aACPukD,IAAKlO,EACLxvD,MAAOwwC,GAActE,EACrBjsC,OAAQ,IAAMisC,IAElB5oC,cAAA,UAAQ6V,GAAG,iBACPukD,IAAK3N,EACL/vD,MAAOwwC,GAActE,EACrBjsC,OAAQ,IAAMisC,IAElB5oC,cAAA,UAAQ6V,GAAG,sBACPukD,IAAK/N,EACL3vD,MAAOwwC,GAActE,EACrBjsC,OAAQ,IAAMisC,IAElB5oC,cAAA,UAAQ6V,GAAG,uBACPukD,IAAKhO,EACL1vD,MAAOwwC,GAActE,EACrBjsC,OAAQ,IAAMisC,IAElB5oC,cAAA,UAAQ6V,GAAG,aACPukD,IAAK1N,EACLhwD,MAAOwwC,GAActE,EACrBjsC,OAAQ,KAAOisC,IAEnB5oC,cAAA,UAAQ6V,GAAG,eACPukD,IAAKnO,EACLvvD,MAAOwwC,GAActE,EACrBjsC,OAAQ,KAAOisC,IAEnB5oC,cAAA,UAAQ6V,GAAG,aACPukD,IAAK7N,EACL7vD,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,IAE3B5oC,cAAA,UAAQ6V,GAAG,cACPukD,IAAK9N,EACL5vD,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,IAE3B5oC,cAAA,UAAQ6V,GAAG,iBACPukD,IAAKjO,EACLzvD,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,IAE3B5oC,cAAA,UAAQ6V,GAAG,gBACPukD,IAAKpO,EACLtvD,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,IAE3B5oC,cAAA,UAAQ6V,GAAG,gBACPukD,IAAK5N,EACL9vD,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,IAE3B5oC,cAAA,UAAQ6V,GAAG,eACPukD,IAAKzN,EACLjwD,MAAOwwC,GAActE,EACrBjsC,OAAQswC,GAAerE,IAE3B5oC,cAAA,UAAQQ,UAAU,cACd45D,IAAKvO,IAET7rD,cAAA,UAAQQ,UAAU,cACd45D,IAAKtO,cAKN,IAAdtxB,IAAuBx6B,cAACynF,GAAc,CACnCrtB,IAAKg6B,EACL9yC,cAAeuK,EAAiB1jB,QAChCoZ,iBAAkBuK,EAAoB3jB,QACtC26B,eAAgBq2B,GAChBn2B,aAAcq2B,GACdp2B,UAAWq2B,QAGnBt5F,cAACwvF,GAAgB,CACbl1D,SAAUA,EACVo/C,gBAAiB6f,GACjBlM,WAAYwL,GACZloB,SAAUynB,GACV7K,gBAAiBA,KAAO,IAAD2M,EACG,QAAtBA,EAAA3F,EAAepsD,eAAO,IAAA+xD,GAAtBA,EAAwBxtB,cAAc,MAAM,IAIpD1sE,cAACi/D,GAAQ,CACL7E,IAAKxN,EACLhkB,YAAaA,IAEjBqtB,eAACu8B,GAAU,CAAChyF,UAAU,QAAOgW,SAAA,CAAC,mBACVxW,cAAA,OAAKU,IAAI,kCAAkCD,IAAI,kBAKnF,EE5oBe05F,OAZSC,IAChBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK/9E,IAAkD,IAAjD,OAAEg+E,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASp+E,EAClEg+E,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAE5B,ECHJQ,IAAS9gF,OACL9Z,cAACo2B,IAAMykE,WAAU,CAAArkF,SACbxW,cAACqzF,GAAG,MAER70E,SAASktB,eAAe,SAM5ByuD,I","file":"static/js/main.692a6e8b.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n    {\n        value: 'fit' as const,\n        label: dictionary?.fit,\n    },\n    {\n        value: 'full' as const,\n        label: dictionary?.full,\n    },\n    {\n        value: 'frame' as const,\n        label: dictionary?.frame,\n    },\n];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    leftToPendulumStructure: 52,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.057,\n        backgroundRatio: 1.057,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    const artSource = normalizedBoundless || body < 100\n        ? isPendulum\n            ? 'fullPendulum'\n            : 'fullCard'\n        : isPendulum\n            ? text < 100\n                ? 'extendedPendulum'\n                : pendulum < 100\n                    ? 'truePendulum'\n                    : 'pendulum'\n            : text < 100\n                ? 'extendedCard'\n                : 'normal';\n\n    const result = CardArtCanvasCoordinateMap[artSource];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\nexport const getDefaultOtherMakerCard = () => ({\n    version: '1.0.0',\n    name: 'Card Name',\n    level: '4',\n    type: 'Warrior/Effect',\n    icon: 'Quick-play',\n    effect: 'Card Effect',\n    atk: '0',\n    def: '0',\n    serial: '1234567890',\n    copyright: '©',\n    attribute: 'Light',\n    id: 'ABCD-XY000',\n    pendulum: {\n        enabled: false,\n        effect: '',\n        blue: '0',\n        red: '0',\n        boxSize: 'Normal',\n        boxSizeEnabled: true,\n    },\n    variant: 'Normal',\n    link: {\n        topLeft: false,\n        topCenter: false,\n        topRight: false,\n        middleLeft: false,\n        middleRight: false,\n        bottomLeft: false,\n        bottomCenter: false,\n        bottomRight: false\n    },\n    layout: 'Effect',\n    boxSize: 'Normal',\n    rarity: 'secret',\n    image: '',\n});\n\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\nexport const getDefaultYgoproDeckCardImage = () => ({\n    id: 46986414,\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\n});\n\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\nexport const getDefaultYgoproDeckCardSet = () => ({\n    set_name: '1990 Mega-Tins',\n    set_code: 'XX00-EN000',\n    set_rarity: 'Ultra Rare',\n    set_rarity_code: '(UR)',\n    set_price: '0.01',\n});\n\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\nexport const getDefaultYgoproDeckCardMisc = () => [\n    {\n        staple: 'No',\n        views: 0,\n        viewsweek: 0,\n        upvotes: 0,\n        downvotes: 0,\n        formats: [] as string[],\n        treated_as: '',\n        tcg_date: '',\n        ocg_date: '',\n        konami_id: 0,\n        has_effect: 1,\n        md_rarity: ''\n    }\n];\n\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\nexport const getDefaultYgoproDeckCard = () => ({\n    id: 10000000,\n    name: 'Card Name',\n    typeline: [\n        'Warrior',\n        'Effect',\n    ] as string[] | undefined,\n    type: 'Effect Monster',\n    humanReadableCardType: 'Effect Monster',\n    frameType: 'effect',\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\n    pend_desc: '',\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\n    race: 'Warrior',\n    atk: 0,\n    def: 0 as number | undefined,\n    level: 4,\n    scale: 4 as number | undefined,\n    linkval: 3 as number | undefined,\n    linkmarkers: [] as string[] | undefined,\n    attribute: 'DARK',\n    archetype: 'Dark Magician',\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\n    card_sets: [] as YgoproDeckCardSet[],\n    card_images: [] as YgoproDeckCardImage[],\n    card_prices: [\n        {\n            cardmarket_price: '0.02',\n            tcgplayer_price: '0.23',\n            ebay_price: '0.99',\n            amazon_price: '14.45',\n            coolstuffinc_price: '0.39'\n        }\n    ],\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\n});","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n};\n\nexport const PendulumEffectCoordinate: CoordinateData[] = [\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n];\n\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\n    tcg: {\n        small: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n    },\n    ocg: {\n        small: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n};\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletSymbolOffset?: number,\n    bulletSymbolWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletSymbolWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletSymbolOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nconst DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nconst DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n};\n\n\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    ocg: {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            {\n                bulletSymbolWidth: 41,\n                bulletSymbolOffset: 3,\n                fontSize: 45.55,\n                lineHeight: 57.6,\n                headTextFontRatio: 0.2,\n                lineCount: 2,\n            },\n            {\n                bulletSymbolWidth: 31,\n                bulletSymbolOffset: 2,\n                fontSize: 35.55,\n                lineHeight: 40.6,\n                headTextFontRatio: 0.3,\n                lineCount: 3,\n            },\n            {\n                bulletSymbolWidth: 23,\n                bulletSymbolOffset: 1,\n                fontSize: 25.05,\n                lineHeight: 30.6,\n                headTextFontRatio: 0.35,\n                lineCount: 4,\n            },\n            {\n                bulletSymbolWidth: 16,\n                fontSize: 22.05,\n                lineHeight: 25.2,\n                headTextFontRatio: 0.4,\n                lineCount: 5,\n            },\n        ],\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';\n\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletSymbolWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletSymbolWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletSymbolWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletSymbolWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletSymbolWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 48%',\n            'rgba(239,239,239,1) 52%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\n    { top: 175, left: 55, width: 100, height: 100 },\n    { top: 165, left: 323, width: 170, height: 80 },\n    { top: 175, left: 655, width: 100, height: 100 },\n    { top: 442, left: 45, width: 70, height: 170 },\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n    { top: 442, left: 700, width: 70, height: 170 },\n    { top: 775, left: 55, width: 100, height: 100 },\n    { top: 810, left: 323, width: 170, height: 80 },\n    { top: 775, left: 655, width: 100, height: 100 },\n];\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil } from './foil-finish';\nimport { CondenseType } from './font-data-effect';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'fusion',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'effect',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './regex';","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n        console.info('🚀 ~ ShaderPass:', ShaderPass, RenderPass, EffectComposer);\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value, width, height) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength, level) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    const { width, height } = inputCanvas;\n    /** @todo Typescript current does not recognize this option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        font: 'nsft',\n        fillStyle: 'nsfs',\n        headTextFillStyle: 'nshfs',\n        shadowColor: 'nssc',\n        shadowOffsetY: 'nssoy',\n        shadowOffsetX: 'nssox',\n        shadowBlur: 'nssb',\n        hasShadow: 'nshs',\n        lineColor: 'nslc',\n        lineWidth: 'nslw',\n        lineOffsetY: 'nsloy',\n        lineOffsetX: 'nslox',\n        hasOutline: 'nshl',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasGradient: 'nshg',\n        embossPitch: 'nsep',\n        embossYaw: 'nsey',\n        hasEmboss: 'nshe',\n        preset: 'nspr',\n        pattern: 'nspt',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: 'Normal',\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontGetter } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    return {\n        ...coordinateData,\n        trueBaseline: coordinateData.trueBaseline * scale,\n        trueEdge: coordinateData.trueEdge * scale,\n        trueWidth: coordinateData.trueWidth * scale,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletSymbolOffset,\n        bulletSymbolWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletSymbolOffset: typeof bulletSymbolOffset === 'number' ? bulletSymbolOffset * scale : undefined,\n        bulletSymbolWidth: bulletSymbolWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n        nameStyle,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n    const nextNameStyle: typeof nameStyle = {\n        ...nameStyle,\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\n            ? 'OCG'\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\n                ? 'Default'\n                : nameStyle.font,\n    };\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n        nameStyle: nextNameStyle,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardOpacity,\n    CondenseType,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            linkMap,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumStyle,\n            pendulumTextStyle,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\n                    effect,\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    linkMap,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\n                    pendulumTextStyle,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    globalScale: number,\n    exportFormat: ExportFormat,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        globalScale,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType);\n                    }\n                } else {\n                    await caller(finishType);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    shadowColor,\n    lineColor,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n                ctx.drawImage(image, normalizedX, normalizedY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\n    \n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    sx, sy,\n    dw, dh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n        dw, dh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletSymbolWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    debug?: boolean,\n}) => {\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletSymbolOffset = scaledDefaultFontSizeData.bulletSymbolOffset,\n        bulletSymbolWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletSymbolOffset - 1 * globalScale,\n                    bulletSymbolWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    contextualDoubleQuoteRegex\n} from 'src/model';\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    let fullLineList = [];\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\n    let materialReplacement;\n    let material;\n    do {\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\n        material = wholeLineRegex.exec(effectText)?.[2];\n\n        if (material && materialReplacement) {\n            fullLineList.push(material);\n            effectText = effectText.replace(materialReplacement, '');\n        }\n    } while (materialReplacement && material);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        fullLineList,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n} from '../../model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n}) => {\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontData = EffectFontData.tcg,\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n    } = option ?? {};\n    let effectSizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return effectSizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    const { font, fontList } = scaleFontData(fontData, globalScale);\n    const yRatio = 1;\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\n                ? CondenseTolerantMap['relaxed']\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n            : {\n                '1': 800,\n                '2': 800,\n                '3': 800,\n            };\n        const fontSizeData = fontList[effectSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n        } = scaleCoordinateData(sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(font)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: scaleFontData(fontData, globalScale),\n            fontLevel: effectSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = condense(\n            median => {\n                const { currentLineList, currentLineCount } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList,\n                    additionalLineCount,\n                    format, textData,\n                    width,\n                    globalScale,\n                });\n                lineListWithRatio = currentLineList;\n\n                if (currentLineCount > lineCount) return false;\n                return true;\n            },\n            200,\n        );\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (effectSizeLevel < fontList.length - 1)\n        ) {\n            effectSizeLevel += 1;\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map(line => {\n                return {\n                    line,\n                    isLast: true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                                globalScale,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0) {\n                const flavorFontData = scaleFontData(EffectFontData.tcg, globalScale);\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: flavorFontData,\n                    fontLevel: effectSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                            globalScale,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return effectSizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    return await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    linkMap: string[],\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || !Array.isArray(linkMap)) return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import {\n    ArrowPositionList,\n    BackgroundType,\n    CanvasConst,\n    CardArtCanvasCoordinateMap,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { getCardIconFromFrame } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    pendulumStructureHeight,\n    leftToPendulumStructure,\n    effectBoxHeight,\n    effectBoxWidth,\n    leftToEffectBox,\n    topToEffectBox,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    format,\n    hasBackground,\n    frame, bottomFrame,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    format: string,\n    frame: string, bottomFrame: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: string,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFinishX,\n        artFinishY,\n        artWidth,\n    } = getArtCanvasCoordinate(isPendulum, opacity);\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderType = frameBorderType;\n    const applyArtFinish = !boundless && artBorder;\n\n    const resultAPI = {\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\n         * \n         *  * Trying to draw only a portion of the image.\n         *  * The source image has totally different size compare to the destination boundary.\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\n         */\n        calculateCardArtRedrawCoordination(\n            imageCanvas: HTMLCanvasElement,\n            customOpacity?: CardOpacity,\n            extraHeightRatio = 1,\n            customBackgroundType?: BackgroundType,\n        ) {\n            const normalizedOpacity = customOpacity ?? opacity;\n            const {\n                body: bodyOpacity\n            } = normalizedOpacity;\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\n            const imageScaledRatio = artWidth / imageWidth;\n            const sourceOffsetX = bodyOpacity < 100\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\n                : 0;\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\n            const sourceOffsetY = bodyOpacity < 100\n                ? (topToPendulumStructure - artY) / imageScaledRatio\n                : 0;\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\n            const offsetHeight = bodyOpacity < 100\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\n                : 0;\n\n            const destinationX = artX + destinationOffsetX;\n            const destinationY = artY + destinationOffsetY;\n            const destinationWidth = artWidth - destinationOffsetX * 2;\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\n\n            return {\n                imageScaledRatio,\n                sourceOffsetX,\n                sourceOffsetY,\n                destinationOffsetX,\n                destinationOffsetY,\n                offsetHeight,\n                destinationX,\n                destinationY,\n                destinationWidth,\n                destinationHeight,\n            };\n        },\n\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\n            ctx.resetTransform();\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\n                if (clonedCanvas && clonedCanvasContext) {\n                    /** Clone background to create a new frame */\n                    clonedCanvas.width = cardWidth * globalScale;\n                    clonedCanvas.height = cardHeight * globalScale;\n                    clonedCanvasContext.drawImage(\n                        backgroundCanvas,\n                        0, 0, backgroundWidth, backgroundHeight,\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\n                    );\n                    /** Clear slot for card art */\n                    clonedCanvasContext.clearRect(\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\n                    );\n                    /** Clear slot for effect box */\n                    clonedCanvasContext.clearRect(\n                        globalScale * leftToEffectBox,\n                        globalScale * topToEffectBox,\n                        globalScale * effectBoxWidth,\n                        globalScale * effectBoxHeight,\n                    );\n                    ctx.drawImage(\n                        clonedCanvas,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                    );\n                }\n            }\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: () => {\n            if (!artworkCanvas || !ctx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            ctx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: (\n            boundary?: 'pendulum',\n        ) => {\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\n\n                if (backgroundType === 'full') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        { ...opacity, body: 0 },\n                        undefined,\n                        'full',\n                    );\n                } else if (backgroundType === 'fit') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        opacity,\n                        undefined,\n                        'fit',\n                    );\n                }\n\n                const {\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\n                    offsetHeight: backgroundOffsetHeight,\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\n                } = redrawCoordination;\n                ctx.drawImage(\n                    backgroundCanvas,\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\n                );\n                return;\n            }\n\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                { ...opacity, boundless: true },\n                backgroundType,\n            );\n            ctx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (backgroundWidth / backgroundHeight)\n            );\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(\n                ctx,\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\n                678, 55,\n            );\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\n            ctx.resetTransform();\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[]) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\n                    const isActive = linkMap.includes(`${entry}`);\n                    const baseLink = `link/link-inactive-${entry}`;\n                    const activeLink = `link/link-active-${entry}`;\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n                    if (isActive) {\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n                    } else return;\n                })\n            );\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityName / 100;\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityText / 100;\n            await drawAsset(\n                ctx,\n                `background/background-text-${bottomFrame}.png`,\n                backgroundEffectBoxX, backgroundEffectBoxY,\n            );\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0);\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(\n                ctx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${foilType}`\n                + (artBorder ? '' : '-artless')\n                + '.png',\n                30, 185,\n            );\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            ctx.resetTransform();\n        },\n        drawLinkMapFoil: async (withBorder = artBorder) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async () => {\n            if (applyArtFinish && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopArtFinish(\n                    ctx,\n                    'art',\n                    async finishType => await drawAsset(\n                        ctx,\n                        `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\n                        artFinishX, artFinishY,\n                    ),\n                );\n                ctx.resetTransform();\n            }\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        ctx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n    const cloneCtx = cloneNode?.getContext('2d');\n    if (ctx && cloneCtx && value) {\n        const {\n            embossPitch,\n            embossYaw,\n            fillStyle,\n            font,\n            gradientAngle,\n            gradientColor,\n            hasEmboss,\n            hasGradient,\n            hasOutline: hasDefaultOutline,\n            hasShadow,\n            headTextFillStyle,\n            lineColor,\n            lineOffsetX,\n            lineOffsetY,\n            lineWidth,\n            shadowBlur,\n            shadowColor,\n            shadowOffsetX,\n            shadowOffsetY,\n            pattern,\n        } = { ...getDefaultNameStyle(), ...style };\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n        const hasOutline = hasDefaultOutline;\n\n        ctx.textAlign = 'left';\n        let resetStroke = () => {};\n        if (hasDefaultOutline) {\n            resetStroke = setTextStyle({\n                ctx,\n                lineWidth,\n                lineColor,\n                globalScale,\n                useDefault: false,\n            });\n        }\n        const fontData = scaleFontData({\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n            headTextFillStyle,\n        }, globalScale);\n        const fontGetter = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const textData = {\n            fontLevel: 0,\n            fontData,\n            currentFont: fontGetter,\n        };\n        const quoteConvertedValue = normalizeCardText(\n            value,\n            format,\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n        );\n\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n        const crudeTokenList = format === 'ocg'\n            ? [quoteConvertedValue]\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n        const fontGetterForWidthCalculating = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const normalStyle = fontGetterForWidthCalculating.getFont();\n        const symbolStyle = fontGetterForWidthCalculating\n            .setSize(cur => cur * fontData.symbolFontRatio)\n            .setStyle('small-caps')\n            .setFamily(fontData.symbolFont)\n            .getFont();\n        let maxAscent = 0;\n        let maxDescent = 0;\n        crudeTokenList.forEach((cur, index) => {\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n        }, 0);\n\n        ctx.font = normalStyle;\n        /** Calculate fitting ratio like normal */\n        let actualLineWidth = 0;\n        const internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [quoteConvertedValue],\n                    format, textData,\n                    width,\n                    globalScale,\n                });\n\n                if (currentLineCount > 1) return false;\n                actualLineWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n        const xRatio = internalEffectiveMedian / 1000;\n        const yRatio = 1;\n\n        ctx.scale(xRatio, yRatio);\n        /** Calculate gradient and offset based on card's frame. */\n        const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n        const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n        const tokenList = tokenizeText(quoteConvertedValue);\n        const gradient = actualLineWidth > 0 && hasGradient\n            ? getNameGradient(\n                ctx,\n                gradientAngle,\n                parsePalette(gradientColor),\n                edge,\n                actualLineWidth,\n                trueBaseline,\n                maxAscent, maxDescent,\n            )\n            : undefined;\n\n\n        /** First iteration: Draw the card name with color and gradient */\n        ctx.fillStyle = gradient ?? fillStyle;\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            },\n        });\n\n        /** \n         * Second iteration, draw pattern, we follow these steps:\n         *  * We create a second, temporary canvas node.\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n         */\n        if (patternImage && cloneNode) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            cloneCtx.scale(globalScale, globalScale);\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\n            cloneCtx.globalCompositeOperation = patternBlendMode;\n            cloneCtx.resetTransform();\n            await drawAssetWithSize(\n                cloneCtx, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(cloneNode, 0, 0);\n            ctx.scale(xRatio, yRatio);\n            ctx.globalCompositeOperation = 'source-over';\n\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\n             * \n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\n             */\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                globalScale,\n                textDrawer: () => {},\n            });\n        }\n\n        /** Apply emboss effect if any */\n        if (hasEmboss) {\n            const embossedImageData = applyEmboss({\n                inputCanvas: canvas,\n                lightPitch: embossPitch,\n                lightYaw: embossYaw,\n                minIntensity: -0.9,\n                maxIntensity: 0.9,\n            });\n            ctx.putImageData(embossedImageData, 0, 0);\n        }\n\n        /**\n         * Third iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it on top of the embossed text.\n         */\n        let resetShadow = () => {};\n        if (hasShadow) {\n            resetShadow = setTextStyle({\n                ctx,\n                x: shadowOffsetX,\n                y: shadowOffsetY,\n                shadowColor: shadowColor,\n                blur: shadowBlur,\n                globalScale,\n                useDefault: false,\n            });\n            ctx.globalCompositeOperation = 'destination-over';\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                globalScale,\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                    ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n                },\n            });\n            ctx.globalCompositeOperation = 'source-over';\n        }\n\n        /** Fourth iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\n        if (hasOutline) {\n            ctx.globalCompositeOperation = 'destination-over';\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                globalScale,\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                    ctx.lineJoin = 'round';\n                    ctx.strokeText(\n                        letter,\n                        scaledEdge + lineOffsetX,\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                    );\n                },\n            });\n        }\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        const defaultTextStyle = getDefaultNameStyle();\n        ctx.fillStyle = defaultTextStyle.fillStyle;\n        resetShadow();\n        resetStroke();\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n    }\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<string, number> = {\n    small: 0,\n    medium: 1,\n    large: 2,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: 'small' | 'medium' | 'large',\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: 'small' | 'medium' | 'large',\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -4 : 0;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        await drawAssetWithSize(\n            ctx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            image => edge + (image.naturalWidth * 0.175 * xRatio + offsetX) * globalScale,\n            image => baseline - image.naturalWidth * 0.8 * globalScale + offsetY * globalScale,\n            image => globalScale * image.naturalWidth,\n            image => globalScale * image.naturalWidth,\n        );\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = 60.5 * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitScaleRatio = 0.65;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft - 3 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    _edge = 99,\n    _baseline = 1150.93,\n    _baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle, globalScale } = option ?? {};\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const baselineOffset = _baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = edge;\n    ctx.fillText('1', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText('1', left, baseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${37 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${34 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${37 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinate,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    CardArtCanvasCoordinateMap,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n} from 'src/model';\nimport {\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    pendulumSize?: 'medium',\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame, foil, finish, artFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\n        atk, def, linkMap,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const typeInEffect = cardIcon === 'auto'\n        ? isMonster || isSpeedSkill\n        : cardIcon !== 'st' || isLink;\n\n    const {\n        isInitializing,\n        imageChangeCount,\n        pendulumSize = 'medium',\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            /** Base colored background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n\n                calculateCardArtRedrawCoordination,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                format,\n                frame, bottomFrame,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            if (backgroundCanvas && ctx) drawBackground();\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\n            if (isPendulum && !isLink && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\n                    const {\n                        sourceOffsetX, sourceOffsetY,\n                        offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\n\n                    /** To avoid stacking transprency, we clear the area before redrawing */\n                    await fillBaseColor(\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * destinationWidth, globalScale * destinationHeight,\n                    );\n\n                    drawBackground('pendulum');\n                    ctx.drawImage(\n                        artworkCanvas,\n                        sourceOffsetX, sourceOffsetY,\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * destinationWidth, globalScale * destinationHeight,\n                    );\n                }\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n            }\n\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\n            await drawArtFinish();\n            await drawArtOverlayFinish();\n\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n            if (isPendulum && !isLink && !boundless) {\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                if (isLink) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                        const {\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        } = calculateCardArtRedrawCoordination(\n                            artworkCanvas,\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\n                            extraHeightRatio,\n                        );\n    \n                        await fillBaseColor(\n                            globalScale * destinationX, globalScale * destinationY,\n                            globalScale * destinationWidth, globalScale * destinationHeight,\n                        );\n                        drawBackground('pendulum');\n                    }\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (artworkCanvas && ctx) drawCardArt();\n                await drawArtOverlayFinish();\n\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum && !isLink) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n            if (!isPendulum && isLink) {\n                await drawLinkArrowMap(linkMap);\n                await drawLinkMapFoil(false);\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        bottomFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            drawScale(ctx, pendulumScaleBlue ?? '0', 84.4, 790, globalScale);\n            drawScale(ctx, pendulumScaleRed ?? '0', 728.0, 790, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\n        drawStat(ctx, atk, 508.824, 1106.494, globalScale);\n        if (!isLink) {\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\n            drawStat(ctx, def, 673.865, 1106.494, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const {\n            rightEdge,\n            isNumberPassword,\n        } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            return await drawSticker({\n                ctx: stickerCanvasRef.current?.getContext('2d'),\n                sticker,\n                globalScale,\n            });\n        };\n    }, [readyToDraw, globalScale, sticker, stickerCanvasRef]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                },\n            });\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        furiganaHelper,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[format],\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: PendulumEffectCoordinate,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [readyToDraw, globalScale, finishCanvasRef, loopFinish, name]);\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        // isRelevant: () => boolean,\n    }) => {\n        const {\n            // isRelevant,\n            isPendulum = false,\n            opacity,\n        } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\n        const generateLayer = (\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\n            exportCtx: CanvasRenderingContext2D | null | undefined,\n            delayQueue: number = 0,\n        ) => {\n            return new Promise<boolean>(resolve => {\n                setTimeout(() => {\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\n                    else {\n                        try {\n                            canvasLayer.current.toBlob(blob => {\n                                if (!blob) resolve(false);\n                                else {\n                                    const url = URL.createObjectURL(blob);\n                                    if (!url) resolve(false);\n                                    else {\n                                        const layer = new Image();\n                                        layer.src = url;\n                                        layer.onload = () => {\n                                            exportCtx.drawImage(layer, 0, 0);\n                                            URL.revokeObjectURL(url);\n                                            resolve(true);\n                                        };\n                                        layer.onerror = () => {\n                                            URL.revokeObjectURL(url);\n                                            resolve(false);\n                                        };\n                                    }\n                                }\n                            });\n                        } catch (e) {\n                            /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                            exportCtx.drawImage(canvasLayer.current, 0, 0);\n                            console.error(e);\n                            resolve(false);\n                        }\n                    }\n                }, delayQueue * 25);\n            });\n        };\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            // await generateLayer(frameCanvas, exportCtx);\n            const artworkCanvas = artworkCanvasRef.current;\n            if (artworkCanvas && exportCtx) {\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n                if (imageHeight > 0) {\n                    exportCtx.drawImage(\n                        artworkCanvas,\n                        0, 0,\n                        imageWidth, imageHeight,\n                        artX, artY,\n                        artWidth, artWidth / (imageWidth / imageHeight),\n                    );\n                }\n            }\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        artworkCanvasRef, \n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const isNumberPassword = /^[0-9]*$/.test(value);\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n        isNumberPassword,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: !isNumberPassword ? 1 : 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n        isNumberPassword,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('notification') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem('notification', JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem('notification', JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: keyof NotificationMemory) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification];\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    width: 24px;\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n        >\n            <>\n                <Icon {...iconProps} />{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 60px 45px 12px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        display: inline-flex;\n        column-gap: var(--spacing-xs);\n        border-right: none;\n        padding: var(--spacing-xxs) var(--spacing-xs);\n        border-radius: var(--br) 0 0 var(--br);\n        box-shadow: var(--bs-input);\n        .ant-checkbox-wrapper {\n            transform: translateY(-1px); // Alignment\n        }\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\nimport { StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    {label}\n                                </Popover>\n                                : label,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import { useEffect, useState } from 'react';\n\ntype VersionLog = { version: string, logList: { content: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`}>\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content }, index) => {\n                        return <li key={index}>\n                            {content}\n                        </li>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Popover, Radio } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLog } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n`;\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <span className=\"bug-report\">\n                    <div id=\"sentry-bug-report\">\n                        {language['contributor.bug-report.tooltip']}\n                    </div>\n                </span>\n                <Popover\n                    placement=\"bottom\"\n                    content={<StyledVersionLog>\n                        <VersionLog />\n                    </StyledVersionLog>}\n                >\n                    <div className=\"app-log\">\n                        v{process.env.REACT_APP_VERSION ?? 'unknown'}\n                    </div>\n                </Popover>\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        {label}\n                    </Popover>\n                    : label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                {children}\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                {language['image-cropper.source.online.tooltip']}\n                            </Radio.Button>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                        {<div className=\"online-image-tip\">\n                            {language['image-cropper.online-tip']}\n                        </div>}\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                        <hr />\n                        {language['image-cropper.offline-warning']}\n                    </div>\n                </div>\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        if (!receivingCanvas) {\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: 13px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-sm);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    .title {\n        line-height: 0;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkChooser = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkChooser = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './setting';\nexport * from './setting-panel';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { LinkMarkChooser } from './link-marker';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { MenuOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n    .button-option {\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        padding: var(--spacing);\n        border-left: var(--bw) solid var(--sub-secondary);\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        .anticon {\n            font-size: var(--fs-2xl);\n            margin-left: 0;\n        }\n        &:hover {\n            background: #399af9;\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey },\n    }) => ({\n        allowHotkey,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\n                    <MenuOutlined />\n                </div>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay\n            ? <div className=\"copiable-overlay\">\n                {withText\n                    ? <>Copied&nbsp;<CheckOutlined /></>\n                    : <CheckOutlined />}\n                </div>\n            : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <div>\n                        <CardDataCopyButton\n                            disabled={isPartial}\n                            data={window.location.href}\n                            withText\n                        >\n                            <div className=\"icon\"><LinkOutlined /></div>\n                            <div className=\"label\">\n                                {language['button.export-modal.share-button.label']}\n                            </div>\n                        </CardDataCopyButton>\n                    </div>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    try {\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\n                        if (imgurResponse.status !== 200) {\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\n                        }\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\n                    } catch (e) {\n                        /** Failing the upload process does not terminate the import process */\n                        console.error('Upload error:', e);\n                        notification.error({\n                            message: language['prompt.import.imgur.message'],\n                            description: language['prompt.import.imgur.description'],\n                        });\n                    }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","export const uploadToImgur = async (imgLink: string) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\n\n    const formdata = new FormData();\n    formdata.append('image', imgLink);\n    formdata.append('type', 'url');\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\n\n    return await fetch('https://api.imgur.com/3/image', {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow',\n    });\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\n    label,\n    value,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n                </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={5} xmin={-5}\n                ymax={5} ymin={-5}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}: <GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\n\nconst EmbossControlContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: max-content max-content;\n    color: var(--color);\n    .emboss-control-title {\n        grid-column: -1 / 1;\n        font-size: var(--fs-sm);\n        text-align: center;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: { color?: string, pitch?: number, yaw?: number }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    children?: React.ReactNode,\n    onChange: (\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        lightAngle: [yaw: number, pitch: number],\n    ) => void,\n};\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = DEFAULT_PITCH,\n    defaultYaw = DEFAULT_YAW,\n    children,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const colorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const angleVec = useRef<[number, number, number]>([0, 1, 0]);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                colorVec.current = nextColor;\n                angleVec.current = nextAngle;\n                if (\n                    nextColor[0] !== colorVec[0]\n                    || nextColor[1] !== colorVec[1]\n                    || nextColor[2] !== colorVec[2]\n                    || (Math.abs(nextAngle[0] - angleVec[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - angleVec[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - angleVec[2]) > VECTOR_VALUE_EPSILON)\n                ) {\n                    onChange(nextColor, nextAngle, [angle, verticalAngle]);\n                }\n            }\n        }, 50);\n\n        return () => {\n            relevant = false;\n        };\n    }, [internalId, color, angle, verticalAngle]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>Pitch&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setVerticalAngle(DEFAULT_PITCH);\n                    requestUpdate();\n                }}\n            /></h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>Yaw&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n    StyledPickerButton,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={fillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    onChange={(_, __, [yaw, pitch]) => {\n                                        setValue(cur => ({ ...cur, embossPitch: pitch, embossYaw: yaw }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { useCallback, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n};\nexport const FrameTrain = ({\n    onSTFrameChange,\n    onPasswordChange,\n}: FrameTrain) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                isPendulum,\n                attribute,\n                format,\n                password,\n                star,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n\n            onPasswordChange(nextPassword);\n            if (isST) onSTFrameChange(nextTypeAbility);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : isST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextFrame === 'token'\n                    ? 0\n                    : star,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange]);\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n};","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n\n                return <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column-reverse;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .card-opacity-slider {\n        flex: 0 1 auto;\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        cursor: pointer;\n        text-align: center;\n        user-select: none;\n        &:hover {\n            box-shadow: 0 0 2px 0 #222222;\n        }\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <Checkbox\n                className=\"art-frame\"\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                checked={opacity.boundless}\n            >\n                {language['input.opacity.boundless.label']}\n            </Checkbox>\n        </Tooltip>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <div className=\"slider-label\">\n                    {type === 'body' && <Popover\n                        visible={backgroundInputVisible}\n                        destroyTooltipOnHide={false}\n                        trigger={['click']}\n                        onVisibleChange={setBackgroundInputVisible}\n                        overlayClassName={[\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                            backgroundInputVisible ? 'picker-visible' : '',\n                            backgroundInputHidden ? 'picker-hidden' : '',\n                        ].join(' ')}\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledBaseFillPickerContainer\n                                className={[\n                                    'custom-style-picker',\n                                    noBackground ? 'overlay-no-background-image' : ''\n                                ].join(' ')}\n                            >\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                                    <Checkbox\n                                        checked={hasBackground}\n                                        onChange={e => {\n                                            changeHasBackground(e);\n                                        }}\n                                    >{language['input.background.toggle-label']}</Checkbox>\n                                    <br />\n                                    <i>{language['input.background.description']}</i>\n                                </h3>\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                                    <BackgroundInputGroup\n                                        ref={backgroundInputRef}\n                                        receivingCanvas={receivingCanvas}\n                                        onSourceLoaded={onSourceLoaded}\n                                        onTainted={onTainted}\n                                        onCropChange={onCropChange}\n                                        backgroundColor={opacity.baseFill}\n                                    >\n                                        <div className=\"layout-picker-panel\">\n                                            <div className=\"layout-picker-subpanel color-section\">\n                                                <h2>{language['input.background-color.label']}</h2>\n                                                <CompactPicker\n                                                    colors={DefaultColorList}\n                                                    color={opacity.baseFill}\n                                                    onChangeComplete={color => {\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                                    }}\n                                                />\n                                            </div>\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                                <h2>{language['input.background-type.label']}</h2>\n                                                <RadioTrain\n                                                    className=\"background-type-picker\"\n                                                    onChange={changeBackgroundType}\n                                                    optionList={getBackgroundTypeList({\n                                                        fit: language['input.background-type.fit.label'],\n                                                        full: language['input.background-type.full.label'],\n                                                        frame: language['input.background-type.frame.label'],\n                                                    })}\n                                                    value={backgroundType}\n                                                />\n                                            </div>}\n                                        </div>\n                                    </BackgroundInputGroup>\n                                </div>\n                            </StyledBaseFillPickerContainer>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <div\n                            className=\"background-preview\"\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                        >\n                            <Tooltip overlay={language['input.background.toolip']}>\n                                <div className=\"background-preview-callback-passer\">\n                                    {hasBackground\n                                        ? background\n                                            ? <img\n                                                className=\"background-image-preview\"\n                                                src={backgroundSource === 'online'\n                                                    ? background\n                                                    : backgroundData}\n                                                alt=\"Background\"\n                                            />\n                                            : null\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                                </div>\n                            </Tooltip>\n                        </div>\n                    </Popover>}\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </div>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { checkDarkSynchro, checkXyz } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 6.5rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    isLink: boolean | null,\n    isMonster: boolean,\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    isLink,\n    isMonster,\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n    const isDarkSynchro = checkDarkSynchro({ frame });\n    const isXyz = checkXyz({ frame });\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[isMonster\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\n            : 'st'\n        ]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return !isLink\n        ? iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>\n        : null;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n            cursorOffset = keepInline ? 2 : 3;\n            break;\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 550px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .frame-auto-checkbox {\n        margin-bottom: var(--spacing-xs);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Dropdown, Menu } from 'antd';\nimport { copyrightMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format },\n        getUpdater,\n    }) => ({\n        sticker,\n        format,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                    <IconButton\n                    onClick={() => {}}\n                        Icon={UnorderedListOutlined}\n                    />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList } from '../const';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    .ant-input-group-addon {\n        flex: 0;\n    }\n    .radio-train-input-group .ant-radio-button-wrapper {\n        min-width: unset;\n    }\n`;\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish,\n            linkMap,\n            isPendulum,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <StyledImageRadioTrain\n                className=\"art-finish-checkbox fill-input-train\"\n                value={artFinish}\n                onChange={changeArtFinish}\n                optionList={ArtFinishButtonList}\n            >\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\n            </StyledImageRadioTrain>\n            : null\n        }\n    >\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\n            active={isLink === true}\n            defaultValue={linkMap}\n            onChange={changeLinkMap}\n            onStatusChange={changeLinkStatus}\n        />\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FrameInfoMap } from 'src/model';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { getNavigationProps } from 'src/util';\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\ntype BottomFrameOptionGrid = {\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onChange: (value: string | number) => void,\n    onCancel: () => void,\n};\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\n    frameList,\n    pendulumFrame,\n    onChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => inputRef.current?.focus(),\n    }));\n\n    return <StyledPendulumFrameContainer\n        className=\"pendulum-frame-picker\"\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: frameList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onChange(frameList[focus].value);\n            },\n            onCancel,\n        })}\n    >\n        <Checkbox ref={inputRef}\n            className=\"frame-auto-checkbox\"\n            checked={pendulumFrame === 'auto'}\n            onChange={e => {\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\n            }}\n        >{language['input.frame.auto']}</Checkbox>\n        <RadioTrain\n            className=\"frame-radio\"\n            value={pendulumFrame}\n            onChange={onChange}\n            optionList={frameList}\n        />\n    </StyledPendulumFrameContainer>;\n});\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        background-color: var(--main-level-4);\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .joined-row {\n        position: 'relative';\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing-lg);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n            isLink: willBecomePendulum ? false : currentCard.isLink,\n        };\n    });\n    const changeBottomFrame = (value: string | number) => {\n        const normalizedValue = `${value}`;\n\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\n        setCard(currentCard => {\n            return { ...currentCard, pendulumFrame: normalizedValue };\n        });\n    };\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            {showCreativeOption && <Popover\n                visible={frameDropdownVisible}\n                onVisibleChange={setFrameDropdownVisibleVisible}\n                trigger={['hover', 'click']}\n                placement=\"bottom\"\n                overlayClassName=\"pendulum-frame-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\n                        frameList={frameList}\n                        pendulumFrame={pendulumFrame}\n                        onCancel={() => {\n                            setFrameDropdownVisibleVisible(false);\n                            containerRef.current?.focus();\n                        }}\n                        onChange={changeBottomFrame}\n                    />\n                </div>}\n            >\n                <StyledPendulumFrameInputContainer ref={containerRef}\n                    className=\"pendulum-frame-input\"\n                    tabIndex={0}\n                    onKeyDown={e => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                            setFrameDropdownVisibleVisible(true);\n                            /** Popover takes time to mount / become visible */\n                            setTimeout(() => {\n                                bottomFrameOptionGridRef.current?.focus();\n                            }, 200);\n\n                            return false;\n                        }\n                    }}\n                >\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\n                    {currentPendulumFrame\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\n                </StyledPendulumFrameInputContainer>\n            </Popover>}\n            {(isPendulum && showCreativeOption)\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\n                    {language['input.mirror-scale.label']}\n                </Checkbox>}\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (isMirrorScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    onChange={e => {\n                        if (isMirrorScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { RadioTrain } from 'src/component';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\ntype InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nconst InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? '#eaeaea' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    FinishButtonList,\n    FormatButtonList,\n} from './const';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={FinishButtonList}\n            >\n                <span>{language['input.finish.label']}</span>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                isLink={isLink}\n                isMonster={isMonster}\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        onTakePicker={setPickerTarget}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 100%;\n            height: 50%;\n            position: absolute;\n            left: 0;\n            &.top-frame {\n                top: 0;\n            }\n            &.bottom-frame {\n                top: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            top: 19px;\n            left: 20px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n    } = card;\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedBottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\n                />;\n            })}\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {AttributeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={() => null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: var(--spacing);\n    margin-top: 0;\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { notification, Tooltip } from 'antd';\nimport { Lightbox, LightboxRef, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                globalScale={globalScale}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\n                                <span>\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <CardPreviewContainer className=\"card-preview-container\">\n                            <Tooltip title={language['button.reset.tooltip']}>\n                                <ResetButton\n                                    className=\"reset-button\"\n                                    onClick={() => {\n                                        const consent = window.confirm(language['prompt.reset.message']);\n\n                                        if (consent) {\n                                            const { setCard, card } = useCard.getState();\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\n                                            const contextualDefaultCardData = card.format === 'tcg'\n                                                ? defaultCard\n                                                : changeCardFormat(defaultCard, 'ocg');\n\n                                            setCard(contextualDefaultCardData, true);\n                                            setImageChangeCount(cnt => cnt + 1);\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                        }\n                                    }}\n                                >\n                                    <ClearOutlined />\n                                </ResetButton>\n                            </Tooltip>\n                            <Tooltip title={<div className=\"center\">\n                                {language['button.full-size.label']}\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                            </div>}>\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                    <ZoomInOutlined />\n                                </LightboxButton>\n                            </Tooltip>\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                             */}\n                            <canvas\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                id=\"preview-canvas\"\n                                ref={previewCanvasRef}\n                                width={CanvasWidth}\n                                height={CanvasHeight}\n                            />\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"nameCanvas\"\n                                    ref={nameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={148 * globalScale}\n                                />\n                                <canvas id=\"cardIconCanvas\"\n                                    ref={cardIconCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={222 * globalScale}\n                                />\n                                <canvas id=\"pendulumScaleCanvas\"\n                                    ref={pendulumScaleCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={889 * globalScale}\n                                />\n                                <canvas id=\"pendulumEffectCanvas\"\n                                    ref={pendulumEffectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={889 * globalScale}\n                                />\n                                <canvas id=\"typeCanvas\"\n                                    ref={typeCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={1037 * globalScale}\n                                />\n                                <canvas id=\"effectCanvas\"\n                                    ref={effectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={1111 * globalScale}\n                                />\n                                <canvas id=\"statCanvas\"\n                                    ref={statCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"setIdCanvas\"\n                                    ref={setIdCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"passwordCanvas\"\n                                    ref={passwordCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"creatorCanvas\"\n                                    ref={creatorCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"stickerCanvas\"\n                                    ref={stickerCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"finishCanvas\"\n                                    ref={finishCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={artworkCanvasRef}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={backgroundCanvasRef}\n                                />\n                            </CardCanvasGroupContainer>\n                        </CardPreviewContainer>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}